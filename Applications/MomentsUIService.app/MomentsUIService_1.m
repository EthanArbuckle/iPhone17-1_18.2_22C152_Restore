uint64_t closure #1 in MOSuggestionActivityRouteAssetView.makeUIView()(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t countAndFlagsBits;
  void *v22;
  void *object;
  id v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v36 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MeasurementFormatUnitUsage<NSUnitDuration>);
  v34 = *(void *)(v3 - 8);
  v35 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>?);
  __chkstk_darwin(v6 - 8);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle.UnitWidth);
  v32 = *(void *)(v9 - 8);
  v33 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle);
  v31 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration>);
  v30 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = [objc_allocWithZone((Class)FIUIFormattingManager) init];
  v19 = [v18 stringWithDuration:2 durationFormat:*(double *)(a2 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_duration)];
  if (v19)
  {
    v20 = v19;
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    object = v22;
  }
  else
  {
    v24 = [self minutes];
    type metadata accessor for NSUnitDuration();
    Measurement.init(value:unit:)();
    static Measurement<>.FormatStyle.UnitWidth.abbreviated.getter();
    v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
    static MeasurementFormatUnitUsage.general.getter();
    static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v35);
    outlined destroy of FloatingPointFormatStyle<Double>?((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v33);
    lazy protocol witness table accessor for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle();
    Measurement<>.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v15);
    v41 = v43;
    v42 = v44;
    v39 = 32;
    v40 = 0xE100000000000000;
    v37 = 0;
    v38 = 0xE000000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    v26 = String.uppercased()();
    countAndFlagsBits = v26._countAndFlagsBits;
    object = v26._object;
    swift_bridgeObjectRelease();
  }
  v27 = v36;
  *v36 = countAndFlagsBits;
  v27[1] = (uint64_t)object;
  return swift_bridgeObjectRelease();
}

uint64_t thunk for @callee_guaranteed () -> ()(uint64_t (*a1)(void))
{
  return a1();
}

Swift::Void __swiftcall MOSuggestionActivityRouteAssetView.setupLabels()()
{
  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_exerciseNameLabel];
  [v1 addSubview:v2];
  v3 = *(void **)&v1[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_workoutDataLabel];
  [v1 addSubview:v3];
  id v4 = [v2 superview];
  if (v4)
  {
    v5 = v4;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v2 topAnchor];
    id v7 = [v5 topAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:12.0];
    if (v8)
    {
      id v9 = v8;
      [v9 setActive:1];
    }
  }
  id v10 = [v2 superview];
  if (v10)
  {
    v11 = v10;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v2 leadingAnchor];
    id v13 = [v11 leadingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:8.0];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];
    }
  }
  id v16 = [v2 superview];
  if (v16)
  {
    v17 = v16;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v2 trailingAnchor];
    id v19 = [v17 trailingAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:-8.0];
    if (v20)
    {
      id v21 = v20;
      [v21 setActive:1];
    }
  }
  [v2 setTextAlignment:1];
  [v3 setTextAlignment:1];
  id v22 = [v3 superview];
  if (v22)
  {
    v23 = v22;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v24 = [v3 bottomAnchor];
    id v25 = [v23 bottomAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    if (v26)
    {
      [v26 setConstant:-12.0];
      id v27 = v26;
      [v27 setActive:1];
    }
  }
  id v28 = [v3 superview];
  if (v28)
  {
    v29 = v28;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v30 = [v3 leadingAnchor];
    id v31 = [v29 leadingAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31];

    [v32 setConstant:0.0];
    if (v32)
    {
      id v33 = v32;
      [v33 setActive:1];
    }
  }
  id v34 = [v3 superview];
  if (v34)
  {
    id v39 = v34;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v35 = [v3 trailingAnchor];
    id v36 = [v39 trailingAnchor];
    id v37 = [v35 constraintEqualToAnchor:v36];

    [v37 setConstant:8.0];
    if (v37)
    {
      id v38 = v37;
      [v38 setActive:1];
    }
  }
}

Swift::Void __swiftcall MOSuggestionActivityRouteAssetView.adjustForFontSizeChanges()()
{
  char v1 = v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_assignedTileSize];
  id v2 = [v0 traitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  LOBYTE(v2) = static UIContentSizeCategory.> infix(_:_:)();
  id v4 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_workoutDataLabel];
  if ((v2 & (((v1 - 6) & 0xFD) == 0)) != 0) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = 1;
  }

  [v4 setNumberOfLines:v5];
}

Swift::Void __swiftcall MOSuggestionActivityRouteAssetView.handleTraitChange()()
{
  (*(void (**)(void))((swift_isaMask & *v0) + 0xC8))();
}

void MOSuggestionActivityRouteAssetView.init(frame:)()
{
}

id MOSuggestionActivityRouteAssetView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionActivityRouteAssetView();
  return [super dealloc];
}

void specialized MOSuggestionActivityRouteAssetView.init(coder:)()
{
  NSString v1 = String._bridgeToObjectiveC()();
  objc_super v2 = self;
  id v3 = [v2 colorNamed:v1];

  if (!v3) {
    id v3 = [v2 systemBlueColor];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_distanceBlue] = v3;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 colorNamed:v4];

  if (!v5) {
    id v5 = [v2 systemYellowColor];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_timeYellow] = v5;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v2 colorNamed:v6];

  if (!v7) {
    id v7 = [v2 systemPinkColor];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_movePink] = v7;
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_exerciseNameLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRouteAssetView.exerciseNameLabel();
  *(void *)&v0[v8] = v9;
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRouteAssetView.workoutDataLabel();
  *(void *)&v0[v10] = v11;
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRouteAssetView_labelStack;
  id v13 = [objc_allocWithZone((Class)UIStackView) init];
  [v13 setAxis:1];
  [v13 setDistribution:4];
  [v13 setAlignment:1];
  [v13 setSpacing:2.0];
  *(void *)&v0[v12] = v13;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100098684()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionActivityRouteAssetView.makeUIView()()
{
  return closure #1 in MOSuggestionActivityRouteAssetView.makeUIView()(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000986C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @callee_guaranteed () -> ()()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

unint64_t type metadata accessor for NSUnitDuration()
{
  unint64_t result = lazy cache variable for type metadata for NSUnitDuration;
  if (!lazy cache variable for type metadata for NSUnitDuration)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSUnitDuration);
  }
  return result;
}

uint64_t outlined destroy of FloatingPointFormatStyle<Double>?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle;
  if (!lazy protocol witness table cache variable for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle);
  }
  return result;
}

void *MOSuggestionEvergreenCollectionViewCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionEvergreenCollectionViewCell.reuseIdentifier;
}

unint64_t static MOSuggestionEvergreenCollectionViewCell.reuseIdentifier.getter()
{
  return 0xD000000000000027;
}

void *MOSuggestionEvergreenCollectionViewCell.bottomPadding.unsafeMutableAddressor()
{
  return &static MOSuggestionEvergreenCollectionViewCell.bottomPadding;
}

id MOSuggestionEvergreenCollectionViewCell.assetView.getter()
{
  NSString v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionEvergreenCollectionViewCell.assetView.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView);
  swift_beginAccess();
  NSString v4 = *v3;
  void *v3 = a1;
}

uint64_t (*MOSuggestionEvergreenCollectionViewCell.assetView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionEvergreenCollectionViewCell.assetViewModel.getter()
{
  return MOSuggestionEvergreenCollectionViewCell.assetViewModel.getter();
}

{
  swift_beginAccess();
  return swift_weakLoadStrong();
}

uint64_t MOSuggestionEvergreenCollectionViewCell.assetViewModel.setter()
{
  swift_beginAccess();
  uint64_t v1 = swift_weakAssign();
  (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0xB8))(v1);
  return swift_release();
}

void (*MOSuggestionEvergreenCollectionViewCell.assetViewModel.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetViewModel;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return MOSuggestionEvergreenCollectionViewCell.assetViewModel.modify;
}

void MOSuggestionEvergreenCollectionViewCell.assetViewModel.modify(void **a1, char a2)
{
  id v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    uint64_t v4 = (void *)v3[4];
    swift_endAccess();
    uint64_t v5 = swift_release();
    (*(void (**)(uint64_t))((swift_isaMask & *v4) + 0xB8))(v5);
  }

  free(v3);
}

uint64_t MOSuggestionEvergreenCollectionViewCell.cellViewModel.getter()
{
  return MOSuggestionEvergreenCollectionViewCell.assetViewModel.getter();
}

void MOSuggestionEvergreenCollectionViewCell.cellViewModel.setter()
{
  swift_beginAccess();
  uint64_t v1 = swift_weakAssign();
  uint64_t v2 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x68))(v1);
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x80))();
  (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0xA0))(v3);
  swift_release();
}

void (*MOSuggestionEvergreenCollectionViewCell.cellViewModel.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_cellViewModel;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return MOSuggestionEvergreenCollectionViewCell.cellViewModel.modify;
}

void MOSuggestionEvergreenCollectionViewCell.cellViewModel.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    uint64_t v4 = (void *)v3[4];
    swift_endAccess();
    uint64_t v5 = swift_release();
    NSString v6 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x68))(v5);
    uint64_t v7 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x80))();
    (*(void (**)(uint64_t))((swift_isaMask & *v6) + 0xA0))(v7);
  }

  free(v3);
}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.setupShadow()()
{
  id v1 = [v0 contentView];
  uint64_t v2 = self;
  id v3 = [v2 clearColor];
  [v1 setBackgroundColor:v3];

  id v4 = [v0 contentView];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v5 = [v0 contentView];
  id v6 = [v5 layer];

  [v6 setMaskedCorners:1];
  id v7 = [v0 contentView];
  [v7 setClipsToBounds:1];

  id v8 = [v0 contentView];
  id v9 = [v8 layer];

  [v9 setMasksToBounds:0];
  id v10 = [v0 contentView];
  id v11 = [v10 layer];

  if (one-time initialization token for cornerRadius != -1) {
    swift_once();
  }
  [v11 setCornerRadius:*(double *)&static MOSuggestionTheme.Sizes.cornerRadius];

  id v12 = [v0 contentView];
  id v13 = [v12 layer];

  id v14 = [v2 blackColor];
  id v15 = [v14 CGColor];

  [v13 setShadowColor:v15];
  id v16 = [v0 contentView];
  id v17 = [v16 layer];

  LODWORD(v18) = 1036831949;
  [v17 setShadowOpacity:v18];

  id v19 = [v0 contentView];
  id v20 = [v19 layer];

  [v20 setShadowOffset:0.0, 2.0];
  id v21 = [v0 contentView];
  id v22 = [v21 layer];

  [v22 setShadowRadius:4.0];
  id v23 = [v0 contentView];
  id v24 = [v23 layer];

  [v24 setCornerCurve:kCACornerCurveContinuous];
  id v25 = [v0 contentView];
  id v26 = [v25 layer];

  [v26 setShadowPathIsBounds:1];
}

void MOSuggestionEvergreenCollectionViewCell.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView;
  type metadata accessor for MOSuggestionSheetAssetView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  swift_weakInit();
  swift_weakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.setAssetViewModel()()
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68))();
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x80))();
  (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0xA0))(v1);
}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.setupConstraints()()
{
  uint64_t v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68);
  uint64_t v2 = (void *)v1();
  id v3 = &selRef_collectionView_didSelectItemAtIndexPath_;
  id v4 = [v2 superview];
  if (v4)
  {
    id v5 = v4;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v2 topAnchor];
    id v7 = [v5 topAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:4.0];
    if (v8)
    {
      id v8 = v8;
      [v8 setActive:1];

      uint64_t v2 = v8;
    }

    id v9 = &selRef_collectionView_didSelectItemAtIndexPath_;
    id v3 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v8 = 0;
    id v5 = v2;
    id v9 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }

  id v10 = (void *)v1();
  id v11 = [v10 v3[140]];
  if (v11)
  {
    id v12 = v11;
    [v10 v9[92] 0];
    id v13 = [v10 leadingAnchor];
    id v14 = [v12 leadingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    [v15 setConstant:4.0];
    if (v15)
    {
      id v15 = v15;
      [v15 setActive:1];

      id v10 = v15;
    }

    id v3 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v15 = 0;
    id v12 = v10;
  }

  id v16 = (void *)v1();
  id v17 = [v16 v3[140]];
  if (v17)
  {
    double v18 = v17;
    [v16 v9[92]];
    id v19 = [v16 trailingAnchor];
    id v20 = [v18 trailingAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    [v21 setConstant:-4.0];
    if (v21)
    {
      id v21 = v21;
      [v21 setActive:1];

      id v16 = v21;
    }

    id v3 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v21 = 0;
    double v18 = v16;
  }

  id v22 = (void *)v1();
  id v23 = [v22 v3[140]];
  if (v23)
  {
    id v24 = v23;
    [v22 v9[92]];
    id v25 = [v22 bottomAnchor];
    id v26 = [v24 bottomAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    if (v27)
    {
      [v27 setConstant:-8.0];
      id v27 = v27;
      [v27 setActive:1];

      id v22 = v27;
    }
  }
  else
  {
    id v27 = 0;
    id v24 = v22;
  }

  id v28 = (void *)v1();
  id v29 = [v28 heightAnchor];

  id v30 = (void *)v1();
  id v31 = [v30 widthAnchor];

  id v32 = [v29 constraintGreaterThanOrEqualToAnchor:v31 multiplier:0.5];
  [v32 setActive:1];
}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.updateCell(with:)(Swift::OpaquePointer with)
{
  id v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x68))();
  if ((unint64_t)with._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v3 = *(void *)(((unint64_t)with._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_6;
    }
  }
  if (((unint64_t)with._rawValue & 0xC000000000000001) != 0)
  {
    uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(((unint64_t)with._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v3 = *((void *)with._rawValue + 4);
    swift_retain();
  }
LABEL_6:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *v4) + 0xA0))(v3);
}

id MOSuggestionEvergreenCollectionViewCell.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  [super hitTest:a1 withEvent:a2];
  if (v7)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIButton);
    if (([v7 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
    {
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHLivePhotoView);
      if (([v7 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
      {

        id v8 = v3;
        return v3;
      }
    }
  }
  return v7;
}

Swift::Void __swiftcall MOSuggestionEvergreenCollectionViewCell.prepareForReuse()()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  [super prepareForReuse];
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA0))(0);
  uint64_t v2 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x68))(v1);
  (*(void (**)(void))((swift_isaMask & *v2) + 0xA0))(0);
}

id MOSuggestionEvergreenCollectionViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  return [super dealloc];
}

void *specialized MOSuggestionEvergreenCollectionViewCell.init(frame:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView;
  type metadata accessor for MOSuggestionSheetAssetView();
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_super v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  swift_weakInit();
  swift_weakInit();

  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
  [super initWithFrame:CGRectZero.origin.x, y, width, height];
  id v8 = [v7 contentView];
  id v9 = (void *)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService39MOSuggestionEvergreenCollectionViewCell_assetView);
  swift_beginAccess();
  [v8 addSubview:*v9];

  (*(void (**)(void))((swift_isaMask & *v7) + 0xC0))();
  objc_super v10 = self;
  id v11 = v7;
  id v12 = [v10 clearColor];
  [v11 setBackgroundColor:v12];

  [v11 setClipsToBounds:0];
  return v11;
}

uint64_t type metadata accessor for MOSuggestionEvergreenCollectionViewCell()
{
  return self;
}

double specialized static MOSuggestionEvergreenCollectionViewCell.calculateEvergreenHeight(width:)(double a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  id v3 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleCaption1, 0, 0x100000000, *(uint64_t *)&UIFontWeightBold, 0, 0);
  double v4 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v3, a1);

  id v5 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleTitle2, 0, 0x8000, *(uint64_t *)&UIFontWeightSemibold, 0, 0);
  double v6 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(168430090, 0xE400000000000000, v5, a1);

  return v4 + v6 + 34.0 + 8.0;
}

uint64_t sub_10009A1A4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_10009A200(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x70))(*a1);
}

uint64_t sub_10009A264@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_10009A2C0(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x88);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_10009A324@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x98))();
  *a2 = result;
  return result;
}

uint64_t sub_10009A380(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xA0);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

char *ReflectionPromptView.__allocating_init(type:prompts:updateReflectionIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return ReflectionPromptView.init(type:prompts:updateReflectionIndex:)(a1, a2, a3, a4);
}

id ReflectionPromptView.shuffleButton.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void ReflectionPromptView.shuffleButton.setter(void *a1)
{
}

uint64_t (*ReflectionPromptView.shuffleButton.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id ReflectionPromptView.tertiaryVibrancyEffectView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void ReflectionPromptView.tertiaryVibrancyEffectView.setter(void *a1)
{
}

uint64_t (*ReflectionPromptView.tertiaryVibrancyEffectView.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id ReflectionPromptView.blurredEffectView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void ReflectionPromptView.blurredEffectView.setter(void *a1)
{
}

uint64_t (*ReflectionPromptView.blurredEffectView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id ReflectionPromptView.accentColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void ReflectionPromptView.accentColor.setter(void *a1)
{
}

uint64_t (*ReflectionPromptView.accentColor.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id ReflectionPromptView.blurBackgroundColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void ReflectionPromptView.blurBackgroundColor.setter(void *a1)
{
}

uint64_t (*ReflectionPromptView.blurBackgroundColor.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id closure #1 in variable initialization expression of ReflectionPromptView.reflectionPrompt()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTextAlignment:4];
  [v0 setNumberOfLines:4];
  [v0 setLineBreakMode:4];
  id v1 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleTitle2, 0, 0x8000, *(uint64_t *)&UIFontWeightSemibold, 0, 0);
  [v0 setFont:v1];

  [v0 setContentMode:6];
  [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [v0 setBaselineAdjustment:0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  return v0;
}

id closure #1 in variable initialization expression of ReflectionPromptView.categoryLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setNumberOfLines:1];
  id v1 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleCaption1, 0, 0x100000000, *(uint64_t *)&UIFontWeightBold, 0, 0);
  [v0 setFont:v1];

  [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  id v2 = [self systemWhiteColor];
  id v3 = [v2 colorWithAlphaComponent:0.5];

  [v0 setTextColor:v3];
  id v4 = [self mainBundle];
  v9._object = (void *)0x80000001001E5150;
  v5._countAndFlagsBits = 0x495443454C464552;
  v5._object = (void *)0xEA00000000004E4FLL;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0xD000000000000016;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v9);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v7];

  [v0 setLineBreakMode:4];
  return v0;
}

char *ReflectionPromptView.init(type:prompts:updateReflectionIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_promptIndex] = 0;
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton;
  id v10 = objc_allocWithZone((Class)UIButton);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView;
  id v13 = [self effectWithStyle:16];
  id v14 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v13];

  *(void *)&v11[v12] = v14;
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView;
  *(void *)&v11[v15] = [objc_allocWithZone((Class)UIVisualEffectView) init];
  uint64_t v16 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor;
  id v17 = self;
  *(void *)&v11[v16] = [v17 systemWhiteColor];
  uint64_t v18 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor;
  *(void *)&v11[v18] = [v17 systemWhiteColor];
  uint64_t v19 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt;
  *(void *)&v11[v19] = closure #1 in variable initialization expression of ReflectionPromptView.reflectionPrompt();
  uint64_t v20 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  *(void *)&v11[v20] = closure #1 in variable initialization expression of ReflectionPromptView.categoryLabel();
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_type] = a1;
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_prompts] = a2;
  id v21 = &v11[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_updateReflectionIndex];
  *(void *)id v21 = a3;
  *((void *)v21 + 1) = a4;
  swift_retain();

  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  v40.receiver = v11;
  v40.super_class = (Class)type metadata accessor for ReflectionPromptView();
  id v25 = (char *)objc_msgSendSuper2(&v40, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  uint64_t v26 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  id v27 = *(void **)&v25[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel];
  id v28 = v25;
  id v29 = v27;
  NSString v30 = [v29 text];
  if (v30)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.uppercased()();
    swift_bridgeObjectRelease();
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v29 setText:v30];

  id v31 = *(void **)&v25[v26];
  id v32 = (void **)&v28[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor];
  swift_beginAccess();
  id v33 = *v32;
  id v34 = v31;
  id v35 = [v33 colorWithAlphaComponent:0.5];
  [v34 setTextColor:v35];

  uint64_t v36 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v28) + 0x198))();
  uint64_t v37 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v28) + 0x188))(v36);
  uint64_t v38 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v28) + 0x190))(v37);
  (*(void (**)(uint64_t))((swift_isaMask & *(void *)v28) + 0x1A0))(v38);

  swift_release();
  return v28;
}

uint64_t type metadata accessor for ReflectionPromptView()
{
  return self;
}

Swift::Void __swiftcall ReflectionPromptView.layoutSubviews()()
{
}

Swift::Void __swiftcall ReflectionPromptView.setupBlurBackground()()
{
  id v1 = v0;
  id v2 = [self effectWithStyle:16];
  id v3 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x108);
  id v4 = (void *)v3();
  [v1 bounds];
  [v4 setFrame:];

  Swift::String v5 = (void *)v3();
  [v5 setAutoresizingMask:18];

  Swift::String v6 = (void *)v3();
  [v1 addSubview:v6];

  NSString v7 = (void *)v3();
  UIView.fillSuper(margin:)(0.0);

  swift_bridgeObjectRelease();
  id v65 = v2;
  id v8 = [self effectForBlurEffect:v2 style:0];
  id v9 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v8];
  uint64_t v10 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0xF8))(v9);
  id v11 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF0);
  uint64_t v12 = (void *)((uint64_t (*)(uint64_t))v11)(v10);
  [v1 bounds];
  [v12 setFrame:];

  id v13 = (void *)v11();
  [v13 setAutoresizingMask:18];

  id v14 = (void *)v11();
  [v1 addSubview:v14];

  uint64_t v15 = (void *)v11();
  UIView.fillSuper(margin:)(0.0);

  uint64_t v16 = swift_bridgeObjectRelease();
  id v17 = (void *)((uint64_t (*)(uint64_t))v11)(v16);
  id v18 = [v17 contentView];

  uint64_t v19 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  [v18 addSubview:*(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel)];

  uint64_t v20 = (void *)v11();
  id v21 = [v20 contentView];

  uint64_t v68 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt;
  [v21 addSubview:*(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt)];

  uint64_t v22 = v19;
  id v23 = *(id *)((char *)v1 + v19);
  id v24 = [v23 superview];
  id v64 = v8;
  v67 = v11;
  if (v24)
  {
    id v25 = v24;
    [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v26 = [v23 leadingAnchor];
    id v27 = [v25 leadingAnchor];
    id v28 = [v26 constraintEqualToAnchor:v27];

    [v28 setConstant:16.0];
    if (v28)
    {
      id v28 = v28;
      [v28 setActive:1];

      id v23 = v28;
    }
  }
  else
  {
    id v28 = 0;
    id v25 = v23;
  }

  v66 = self;
  NSString v29 = String._bridgeToObjectiveC()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DA740;
  *(void *)(inited + 32) = 0xD000000000000017;
  *(void *)(inited + 40) = 0x80000001001E4F00;
  *(void *)(inited + 48) = 0x4018000000000000;
  *(void *)(inited + 72) = &type metadata for Double;
  *(void *)(inited + 80) = 0xD000000000000014;
  *(void *)(inited + 88) = 0x80000001001E4F20;
  *(void *)(inited + 96) = 0x4028000000000000;
  *(void *)(inited + 120) = &type metadata for Double;
  strcpy((char *)(inited + 128), "TEXT_PADDING");
  *(void *)(inited + 168) = &type metadata for Double;
  *(unsigned char *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  *(void *)(inited + 144) = 0x4030000000000000;
  specialized Dictionary.init(dictionaryLiteral:)(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_1001DA390;
  strcpy((char *)(v32 + 32), "categoryLabel");
  *(_WORD *)(v32 + 46) = -4864;
  id v33 = *(void **)((char *)v1 + v22);
  uint64_t v34 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UILabel);
  *(void *)(v32 + 48) = v33;
  *(void *)(v32 + 72) = v34;
  *(void *)(v32 + 80) = 0xD000000000000010;
  *(void *)(v32 + 88) = 0x80000001001E4F40;
  id v35 = *(void **)((char *)v1 + v68);
  *(void *)(v32 + 120) = v34;
  *(void *)(v32 + 96) = v35;
  id v36 = v33;
  id v37 = v35;
  specialized Dictionary.init(dictionaryLiteral:)(v32);
  Class v38 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v39 = (Class)[v66 constraintsWithVisualFormat:v29 options:0 metrics:isa views:v38];

  if (!v39)
  {
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v39 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v66 activateConstraints:v39];

  id v40 = *(id *)((char *)v1 + v68);
  id v41 = [v40 superview];
  if (v41)
  {
    v42 = v41;
    [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v43 = [v40 trailingAnchor];
    id v44 = [v42 trailingAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44];

    [v45 setConstant:-16.0];
    if (v45)
    {
      id v45 = v45;
      [v45 setActive:1];

      id v40 = v45;
    }
    v47 = v64;
    v46 = v65;

    uint64_t v48 = v68;
  }
  else
  {
    uint64_t v48 = v68;
    id v45 = 0;
    v42 = v40;
    v47 = v64;
    v46 = v65;
  }

  id v49 = *(id *)((char *)v1 + v48);
  id v50 = [v49 superview];
  if (v50)
  {
    v51 = v50;
    [v49 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v52 = [v49 leadingAnchor];
    id v53 = [v51 leadingAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53];

    [v54 setConstant:16.0];
    if (v54)
    {
      id v54 = v54;
      [v54 setActive:1];

      id v49 = v54;
    }

    uint64_t v48 = v68;
  }
  else
  {
    id v54 = 0;
    v51 = v49;
  }

  v55 = (void *)v67();
  id v56 = [v55 contentView];

  v57 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xD8);
  v58 = (void *)v57();
  [v56 addSubview:v58];

  id v59 = *(id *)((char *)v1 + v48);
  v60 = (void *)v57();
  [v59 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v61 = [v59 trailingAnchor];
  id v62 = [v60 trailingAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62 constant:6.0];

  [v63 setActive:1];
}

Swift::Void __swiftcall ReflectionPromptView.setupShuffleButton()()
{
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleExtraLargeTitle2];
  id v2 = [self configurationWithFont:v1];

  id v3 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD8);
  id v4 = (void *)v3();
  id v5 = v2;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [self systemImageNamed:v6 withConfiguration:v5];

  [v4 setImage:v7 forState:0];
  id v8 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"updatePromptIndex:"];
  id v9 = (void *)v3();
  [v9 addGestureRecognizer:v8];

  uint64_t v10 = (void *)v3();
  [v10 setUserInteractionEnabled:1];

  id v11 = (void *)v3();
  [v11 setDeliversTouchesForGesturesToSuperview:0];

  uint64_t v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF0))();
  id v13 = [v12 contentView];

  id v14 = (void *)v3();
  [v13 addSubview:v14];

  uint64_t v15 = (void *)v3();
  uint64_t v16 = &selRef_collectionView_didSelectItemAtIndexPath_;
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v17 = (void *)v3();
  id v18 = [v17 superview];
  if (v18)
  {
    uint64_t v19 = v18;
    id v29 = v8;
    [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v20 = [v17 trailingAnchor];
    id v21 = [v19 trailingAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21];

    [v22 setConstant:-8.0];
    if (v22)
    {
      id v22 = v22;
      [v22 setActive:1];

      id v17 = v22;
    }

    id v8 = v29;
    uint64_t v16 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v22 = 0;
    uint64_t v19 = v17;
  }

  id v23 = (void *)v3();
  id v24 = [v23 superview];
  if (v24)
  {
    id v25 = v24;
    [v23 v16[92] 0];
    id v26 = [v23 topAnchor];
    id v27 = [v25 topAnchor];
    id v28 = [v26 constraintEqualToAnchor:v27];

    [v28 setConstant:10.0];
    if (v28)
    {
      id v30 = v28;
      [v30 setActive:1];

      id v23 = v30;
    }
    else
    {
      id v30 = 0;
    }
  }
  else
  {
    id v30 = 0;
    id v25 = v23;
  }
}

Swift::Void __swiftcall ReflectionPromptView.setUpBackground()()
{
  id v1 = v0;
  id v2 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD8);
  id v3 = (void *)v2();
  id v4 = self;
  id v5 = [v4 systemWhiteColor];
  id v6 = [v5 colorWithAlphaComponent:0.5];

  [v3 setTintColor:v6];
  switch(*(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_type))
  {
    case 1:
      NSString v7 = String._bridgeToObjectiveC()();
      id v8 = [v4 colorNamed:v7];

      if (!v8) {
        id v8 = [v4 systemWhiteColor];
      }
      (*(void (**)(id))((swift_isaMask & *v1) + 0x140))(v8);
      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = [v4 colorNamed:v9];

      if (!v10) {
        id v10 = [v4 systemWhiteColor];
      }
      uint64_t v11 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x128))(v10);
      goto LABEL_20;
    case 2:
      NSString v14 = String._bridgeToObjectiveC()();
      id v13 = [v4 colorNamed:v14];

      if (v13) {
        goto LABEL_19;
      }
      goto LABEL_18;
    case 3:
      NSString v15 = String._bridgeToObjectiveC()();
      id v13 = [v4 colorNamed:v15];

      if (!v13) {
        goto LABEL_18;
      }
      goto LABEL_19;
    case 4:
      NSString v16 = String._bridgeToObjectiveC()();
      id v13 = [v4 colorNamed:v16];

      if (!v13) {
        goto LABEL_18;
      }
      goto LABEL_19;
    case 5:
      NSString v17 = String._bridgeToObjectiveC()();
      id v13 = [v4 colorNamed:v17];

      if (!v13) {
        goto LABEL_18;
      }
      goto LABEL_19;
    case 6:
      NSString v18 = String._bridgeToObjectiveC()();
      id v13 = [v4 colorNamed:v18];

      if (!v13) {
        goto LABEL_18;
      }
      goto LABEL_19;
    default:
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [v4 colorNamed:v12];

      if (!v13) {
LABEL_18:
      }
        id v13 = [v4 systemWhiteColor];
LABEL_19:
      uint64_t v11 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x140))(v13);
LABEL_20:
      uint64_t v19 = (void *)((uint64_t (*)(uint64_t))v2)(v11);
      id v20 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120);
      id v21 = (void *)v20();
      id v22 = [v21 colorWithAlphaComponent:0.5];

      [v19 setTintColor:v22];
      uint64_t v23 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
      id v24 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel);
      id v25 = (void *)v20();
      id v26 = [v25 colorWithAlphaComponent:0.5];

      [v24 setTintColor:v26];
      id v27 = *(id *)((char *)v1 + v23);
      id v28 = (void *)v20();
      id v29 = [v28 colorWithAlphaComponent:0.5];

      id v30 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x108))();
      id v31 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x138))();
      [v30 setBackgroundColor:v31];

      return;
  }
}

Swift::Void __swiftcall ReflectionPromptView.setupTextColor()()
{
  uint64_t v1 = *(void *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_promptIndex);
  if ((v1 & 0x8000000000000000) == 0
    && v1 < *(void *)(*(void *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_prompts) + 16))
  {
    id v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel);
    id v3 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120);
    swift_bridgeObjectRetain();
    id v4 = v2;
    id v5 = (void *)v3();
    id v6 = [v5 colorWithAlphaComponent:0.5];

    [v4 setTextColor:v6];
    id v7 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = [v7 initWithString:v8];

    NSString v9 = (void *)v3();
    [v11 addAttribute:NSForegroundColorAttributeName value:v9 range:0, [v11 length]];

    uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt;
    [*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt) setAttributedText:v11];
    [*(id *)((char *)v0 + v10) setAdjustsFontSizeToFitWidth:1];
    [*(id *)((char *)v0 + v10) setNumberOfLines:0];
  }
}

Swift::Void __swiftcall ReflectionPromptView.updatePromptIndex(_:)(UITapGestureRecognizer a1)
{
  id v2 = *(uint64_t (**)(uint64_t))((char *)v1
                                         + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_updateReflectionIndex);
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  swift_release();
  *(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_promptIndex) = v4;
  id v5 = *(void (**)(void))((swift_isaMask & *v1) + 0x1A0);

  v5();
}

void ReflectionPromptView.init(frame:)()
{
}

id ReflectionPromptView.__deallocating_deinit()
{
  return ReflectionPromptView.layoutSubviews()((SEL *)&selRef_dealloc);
}

id ReflectionPromptView.layoutSubviews()(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ReflectionPromptView();
  return [super a1];
}

void specialized ReflectionPromptView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_promptIndex] = 0;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_shuffleButton;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_tertiaryVibrancyEffectView;
  id v3 = [self effectWithStyle:16];
  id v4 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v3];

  *(void *)&v0[v2] = v4;
  uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurredEffectView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIVisualEffectView) init];
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_accentColor;
  id v7 = self;
  *(void *)&v0[v6] = [v7 systemWhiteColor];
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_blurBackgroundColor;
  *(void *)&v0[v8] = [v7 systemWhiteColor];
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_reflectionPrompt;
  *(void *)&v0[v9] = closure #1 in variable initialization expression of ReflectionPromptView.reflectionPrompt();
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService20ReflectionPromptView_categoryLabel;
  *(void *)&v0[v10] = closure #1 in variable initialization expression of ReflectionPromptView.categoryLabel();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10009CB40@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_10009CB9C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xE0))(*a1);
}

uint64_t sub_10009CC00@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result;
  return result;
}

uint64_t sub_10009CC5C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_10009CCC0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x108))();
  *a2 = result;
  return result;
}

uint64_t sub_10009CD24(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x110))(*a1);
}

uint64_t sub_10009CD90@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result;
  return result;
}

uint64_t sub_10009CDF4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t sub_10009CE60@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x138))();
  *a2 = result;
  return result;
}

uint64_t sub_10009CEC4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x140))(*a1);
}

void *MOSuggestionCollectionViewListCell.gutter.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewListCell.gutter;
}

void *MOSuggestionCollectionViewListCell.journalButtonGutter.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewListCell.journalButtonGutter;
}

double static MOSuggestionCollectionViewListCell.journalButtonGutter.getter()
{
  return 36.0;
}

void *MOSuggestionCollectionViewListCell.margin.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewListCell.margin;
}

double static MOSuggestionInterstitialExpandableListViewCellConstants.CELL_INSET_MARGIN.getter()
{
  return 12.0;
}

unint64_t static MOSuggestionCollectionViewListCell.reuseIdentifier.getter()
{
  return 0xD000000000000022;
}

uint64_t MOSuggestionCollectionViewListCell.assetViewModel.getter()
{
  return swift_retain();
}

uint64_t MOSuggestionCollectionViewListCell.assetViewModel.setter(uint64_t a1)
{
  id v3 = (void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel);
  swift_beginAccess();
  void *v3 = a1;
  swift_retain();
  uint64_t v4 = swift_release();
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x178))(v4);
  return swift_release();
}

uint64_t (*MOSuggestionCollectionViewListCell.assetViewModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionCollectionViewListCell.assetViewModel.modify;
}

uint64_t MOSuggestionCollectionViewListCell.assetViewModel.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(a1 + 24)) + 0x178))(result);
  }
  return result;
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_labelColor);
}

id MOSuggestionCollectionViewListCell.titleLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel);
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.subtitleLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel(SEL *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setLineBreakMode:4];
  [v2 setNumberOfLines:1];
  id v3 = [self *a1];
  [v2 setTextColor:v3];

  [v2 setTextAlignment:4];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
  return v2;
}

id MOSuggestionCollectionViewListCell.subtitleLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel);
}

id MOSuggestionCollectionViewListCell.stackView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView);
}

id MOSuggestionCollectionViewListCell.platterView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionCollectionViewListCell.platterView.setter(void *a1)
{
}

uint64_t (*MOSuggestionCollectionViewListCell.platterView.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionCollectionViewListCell.playButton.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton);
}

uint64_t key path setter for MOSuggestionCollectionViewListCell.accessoryButtonAction : MOSuggestionCollectionViewListCell(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & **a2) + 0xF0);
  swift_retain();
  return v6(partial apply for thunk for @escaping @callee_guaranteed () -> (@out ()), v5);
}

uint64_t MOSuggestionCollectionViewListCell.accessoryButtonAction.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t MOSuggestionCollectionViewListCell.accessoryButtonAction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t (*MOSuggestionCollectionViewListCell.accessoryButtonAction.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setInteractionState(added:saved:)(Swift::Bool_optional added, Swift::Bool_optional saved)
{
  if (added.value)
  {
    uint64_t v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x138);
    uint64_t v4 = (void *)v3();
    (*(void (**)(void))((swift_isaMask & *v4) + 0x98))(0);
  }
  else
  {
    if (!saved.value) {
      return;
    }
    uint64_t v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x138);
    uint64_t v4 = (void *)v3();
    (*(void (**)(uint64_t))((swift_isaMask & *v4) + 0x98))(1);
  }

  id v5 = (id)v3();
  [v5 setHidden:0];
}

uint64_t MOSuggestionCollectionViewListCell.cellViewModel.didset()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v3 = Strong;
  if (!Strong) {
    goto LABEL_10;
  }
  unint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)Strong + 296))(Strong);
  uint64_t result = swift_release();
  if (!v4)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_5:
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        uint64_t v3 = *(void *)(v4 + 32);
        swift_retain();
      }
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
LABEL_10:
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0xC0))(v3);
  uint64_t v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel);
  uint64_t v7 = swift_weakLoadStrong();
  NSString v8 = (NSString)v7;
  if (v7)
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 176))(v7);
    swift_release();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v6 setText:v8];

  id v9 = specialized static MOSuggestionTheme.Fonts.footnoteEmphShortFont()();
  UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(v9, 0.0, 0.95, 0.0);

  uint64_t v10 = swift_weakLoadStrong();
  if (v10)
  {
    char v11 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 224))(v10);
    swift_release();
    uint64_t v12 = v11 & 1;
  }
  else
  {
    uint64_t v12 = 2;
  }
  uint64_t v13 = swift_weakLoadStrong();
  if (v13)
  {
    char v14 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 248))(v13);
    swift_release();
    uint64_t v15 = v14 & 1;
  }
  else
  {
    uint64_t v15 = 2;
  }
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x100))(v12, v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x188))(v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xB8))(v17);
  if (v18)
  {
    uint64_t v19 = (*(uint64_t (**)(void))(*(void *)v18 + 728))();
    uint64_t v21 = v20;
    swift_release();
    if (v21) {
      (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(void **)((char *)v1
    }
                                                                              + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton))
                                               + 0x60))(v19, v21);
  }
  id v22 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton);
  uint64_t v23 = swift_weakLoadStrong();
  if (v23)
  {
    uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
    swift_release();
  }
  else
  {
    uint64_t v24 = 0;
  }
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v22) + 0x78))(v24);
}

uint64_t MOSuggestionCollectionViewListCell.cellViewModel.getter()
{
  return swift_weakLoadStrong();
}

uint64_t MOSuggestionCollectionViewListCell.cellViewModel.setter()
{
  return swift_release();
}

void (*MOSuggestionCollectionViewListCell.cellViewModel.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_cellViewModel;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return MOSuggestionCollectionViewListCell.cellViewModel.modify;
}

void MOSuggestionCollectionViewListCell.cellViewModel.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
    MOSuggestionCollectionViewListCell.cellViewModel.didset();
  }

  free(v3);
}

id MOSuggestionCollectionViewListCell.assetView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionCollectionViewListCell.assetView.setter(void *a1)
{
}

uint64_t (*MOSuggestionCollectionViewListCell.assetView.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionCollectionViewListCell.addedView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionCollectionViewListCell.addedView.setter(void *a1)
{
}

uint64_t (*MOSuggestionCollectionViewListCell.addedView.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionCollectionViewListCell.assetContainerView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionCollectionViewListCell.assetContainerView.setter(void *a1)
{
}

uint64_t (*MOSuggestionCollectionViewListCell.assetContainerView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.handleTraitChange()()
{
  id v3 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0))();
  id v1 = [v0 traitCollection];
  id v2 = [v1 userInterfaceStyle];

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v3, (uint64_t)v2);
}

uint64_t MOSuggestionCollectionViewListCell.updateConfiguration(using:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  id v5 = (char *)&v12 - v4;
  uint64_t v6 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.backgroundConfiguration.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    static UIBackgroundConfiguration.clear()();
    outlined destroy of UIBackgroundConfiguration?((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  id v10 = [self systemBackgroundColor];
  UIBackgroundConfiguration.backgroundColor.setter();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, v9, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
  UICollectionViewCell.backgroundConfiguration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t MOSuggestionCollectionViewListCell.updateCell(with:)()
{
  uint64_t v1 = *(void (**)(uint64_t))((swift_isaMask & *v0) + 0xC0);
  uint64_t v2 = swift_retain();
  v1(v2);
  id v3 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x188);

  return v3();
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setAssetViewModel()()
{
  uint64_t v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB8);
  uint64_t v2 = v1();
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 808))(1);
    uint64_t v2 = swift_release();
  }
  id v3 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x120))(v2);
  uint64_t v4 = v1();
  (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0xA0))(v4);

  (*(void (**)(void))((swift_isaMask & *v0) + 0x188))();
  id v5 = *(void (**)(void))((swift_isaMask & *v0) + 0x180);

  v5();
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setPlayButton()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_buttonHolder);
  [v1 addSubview:v2];
  id v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton);
  [v2 addArrangedSubview:v3];
  [v2 setCustomSpacing:v3 afterView:12.0];
  [v3 setUserInteractionEnabled:1];
  uint64_t v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView);
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v2 leadingAnchor];
  id v6 = [v4 trailingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  [v7 setConstant:12.0];
  [v7 setActive:1];

  id v8 = [v2 superview];
  if (v8)
  {
    id v9 = v8;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v2 trailingAnchor];
    id v11 = [v9 trailingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:-36.0];
    id v13 = v12;
    [v13 setActive:1];
  }
  id v14 = [v2 superview];
  if (v14)
  {
    uint64_t v15 = v14;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v2 centerYAnchor];
    id v17 = [v15 centerYAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:0.0];
    id v19 = v18;
    [v19 setActive:1];
  }
  uint64_t v20 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001DA250;
  id v22 = [v3 heightAnchor];
  id v23 = [v3 widthAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v21 + 32) = v24;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 activateConstraints:isa];

  id v26 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB8);
  uint64_t v27 = v26();
  if (!v27) {
    goto LABEL_13;
  }
  (*(void (**)(uint64_t))(*(void *)v27 + 728))(v27);
  uint64_t v29 = v28;
  swift_release();
  if (!v29) {
    goto LABEL_13;
  }
  if ((uint64_t v30 = swift_bridgeObjectRelease(), (v31 = ((uint64_t (*)(uint64_t))v26)(v30)) != 0)
    && (uint64_t v32 = (*(uint64_t (**)(uint64_t))(*(void *)v31 + 776))(v31), v33 = swift_release(), v32 == 1)
    || (uint64_t v34 = v26()) != 0
    && (v35 = (*(uint64_t (**)(uint64_t))(*(void *)v34 + 776))(v34), uint64_t v33 = swift_release(), v35 == 4))
  {
    uint64_t v36 = ((uint64_t (*)(uint64_t))v26)(v33);
    if (v36)
    {
      uint64_t v37 = (*(uint64_t (**)(void))(*(void *)v36 + 728))();
      uint64_t v39 = v38;
      swift_release();
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v39 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x60))(v37, v39);
    id v40 = v3;
    uint64_t v41 = 0;
  }
  else
  {
LABEL_13:
    id v40 = v3;
    uint64_t v41 = 1;
  }

  [v40 setHidden:v41];
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.layoutSubviews()()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  [super layoutSubviews];
  uint64_t v2 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x138))(v1);
  id v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0))();
  [v3 frame];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  [v2 setFrame:v5, v7, v9, v11];
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setLabels()()
{
  id v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x108);
  uint64_t v2 = v1();
  if (!v2
    || (id v3 = *(id *)(v2 + 16),
        swift_release(),
        id v4 = [v3 interfaceType],
        v3,
        v4 != (id)4))
  {
    double v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel);
    uint64_t v10 = v1();
    NSString v7 = (NSString)v10;
    if (!v10) {
      goto LABEL_9;
    }
    (*(void (**)(uint64_t))(*(void *)v10 + 376))(v10);
    swift_release();
    NSString v7 = String._bridgeToObjectiveC()();
    goto LABEL_8;
  }
  double v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel);
  uint64_t v6 = v1();
  NSString v7 = (NSString)v6;
  if (!v6) {
    goto LABEL_9;
  }
  (*(void (**)(uint64_t))(*(void *)v6 + 384))(v6);
  uint64_t v9 = v8;
  swift_release();
  if (v9)
  {
    NSString v7 = String._bridgeToObjectiveC()();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  NSString v7 = 0;
LABEL_9:
  [v5 setText:v7];

  id v11 = specialized static MOSuggestionTheme.Fonts.footnoteShortFont()();
  UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(v11, 0.0, 1.0, 0.0);
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.setupConstraints()()
{
  id v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120);
  uint64_t v2 = (void *)v1();
  id v3 = [v2 superview];
  id v4 = &selRef_collectionView_didSelectItemAtIndexPath_;
  if (v3)
  {
    double v5 = v3;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v2 topAnchor];
    id v7 = [v5 topAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:0.0];
    if (v8)
    {
      id v8 = v8;
      [v8 setActive:1];

      uint64_t v2 = v8;
    }

    id v4 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v8 = 0;
    double v5 = v2;
  }

  uint64_t v9 = (void *)v1();
  id v10 = [v9 superview];
  if (v10)
  {
    id v11 = v10;
    [v9 v4[92]];
    id v12 = [v9 leadingAnchor];
    id v13 = [v11 leadingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:0.0];
    if (v14)
    {
      id v14 = v14;
      [v14 setActive:1];

      uint64_t v9 = v14;
    }

    id v4 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v14 = 0;
    id v11 = v9;
  }

  uint64_t v15 = (void *)v1();
  id v16 = [v15 superview];
  if (v16)
  {
    id v17 = v16;
    [v15 v4[92]];
    id v18 = [v15 trailingAnchor];
    id v19 = [v17 trailingAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:0.0];
    if (v20)
    {
      id v20 = v20;
      [v20 setActive:1];

      uint64_t v15 = v20;
    }

    id v4 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v20 = 0;
    id v17 = v15;
  }

  uint64_t v21 = (void *)v1();
  id v22 = [v21 superview];
  if (v22)
  {
    id v23 = v22;
    [v21 v4[92]];
    id v24 = [v21 bottomAnchor];
    id v25 = [v23 bottomAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    if (v26)
    {
      [v26 setConstant:-0.0];
      id v26 = v26;
      [v26 setActive:1];

      uint64_t v21 = v26;
    }

    id v4 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v26 = 0;
    id v23 = v21;
  }

  uint64_t v27 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView);
  uint64_t v28 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0);
  uint64_t v29 = (void *)v28();
  [v27 v4[92]:0];
  id v30 = [v27 leadingAnchor];
  id v31 = [v29 trailingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  [v32 setConstant:12.0];
  [v32 setActive:1];

  uint64_t v33 = &selRef_collectionView_didSelectItemAtIndexPath_;
  id v34 = [v27 superview];
  if (v34)
  {
    uint64_t v35 = v34;
    [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v36 = [v27 centerYAnchor];
    id v37 = [v35 centerYAnchor];
    id v38 = [v36 constraintEqualToAnchor:v37];

    [v38 setConstant:0.0];
    id v39 = v38;
    [v39 setActive:1];
  }
  id v40 = (void *)v28();
  id v41 = [v40 superview];
  if (v41)
  {
    v42 = v41;
    [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v43 = [v40 topAnchor];
    id v44 = [v42 topAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44];

    [v45 setConstant:4.0];
    if (v45)
    {
      id v45 = v45;
      [v45 setActive:1];

      id v40 = v45;
    }
    v46 = &selRef_collectionView_didSelectItemAtIndexPath_;

    uint64_t v33 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v45 = 0;
    v42 = v40;
    v46 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }

  v47 = (void *)v28();
  id v48 = [v47 superview];
  if (v48)
  {
    id v49 = v48;
    [v47 v33[92]];
    id v50 = [v47 bottomAnchor];
    id v51 = [v49 bottomAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51];

    if (v52)
    {
      [v52 setConstant:-4.0];
      id v52 = v52;
      [v52 setActive:1];

      v47 = v52;
    }

    uint64_t v33 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v52 = 0;
    id v49 = v47;
  }

  id v53 = (void *)v28();
  id v54 = [v53 superview];
  if (v54)
  {
    v55 = v54;
    [v53 v33[92] 0];
    id v56 = [v53 v46[141]];
    id v57 = [v55 v46[141]];
    id v58 = [v56 constraintEqualToAnchor:v57];

    [v58 setConstant:4.0];
    if (v58)
    {
      id v58 = v58;
      [v58 setActive:1];

      id v53 = v58;
    }
  }
  else
  {
    id v58 = 0;
    v55 = v53;
  }

  v86 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1001DBD90;
  v60 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x150);
  id v61 = (void *)v60();
  id v62 = [v61 heightAnchor];

  id v63 = (void *)v60();
  id v64 = [v63 widthAnchor];

  id v65 = [v62 constraintEqualToAnchor:v64];
  *(void *)(v59 + 32) = v65;
  v66 = (void *)v60();
  id v67 = [v66 topAnchor];

  uint64_t v68 = (void *)v28();
  id v69 = [v68 topAnchor];

  id v70 = [v67 constraintEqualToAnchor:v69 constant:4.0];
  *(void *)(v59 + 40) = v70;
  v71 = (void *)v60();
  id v72 = [v71 leadingAnchor];

  v73 = (void *)v28();
  id v74 = [v73 leadingAnchor];

  id v75 = [v72 constraintEqualToAnchor:v74 constant:4.0];
  *(void *)(v59 + 48) = v75;
  v76 = (void *)v60();
  id v77 = [v76 trailingAnchor];

  v78 = (void *)v28();
  id v79 = [v78 trailingAnchor];

  id v80 = [v77 constraintEqualToAnchor:v79 constant:-4.0];
  *(void *)(v59 + 56) = v80;
  v81 = (void *)v60();
  id v82 = [v81 bottomAnchor];

  v83 = (void *)v28();
  id v84 = [v83 bottomAnchor];

  id v85 = [v82 constraintEqualToAnchor:v84 constant:-4.0];
  *(void *)(v59 + 64) = v85;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v86 activateConstraints:isa];
}

id MOSuggestionCollectionViewListCell.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  [super hitTest:a1 withEvent:a2];
  if (v7)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIButton);
    if (([v7 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
    {
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHLivePhotoView);
      if (([v7 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
      {

        id v8 = v3;
        return v3;
      }
    }
  }
  return v7;
}

Swift::Void __swiftcall MOSuggestionCollectionViewListCell.prepareForReuse()()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  [super prepareForReuse];
  id v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel);
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setText:v2];

  id v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel);
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];

  uint64_t v5 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))(0);
  id v6 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x120))(v5);
  (*(void (**)(void))((swift_isaMask & *v6) + 0xA0))(0);
}

id MOSuggestionCollectionViewListCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  return [super dealloc];
}

char *specialized MOSuggestionCollectionViewListCell.init(frame:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel] = 0;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel;
  objc_super v2 = v0;
  *(void *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_labelColor);
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel;
  *(void *)&v2[v3] = closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView;
  id v5 = [objc_allocWithZone((Class)UIStackView) init];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v5 setAxis:1];
  [v5 setAlignment:1];
  [v5 setDistribution:0];
  *(void *)&v2[v4] = v5;
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_buttonHolder;
  id v7 = [objc_allocWithZone((Class)UIStackView) init];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setAxis:0];
  [v7 setAlignment:3];
  [v7 setDistribution:0];
  *(void *)&v2[v6] = v7;
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView;
  id v9 = [objc_allocWithZone((Class)UIView) init];
  id v10 = [v9 traitCollection];
  id v11 = [v10 userInterfaceStyle];

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v9, (uint64_t)v11);
  *(void *)&v2[v8] = v9;
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton;
  type metadata accessor for MOSuggestionSheetListPlayButton();
  *(void *)&v2[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v13 = (void (__swiftcall **)())&v2[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction];
  *id v13 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v13[1] = 0;
  swift_weakInit();
  uint64_t v14 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView;
  type metadata accessor for MOSuggestionSheetAssetView();
  *(void *)&v2[v14] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView;
  id v16 = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionAddedView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v16[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = 1;
  id v17 = v16;
  [v17 setClipsToBounds:1];
  MOSuggestionAddedView.initAddedView()();

  *(void *)&v2[v15] = v17;
  uint64_t v18 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView;
  id v19 = [objc_allocWithZone((Class)UIView) init];
  id v20 = [self clearColor];
  [v19 setBackgroundColor:v20];

  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v21 = [v19 layer];
  [v21 setMaskedCorners:1];

  [v19 setClipsToBounds:1];
  *(void *)&v2[v18] = v19;

  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  v39.receiver = v2;
  v39.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewListCell();
  id v25 = [super initWithFrame:CGRectZero.origin.x, y, width, height];
  id v26 = &v25[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView];
  swift_beginAccess();
  uint64_t v27 = *(void **)v26;
  uint64_t v28 = v25;
  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v29 = *(void **)&v28[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView];
  uint64_t v30 = *(void *)&v28[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel];
  [v29 addArrangedSubview:v30];
  [v29 addArrangedSubview:*(void *)&v28[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel]];
  [v29 setCustomSpacing:v30 afterView:0.0];
  id v31 = (id *)&v28[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView];
  swift_beginAccess();
  [v28 addSubview:*v31];
  [v28 addSubview:v29];
  id v32 = (id *)&v28[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView];
  swift_beginAccess();
  [v28 addSubview:*v32];
  uint64_t v33 = (id *)&v28[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView];
  swift_beginAccess();
  [v28 addSubview:*v33];
  [*v31 addSubview:*v32];
  id v34 = [*v32 addSubview:*(void *)v26];
  uint64_t v35 = (*(uint64_t (**)(id))((swift_isaMask & *(void *)v28) + 0x190))(v34);
  (*(void (**)(uint64_t))((swift_isaMask & *(void *)v28) + 0x180))(v35);
  [v28 setClipsToBounds:0];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1001DA0F0;
  *(void *)(v36 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v36 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  id v37 = v28;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  [*v33 setHidden:1];
  (*(void (**)(void, void))((swift_isaMask & *(void *)v37) + 0x100))(0, 0);

  return v37;
}

void specialized MOSuggestionCollectionViewListCell.init(coder:)()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetViewModel] = 0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_titleLabel;
  *(void *)&v1[v2] = closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_labelColor);
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_subtitleLabel;
  *(void *)&v1[v3] = closure #1 in variable initialization expression of MOSuggestionCollectionViewListCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_stackView;
  id v5 = [objc_allocWithZone((Class)UIStackView) init];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v5 setAxis:1];
  [v5 setAlignment:1];
  [v5 setDistribution:0];
  *(void *)&v1[v4] = v5;
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_buttonHolder;
  id v7 = [objc_allocWithZone((Class)UIStackView) init];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setAxis:0];
  [v7 setAlignment:3];
  [v7 setDistribution:0];
  *(void *)&v1[v6] = v7;
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_platterView;
  id v9 = [objc_allocWithZone((Class)UIView) init];
  id v10 = [v9 traitCollection];
  id v11 = [v10 userInterfaceStyle];

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v9, (uint64_t)v11);
  *(void *)&v1[v8] = v9;
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_playButton;
  type metadata accessor for MOSuggestionSheetListPlayButton();
  *(void *)&v1[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v13 = (void (__swiftcall **)())&v1[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_accessoryButtonAction];
  *id v13 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v13[1] = 0;
  swift_weakInit();
  uint64_t v14 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetView;
  type metadata accessor for MOSuggestionSheetAssetView();
  *(void *)&v1[v14] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_addedView;
  id v16 = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionAddedView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v16[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = 1;
  id v17 = v16;
  [v17 setClipsToBounds:1];
  MOSuggestionAddedView.initAddedView()();

  *(void *)&v1[v15] = v17;
  uint64_t v18 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionCollectionViewListCell_assetContainerView;
  id v19 = [objc_allocWithZone((Class)UIView) init];
  id v20 = [self clearColor];
  [v19 setBackgroundColor:v20];

  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v21 = [v19 layer];
  [v21 setMaskedCorners:1];

  [v19 setClipsToBounds:1];
  *(void *)&v1[v18] = v19;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t outlined destroy of UIBackgroundConfiguration?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewListCell()
{
  return self;
}

uint64_t sub_1000A0A58@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000A0AB4(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xC0);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1000A0B18@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000A0B74(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD8))(*a1);
}

uint64_t sub_1000A0BD8@<X0>(void **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE8))();
  uint64_t v5 = v4;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v5;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1000A0C70@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x108))();
  *a2 = result;
  return result;
}

uint64_t sub_1000A0CD4(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x110);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1000A0D40@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result;
  return result;
}

uint64_t sub_1000A0DA4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t sub_1000A0E10@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x138))();
  *a2 = result;
  return result;
}

uint64_t sub_1000A0E74(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x140))(*a1);
}

uint64_t sub_1000A0EE0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x150))();
  *a2 = result;
  return result;
}

uint64_t sub_1000A0F44(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x158))(*a1);
}

uint64_t sub_1000A0FB0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, Any>, &demangling cache variable for type metadata for (NSAttributedStringKey, Any), (uint64_t (*)(uint64_t))specialized __RawDictionaryStorage.find<A>(_:));
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorTraitKey, Any>, &demangling cache variable for type metadata for (UIFontDescriptorTraitKey, Any), (uint64_t (*)(uint64_t))specialized __RawDictionaryStorage.find<A>(_:));
}

{
  void *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, NSObject>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    uint64_t v8 = v7;
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = (uint64_t *)(v2[6] + 16 * result);
    void *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    id v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void v22[2];

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID, [AnyHashable : Any]?));
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UUID, [AnyHashable : Any]?>);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = *(int *)(v2 + 48);
  id v10 = v6 + 64;
  id v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  id v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    outlined init with copy of Date?(v12, (uint64_t)v5, &demangling cache variable for type metadata for (UUID, [AnyHashable : Any]?));
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v5);
    if (v15) {
      break;
    }
    id v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    id v19 = v7[2];
    id v20 = __OFADD__(v19, 1);
    id v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOUsageContextType, [UUID : [AnyHashable : Any]?]>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    id v10 = v2[2];
    id v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, UIFont>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = *(v4 - 1);
    id v7 = v5;
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    id v11 = v2[2];
    uint64_t v12 = __OFADD__(v11, 1);
    id v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorTraitKey, UIFontWeight>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = (id)*(v4 - 1);
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    id v10 = v2[2];
    id v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorAttributeName, Any>, &demangling cache variable for type metadata for (UIFontDescriptorAttributeName, Any), specialized __RawDictionaryStorage.find<A>(_:));
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorFeatureKey, Int>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = (id)*(v4 - 1);
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    id v10 = v2[2];
    id v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  long long v17;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Any>);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of Date?(v6, (uint64_t)&v15, &demangling cache variable for type metadata for (String, Any));
    id v7 = v15;
    uint64_t v8 = v16;
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v11 = (uint64_t *)(v3[6] + 16 * result);
    void *v11 = v7;
    v11[1] = v8;
    uint64_t result = (unint64_t)outlined init with take of Any(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    id v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  id *v4;
  char v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetAnalytics.AssetTransferEvent.EventFields, MOSuggestionAssetsType>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    id v9 = v2[2];
    id v10 = __OFADD__(v9, 1);
    id v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<CIContextOption, Any>, &demangling cache variable for type metadata for (CIContextOption, Any), specialized __RawDictionaryStorage.find<A>(_:));
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void v24[2];

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID, (Bool, Bool)));
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UUID, (Bool, Bool)>);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = &v5[*(int *)(v2 + 48)];
  id v10 = v6 + 64;
  id v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  id v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    outlined init with copy of Date?(v12, (uint64_t)v5, &demangling cache variable for type metadata for (UUID, (Bool, Bool)));
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v5);
    if (v15) {
      break;
    }
    id v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    id v19 = (char *)(v7[7] + 2 * v16);
    id v20 = v9[1];
    *id v19 = *v9;
    v19[1] = v20;
    id v21 = v7[2];
    id v22 = __OFADD__(v21, 1);
    id v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  id *v4;
  char v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetsType, MOSuggestionAssetVisualSubType>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(unsigned char *)v4;
    uint64_t v6 = *(v4 - 1);
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    id v9 = v2[2];
    id v10 = __OFADD__(v9, 1);
    id v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<UIApplicationOpenExternalURLOptionsKey, Any>, &demangling cache variable for type metadata for (UIApplicationOpenExternalURLOptionsKey, Any), specialized __RawDictionaryStorage.find<A>(_:));
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetMetadataKey, Any>, &demangling cache variable for type metadata for (MOSuggestionAssetMetadataKey, Any), specialized __RawDictionaryStorage.find<A>(_:));
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetMetadataKey, Any?>);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of Date?(v6, (uint64_t)&v13, &demangling cache variable for type metadata for (MOSuggestionAssetMetadataKey, Any?));
    id v7 = v13;
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    uint64_t result = outlined init with take of Date?((uint64_t)&v14, v3[7] + 32 * result, &demangling cache variable for type metadata for Any?);
    id v10 = v3[2];
    id v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::UInt v5;
  char v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOAssetAndMediaType, Int>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *((unsigned char *)v4 - 8);
    id v7 = *v4;
    uint64_t v8 = (id)*(v4 - 3);
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v8, v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = v2[6] + 24 * result;
    *(void *)id v11 = v8;
    *(void *)(v11 + 8) = v5;
    *(unsigned char *)(v11 + 16) = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    id v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void v25[2];

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, URL));
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, URL>);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = (char *)v5 + *(int *)(v2 + 48);
  id v10 = v6 + 64;
  id v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  id v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    outlined init with copy of Date?(v12, (uint64_t)v5, &demangling cache variable for type metadata for (String, URL));
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(*v5, v15);
    if (v17) {
      break;
    }
    uint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v19 = (uint64_t *)(v7[6] + 16 * result);
    *id v19 = v14;
    v19[1] = v15;
    id v20 = v7[7];
    id v21 = type metadata accessor for URL();
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    id v22 = v7[2];
    id v23 = __OFADD__(v22, 1);
    id v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Double>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v2[6] + 16 * result);
    *id v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    id v11 = v2[2];
    uint64_t v12 = __OFADD__(v11, 1);
    id v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  void *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, String?>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = (uint64_t *)(v2[6] + 16 * result);
    void *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    id v13 = v2[2];
    uint64_t v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, Date?));
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Date?>);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  id v24 = a1;
  id v25 = v9;
  id v10 = v6 + 64;
  id v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v12 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    outlined init with copy of Date?(v11, (uint64_t)v5, &demangling cache variable for type metadata for (String, Date?));
    id v13 = *v5;
    uint64_t v14 = v5[1];
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(*v5, v14);
    if (v16) {
      break;
    }
    id v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v18 = v13;
    v18[1] = v14;
    id v19 = v7[7];
    id v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t result = outlined init with take of Date?(v25, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v17, (uint64_t *)&demangling cache variable for type metadata for Date?);
    id v21 = v7[2];
    id v22 = __OFADD__(v21, 1);
    id v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v11 += v12;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  long long v10;
  long long v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  long long v17;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of Date?(v6, (uint64_t)v15, &demangling cache variable for type metadata for (AnyHashable, Any));
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v9 = v3[6] + 40 * result;
    id v10 = v15[0];
    id v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)id v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    uint64_t result = (unint64_t)outlined init with take of Any(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    id v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v1;
  void *v3;
  void *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetVisualSubType, Int>);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (i = (void *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      id v9 = v3[2];
      id v10 = __OFADD__(v9, 1);
      id v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

{
  uint64_t v1;
  void *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  void *v9;
  void *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;

  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetVisualSubType, String>);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  id v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    id v10 = (void *)(v3[7] + 16 * result);
    *id v10 = v6;
    v10[1] = v5;
    id v11 = v3[2];
    uint64_t v12 = __OFADD__(v11, 1);
    id v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *((unsigned char *)v9 - 16);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
    id v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  void *v3;
  unsigned __int8 v4;
  void *v5;
  unint64_t result;
  char v7;
  void *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetVisualSubType, MOSuggestionAssetsType>);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    id v9 = v3[2];
    id v10 = __OFADD__(v9, 1);
    id v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    uint64_t v4 = *((unsigned char *)v8 - 8);
    id v13 = (void *)*v8;
    uint64_t v14 = v5;
    uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  void *v3;
  void *i;
  char v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSuggestionAssetTileSize, CGFloat>);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (i = (void *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      id v9 = v3[2];
      id v10 = __OFADD__(v9, 1);
      id v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of Date?(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)outlined init with take of Any(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t MONotificationAnalytics.NotificationEngagementEvent.init(bundle:notificationActivityTrigger:suggestionID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a2;
  *(unsigned char *)(a5 + 8) = result != 0;
  *(void *)(a5 + 16) = result;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

Swift::Void __swiftcall MONotificationAnalytics.NotificationEngagementEvent.send()()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v63 = *(void *)(v0 - 8);
  uint64_t v64 = v0;
  __chkstk_darwin(v0);
  id v62 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DateComponents();
  uint64_t v70 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  __chkstk_darwin(v2);
  id v74 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v69 = v4;
  __chkstk_darwin(v4);
  v73 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  static Calendar.current.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
  uint64_t v9 = type metadata accessor for Calendar.Component();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001DB470;
  unint64_t v14 = v13 + v12;
  uint64_t v15 = *(void (**)(unint64_t, void, uint64_t))(v10 + 104);
  v15(v14, enum case for Calendar.Component.year(_:), v9);
  v15(v14 + v11, enum case for Calendar.Component.month(_:), v9);
  v15(v14 + 2 * v11, enum case for Calendar.Component.day(_:), v9);
  v15(v14 + 3 * v11, enum case for Calendar.Component.hour(_:), v9);
  v15(v14 + 4 * v11, enum case for Calendar.Component.minute(_:), v9);
  specialized Set.init(_nonEmptyArrayLiteral:)(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v65 = v8;
  BOOL v16 = v72;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = (void *)v16[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  if (v18)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001DB6A0;
    strcpy((char *)(inited + 32), "suggestionID");
    *(unsigned char *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    id v61 = v18;
    id v20 = [v61 suggestionID];
    id v21 = v62;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.uuidString.getter();
    uint64_t v22 = v64;
    id v23 = *(void (**)(char *, uint64_t))(v63 + 8);
    v23(v21, v64);
    id v24 = objc_allocWithZone((Class)NSString);
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = [v24 initWithString:v25];

    *(void *)(inited + 48) = v26;
    *(void *)(inited + 56) = 0x4449656C646E7562;
    *(void *)(inited + 64) = 0xE800000000000000;
    id v27 = v61;
    id v28 = [v61 bundleIdentifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.uuidString.getter();
    v23(v21, v22);
    id v29 = objc_allocWithZone((Class)NSString);
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v31 = v29;
    BOOL v16 = v72;
    id v32 = [v31 initWithString:v30];

    *(void *)(inited + 72) = v32;
    *(void *)(inited + 80) = 0x65707954627573;
    *(void *)(inited + 88) = 0xE700000000000000;
    *(void *)(inited + 96) = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:[v27 bundleSubType]];
    *(void *)(inited + 104) = 0x7079547265707573;
    *(void *)(inited + 112) = 0xE900000000000065;
    *(void *)(inited + 120) = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:[v27 bundleSuperType]];
    strcpy((char *)(inited + 128), "interfaceType");
    *(_WORD *)(inited + 142) = -4864;
    *(void *)(inited + 144) = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:[v27 interfaceType]];
    *(void *)(inited + 152) = 0xD000000000000018;
    *(void *)(inited + 160) = 0x80000001001E1120;
    *(void *)(inited + 168) = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:*v16];
    *(void *)(inited + 176) = 0xD00000000000001ALL;
    *(void *)(inited + 184) = 0x80000001001E1140;
    *(void *)(inited + 192) = [objc_allocWithZone((Class)NSNumber) initWithBool:*((unsigned __int8 *)v16 + 8)];
    unint64_t v33 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  }
  else
  {
    uint64_t v34 = swift_initStackObject();
    *(_OWORD *)(v34 + 16) = xmmword_1001DA390;
    *(void *)(v34 + 32) = 0xD000000000000018;
    *(void *)(v34 + 40) = 0x80000001001E1120;
    *(void *)(v34 + 48) = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:*v16];
    *(void *)(v34 + 56) = 0xD00000000000001ALL;
    *(void *)(v34 + 64) = 0x80000001001E1140;
    *(void *)(v34 + 72) = [objc_allocWithZone((Class)NSNumber) initWithBool:*((unsigned __int8 *)v16 + 8)];
    unint64_t v33 = specialized Dictionary.init(dictionaryLiteral:)(v34);
  }
  *(void *)(v17 + 16) = v33;
  if (v16[4])
  {
    id v35 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = [v35 initWithString:v36];

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v33;
    *(void *)(v17 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v37, 0x6974736567677573, 0xEC00000044496E6FLL, isUniquelyReferenced_nonNull_native);
    *(void *)(v17 + 16) = aBlock[0];
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = DateComponents.year.getter();
  if ((v40 & 1) == 0)
  {
    id v41 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v39];
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = *(void *)(v17 + 16);
    *(void *)(v17 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v41, 0xD000000000000012, 0x80000001001E0FD0, v42);
    *(void *)(v17 + 16) = aBlock[0];
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = DateComponents.month.getter();
  if ((v44 & 1) == 0)
  {
    id v45 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v43];
    char v46 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = *(void *)(v17 + 16);
    *(void *)(v17 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v45, 0xD000000000000013, 0x80000001001E0FF0, v46);
    *(void *)(v17 + 16) = aBlock[0];
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = DateComponents.day.getter();
  if ((v48 & 1) == 0)
  {
    id v49 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v47];
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = *(void *)(v17 + 16);
    *(void *)(v17 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v49, 0xD000000000000011, 0x80000001001E1010, v50);
    *(void *)(v17 + 16) = aBlock[0];
    swift_bridgeObjectRelease();
  }
  uint64_t v51 = DateComponents.hour.getter();
  if ((v52 & 1) == 0)
  {
    id v53 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v51];
    char v54 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = *(void *)(v17 + 16);
    *(void *)(v17 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v53, 0xD000000000000012, 0x80000001001E1030, v54);
    *(void *)(v17 + 16) = aBlock[0];
    swift_bridgeObjectRelease();
  }
  uint64_t v55 = DateComponents.minute.getter();
  if ((v56 & 1) == 0)
  {
    id v57 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v55];
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = *(void *)(v17 + 16);
    *(void *)(v17 + 16) = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v57, 0xD000000000000014, 0x80000001001E1050, v58);
    *(void *)(v17 + 16) = aBlock[0];
    swift_bridgeObjectRelease();
  }
  NSString v59 = String._bridgeToObjectiveC()();
  aBlock[4] = partial apply for closure #1 in MONotificationAnalytics.NotificationEngagementEvent.send();
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> (@owned [String : NSObject]?);
  aBlock[3] = &block_descriptor_14;
  v60 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v60);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v71);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v73, v69);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
  swift_release();
}

void *MONotificationAnalytics.Events.notificationEngaged.unsafeMutableAddressor()
{
  return &static MONotificationAnalytics.Events.notificationEngaged;
}

unint64_t static MONotificationAnalytics.Events.notificationEngaged.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x6974736567677573;
      break;
    case 6:
      unint64_t result = 0x4449656C646E7562;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0x65707954627573;
      break;
    case 12:
      unint64_t result = 0x7079547265707573;
      break;
    case 13:
      unint64_t result = 0x6361667265746E69;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields()
{
  MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized MONotificationAnalytics.NotificationEngagementEvent.EventFields.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MONotificationAnalytics.NotificationEngagementEvent.EventFields.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MOPOIAnnotationViewConfiguration.tileSize.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t MOPOIAnnotationViewConfiguration.tileSize.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

void *MONotificationAnalytics.NotificationEngagementEvent.notificationBundle.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void MONotificationAnalytics.NotificationEngagementEvent.notificationBundle.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t MONotificationAnalytics.NotificationEngagementEvent.suggID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MONotificationAnalytics.NotificationEngagementEvent.suggID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

_OWORD *specialized _NativeDictionary.setValue(_:forKey:isUnique:)(_OWORD *a1, void *a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = *v3;
  uint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, a3 & 1);
    uint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      uint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for UIFontDescriptorAttributeName(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    BOOL v16 = (_OWORD *)(*(void *)(v15 + 56) + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return outlined init with take of Any(a1, v16);
  }
LABEL_13:
  specialized _NativeDictionary._insert(at:key:value:)(v9, a2, a1, v15);

  return a2;
}

{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *result;
  uint64_t v18;
  char v19;
  uint64_t vars8;

  unint64_t v4 = v3;
  uint64_t v7 = *v3;
  uint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, a3 & 1);
    uint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      uint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for UIFontDescriptorTraitKey(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    BOOL v16 = (_OWORD *)(*(void *)(v15 + 56) + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return outlined init with take of Any(a1, v16);
  }
LABEL_13:
  specialized _NativeDictionary._insert(at:key:value:)(v9, a2, a1, v15);

  return a2;
}

{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *result;
  uint64_t v18;
  char v19;
  uint64_t vars8;

  unint64_t v4 = v3;
  uint64_t v7 = *v3;
  uint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, a3 & 1);
    uint64_t v18 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      uint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    BOOL v16 = (_OWORD *)(*(void *)(v15 + 56) + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return outlined init with take of Any(a1, v16);
  }
LABEL_13:
  specialized _NativeDictionary._insert(at:key:value:)(v9, a2, a1, v15);

  return a2;
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, char a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(result, a3 & 1);
  uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return specialized _NativeDictionary._insert(at:key:value:)(v10, a2, a1, v16);
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
  unint64_t v20 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);

  swift_bridgeObjectRetain();
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
  unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

{
  void *v4;
  void **v5;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t vars8;

  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(result, a4 & 1);
  uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

{
  void *v4;
  void **v5;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t vars8;

  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
    id v26 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    unint64_t v20 = type metadata accessor for URL();
    unint64_t v21 = *(void *)(v20 - 8);
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    id v23 = v20;
    id v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

{
  void *v4;
  void **v5;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t vars8;

  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      unint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      return outlined assign with take of Date?(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
  char v22 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  specialized _NativeDictionary._insert(at:key:value:)(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = *(void *)(v16 + 56);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v13, a3 & 1);
  unint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return specialized _NativeDictionary._insert(at:key:value:)(v10, a2, a1, v16);
}

id specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13) {
      return (id)outlined assign with take of Date?(a1, v15[7] + 32 * v9, &demangling cache variable for type metadata for Any?);
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v12, a3 & 1);
  uint64_t v17 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_15:
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v15 = *v4;
  if (v13) {
    return (id)outlined assign with take of Date?(a1, v15[7] + 32 * v9, &demangling cache variable for type metadata for Any?);
  }
LABEL_11:
  specialized _NativeDictionary._insert(at:key:value:)(v9, (uint64_t)a2, a1, v15);

  return a2;
}

_OWORD *specialized _NativeDictionary.setValue(_:forKey:isUnique:)(_OWORD *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v13, a3 & 1);
    unint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      outlined init with copy of AnyHashable(a2, (uint64_t)v21);
      return specialized _NativeDictionary._insert(at:key:value:)(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    id result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);

  return outlined init with take of Any(a1, v17);
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  char v8 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = specialized __RawDictionaryStorage.find<A>(_:)(a5, a6);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a7 & 1) != 0)
  {
LABEL_7:
    id v23 = *v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7] + 32 * v17;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v24 = a1;
      *(void *)(v24 + 8) = a2;
      *(void *)(v24 + 16) = a3;
      *(unsigned char *)(v24 + 24) = a4 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v20, a7 & 1);
  unint64_t v26 = specialized __RawDictionaryStorage.find<A>(_:)(a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  id v23 = *v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  specialized _NativeDictionary._insert(at:key:value:)(v17, a5, a6, a1, a2, a3, a4 & 1, v23);

  return swift_bridgeObjectRetain();
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  BOOL v12 = (void *)*v5;
  unint64_t v14 = specialized __RawDictionaryStorage.find<A>(_:)(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      char v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v17, a5 & 1);
  unint64_t v23 = specialized __RawDictionaryStorage.find<A>(_:)(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  specialized _NativeDictionary._insert(at:key:value:)(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

uint64_t specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)specialized _NativeDictionary.copy()();
    goto LABEL_7;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(result, a3 & 1);
  uint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  specialized _NativeDictionary._insert(at:key:value:)(v12, a1, a2, v18, a4);

  return swift_bridgeObjectRetain();
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<Int, [MOSuggestionAssetTileSize]>);
  unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
    char v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  Swift::UInt v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOSetting, [MOEventBundleSourceType]>);
  unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
    char v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void *specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Calendar.Component>);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    id v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    char v15 = (void (**)(char *, uint64_t))(v11 - 8);
    id v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      lazy protocol witness table accessor for type Calendar.Component and conformance Calendar.Component(&lazy protocol witness table cache variable for type Calendar.Component and conformance Calendar.Component);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          lazy protocol witness table accessor for type Calendar.Component and conformance Calendar.Component(&lazy protocol witness table cache variable for type Calendar.Component and conformance Calendar.Component);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          char v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        NSString v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1000A5550()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MONotificationAnalytics.NotificationEngagementEvent.send()()
{
  specialized closure #1 in MONotificationAnalytics.NotificationEngagementEvent.send()(v0);

  return swift_bridgeObjectRetain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

unint64_t specialized MONotificationAnalytics.NotificationEngagementEvent.EventFields.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MONotificationAnalytics.NotificationEngagementEvent.EventFields.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0x10) {
    return 16;
  }
  else {
    return v3;
  }
}

unint64_t lazy protocol witness table accessor for type MONotificationAnalytics.NotificationEngagementEvent.EventFields and conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields()
{
  unint64_t result = lazy protocol witness table cache variable for type MONotificationAnalytics.NotificationEngagementEvent.EventFields and conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields;
  if (!lazy protocol witness table cache variable for type MONotificationAnalytics.NotificationEngagementEvent.EventFields and conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MONotificationAnalytics.NotificationEngagementEvent.EventFields and conformance MONotificationAnalytics.NotificationEngagementEvent.EventFields);
  }
  return result;
}

uint64_t type metadata accessor for MONotificationAnalytics()
{
  return self;
}

ValueMetadata *type metadata accessor for MONotificationAnalytics.Events()
{
  return &type metadata for MONotificationAnalytics.Events;
}

uint64_t destroy for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unint64_t v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MONotificationAnalytics.NotificationEngagementEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MONotificationAnalytics.NotificationEngagementEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MONotificationAnalytics.NotificationEngagementEvent()
{
  return &type metadata for MONotificationAnalytics.NotificationEngagementEvent;
}

unsigned char *storeEnumTagSinglePayload for MONotificationAnalytics.NotificationEngagementEvent.EventFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *__n128 result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A59A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MONotificationAnalytics.NotificationEngagementEvent.EventFields()
{
  return &type metadata for MONotificationAnalytics.NotificationEngagementEvent.EventFields;
}

uint64_t specialized closure #1 in MONotificationAnalytics.NotificationEngagementEvent.send()(uint64_t a1)
{
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
  swift_retain_n();
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_beginAccess();
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    swift_bridgeObjectRetain();
    uint64_t v6 = Dictionary.debugDescription.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[Notification Analytics] result=%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  return *(void *)(a1 + 16);
}

void specialized Set.init(_nonEmptyArrayLiteral:)(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<HKQuantityType>);
      int v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  int v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  unint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = static NSObject.== infix(_:_:)();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t outlined assign with take of Date?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t lazy protocol witness table accessor for type Calendar.Component and conformance Calendar.Component(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Calendar.Component();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MOSuggestionAssetSystemSymbolProvider.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t *MOSuggestionAssetSystemSymbolProvider.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetSystemSymbolProvider.shared;
}

uint64_t static MOSuggestionAssetSystemSymbolProvider.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }

  return swift_retain();
}

UIImage_optional __swiftcall MOSuggestionAssetSystemSymbolProvider.symbolImage(type:)(__C::MOWorkoutMotionActivityAction type)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;
      if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          goto LABEL_34;
        }
      }
      uint64_t v16 = (uint64_t *)(v1 + 16);
      swift_beginAccess();
      uint64_t v17 = *(void *)(v1 + 16);
      if (*(void *)(v17 + 16))
      {
        NSString v18 = type._rawValue;
        swift_bridgeObjectRetain();
        uint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(v18);
        if (v31) {
          goto LABEL_25;
        }

        swift_bridgeObjectRelease();
      }
      NSString v33 = String._bridgeToObjectiveC()();
      id v22 = [self systemImageNamed:v33];

      if (!v22)
      {
        if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v34 = type metadata accessor for Logger();
        __swift_project_value_buffer(v34, (uint64_t)static MOAngelLogger.shared);
        id v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v27, v28)) {
          goto LABEL_33;
        }
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        unint64_t v30 = "[Assets] Unable to fetch SF symbol for run";
LABEL_32:
        _os_log_impl((void *)&_mh_execute_header, v27, v28, v30, v29, 2u);
        swift_slowDealloc();
LABEL_33:

LABEL_34:
        id v22 = 0;
        goto LABEL_35;
      }
      goto LABEL_17;
    }
  }
  uint64_t v16 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v1 + 16);
  if (*(void *)(v17 + 16))
  {
    NSString v18 = type._rawValue;
    swift_bridgeObjectRetain();
    uint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(v18);
    if (v20)
    {
LABEL_25:
      id v22 = *(id *)(*(void *)(v17 + 56) + 8 * v19);
      id v32 = v22;

      swift_bridgeObjectRelease();
      goto LABEL_35;
    }

    swift_bridgeObjectRelease();
  }
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [self systemImageNamed:v21];

  if (!v22)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.shared);
    id v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v27, v28)) {
      goto LABEL_33;
    }
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    unint64_t v30 = "[Assets] Unable to fetch SF symbol for walk";
    goto LABEL_32;
  }
LABEL_17:
  swift_beginAccess();
  id v23 = v22;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v36 = *v16;
  *uint64_t v16 = 0x8000000000000000;
  uint64_t v25 = (void *)specialized _NativeDictionary.updateValue(_:forKey:isUnique:)((uint64_t)v23, type._rawValue, isUniquelyReferenced_nonNull_native);
  *uint64_t v16 = v36;
  swift_bridgeObjectRelease();
  swift_endAccess();

LABEL_35:
  char v35 = (objc_class *)v22;
  result.value.super.Class isa = v35;
  result.is_nil = v15;
  return result;
}

void MOSuggestionAssetSystemSymbolProvider.getAssetFor(symbol:size:completion:)(uint64_t a1, unint64_t a2, char a3, void (*a4)(CGContext *))
{
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self systemImageNamed:v8];

  if (v9)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.shared);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[Assets] Packed asset for system symbol", v13, 2u);
      swift_slowDealloc();
    }

    if ((a3 - 2) >= 9u)
    {
      NSString v18 = String._bridgeToObjectiveC()();
      uint64_t v19 = self;
      id v20 = [v19 colorNamed:v18];

      if (!v20) {
        id v20 = [v19 systemRedColor];
      }
      id v21 = [v19 systemWhiteColor];
      id v22 = [v21 colorWithAlphaComponent:0.55];

      id v23 = UIImage.fitnessTintAndPill(with:backgroundColor:symbolCenteringOffset:assetSize:)(v20, v22, a3, 1.0);
      a4(v23);
    }
    else
    {
      id v23 = (CGContext *)v9;
      a4((CGContext *)v9);
    }
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    __swift_project_value_buffer(v14, (uint64_t)static MOAngelLogger.shared);
    swift_bridgeObjectRetain_n();
    Swift::Bool v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Assets] Unable to fetch SF symbol for string:%s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a4(0);
  }
}

void *MOSuggestionAssetSystemSymbolProvider.getMotionActivityAssetFor(type:size:glyphOnly:style:)(uint64_t a1, unsigned __int8 a2, char a3, uint64_t a4)
{
  uint64_t v8 = (*(uint64_t (**)(void))(*(void *)v4 + 112))();
  if (v8)
  {
    id v9 = (void *)v8;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.shared);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[Assets] Packed asset for system symbol", v13, 2u);
      swift_slowDealloc();
    }

    uint64_t v14 = self;
    if (a4 == 1)
    {
      id v15 = [v14 systemWhiteColor];
      id v16 = [v15 colorWithAlphaComponent:0.55];
    }
    else
    {
      id v15 = [v14 systemBlackColor];
      id v16 = [v15 colorWithAlphaComponent:0.2];
    }
    NSString v18 = v16;

    if (a2 - 2 >= 7 && a2 != 10 && (a3 & 1) == 0)
    {
      NSString v22 = String._bridgeToObjectiveC()();
      id v23 = self;
      id v24 = [v23 colorNamed:v22];

      if (!v24) {
        id v24 = [v23 systemRedColor];
      }
      uint64_t v25 = v18;
      uint64_t v26 = UIImage.fitnessTintAndPill(with:backgroundColor:symbolCenteringOffset:assetSize:)(v24, v18, a2, 1.0);

      NSString v18 = v25;
      id v9 = v26;
    }
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.shared);
    NSString v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[Assets] Unable to fetch motion activity symbol", v20, 2u);
      swift_slowDealloc();
    }
    id v9 = 0;
  }

  return v9;
}

uint64_t MOSuggestionAssetSystemSymbolProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOSuggestionAssetSystemSymbolProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MOSuggestionAssetSystemSymbolProvider.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t specialized _NativeDictionary.updateValue(_:forKey:isUnique:)(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      id v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t result = *(void *)(v17 + 8 * v10);
        *(void *)(v17 + 8 * v10) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      specialized _NativeDictionary.copy()();
      goto LABEL_7;
    }
    specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v13, a3 & 1);
    uint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      id v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_11:
      specialized _NativeDictionary._insert(at:key:value:)(v10, (uint64_t)a2, a1, v16);
      id v21 = a2;
      return 0;
    }
  }
  type metadata accessor for MOWorkoutMotionActivityAction(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t specialized static MOSuggestionAssetSystemSymbolProvider.symbolName(type:)()
{
  uint64_t v0 = 0x772E657275676966;
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  if (v1 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    return v0;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
    if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        return 0;
      }
    }
    return 0x722E657275676966;
  }
  return v0;
}

uint64_t type metadata accessor for MOSuggestionAssetSystemSymbolProvider()
{
  return self;
}

void *MOSuggestionCollectionView.ProtectedContentConstants.journalingIconName.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionView.ProtectedContentConstants.journalingIconName;
}

unint64_t static MOSuggestionCollectionView.ProtectedContentConstants.journalingIconName.getter()
{
  return 0xD000000000000019;
}

void one-time initialization function for localizedAppName()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000025;
  v4._object = (void *)0x80000001001E5330;
  v1._object = (void *)0x80000001001E1B70;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName = (__int128)v3;
}

long long *MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName.unsafeMutableAddressor()
{
  if (one-time initialization token for localizedAppName != -1) {
    swift_once();
  }
  return &static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName;
}

uint64_t static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName.getter()
{
  if (one-time initialization token for localizedAppName != -1) {
    swift_once();
  }
  uint64_t v0 = static MOSuggestionCollectionView.ProtectedContentConstants.localizedAppName;
  swift_bridgeObjectRetain();
  return v0;
}

Swift::Void __swiftcall MOSuggestionCollectionView.setupProtectedContentBanner()()
{
  Swift::String v1 = v0;
  uint64_t v63 = &type metadata for MOAppProtectionFeatureFlags;
  unint64_t v64 = lazy protocol witness table accessor for type MOAppProtectionFeatureFlags and conformance MOAppProtectionFeatureFlags();
  char v2 = isFeatureEnabled(_:)();
  uint64_t v3 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  if (v2)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x118))(v3);
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100))();
      if (v6)
      {
        uint64_t v7 = v6;
        NSString v8 = String._bridgeToObjectiveC()();
        id v9 = [self imageNamed:v8];

        if (v9)
        {
          if (one-time initialization token for localizedAppName != -1) {
            swift_once();
          }
          id v10 = objc_allocWithZone((Class)APBaseExtensionShieldView);
          swift_bridgeObjectRetain();
          id v11 = v9;
          NSString v12 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v13 = [v10 initWithLocalizedApplicationName:v12 iconImage:v11];

          [v13 setDelegate:v1];
          [v13 setHidden:1];
          id v14 = [v1 addSubview:v13];
          char v15 = (*(uint64_t (**)(id))((swift_isaMask & *v5) + 0x1B0))(v14);
          char v16 = (*(uint64_t (**)(void))(*(void *)v7 + 552))();
          double v17 = 50.0;
          if (v15) {
            double v17 = 0.0;
          }
          if (v16) {
            double v18 = v17;
          }
          else {
            double v18 = 0.0;
          }
          id v19 = [v13 superview];
          char v20 = &selRef_collectionView_didSelectItemAtIndexPath_;
          if (v19)
          {
            id v21 = v19;
            [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v22 = [v13 leadingAnchor];
            id v23 = [v21 leadingAnchor];
            id v24 = [v22 constraintEqualToAnchor:v23];

            [v24 setConstant:0.0];
            id v25 = v24;
            char v20 = &selRef_collectionView_didSelectItemAtIndexPath_;
            id v26 = v25;
            [v25 setActive:1];
          }
          id v27 = [v13 superview];
          if (v27)
          {
            os_log_type_t v28 = v27;
            [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v29 = [v13 trailingAnchor];
            id v30 = [v28 trailingAnchor];
            id v31 = [v29 constraintEqualToAnchor:v30];

            [v31 setConstant:0.0];
            id v32 = v31;
            char v20 = &selRef_collectionView_didSelectItemAtIndexPath_;
            id v33 = v32;
            [v32 setActive:1];
          }
          id v34 = [v13 superview];
          if (v34)
          {
            char v35 = v34;
            [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v36 = [v13 bottomAnchor];
            id v37 = [v35 bottomAnchor];
            id v38 = [v36 constraintEqualToAnchor:v37];

            char v20 = &selRef_collectionView_didSelectItemAtIndexPath_;
            if (v38)
            {
              [v38 setConstant:-0.0];
              id v39 = v38;
              [v39 setActive:1];
            }
          }
          id v40 = [v13 superview];
          if (v40)
          {
            unint64_t v41 = v40;
            [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v42 = [v13 topAnchor];
            id v43 = [v41 topAnchor];
            id v44 = [v42 constraintEqualToAnchor:v43];

            [v44 setConstant:v18];
            id v45 = v44;
            char v20 = &selRef_collectionView_didSelectItemAtIndexPath_;
            id v46 = v45;
            [v45 setActive:1];
          }
          NSString v47 = String._bridgeToObjectiveC()();
          id v48 = [v13 valueForKey:v47];

          if (v48)
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v61, 0, sizeof(v61));
          }
          outlined init with take of Any?((uint64_t)v61, (uint64_t)v62);
          if (v63)
          {
            type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIImageView);
            if (swift_dynamicCast())
            {
              [v60 setTranslatesAutoresizingMaskIntoConstraints:0];
              id v49 = [v60 widthAnchor];
              id v50 = [v49 constraintEqualToConstant:52.0];

              [v50 v20[139]:1];
              [v60 setTranslatesAutoresizingMaskIntoConstraints:0];
              id v51 = [v60 heightAnchor];
              id v52 = [v51 constraintEqualToConstant:52.0];

              [v52 v20[139]:1];
            }
          }
          else
          {
            outlined destroy of Any?((uint64_t)v62);
          }
          id v53 = self;
          id v54 = v13;
          id v55 = [v53 systemBackgroundColor];
          [v54 setBackgroundColor:v55];

          id v56 = [v54 layer];
          [v56 setZPosition:1.79769313e308];

          id v57 = *(void (**)(id))((swift_isaMask & *v1) + 0x210);
          id v58 = v54;
          v57(v54);

          swift_release();
        }
        else
        {

          swift_release();
        }
      }
      else
      {
      }
    }
  }
}

uint64_t MOSuggestionCollectionView.shieldViewUnlockButtonPressed(_:)()
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x100))();
  if (result)
  {
    MOSuggestionCollectionViewModel.initiateAuthentication()();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)(Swift::Bool authorized)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = authorized;
  aBlock[4] = partial apply for closure #1 in MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:);
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_15;
  id v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000A7DAC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void closure #1 in MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x208))();

    if (v5)
    {
      [v5 setHidden:a2 & 1];
    }
  }
  if (a2)
  {
    swift_beginAccess();
    uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x100))();

      if (v8)
      {
        if (((*(uint64_t (**)(void))(*(void *)v8 + 552))() & 1) == 0
          && (swift_beginAccess(), (id v9 = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
          && (id v10 = v9,
              uint64_t v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x160))(),
              uint64_t v13 = v12,
              v10,
              v11))
        {
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v13 + 16))(ObjectType, v13);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
    }
  }
}

uint64_t sub_1000A7FF4()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)()
{
  closure #1 in MOSuggestionCollectionView.didUpdateProtectedContentStatus(authorized:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

void protocol witness for MOSuggestionCollectionViewDelegate.didUpdateProtectedContentStatus(authorized:) in conformance MOSuggestionCollectionView(Swift::Bool a1)
{
}

ValueMetadata *type metadata accessor for MOSuggestionCollectionView.ProtectedContentConstants()
{
  return &type metadata for MOSuggestionCollectionView.ProtectedContentConstants;
}

void *MOSuggestionInterstitialExpandableListViewCellConstants.ASSET_PLATTER_EDGE_LENGTH.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.ASSET_PLATTER_EDGE_LENGTH;
}

void *MOSuggestionInterstitialExpandableListViewCellConstants.CELL_INSET_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.CELL_INSET_MARGIN;
}

void *MOSuggestionInterstitialExpandableListViewCellConstants.LABEL_SPACING.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.LABEL_SPACING;
}

uint64_t one-time initialization function for CHECKMARK_PLATTER_SIZE()
{
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  uint64_t result = static CGSize.* infix(_:_:)();
  static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE = v1;
  qword_100253050 = v2;
  return result;
}

uint64_t *MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE.unsafeMutableAddressor()
{
  if (one-time initialization token for CHECKMARK_PLATTER_SIZE != -1) {
    swift_once();
  }
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE;
}

double static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE.getter()
{
  if (one-time initialization token for CHECKMARK_PLATTER_SIZE != -1) {
    swift_once();
  }
  return *(double *)&static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE;
}

void *MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_MARGIN;
}

void *MOSuggestionInterstitialExpandableListViewCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialExpandableListViewCell.reuseIdentifier;
}

unint64_t static MOSuggestionInterstitialExpandableListViewCell.reuseIdentifier.getter()
{
  return 0xD00000000000002ELL;
}

id closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.titleLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setLineBreakMode:4];
  [v0 setNumberOfLines:0];
  id v1 = [self labelColor];
  [v0 setTextColor:v1];

  [v0 setTextAlignment:4];
  [v0 setAdjustsFontForContentSizeCategory:1];
  id v2 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  [v0 setFont:isa];
  return v0;
}

id closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.subtitleLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setLineBreakMode:4];
  [v0 setNumberOfLines:0];
  id v1 = [self secondaryLabelColor];
  [v0 setTextColor:v1];

  [v0 setTextAlignment:4];
  [v0 setAdjustsFontForContentSizeCategory:1];
  id v2 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v0 setFont:v2];

  return v0;
}

id MOSuggestionInterstitialExpandableListViewCell.stackView.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView));
}

uint64_t key path getter for MOSuggestionInterstitialExpandableListViewCell.didToggle : MOSuggestionInterstitialExpandableListViewCell@<X0>(void **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x98))();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  }
  else
  {
    uint64_t v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for MOSuggestionInterstitialExpandableListViewCell.didToggle : MOSuggestionInterstitialExpandableListViewCell(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & **a2) + 0xA0);
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.didToggle.getter()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle);
  swift_beginAccess();
  uint64_t v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(*v1);
  return v2;
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.didToggle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
}

uint64_t (*MOSuggestionInterstitialExpandableListViewCell.didToggle.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.keyColor.getter()
{
  return MOSuggestionInterstitialExpandableListViewCell.keyColor.getter(&OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_keyColor, (uint64_t (*)(uint64_t))&_swift_unknownObjectWeakLoadStrong);
}

void MOSuggestionInterstitialExpandableListViewCell.keyColor.setter(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  if (swift_unknownObjectWeakLoadStrong()) {
    (*(void (**)(void))((swift_isaMask & **(void **)(v1
  }
                                                     + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                      + 0x88))();
}

void (*MOSuggestionInterstitialExpandableListViewCell.keyColor.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_keyColor;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return MOSuggestionInterstitialExpandableListViewCell.keyColor.modify;
}

void MOSuggestionInterstitialExpandableListViewCell.keyColor.modify(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    if (swift_unknownObjectWeakLoadStrong()) {
      (*(void (**)(void))((swift_isaMask & **(void **)(*(void *)(v3 + 32)
    }
                                                       + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                        + 0x88))();
  }

  free((void *)v3);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.updateData()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  if (!v2) {
    return;
  }
  uint64_t v3 = (unsigned __int8 *)v2;
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & **(void **)((char *)v0
                                                           + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView))
                            + 0x70))();
  unint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 272))(v4);
  if (v5)
  {
    uint64_t v6 = v5 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v5 = swift_bridgeObjectRelease();
    if (v6 == 1)
    {
      uint64_t v7 = *(void (**)(void))(*(void *)v3 + 200);
      ((void (*)(unint64_t))v7)(v5);
      uint64_t v9 = v8;
      unint64_t v5 = swift_bridgeObjectRelease();
      if (v9)
      {
        if (!(*(uint64_t (**)(unint64_t))(*(void *)v3 + 176))(v5))
        {
          id v21 = *(void **)((char *)v1
                         + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
          v7();
          if (v22)
          {
            NSString v23 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v23 = 0;
          }
          [v21 setText:v23];

          MOSuggestionInterstitialListAssetViewModel.singleFirstTitleAndDate.getter();
          if (!v24) {
            goto LABEL_25;
          }
          goto LABEL_24;
        }
        unint64_t v5 = swift_bridgeObjectRelease();
      }
    }
  }
  if ((*(uint64_t (**)(unint64_t))(*(void *)v3 + 176))(v5))
  {
    uint64_t v10 = swift_bridgeObjectRelease();
    uint64_t v11 = *(void **)((char *)v1
                   + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
    (*(void (**)(uint64_t))(*(void *)v3 + 200))(v10);
    if (v12)
    {
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v13 = 0;
    }
    [v11 setText:v13];

    if ((v3[65] | 4) == 0xF) {
      MOSuggestionInterstitialListAssetViewModel.concactenatedTitles.getter();
    }
    else {
      MOSuggestionInterstitialListAssetViewModel.toplevelDateRangeString.getter();
    }
    if (!v17) {
      goto LABEL_25;
    }
  }
  else
  {
    id v14 = *(void **)((char *)v1
                   + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
    uint64_t v15 = (*(uint64_t (**)(void))(*(void *)v3 + 248))();
    NSString v16 = (NSString)v15;
    if (v15)
    {
      if (*(void *)(v15 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        NSString v16 = 0;
      }
    }
    [v14 setText:v16];

    MOSuggestionInterstitialListAssetViewModel.subLevelDateRangeString.getter();
    if (!v18) {
      goto LABEL_25;
    }
  }
LABEL_24:
  id v19 = *(void **)((char *)v1
                 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setText:v20];

LABEL_25:
  MOSuggestionInterstitialExpandableListViewCell.setUpCheckPlatter()();

  swift_release();
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.viewModel.getter()
{
  return MOSuggestionInterstitialExpandableListViewCell.keyColor.getter(&OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_viewModel, (uint64_t (*)(uint64_t))&_swift_weakLoadStrong);
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.keyColor.getter(void *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return a2(v4);
}

uint64_t MOSuggestionInterstitialExpandableListViewCell.viewModel.setter()
{
  return swift_release();
}

void (*MOSuggestionInterstitialExpandableListViewCell.viewModel.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_viewModel;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return MOSuggestionInterstitialExpandableListViewCell.viewModel.modify;
}

void MOSuggestionInterstitialExpandableListViewCell.viewModel.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
    MOSuggestionInterstitialExpandableListViewCell.updateData()();
  }

  free(v3);
}

char *MOSuggestionInterstitialExpandableListViewCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel;
  uint64_t v10 = v4;
  *(void *)&v4[v9] = closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.titleLabel();
  uint64_t v11 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel;
  *(void *)&v10[v11] = closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.subtitleLabel();
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView;
  id v13 = [objc_allocWithZone((Class)UIStackView) init];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v13 setAxis:1];
  [v13 setAlignment:1];
  [v13 setDistribution:2];
  *(void *)&v10[v12] = v13;
  id v14 = &v10[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle];
  *(void *)id v14 = 0;
  *((void *)v14 + 1) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView;
  *(void *)&v10[v15] = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialListAssetView()) init];
  v10[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_isTopLevel] = 0;
  uint64_t v16 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView;
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  *(void *)&v10[v16] = [objc_allocWithZone((Class)type metadata accessor for CanvasAssetAccessoryView()) initWithFrame:0.0, 0.0, static MOSuggestionSheetMosaicCell.checkPlatterViewSize];
  swift_weakInit();

  uint64_t v17 = (objc_class *)type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  v33.receiver = v10;
  v33.super_class = v17;
  uint64_t v18 = (char *)[super initWithFrame:a1, a2, a3, a4];
  id v19 = *(void **)&v18[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView];
  uint64_t v20 = *(void *)&v18[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel];
  id v21 = v18;
  [v19 addArrangedSubview:v20];
  [v19 addArrangedSubview:*(void *)&v21[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel]];
  id v22 = [v21 contentView];
  [v22 addSubview:v19];

  id v23 = [v21 contentView];
  [v23 addSubview:*(void *)&v21[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView]];

  id v24 = [v21 contentView];
  uint64_t v25 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView;
  [v24 addSubview:*(void *)&v21[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView]];

  MOSuggestionInterstitialExpandableListViewCell.setupViewsAndLayouts()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1001DA0F0;
  *(void *)(v26 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v26 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  id v27 = v21;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  [v27 handleTraitChange];
  os_log_type_t v28 = *(void **)&v21[v25];
  v32[3] = v17;
  v32[0] = v27;
  id v29 = *(void (**)(void *, const char *))((swift_isaMask & *v28) + 0xA8);
  id v30 = v27;
  v29(v32, "didTapCheckmark");
  outlined destroy of Any?((uint64_t)v32);
  MOSuggestionInterstitialExpandableListViewCell.setUpCheckPlatter()();
  [v30 setIndentationLevel:0 v32[0]];

  return v30;
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.setupViewsAndLayouts()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView);
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView);
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView);
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v3 superview];
  if (v4)
  {
    unint64_t v5 = v4;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v3 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:6.0];
    if (v8)
    {
      id v9 = v8;
      [v9 setActive:1];
    }
  }
  if (one-time initialization token for CHECKMARK_PLATTER_SIZE != -1) {
    swift_once();
  }
  double v10 = *(double *)&static MOSuggestionInterstitialExpandableListViewCellConstants.CHECKMARK_PLATTER_SIZE;
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v11 = [v3 widthAnchor];
  id v12 = [v11 constraintEqualToConstant:v10];

  [v12 setActive:1];
  double v13 = *(double *)&qword_100253050;
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v14 = [v3 heightAnchor];
  id v15 = [v14 constraintEqualToConstant:v13];

  [v15 setActive:1];
  id v16 = [v3 superview];
  if (v16)
  {
    uint64_t v17 = v16;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v3 centerYAnchor];
    id v19 = [v17 centerYAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:0.0];
    id v21 = v20;
    [v21 setActive:1];
  }
  id v22 = [v2 leadingAnchor];
  id v23 = [v3 trailingAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:6.0];

  [v24 setActive:1];
  id v25 = [v2 superview];
  if (v25)
  {
    uint64_t v26 = v25;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v27 = [v2 centerYAnchor];
    id v28 = [v26 centerYAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:0.0];
    id v30 = v29;
    [v30 setActive:1];
  }
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v31 = [v2 widthAnchor];
  id v32 = [v31 constraintEqualToConstant:40.0];

  [v32 setActive:1];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v33 = [v2 heightAnchor];
  id v34 = [v33 constraintEqualToConstant:40.0];

  [v34 setActive:1];
  id v35 = [v1 superview];
  if (v35)
  {
    id v36 = v35;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v37 = [v1 topAnchor];
    id v38 = [v36 topAnchor];
    id v39 = [v37 constraintEqualToAnchor:v38];

    [v39 setConstant:12.0];
    id v40 = v39;
    [v40 setActive:1];
  }
  id v41 = [v1 heightAnchor];
  id v42 = [v41 constraintGreaterThanOrEqualToConstant:40.0];

  [v42 setActive:1];
  id v43 = [v1 superview];
  if (v43)
  {
    id v44 = v43;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v45 = [v1 bottomAnchor];
    id v46 = [v44 bottomAnchor];
    id v47 = [v45 constraintEqualToAnchor:v46];

    if (v47)
    {
      [v47 setConstant:-12.0];
      id v48 = v47;
      [v48 setActive:1];
    }
  }
  id v49 = [v1 superview];
  if (v49)
  {
    id v50 = v49;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v51 = [v1 trailingAnchor];
    id v52 = [v50 trailingAnchor];
    id v53 = [v51 constraintEqualToAnchor:v52];

    [v53 setConstant:-12.0];
    id v54 = v53;
    [v54 setActive:1];
  }
  id v55 = [v1 leadingAnchor];
  id v56 = [v2 trailingAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56 constant:12.0];

  [v57 setActive:1];
  id v58 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
  id v59 = [v58 superview];
  if (v59)
  {
    id v60 = v59;
    [v58 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v61 = [v58 trailingAnchor];
    id v62 = [v60 trailingAnchor];
    id v63 = [v61 constraintEqualToAnchor:v62];

    [v63 setConstant:0.0];
    id v64 = v63;
    [v64 setActive:1];
  }
  id v65 = [v58 superview];
  if (v65)
  {
    uint64_t v66 = v65;
    [v58 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v67 = [v58 leadingAnchor];
    id v68 = [v66 leadingAnchor];
    id v69 = [v67 constraintEqualToAnchor:v68];

    [v69 setConstant:0.0];
    id v70 = v69;
    [v70 setActive:1];
  }
  uint64_t v71 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel);
  id v72 = [v71 superview];
  if (v72)
  {
    v73 = v72;
    [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v74 = [v71 trailingAnchor];
    id v75 = [v73 trailingAnchor];
    id v76 = [v74 constraintEqualToAnchor:v75];

    [v76 setConstant:0.0];
    id v77 = v76;
    [v77 setActive:1];
  }
  id v78 = [v71 superview];
  if (v78)
  {
    id v83 = v78;
    [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v79 = [v71 leadingAnchor];
    id v80 = [v83 leadingAnchor];
    id v81 = [v79 constraintEqualToAnchor:v80];

    [v81 setConstant:0.0];
    id v82 = v81;
    [v82 setActive:1];
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.setUpCheckPlatter()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (unsigned char *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  if (v2)
  {
    uint64_t v3 = v2;
    if (v2[90] == 1)
    {
      if ((*(uint64_t (**)(unsigned char *))(*(void *)v2 + 176))(v2))
      {
        swift_bridgeObjectRelease();
        id v4 = *(void **)((char *)v1
                      + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView);
        [v4 setUserInteractionEnabled:1];
LABEL_11:
        [v4 setHidden:0];
        swift_release();
        return;
      }
      if ((v3[88] & 1) == 0)
      {
        id v4 = *(void **)((char *)v1
                      + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView);
        [v4 setUserInteractionEnabled:0];
        goto LABEL_11;
      }
    }
    swift_release();
  }
  unint64_t v5 = *(void **)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView);
  [v5 setUserInteractionEnabled:0];

  [v5 setHidden:1];
}

id MOSuggestionInterstitialExpandableListViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  return [super dealloc];
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.didTapCheckmark()()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  if (v1)
  {
    if ((*(uint64_t (**)(void))(*(void *)v1 + 176))())
    {
      uint64_t v2 = swift_bridgeObjectRelease();
      uint64_t v3 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x98))(v2);
      if (v3)
      {
        uint64_t v4 = (uint64_t)v3;
        v3();
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v4);
      }
    }
    swift_release();
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.updateCheckmark(_:)(Swift::Bool a1)
{
  (*(void (**)(Swift::Bool))((swift_isaMask & **(void **)(v1
                                                                     + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                      + 0xA0))(a1);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.handleTraitChange()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v0 traitCollection];
  id v9 = [v8 userInterfaceStyle];

  static UIBackgroundConfiguration.listGroupedCell()();
  double v10 = self;
  if (v9 == (id)1)
  {
    id v11 = [v10 systemGroupedBackgroundColor];
  }
  else
  {
    id v12 = [v10 whiteColor];
    id v13 = [v12 colorWithAlphaComponent:0.15];
  }
  UIBackgroundConfiguration.backgroundColor.setter();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  UICollectionViewCell.backgroundConfiguration.setter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.updateTitle(_:)(Swift::String_optional a1)
{
  if (a1.value._object)
  {
    uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0))();
    if (v2)
    {
      if ((*(uint64_t (**)(uint64_t))(*(void *)v2 + 176))(v2))
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = *(void **)((char *)v1
                      + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
        id v4 = String._bridgeToObjectiveC()();
        [v3 setText:v4];
        swift_release();
      }
      else
      {
        swift_release();
      }
    }
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListViewCell.prepareForReuse()()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  [super prepareForReuse];
  uint64_t v1 = *(void **)((char *)v0
                + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setText:v2];

  uint64_t v3 = *(void **)((char *)v0
                + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel);
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];

  (*(void (**)(void))((swift_isaMask & *v0) + 0xE8))(0);
  MOSuggestionInterstitialExpandableListViewCell.setUpCheckPlatter()();
}

uint64_t type metadata accessor for MOSuggestionInterstitialExpandableListViewCell()
{
  return self;
}

void specialized MOSuggestionInterstitialExpandableListViewCell.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel;
  *(void *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.titleLabel();
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_subtitleLabel;
  *(void *)&v0[v2] = closure #1 in variable initialization expression of MOSuggestionInterstitialExpandableListViewCell.subtitleLabel();
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_stackView;
  id v4 = [objc_allocWithZone((Class)UIStackView) init];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setAxis:1];
  [v4 setAlignment:1];
  [v4 setDistribution:2];
  *(void *)&v0[v3] = v4;
  objc_super v5 = &v0[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_didToggle];
  void *v5 = 0;
  v5[1] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_assetView;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialListAssetView()) init];
  v0[OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_isTopLevel] = 0;
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView;
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  *(void *)&v0[v7] = [objc_allocWithZone((Class)type metadata accessor for CanvasAssetAccessoryView()) initWithFrame:0.0, 0.0, static MOSuggestionSheetMosaicCell.checkPlatterViewSize];
  swift_weakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000AA88C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000AA8E8(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB8);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000AA950@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000AA9AC(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xE8);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

ValueMetadata *type metadata accessor for MOSuggestionInterstitialExpandableListViewCellConstants()
{
  return &type metadata for MOSuggestionInterstitialExpandableListViewCellConstants;
}

uint64_t sub_1000AAA20()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  id v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  id v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = __chkstk_darwin(AssociatedTypeWitness);
  id v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  id v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  __chkstk_darwin(v17);
  id v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = dispatch thunk of Collection.count.getter();
  if (!v20) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v21 = v20;
  id v27 = v15;
  uint64_t v43 = ContiguousArray.init()();
  uint64_t v35 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v21);
  id v41 = v19;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    id v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    id v37 = v23;
    id v24 = v27;
    while (1)
    {
      id v25 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t MOWeakArray.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MOWeakArray.count.getter(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&Array.count.getter);
}

uint64_t type metadata accessor for MOWeakReference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MOWeakArray.subscript.setter(uint64_t result, Swift::Int a2)
{
  if (result)
  {
    type metadata accessor for MOWeakReference();
    uint64_t v4 = specialized MOWeakReference.__allocating_init(_:)();
    type metadata accessor for Array();
    swift_unknownObjectRetain();
    Array._makeMutableAndUnique()();
    uint64_t v5 = *v2;
    Array._checkSubscript_mutating(_:)(a2);
    *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = v4;
    swift_unknownObjectRelease_n();
    return swift_release();
  }
  return result;
}

uint64_t MOWeakArray.subscript.getter()
{
  uint64_t v0 = type metadata accessor for MOWeakReference();
  uint64_t v1 = Array.subscript.getter(v0, (uint64_t)&v4);
  if (!v4) {
    return 0;
  }
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 96))(v1);
  swift_release();
  return v2;
}

uint64_t MOWeakArray.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = specialized MOWeakArray.init(_:)(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MOWeakReference.strongValue.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t MOWeakReference.strongValue.setter()
{
  return swift_unknownObjectRelease();
}

void (*MOWeakReference.strongValue.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return MOWeakReference.strongValue.modify;
}

void MOWeakReference.strongValue.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t MOWeakReference.__allocating_init(_:)()
{
  uint64_t v0 = specialized MOWeakReference.__allocating_init(_:)();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t MOWeakReference.init(_:)()
{
  uint64_t v0 = specialized MOWeakReference.init(_:)();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t MOWeakReference.deinit()
{
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t MOWeakReference.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t MOWeakArray.init(repeating:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a1;
  uint64_t v4 = specialized Array.init(repeating:count:)((uint64_t)&v7, a2, a3);
  uint64_t v5 = specialized MOWeakArray.init(_:)(v4, a3);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t MOWeakArray.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MOWeakArray.count.getter(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&Array.endIndex.getter);
}

uint64_t MOWeakArray.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = type metadata accessor for MOWeakReference();

  return a5(a1, v6);
}

uint64_t MOWeakArray.first.getter()
{
  type metadata accessor for MOWeakReference();
  type metadata accessor for Array();
  swift_getWitnessTable();
  uint64_t v0 = Collection.first.getter();
  if (!v3) {
    return 0;
  }
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 96))(v0);
  swift_release();
  return v1;
}

uint64_t key path setter for MOWeakArray.subscript(_:) : <A>MOWeakArray<A>A(uint64_t a1, uint64_t a2, Swift::Int *a3)
{
  Swift::Int v3 = *a3;
  type metadata accessor for MOWeakArray();
  uint64_t v4 = swift_unknownObjectRetain();
  return MOWeakArray.subscript.setter(v4, v3);
}

uint64_t (*MOWeakArray.subscript.modify(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = MOWeakArray.subscript.getter();
  return MOWeakArray.subscript.modify;
}

uint64_t MOWeakArray.subscript.modify(uint64_t *a1, char a2)
{
  Swift::Int v2 = a1[1];
  if ((a2 & 1) == 0) {
    return MOWeakArray.subscript.setter(*a1, v2);
  }
  uint64_t v3 = swift_unknownObjectRetain();
  MOWeakArray.subscript.setter(v3, v2);

  return swift_unknownObjectRelease();
}

Swift::Int __swiftcall MOWeakArray.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t protocol witness for Collection.endIndex.getter in conformance MOWeakArray<A>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = MOWeakArray.endIndex.getter(*v4, a2, a3, *(void *)(a1 + 16));
  *a4 = result;
  return result;
}

void (*protocol witness for Collection.subscript.read in conformance MOWeakArray<A>(uint64_t **a1))(void *a1)
{
  Swift::Int v2 = (uint64_t *)malloc(0x30uLL);
  *a1 = v2;
  uint64_t v3 = MOWeakArray.subscript.read(v2);
  v2[4] = v4;
  v2[5] = (uint64_t)v3;
  return protocol witness for Collection.subscript.read in conformance MOWeakArray<A>;
}

void protocol witness for Collection.subscript.read in conformance MOWeakArray<A>(void *a1)
{
  BOOL v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 40))(*a1);

  free(v1);
}

uint64_t (*MOWeakArray.subscript.read(uint64_t *a1))()
{
  *a1 = MOWeakArray.subscript.getter();
  return MOWeakArray.subscript.read;
}

uint64_t MOWeakArray.subscript.read()
{
  return swift_unknownObjectRelease();
}

uint64_t protocol witness for Collection.subscript.getter in conformance MOWeakArray<A>()
{
  return Collection<>.subscript.getter();
}

uint64_t protocol witness for Collection.indices.getter in conformance MOWeakArray<A>()
{
  return Collection<>.indices.getter();
}

uint64_t protocol witness for Collection.isEmpty.getter in conformance MOWeakArray<A>()
{
  return Collection.isEmpty.getter();
}

uint64_t protocol witness for Collection.count.getter in conformance MOWeakArray<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MOWeakArray.count.getter(*v3, a2, a3, *(void *)(a1 + 16));
}

void protocol witness for Collection._customIndexOfEquatableElement(_:) in conformance MOWeakArray<A>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t protocol witness for Collection.index(_:offsetBy:) in conformance MOWeakArray<A>()
{
  return Collection.index(_:offsetBy:)();
}

uint64_t protocol witness for Collection.index(_:offsetBy:limitedBy:) in conformance MOWeakArray<A>()
{
  return Collection.index(_:offsetBy:limitedBy:)();
}

uint64_t protocol witness for Collection.distance(from:to:) in conformance MOWeakArray<A>()
{
  return Collection.distance(from:to:)();
}

uint64_t protocol witness for Collection._failEarlyRangeCheck(_:bounds:) in conformance MOWeakArray<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized Collection._failEarlyRangeCheck(_:bounds:)(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.< infix(_:_:));
}

{
  return specialized Collection._failEarlyRangeCheck(_:bounds:)(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.<= infix(_:_:));
}

void *protocol witness for Collection.index(after:) in conformance MOWeakArray<A>@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *protocol witness for Collection.formIndex(after:) in conformance MOWeakArray<A>(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

__n128 protocol witness for Sequence.makeIterator() in conformance MOWeakArray<A>@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[1].n128_u64[0];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u64[1] = 0;
  return result;
}

uint64_t protocol witness for Sequence.underestimatedCount.getter in conformance MOWeakArray<A>(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t protocol witness for Sequence._copyToContiguousArray() in conformance MOWeakArray<A>()
{
  swift_getWitnessTable();
  uint64_t v0 = specialized Collection._copyToContiguousArray()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t protocol witness for Sequence._copyContents(initializing:) in conformance MOWeakArray<A>()
{
  return Sequence._copyContents(initializing:)();
}

uint64_t protocol witness for Sequence.withContiguousStorageIfAvailable<A>(_:) in conformance MOWeakArray<A>()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

Swift::Void __swiftcall Array._checkSubscript_mutating(_:)(Swift::Int a1)
{
  uint64_t v2 = v1;
  char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  if ((isClassOrObjCExistentialType & 1) == 0) {
    uint64_t v5 = v2;
  }
  if (*(void *)(v5 + 16) <= (unint64_t)a1) {
    goto LABEL_7;
  }
}

uint64_t specialized Collection._failEarlyRangeCheck(_:bounds:)(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for Range();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = dispatch thunk of static Comparable.<= infix(_:_:)();
  id v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = dispatch thunk of static Comparable.<= infix(_:_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t specialized Collection._failEarlyRangeCheck(_:bounds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  id v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = dispatch thunk of static Comparable.<= infix(_:_:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t specialized Collection._copyToContiguousArray()()
{
  return _copyCollectionToContiguousArray<A>(_:)();
}

uint64_t specialized Array.init(repeating:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = static Array._allocateUninitialized(_:)();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    if (a2)
    {
      uint64_t v9 = v7;
      uint64_t v10 = *(void *)(a3 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      uint64_t v12 = a2 - 1;
      if (v12)
      {
        uint64_t v13 = *(void *)(v10 + 72);
        uint64_t v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    type metadata accessor for Array();
    return v8;
  }
  return result;
}

uint64_t specialized MOWeakReference.init(_:)()
{
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t specialized MOWeakReference.__allocating_init(_:)()
{
  return specialized MOWeakReference.init(_:)();
}

uint64_t specialized MOWeakArray.init(_:)(uint64_t a1, uint64_t a2)
{
  v7[5] = a1;
  v7[2] = a2;
  uint64_t v2 = type metadata accessor for Array();
  uint64_t v3 = type metadata accessor for MOWeakReference();
  uint64_t WitnessTable = swift_getWitnessTable();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, char *))partial apply for closure #1 in MOWeakArray.init(_:), (uint64_t)v7, v2, v3, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v5);
  return swift_bridgeObjectRetain();
}

uint64_t base witness table accessor for Sequence in MOWeakArray<A>()
{
  return swift_getWitnessTable();
}

void *associated type witness table accessor for Collection.Index : Comparable in MOWeakArray<A>()
{
  return &protocol witness table for Int;
}

uint64_t associated type witness table accessor for Collection.Indices : Collection in MOWeakArray<A>()
{
  return swift_getWitnessTable();
}

uint64_t associated type witness table accessor for Collection.SubSequence : Collection in MOWeakArray<A>()
{
  return swift_getWitnessTable();
}

uint64_t associated type witness table accessor for Sequence.Iterator : IteratorProtocol in MOWeakArray<A>()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000AC054@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  return result;
}

uint64_t sub_1000AC0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 104);
  uint64_t v3 = swift_unknownObjectRetain();
  return v2(v3);
}

uint64_t sub_1000AC0F4()
{
  return 8;
}

void *sub_1000AC100(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1000AC10C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MOWeakArray.subscript.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000AC14C()
{
  return 8;
}

uint64_t type metadata instantiation function for MOWeakReference()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t type metadata completion function for MOWeakReference()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata instantiation function for MOWeakArray(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t destroy for MOWeakArray()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for MOWeakArray(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MOWeakArray(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MOWeakArray(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOWeakArray(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOWeakArray(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for MOWeakArray()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t partial apply for closure #1 in MOWeakArray.init(_:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MOWeakReference();
  uint64_t result = specialized MOWeakReference.__allocating_init(_:)();
  *a1 = result;
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

MomentsUIService::FallbackAssetSymbol __swiftcall FallbackAssetSymbol.init(visualSubType:)(MomentsUIService::MOSuggestionAssetVisualSubType visualSubType)
{
  if (visualSubType > MomentsUIService_MOSuggestionAssetVisualSubType_mapMultiPin) {
    return 6;
  }
  else {
    return byte_1001DC2F0[visualSubType];
  }
}

unint64_t FallbackAssetSymbol.rawValue.getter(char a1)
{
  unint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F65646976;
      break;
    case 2:
      unint64_t result = 0x636973756DLL;
      break;
    case 3:
      unint64_t result = 0x7374736163646F70;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x722E657275676966;
      break;
    case 6:
      unint64_t result = 0x6E6F697473657571;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

char *MOSuggestionFallbackAssetView.__allocating_init(with:sizeType:)(uint64_t a1, unint64_t a2, char a3)
{
  id v7 = [objc_allocWithZone(v3) initWithFrame:0.0, 0.0, 0.0, 0.0];
  connectionProperties = serverManager._connectionProperties;
  uint64_t v9 = (char *)v7;
  if (connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[MOSuggestionFallbackAssetView] fallbackSymbol=%s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  switch(a3)
  {
    case 1:
LABEL_9:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    default:
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_11:
        uint64_t v16 = one-time initialization token for BIG_SYMBOL;
        id v17 = *(id *)&v9[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView];
        if (v16 != -1) {
          swift_once();
        }
        id v18 = (id)static FallbackConstants.BIG_SYMBOL;
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v20 = [self _systemImageNamed:v19 withConfiguration:v18];

        [v17 setImage:v20];
      }
      else
      {
        switch(a3)
        {
          case 0:
            goto LABEL_9;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_11;
            }
            uint64_t v50 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView;
            uint64_t v51 = one-time initialization token for SMALL_SYMBOL;
            id v52 = *(id *)&v9[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView];
            if (v51 != -1) {
              swift_once();
            }
            id v53 = (id)static FallbackConstants.SMALL_SYMBOL;
            NSString v54 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v55 = [self _systemImageNamed:v54 withConfiguration:v53];

            [v52 setImage:v55];
            id v56 = [*(id *)&v9[v50] widthAnchor];
            id v57 = [v56 constraintLessThanOrEqualToConstant:30.0];

            [v57 setActive:1];
            id v58 = [*(id *)&v9[v50] heightAnchor];
            id v20 = [v58 constraintLessThanOrEqualToConstant:30.0];

            [v20 setActive:1];
            break;
          default:
            JUMPOUT(0);
        }
      }

      uint64_t v21 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView;
      uint64_t v22 = *(void **)&v9[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView];
      [v22 setContentMode:2];
      uint64_t v23 = one-time initialization token for IMAGE_TINT_COLOR;
      id v24 = v22;
      if (v23 != -1) {
        swift_once();
      }
      [v24 setTintColor:static FallbackConstants.IMAGE_TINT_COLOR];

      id v25 = *(void **)&v9[v21];
      [v9 addSubview:v25];
      id v26 = v25;
      id v27 = [v26 superview];
      uint64_t v28 = &selRef_collectionView_didSelectItemAtIndexPath_;
      if (v27)
      {
        uint64_t v29 = v27;
        [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v30 = [v26 centerYAnchor];
        id v31 = [v29 centerYAnchor];
        id v32 = [v30 constraintEqualToAnchor:v31];

        [v32 setConstant:0.0];
        if (v32)
        {
          id v32 = v32;
          [v32 setActive:1];

          id v26 = v32;
        }

        uint64_t v28 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      else
      {
        id v32 = 0;
        uint64_t v29 = v26;
      }

      id v33 = *(id *)&v9[v21];
      id v34 = [v33 superview];
      if (v34)
      {
        uint64_t v35 = v34;
        [v33 v28[92]];
        id v36 = [v33 centerXAnchor];
        id v37 = [v35 centerXAnchor];
        id v38 = [v36 constraintEqualToAnchor:v37];

        [v38 setConstant:0.0];
        if (v38)
        {
          id v38 = v38;
          [v38 setActive:1];

          id v33 = v38;
        }
      }
      else
      {
        id v38 = 0;
        uint64_t v35 = v33;
      }

      [v9 setIsAccessibilityElement:1];
      UIAccessibilityTraits v39 = UIAccessibilityTraitImage;
      id v40 = v9;
      unint64_t v41 = (unint64_t)[v40 accessibilityTraits];
      if ((v39 & ~v41) != 0) {
        UIAccessibilityTraits v42 = v39;
      }
      else {
        UIAccessibilityTraits v42 = 0;
      }
      [v40 setAccessibilityTraits:v42 | v41];

      uint64_t v43 = self;
      id v44 = v40;
      id v45 = [v43 mainBundle];
      v60._object = (void *)0x80000001001E3080;
      v46._countAndFlagsBits = 0x6B6361626C6C6146;
      v46._object = (void *)0xE800000000000000;
      v47._countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      v60._countAndFlagsBits = 0xD00000000000002DLL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v60);

      NSString v48 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v44 setAccessibilityLabel:v48];

      return v44;
  }
}

id one-time initialization function for BIG_SYMBOL()
{
  id result = [self configurationWithPointSize:4 weight:3 scale:46.0];
  static FallbackConstants.BIG_SYMBOL = (uint64_t)result;
  return result;
}

uint64_t *FallbackConstants.BIG_SYMBOL.unsafeMutableAddressor()
{
  if (one-time initialization token for BIG_SYMBOL != -1) {
    swift_once();
  }
  return &static FallbackConstants.BIG_SYMBOL;
}

id static FallbackConstants.BIG_SYMBOL.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for BIG_SYMBOL, (void **)&static FallbackConstants.BIG_SYMBOL);
}

void *FallbackConstants.SMALL_SYMBOL_BOUND.unsafeMutableAddressor()
{
  return &static FallbackConstants.SMALL_SYMBOL_BOUND;
}

double static ProgressIndicatorConstants.FRAME_SIZE.getter()
{
  return 30.0;
}

void one-time initialization function for SMALL_SYMBOL()
{
  id v0 = [self preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  id v1 = [self configurationWithFont:v0 scale:-1];

  static FallbackConstants.SMALL_SYMBOL = (uint64_t)v1;
}

uint64_t *FallbackConstants.SMALL_SYMBOL.unsafeMutableAddressor()
{
  if (one-time initialization token for SMALL_SYMBOL != -1) {
    swift_once();
  }
  return &static FallbackConstants.SMALL_SYMBOL;
}

id static FallbackConstants.SMALL_SYMBOL.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for SMALL_SYMBOL, (void **)&static FallbackConstants.SMALL_SYMBOL);
}

id one-time initialization function for IMAGE_TINT_COLOR(uint64_t a1)
{
  return one-time initialization function for IMAGE_TINT_COLOR(a1, (SEL *)&selRef_systemLightGrayColor, &static FallbackConstants.IMAGE_TINT_COLOR);
}

uint64_t *FallbackConstants.IMAGE_TINT_COLOR.unsafeMutableAddressor()
{
  if (one-time initialization token for IMAGE_TINT_COLOR != -1) {
    swift_once();
  }
  return &static FallbackConstants.IMAGE_TINT_COLOR;
}

id static FallbackConstants.IMAGE_TINT_COLOR.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for IMAGE_TINT_COLOR, (void **)&static FallbackConstants.IMAGE_TINT_COLOR);
}

id one-time initialization function for BACKGROUND_COLOR(uint64_t a1)
{
  return one-time initialization function for IMAGE_TINT_COLOR(a1, (SEL *)&selRef_tertiarySystemFillColor, &static FallbackConstants.BACKGROUND_COLOR);
}

id one-time initialization function for IMAGE_TINT_COLOR(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

uint64_t *FallbackConstants.BACKGROUND_COLOR.unsafeMutableAddressor()
{
  if (one-time initialization token for BACKGROUND_COLOR != -1) {
    swift_once();
  }
  return &static FallbackConstants.BACKGROUND_COLOR;
}

id static FallbackConstants.BACKGROUND_COLOR.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for BACKGROUND_COLOR, (void **)&static FallbackConstants.BACKGROUND_COLOR);
}

uint64_t FallbackAssetSymbol.init(assetType:mediaType:)(void *a1, uint64_t a2, char a3)
{
  return specialized FallbackAssetSymbol.init(assetType:mediaType:)(a1, a2, a3 & 1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance FallbackAssetSymbol(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = FallbackAssetSymbol.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == FallbackAssetSymbol.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance FallbackAssetSymbol()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  FallbackAssetSymbol.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance FallbackAssetSymbol()
{
  FallbackAssetSymbol.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance FallbackAssetSymbol()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  FallbackAssetSymbol.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance FallbackAssetSymbol@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized FallbackAssetSymbol.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance FallbackAssetSymbol@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FallbackAssetSymbol.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id MOSuggestionFallbackAssetView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for MOSuggestionFallbackAssetView();
  id v12 = [super initWithFrame:a1, a2, a3, a4];
  [v12 setContentMode:2];
  uint64_t v13 = one-time initialization token for BACKGROUND_COLOR;
  id v14 = v12;
  if (v13 != -1) {
    swift_once();
  }
  [v14 setBackgroundColor:static FallbackConstants.BACKGROUND_COLOR];

  return v14;
}

void MOSuggestionFallbackAssetView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionFallbackAssetView_imageView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id MOSuggestionFallbackAssetView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionFallbackAssetView();
  return [super dealloc];
}

uint64_t specialized FallbackAssetSymbol.init(assetType:mediaType:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9) {
    goto LABEL_14;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_15:

    return 0;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_15;
  }
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;
  if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
LABEL_18:

    return 1;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_18;
  }
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;
  if (v25 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
LABEL_23:

    return 5;
  }
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v29) {
    goto LABEL_23;
  }
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;
  if (v30 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v32 == v33)
  {
    swift_bridgeObjectRelease_n();
LABEL_28:

    return 7;
  }
  char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_28;
  }
  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;
  if (v35 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v37 == v38)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_33;
  }
  char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v39)
  {
LABEL_33:

    if (a3) {
      return 6;
    }
    uint64_t v22 = 2;
    if (a2 != 1)
    {
      if (a2 == 4) {
        return 2;
      }
      else {
        return 3;
      }
    }
    return v22;
  }
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;
  if (v40 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v42 == v43)
  {
    swift_bridgeObjectRelease_n();
LABEL_43:

    return 4;
  }
  char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v44) {
    goto LABEL_43;
  }
  uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v46;
  uint64_t v22 = 8;
  if (v45 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v47 != v48)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      uint64_t v22 = 8;
    }
    else {
      uint64_t v22 = 6;
    }
  }
  id v49 = a1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

unint64_t specialized FallbackAssetSymbol.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of FallbackAssetSymbol.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 9) {
    return 9;
  }
  else {
    return v3;
  }
}

uint64_t type metadata accessor for MOSuggestionFallbackAssetView()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type FallbackAssetSymbol and conformance FallbackAssetSymbol()
{
  unint64_t result = lazy protocol witness table cache variable for type FallbackAssetSymbol and conformance FallbackAssetSymbol;
  if (!lazy protocol witness table cache variable for type FallbackAssetSymbol and conformance FallbackAssetSymbol)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FallbackAssetSymbol and conformance FallbackAssetSymbol);
  }
  return result;
}

ValueMetadata *type metadata accessor for FallbackConstants()
{
  return &type metadata for FallbackConstants;
}

uint64_t getEnumTagSinglePayload for FallbackAssetSymbol(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FallbackAssetSymbol(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000ADCB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FallbackAssetSymbol()
{
  return &type metadata for FallbackAssetSymbol;
}

id MOSuggestionAssetPhotoLivePhotoVideosType.assetType.getter(char a1)
{
  return *(id *)*(&off_100224218 + a1);
}

MomentsUIService::MOSuggestionAssetPhotoLivePhotoVideosType_optional __swiftcall MOSuggestionAssetPhotoLivePhotoVideosType.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3) {
    LOBYTE(rawValue) = 3;
  }
  return (MomentsUIService::MOSuggestionAssetPhotoLivePhotoVideosType_optional)rawValue;
}

uint64_t *protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetPhotoLivePhotoVideosType@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

int64x2_t one-time initialization function for highQualityImageSize()
{
  int64x2_t result = vdupq_n_s64(0x4097700000000000uLL);
  static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize = (__int128)result;
  return result;
}

{
  int64x2_t result;

  int64x2_t result = vdupq_n_s64(0x409F400000000000uLL);
  static MOAssetPhotoMomentProvider.highQualityImageSize = (__int128)result;
  return result;
}

long long *MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for highQualityImageSize != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize;
}

double static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize.getter()
{
  if (one-time initialization token for highQualityImageSize != -1) {
    swift_once();
  }
  return *(double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize;
}

void one-time initialization function for fileProviderDomain()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = objc_allocWithZone((Class)NSFileProviderDomain);
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 initWithIdentifier:v0 displayName:v2 pathRelativeToDocumentStorage:v3 hidden:1];

  static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain = (uint64_t)v4;
}

uint64_t *MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain.unsafeMutableAddressor()
{
  if (one-time initialization token for fileProviderDomain != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
}

id static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain.getter()
{
  if (one-time initialization token for fileProviderDomain != -1) {
    swift_once();
  }
  NSString v0 = (void *)static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;

  return v0;
}

void one-time initialization function for photosFileProviderManager()
{
  if (one-time initialization token for fileProviderDomain != -1) {
    swift_once();
  }
  id v0 = (id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self managerWithProviderIdentifier:v1 groupName:v2 domain:v0];

  static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager = (uint64_t)v3;
}

uint64_t *MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager.unsafeMutableAddressor()
{
  if (one-time initialization token for photosFileProviderManager != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager;
}

uint64_t static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager.getter()
{
  if (one-time initialization token for photosFileProviderManager != -1) {
    swift_once();
  }
  uint64_t v0 = static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager;
  id v1 = (id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager;
  return v0;
}

uint64_t PropertyDescriptor.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.uuid.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

id MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.asset.getter()
{
  uint64_t v1 = *(void **)(v0
                + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask() + 20));

  return v1;
}

uint64_t type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask()
{
  uint64_t result = type metadata singleton initialization cache for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask;
  if (!type metadata singleton initialization cache for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.asset.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask() + 20);

  *(void *)(v1 + v3) = a1;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.asset.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

double MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.targetSize.getter()
{
  return *(double *)(v0
                   + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask()
                            + 24));
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.targetSize.setter(double a1, double a2)
{
  uint64_t result = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  unsigned int v6 = (double *)(v2 + *(int *)(result + 24));
  *unsigned int v6 = a1;
  v6[1] = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.targetSize.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.contentMode.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask()
                            + 28));
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.contentMode.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  *(void *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.contentMode.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.oneUpIntent.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask()
                                     + 32));
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.oneUpIntent.setter(char a1)
{
  uint64_t result = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.oneUpIntent.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t key path getter for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion : MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1
                 + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask() + 36));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed PHLivePhoto?) -> ();
  a2[1] = v6;

  return swift_retain();
}

uint64_t key path setter for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion : MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = (uint64_t (**)(uint64_t))(a2
                                        + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask()
                                                 + 36));
  swift_retain();
  uint64_t result = swift_release();
  *uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed PHLivePhoto?) -> (@out ());
  v6[1] = (uint64_t (*)(uint64_t))v5;
  return result;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion.getter()
{
  uint64_t v1 = *(void *)(v0
                 + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask() + 36));
  swift_retain();
  return v1;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2
                + *(int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask() + 36));
  uint64_t result = swift_release();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.completion.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

int *MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask.init(uuid:asset:targetSize:contentMode:oneUpIntent:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a7, a1, v18);
  uint64_t result = (int *)type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  *(void *)(a7 + result[5]) = a2;
  uint64_t v20 = (double *)(a7 + result[6]);
  *uint64_t v20 = a8;
  v20[1] = a9;
  *(void *)(a7 + result[7]) = a3;
  *(unsigned char *)(a7 + result[8]) = a4;
  uint64_t v21 = (void *)(a7 + result[9]);
  *uint64_t v21 = a5;
  v21[1] = a6;
  return result;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.pendingLivePhotoTasks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.pendingLivePhotoTasks.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOSuggestionTipCoordinator.onboardingTip.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.numActiveLivePhotoOperations.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.numActiveLivePhotoOperations.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return result;
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:)(uint64_t a1, unsigned int a2, char **a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)static MOAngelLogger.shared);
    char v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[Assets] (Photos) No localIdentifiers provided for", v26, 2u);
      swift_slowDealloc();
    }

    ((void (*)(void))a3)(0);
    return;
  }
  int v8 = [objc_allocWithZone((Class)PHFetchOptions) init];
  [v8 setIncludeGuestAssets:1];
  uint64_t v9 = self;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v76 = [v9 fetchAssetsWithLocalIdentifiers:isa options:v8];

  if ((uint64_t)[v76 count] < 1
    || (id v11 = [v76 fetchedObjects]) == 0)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static MOAngelLogger.shared);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[Assets] (Photos) PHAsset fetch failed", v22, 2u);
      swift_slowDealloc();
    }

    ((void (*)(void))a3)(0);

    return;
  }
  uint64_t v12 = v11;
  uint64_t v72 = v4;
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHAsset);
  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static MOAngelLogger.shared);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  LOBYTE(v16) = static os_log_type_t.info.getter();
  if (!os_log_type_enabled((os_log_t)v15, (os_log_type_t)v16))
  {

    unint64_t v18 = v13;
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
  unint64_t v5 = swift_slowAlloc();
  *(_DWORD *)unint64_t v5 = 134217984;
  if ((unint64_t)v13 >> 62) {
    goto LABEL_112;
  }
  uint64_t v17 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v78[0] = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v18 = v13;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v15, (os_log_type_t)v16, "[Assets] (Photos) PHAsset fetch completed with n=%ld for", (uint8_t *)v5, 0xCu);
    swift_slowDealloc();

LABEL_23:
    unsigned __int8 v73 = a2 - 2;
    uint64_t v71 = a4;
    if ((a2 - 2) > 8u)
    {
      a4 = v18;
      goto LABEL_43;
    }
    a4 = v18;
    uint64_t v27 = v18 & 0xFFFFFFFFFFFFFF8;
    unint64_t v28 = v18 >> 62;
    if (!v28)
    {
      if (*(void *)(v27 + 16) <= 3uLL) {
        goto LABEL_43;
      }
      unint64_t v5 = 3;
      if ((a4 & 0xC000000000000001) != 0)
      {
LABEL_27:
        if (v5)
        {
          Swift::Int v29 = 0;
          do
          {
            Swift::Int v30 = v29 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v29);
            Swift::Int v29 = v30;
          }
          while (v5 != v30);
        }
      }
LABEL_30:
      if (v28)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = _CocoaArrayWrapper.subscript.getter();
        uint64_t v16 = v32;
        uint64_t v15 = v33;
        unint64_t v5 = v34;
        swift_bridgeObjectRelease_n();
        if ((v5 & 1) == 0) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v31 = a4 & 0xFFFFFFFFFFFFFF8;
        uint64_t v16 = (a4 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v5 = (2 * v5) | 1;
        if ((v5 & 1) == 0) {
          goto LABEL_35;
        }
      }
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      uint64_t v35 = (void *)swift_dynamicCastClass();
      if (!v35)
      {
        swift_unknownObjectRelease();
        uint64_t v35 = _swiftEmptyArrayStorage;
      }
      uint64_t v36 = v35[2];
      swift_release();
      if (__OFSUB__(v5 >> 1, v15))
      {
        __break(1u);
      }
      else if (v36 == (v5 >> 1) - v15)
      {
        a4 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (a4) {
          goto LABEL_43;
        }
        a4 = (uint64_t)_swiftEmptyArrayStorage;
        goto LABEL_42;
      }
      swift_unknownObjectRelease();
LABEL_35:
      a4 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v31, v16, v15, v5);
LABEL_42:
      swift_unknownObjectRelease();
      goto LABEL_43;
    }
    if (a4 < 0) {
      uint64_t v15 = a4;
    }
    else {
      uint64_t v15 = v27;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v16 >= 4)
    {
      swift_bridgeObjectRetain();
      uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if ((v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_130:
        if ((a4 & 0xC000000000000001) != 0) {
          goto LABEL_27;
        }
        goto LABEL_30;
      }
      if (v66 >= 3) {
        uint64_t v67 = 3;
      }
      else {
        uint64_t v67 = v66;
      }
      if (v66 >= 0) {
        unint64_t v5 = v67;
      }
      else {
        unint64_t v5 = 3;
      }
      LOBYTE(v16) = a4;
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15 >= (uint64_t)v5) {
        goto LABEL_130;
      }
      __break(1u);
    }
LABEL_43:
    unint64_t v80 = (unint64_t)_swiftEmptyArrayStorage;
    id v81 = _swiftEmptyArrayStorage;
    unint64_t v79 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)a4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      id v69 = v8;
      id v70 = a3;
      if (v13)
      {
LABEL_45:
        if (v13 >= 1)
        {
          uint64_t v37 = 0;
          unint64_t v38 = a4 & 0xC000000000000001;
          char v39 = &selRef_collectionView_didSelectItemAtIndexPath_;
          a3 = &selRef_collectionView_didSelectItemAtIndexPath_;
          id v68 = (char *)&type metadata for Any + 8;
          unint64_t v74 = a4 & 0xC000000000000001;
          uint64_t v75 = a4;
          while (1)
          {
            if (v38) {
              id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v40 = *(id *)(a4 + 8 * v37 + 32);
            }
            uint64_t v41 = v40;
            if ((objc_msgSend(v40, v39[470], v68, v69) & 4) != 0)
            {
              id v44 = v41;
              uint64_t v45 = Logger.logObject.getter();
              os_log_type_t v46 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v45, v46))
              {
                uint64_t v47 = swift_slowAlloc();
                v78[0] = swift_slowAlloc();
                *(_DWORD *)uint64_t v47 = 136315138;
                id v48 = [v44 localIdentifier];
                uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v51 = v50;

                a4 = v75;
                uint64_t v52 = v49;
                a3 = &selRef_collectionView_didSelectItemAtIndexPath_;
                *(void *)(v47 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v51, v78);

                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v45, v46, "[Assets] (Photos) Asset has contains screenshot id=%s", (uint8_t *)v47, 0xCu);
LABEL_59:
                swift_arrayDestroy();
                char v39 = &selRef_collectionView_didSelectItemAtIndexPath_;
                swift_slowDealloc();
                unint64_t v38 = v74;
                swift_slowDealloc();

                goto LABEL_48;
              }
            }
            else
            {
              if ([v41 a3[471]] == (id)2)
              {
                if ([v41 isGuestAsset])
                {
                  if (v73 < 9u) {
                    goto LABEL_67;
                  }
                }
                else if (a2 - 2 < 6 || a2 - 9 <= 1)
                {
                  goto LABEL_67;
                }
                id v42 = v41;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                unint64_t v43 = v79;
LABEL_68:
                if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                goto LABEL_48;
              }
              if ([v41 a3[471]] == (id)1)
              {
                if (([v41 v39[470]] & 8) != 0
                  && a2 - 2 >= 6
                  && a2 - 9 >= 2)
                {
                  id v42 = v41;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  unint64_t v43 = v80;
                  goto LABEL_68;
                }
LABEL_67:
                id v42 = v41;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                unint64_t v43 = (unint64_t)v81;
                goto LABEL_68;
              }
              id v44 = v41;
              uint64_t v45 = Logger.logObject.getter();
              os_log_type_t v53 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v45, v53))
              {
                uint64_t v54 = swift_slowAlloc();
                v78[0] = swift_slowAlloc();
                *(_DWORD *)uint64_t v54 = 136315138;
                id v55 = [v44 localIdentifier];
                uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v58 = v57;

                a4 = v75;
                uint64_t v59 = v56;
                a3 = &selRef_collectionView_didSelectItemAtIndexPath_;
                *(void *)(v54 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v58, v78);

                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v45, v53, "[Assets] (Photos) Unsupport PHAsset id=%s", (uint8_t *)v54, 0xCu);
                goto LABEL_59;
              }
            }

LABEL_48:
            if (v13 == ++v37)
            {
              swift_bridgeObjectRelease();
              unint64_t v5 = (unint64_t)v81;
              goto LABEL_76;
            }
          }
        }
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v69 = v8;
      id v70 = a3;
      if (v13) {
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_76:
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = 0;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = 0;
    int v8 = (void *)(v16 + 16);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = _swiftEmptyArrayStorage;
    id v61 = (void *)swift_allocObject();
    _OWORD v61[2] = v60;
    v61[3] = v13;
    v61[4] = v16;
    v61[5] = v70;
    v61[6] = v71;
    if (v5 >> 62)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15 < 1) {
        goto LABEL_82;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (v15 < 1) {
        goto LABEL_82;
      }
    }
    swift_beginAccess();
    if (__OFADD__(*v8, 1)) {
      goto LABEL_109;
    }
    ++*v8;
    if (v73 > 8u) {
      (*(void (**)(unint64_t, void, uint64_t (*)(uint64_t), void *))(*(void *)v72
    }
                                                                                                  + 208))(v5, MOSuggestionAssetsTypePhoto, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v61);
    else {
      (*(void (**)(unint64_t, void, uint64_t (*)(uint64_t), void *))(*(void *)v72
    }
                                                                                                  + 184))(v5, a2, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v61);
LABEL_82:
    swift_bridgeObjectRelease();
    unint64_t v5 = v80;
    if (v80 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15 < 1) {
        goto LABEL_88;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15 < 1) {
        goto LABEL_88;
      }
    }
    swift_beginAccess();
    if (__OFADD__(*v8, 1)) {
      goto LABEL_110;
    }
    ++*v8;
    if (v73 > 8u) {
      (*(void (**)(unint64_t, void, uint64_t (*)(uint64_t), void *))(*(void *)v72
    }
                                                                                                  + 208))(v5, MOSuggestionAssetsTypeLivePhoto, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v61);
    else {
      (*(void (**)(unint64_t, void, uint64_t (*)(uint64_t), void *))(*(void *)v72
    }
                                                                                                  + 200))(v5, a2, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v61);
LABEL_88:
    swift_bridgeObjectRelease();
    unint64_t v5 = v79;
    if (v79 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15 < 1) {
        goto LABEL_95;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15 < 1) {
        goto LABEL_95;
      }
    }
    swift_beginAccess();
    if (!__OFADD__(*v8, 1)) {
      break;
    }
LABEL_111:
    __break(1u);
LABEL_112:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  ++*v8;
  if (a2 > 0xAu) {
    goto LABEL_101;
  }
  uint64_t v62 = 1;
  if (((1 << a2) & 0x6FC) == 0)
  {
    if (a2 == 8) {
      goto LABEL_94;
    }
LABEL_101:
    uint64_t v62 = 1;
    goto LABEL_94;
  }
  uint64_t v62 = 0;
LABEL_94:
  (*(void (**)(unint64_t, uint64_t, uint64_t (*)(uint64_t), void *))(*(void *)v72 + 232))(v5, v62, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:), v61);
LABEL_95:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*v8)
  {
    id v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v63, v64))
    {
      id v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "[Assets] (Photos) No assets to fetch", v65, 2u);
      swift_slowDealloc();
    }

    ((void (*)(void))v70)(0);
  }
  swift_release();

  swift_release();
  swift_release();
  swift_release();
}

BOOL static MOSuggestionAssetPhotoLivePhotoVideosProvider.playableVideo(_:asset:)(unsigned __int8 a1, id a2)
{
  unsigned int v2 = a1;
  if ([a2 isGuestAsset]) {
    return v2 - 2 >= 9;
  }
  if (v2 <= 0xA) {
    return (0x103u >> v2) & 1;
  }
  return 1;
}

uint64_t MOSuggestionCollectionViewCellViewModel.isSizeEligibleForAutoplay(size:)(unsigned __int8 a1)
{
  return (a1 > 0xAu) | (0x103u >> a1) & 1;
}

uint64_t closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9 = (uint64_t *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(void *)(a2 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (void *)(a4 + 16);
    *uint64_t v9 = v13;
    if (a1)
    {
      swift_beginAccess();
      unint64_t v15 = swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)(v15);
      swift_endAccess();
    }
    swift_beginAccess();
    uint64_t v16 = *v9;
    uint64_t result = swift_beginAccess();
    if (v16 == *v14)
    {
      swift_beginAccess();
      uint64_t v17 = swift_bridgeObjectRetain();
      a5(v17);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id PHAsset.squareCropRect.getter()
{
  return PHAsset.squareCropRect.getter(200.0, 200.0);
}

id PHAsset.landscapeCropRect.getter()
{
  return PHAsset.squareCropRect.getter(200.0, 98.0);
}

id PHAsset.squareCropRect.getter(double a1, double a2)
{
  unint64_t v5 = self;

  return [v5 preferredContentsRectForAsset:v2 targetSize:a1];
}

id PHAsset.portraitCropRect.getter()
{
  uint64_t v1 = self;

  return [v1 preferredContentsRectForAsset:v0 targetSize:CGSizeMake(98.0, 200.0)];
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_19;
  }
LABEL_3:
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    id v32 = *(id *)(v4 + 16);
    uint64_t v31 = (char)(a2 - 2);
    uint64_t v33 = v9;
    while (1)
    {
      id v15 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(a1 + 8 * v11 + 32);
      uint64_t v16 = v15;
      if (v31 >= 9) {
        break;
      }
      double v17 = dbl_1001DC488[v31];
      double v18 = dbl_1001DC4D0[v31];
      id v19 = [self mainScreen];
      [v19 scale];
      double v21 = v20;

      double v22 = v17 * v21;
      double v23 = v18 * v21;
      if (a2 != 8) {
        goto LABEL_15;
      }
      BOOL v24 = 1;
LABEL_16:
      os_log_type_t v25 = (void *)swift_allocObject();
      v25[2] = v16;
      v25[3] = v8;
      v25[4] = v7;
      v25[5] = a1;
      v25[6] = a3;
      v25[7] = a4;
      id v26 = objc_allocWithZone((Class)PHImageRequestOptions);
      id v27 = v16;
      swift_bridgeObjectRetain();
      id v28 = v27;
      swift_retain();
      swift_retain();
      swift_retain();
      id v29 = [v26 init];
      [v29 setDeliveryMode:1];
      [v29 setNetworkAccessAllowed:1];
      [v29 setUseLowMemoryMode:1];
      if (v24) {
        [v29 setDownloadIntent:3];
      }
      ++v11;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:);
      *(void *)(v12 + 24) = v25;
      aBlock[4] = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
      aBlock[5] = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIImage?, @guaranteed [AnyHashable : Any]?) -> ();
      aBlock[3] = &block_descriptor_16;
      uint64_t v13 = _Block_copy(aBlock);
      id v14 = v29;
      swift_retain();
      swift_release();
      [v32 requestImageForAsset:v28 targetSize:1 contentMode:v14 options:v13 resultHandler:v22 v23];
      _Block_release(v13);

      swift_release();
      if (v33 == v11) {
        goto LABEL_19;
      }
    }
    if (one-time initialization token for highQualityImageSize != -1) {
      swift_once();
    }
    double v23 = *((double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize + 1);
    double v22 = *(double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize;
LABEL_15:
    BOOL v24 = (a2 - 11) < 0xF7u;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v8 = (void *)(a3 + 16);
  uint64_t v9 = (uint64_t *)(a4 + 16);
  if (a1)
  {
    id v11 = a1;
    id v12 = [a2 mediaType];
    uint64_t v13 = (id *)&MOSuggestionAssetsTypeVideo;
    if (v12 != (id)2) {
      uint64_t v13 = (id *)&MOSuggestionAssetsTypePhoto;
    }
    id v14 = *v13;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    id v15 = objc_allocWithZone((Class)MOSuggestionAsset);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v17 = v11;
    id v18 = [v15 init:v17 type:v14 contentClassType:ObjCClassFromMetadata];

    id v19 = specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(a2);
    specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v19);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 addMetadata:isa];

    swift_beginAccess();
    id v21 = v18;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  uint64_t result = swift_beginAccess();
  uint64_t v23 = *v9 + 1;
  if (__OFADD__(*v9, 1))
  {
    __break(1u);
  }
  else
  {
    *uint64_t v9 = v23;
    if (!(a5 >> 62))
    {
      if (v23 != *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return result;
      }
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v23 != v26) {
    return result;
  }
LABEL_10:
  swift_beginAccess();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = specialized _arrayConditionalCast<A, B>(_:)(v24);
  swift_bridgeObjectRelease();
  a6(v25);
  return swift_bridgeObjectRelease();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_18:
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_18;
  }
LABEL_3:
  id v27 = *(void (**)(id, uint64_t, BOOL, uint64_t (*)(uint64_t), void *, double, double))(*(void *)v4 + 216);
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v26 = (char)(a2 - 2);
    while (1)
    {
      id v16 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(a1 + 8 * v11 + 32);
      id v17 = v16;
      if (v26 >= 9) {
        break;
      }
      double v18 = dbl_1001DC488[v26];
      double v19 = dbl_1001DC4D0[v26];
      id v20 = [self mainScreen];
      [v20 scale];
      double v22 = v21;

      double v23 = v18 * v22;
      double v24 = v19 * v22;
      if (a2 != 8) {
        goto LABEL_16;
      }
      BOOL v12 = 1;
LABEL_6:
      ++v11;
      uint64_t v13 = (void *)swift_allocObject();
      v13[2] = v17;
      v13[3] = v8;
      v13[4] = v7;
      v13[5] = a1;
      v13[6] = a3;
      v13[7] = a4;
      id v14 = v17;
      swift_bridgeObjectRetain();
      id v15 = v14;
      swift_retain();
      swift_retain();
      swift_retain();
      v27(v15, 1, v12, partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:), v13, v23, v24);

      swift_release();
      if (v9 == v11) {
        goto LABEL_18;
      }
    }
    if (one-time initialization token for highQualityImageSize != -1) {
      swift_once();
    }
    double v24 = *((double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize + 1);
    double v23 = *(double *)&static MOSuggestionAssetPhotoLivePhotoVideosProvider.highQualityImageSize;
LABEL_16:
    BOOL v12 = (a2 - 11) < 0xF7u;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v8 = (void *)(a3 + 16);
  uint64_t v9 = (uint64_t *)(a4 + 16);
  if (a1)
  {
    uint64_t v12 = MOSuggestionAssetsTypeLivePhoto;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for PHLivePhoto);
    id v13 = objc_allocWithZone((Class)MOSuggestionAsset);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v15 = a1;
    id v16 = [v13 init:v15 type:v12 contentClassType:ObjCClassFromMetadata];
    id v17 = specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(a2);
    specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v17);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v16 addMetadata:isa];

    swift_beginAccess();
    id v19 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  uint64_t result = swift_beginAccess();
  uint64_t v21 = *v9 + 1;
  if (__OFADD__(*v9, 1))
  {
    __break(1u);
  }
  else
  {
    *uint64_t v9 = v21;
    if (!(a5 >> 62))
    {
      if (v21 != *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return result;
      }
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v21 != v24) {
    return result;
  }
LABEL_8:
  swift_beginAccess();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = specialized _arrayConditionalCast<A, B>(_:)(v22);
  swift_bridgeObjectRelease();
  a6(v23);
  return swift_bridgeObjectRelease();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:)(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v81 = a4;
  uint64_t v80 = a3;
  unint64_t v79 = a2;
  uint64_t v78 = type metadata accessor for URL.DirectoryHint();
  uint64_t v5 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  id v77 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for URL();
  uint64_t v82 = *(void *)(v96 - 8);
  uint64_t v7 = *(void *)(v82 + 64);
  uint64_t v8 = __chkstk_darwin(v96);
  v94 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v8);
  v95 = (char *)v64 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v64 - v11;
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = _swiftEmptyArrayStorage;
  unint64_t v86 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v13 = result;
    if (result)
    {
LABEL_3:
      if (v13 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v16 = 0;
        unint64_t v85 = v86 & 0xC000000000000001;
        uint64_t v75 = (void (**)(char *, void, uint64_t))(v5 + 104);
        unsigned int v74 = enum case for URL.DirectoryHint.inferFromPath(_:);
        unsigned __int8 v73 = (void (**)(char *, uint64_t))(v5 + 8);
        id v17 = (void (**)(char *, uint64_t))(v82 + 8);
        v93 = (void (**)(char *, char *, uint64_t))(v82 + 16);
        p_uint64_t aBlock = &aBlock;
        uint64_t v72 = v7 + 7;
        uint64_t v71 = v82 + 32;
        id v70 = v100;
        *(void *)&long long v15 = 136315138;
        long long v65 = v15;
        v64[1] = (char *)&type metadata for Any + 8;
        id v84 = v12;
        uint64_t v76 = v13;
        id v69 = (void (**)(char *, uint64_t))(v82 + 8);
        do
        {
          if (v85) {
            id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v18 = *(id *)(v86 + 8 * v16 + 32);
          }
          id v19 = v18;
          id v20 = objc_allocWithZone((Class)type metadata accessor for PhotosFileProviderRegister.Configuration());
          uint64_t v21 = (void *)PhotosFileProviderRegister.Configuration.init(usage:)();
          dispatch thunk of PhotosFileProviderRegister.Configuration.shouldIncludeLocation.setter();
          dispatch thunk of PhotosFileProviderRegister.Configuration.shouldIncludeCaption.setter();
          dispatch thunk of PhotosFileProviderRegister.Configuration.clientEncodingPolicy.setter();
          dispatch thunk of PhotosFileProviderRegister.Configuration.userEncodingPolicy.setter();
          if (one-time initialization token for photosFileProviderManager != -1) {
            swift_once();
          }
          if (static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager)
          {
            uint64_t v22 = one-time initialization token for fileProviderDomain;
            id v23 = (id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.photosFileProviderManager;
            id v24 = v21;
            if (v22 != -1) {
              swift_once();
            }
            uint64_t v25 = (void *)static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
            id v26 = objc_allocWithZone((Class)type metadata accessor for PhotosFileProviderRegister());
            id v27 = v25;
            id v90 = v24;
            id v28 = (void *)PhotosFileProviderRegister.init(configuration:fileProviderManager:domain:)();
            id v29 = [objc_allocWithZone((Class)NSItemProvider) init];
            id v89 = v28;
            uint64_t v88 = dispatch thunk of PhotosFileProviderRegister.registerFileRepresentations(itemProvider:asset:)();

            id v91 = v23;
            id v30 = [v23 documentStorageURL];
            uint64_t v31 = v95;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            id v32 = [(id)static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain pathRelativeToDocumentStorage];
            uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v35 = v34;

            uint64_t aBlock = v33;
            uint64_t v99 = v35;
            uint64_t v36 = v77;
            uint64_t v37 = v78;
            (*v75)(v77, v74, v78);
            lazy protocol witness table accessor for type String and conformance String();
            URL.appending<A>(component:directoryHint:)();
            (*v73)(v36, v37);
            swift_bridgeObjectRelease();
            unint64_t v38 = *v17;
            (*v17)(v31, v96);
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
              swift_once();
            }
            v92 = v19;
            uint64_t v39 = type metadata accessor for Logger();
            __swift_project_value_buffer(v39, (uint64_t)static MOAngelLogger.assets);
            id v40 = *v93;
            (*v93)(v94, v12, v96);
            uint64_t v41 = Logger.logObject.getter();
            os_log_type_t v42 = static os_log_type_t.default.getter();
            BOOL v43 = os_log_type_enabled(v41, v42);
            v87 = v38;
            if (v43)
            {
              uint64_t v44 = swift_slowAlloc();
              id v68 = v40;
              uint64_t v45 = (uint8_t *)v44;
              uint64_t aBlock = swift_slowAlloc();
              *(_DWORD *)uint64_t v45 = v65;
              uint64_t v67 = v45 + 4;
              URL.absoluteURL.getter();
              uint64_t v46 = URL.absoluteString.getter();
              unint64_t v48 = v47;
              v38(v95, v96);
              uint64_t v97 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, &aBlock);
              uint64_t v12 = v84;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              v38(v94, v96);
              _os_log_impl((void *)&_mh_execute_header, v41, v42, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] checking path=%s", v45, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              id v40 = v68;
              swift_slowDealloc();
            }
            else
            {
              v38(v94, v96);
            }

            uint64_t v49 = static MOSuggestionAssetPhotoLivePhotoVideosProvider.fileProviderDomain;
            v40(v95, v12, v96);
            uint64_t v50 = v82;
            unint64_t v51 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
            unint64_t v52 = (v72 + v51) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v55 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v56 = swift_allocObject();
            uint64_t v57 = v81;
            *(void *)(v56 + 16) = v80;
            *(void *)(v56 + 24) = v57;
            (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v56 + v51, v95, v96);
            *(void *)(v56 + v52) = v88;
            unint64_t v58 = v79;
            *(void *)(v56 + v53) = v79;
            uint64_t v59 = v92;
            *(void *)(v56 + v54) = v92;
            uint64_t v12 = v84;
            *(void *)(v56 + v55) = v83;
            v100[2] = partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:);
            v100[3] = v56;
            uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
            uint64_t v99 = 1107296256;
            v100[0] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
            v100[1] = &block_descriptor_33;
            uint64_t v60 = _Block_copy(&aBlock);
            swift_retain();
            id v61 = v58;
            id v62 = v59;
            swift_retain();
            swift_release();
            id v63 = v91;
            [v91 addDomain:v49 completionHandler:v60];
            _Block_release(v60);

            id v17 = v69;
            v87(v12, v96);
            uint64_t v13 = v76;
          }
          else
          {
          }
          ++v16;
        }
        while (v13 != v16);
        swift_release();
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  v111 = a4;
  uint64_t v112 = a8;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v20 = __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  uint64_t v22 = __chkstk_darwin((char *)&v96 - v21);
  uint64_t v23 = __chkstk_darwin(v22);
  id v28 = (char *)&v96 - v27;
  if (!a1)
  {
    uint64_t v102 = v23;
    uint64_t v97 = v26;
    uint64_t v103 = a5;
    v105 = v16;
    v98 = v25;
    uint64_t v99 = a6;
    v100 = a7;
    unint64_t v101 = v24;
    uint64_t v106 = a3;
    v108 = a2;
    uint64_t v36 = self;
    id v37 = [v36 defaultManager];
    unint64_t v38 = v111;
    URL.absoluteURL.getter();
    URL.absoluteString.getter();
    uint64_t v104 = v18;
    v109 = *(void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v110 = v17;
    uint64_t v107 = v18 + 8;
    v109(v28, v17);
    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v40 = [v37 directoryExistsAtPath:v39];

    if (v40)
    {
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v41 = type metadata accessor for Logger();
      __swift_project_value_buffer(v41, (uint64_t)static MOAngelLogger.assets);
      uint64_t v42 = v104;
      uint64_t v43 = v102;
      uint64_t v44 = v110;
      (*(void (**)(uint64_t, void *, uint64_t))(v104 + 16))(v102, v38, v110);
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v45, v46))
      {
        unint64_t v47 = (uint8_t *)swift_slowAlloc();
        v114[0] = (id)swift_slowAlloc();
        *(_DWORD *)unint64_t v47 = 136315138;
        _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, (uint64_t *)v114);
        uint64_t v44 = v110;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v109((char *)v43, v44);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] photospicker dir already exists dir=%s", v47, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v109((char *)v43, v44);
      }

      unint64_t v58 = v108;
    }
    else
    {
      id v51 = [v36 defaultManager];
      URL._bridgeToObjectiveC()(v52);
      unint64_t v54 = v53;
      v114[0] = 0;
      unsigned int v55 = [v51 createDirectoryAtURL:v53 withIntermediateDirectories:1 attributes:0 error:v114];

      if (v55)
      {
        connectionProperties = serverManager._connectionProperties;
        id v57 = v114[0];
        unint64_t v58 = v108;
        uint64_t v42 = v104;
        if (connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v59 = type metadata accessor for Logger();
        __swift_project_value_buffer(v59, (uint64_t)static MOAngelLogger.assets);
        uint64_t v60 = v97;
        uint64_t v44 = v110;
        (*(void (**)(char *, void *, uint64_t))(v42 + 16))(v97, v38, v110);
        id v61 = Logger.logObject.getter();
        os_log_type_t v62 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v61, v62))
        {
          id v63 = (uint8_t *)swift_slowAlloc();
          v111 = (void *)swift_slowAlloc();
          v114[0] = v111;
          *(_DWORD *)id v63 = 136315138;
          _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v65, (uint64_t *)v114);
          uint64_t v44 = v110;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v109(v60, v44);
          _os_log_impl((void *)&_mh_execute_header, v61, v62, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] creating dir=%s", v63, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v109(v60, v44);
        }
      }
      else
      {
        id v66 = v114[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        unint64_t v58 = v108;
        uint64_t v42 = v104;
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v67 = type metadata accessor for Logger();
        __swift_project_value_buffer(v67, (uint64_t)static MOAngelLogger.assets);
        swift_errorRetain();
        swift_errorRetain();
        id v68 = Logger.logObject.getter();
        os_log_type_t v69 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v68, v69))
        {
          id v70 = (uint8_t *)swift_slowAlloc();
          v111 = (void *)swift_slowAlloc();
          v114[0] = v111;
          *(_DWORD *)id v70 = 136315138;
          swift_getErrorValue();
          uint64_t v71 = Error.localizedDescription.getter();
          uint64_t v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v71, v72, (uint64_t *)v114);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] error creating photospicker dir, error=%s", v70, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v44 = v110;
      }
    }
    uint64_t v73 = (uint64_t)v105;
    unsigned int v74 = (void *)(v112 + 16);
    if (*(void *)(v103 + 16))
    {
      uint64_t v75 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
      v75(v105, v103 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80)), v44);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v73, 0, 1, v44);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v73, 1, v44) != 1)
      {
        unint64_t v76 = v101;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32))(v101, v73, v44);
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v77 = type metadata accessor for Logger();
        __swift_project_value_buffer(v77, (uint64_t)static MOAngelLogger.assets);
        uint64_t v78 = v98;
        unint64_t v79 = (char *)v76;
        v75(v98, v76, v44);
        uint64_t v80 = Logger.logObject.getter();
        os_log_type_t v81 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v80, v81))
        {
          uint64_t v82 = (uint8_t *)swift_slowAlloc();
          v114[0] = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v82 = 136315138;
          _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1(&lazy protocol witness table cache variable for type URL and conformance URL, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v113 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v84, (uint64_t *)v114);
          uint64_t v44 = v110;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v109(v78, v44);
          _os_log_impl((void *)&_mh_execute_header, v80, v81, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] registered file url=%s", v82, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v109(v78, v44);
        }

        URL._bridgeToObjectiveC()(v85);
        v87 = v86;
        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSURL);
        id v88 = objc_allocWithZone((Class)MOSuggestionAsset);
        id v89 = [v88 init:v87 type:v99 contentClassType:swift_getObjCClassFromMetadata()];

        id v90 = specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(v100);
        specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v90);
        swift_bridgeObjectRelease();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v89 addMetadata:isa];

        swift_beginAccess();
        id v92 = v89;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();

        v109(v79, v44);
        unint64_t v58 = v108;
LABEL_40:
        swift_beginAccess();
        if (*v74 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v95 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v95 >= 1) {
            goto LABEL_42;
          }
        }
        else if (*(uint64_t *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
        {
LABEL_42:
          swift_beginAccess();
          uint64_t v93 = swift_bridgeObjectRetain();
          uint64_t v94 = specialized _arrayConditionalCast<A, B>(_:)(v93);
          swift_bridgeObjectRelease();
          v58(v94);
          return swift_bridgeObjectRelease();
        }
        return ((uint64_t (*)(void))v58)(0);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v105, 1, 1, v44);
    }
    outlined destroy of Any?(v73, &demangling cache variable for type metadata for URL?);
    goto LABEL_40;
  }
  id v29 = a2;
  swift_errorRetain();
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  __swift_project_value_buffer(v30, (uint64_t)static MOAngelLogger.assets);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 138412290;
    swift_errorRetain();
    uint64_t v35 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v114[0] = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v34 = v35;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] domain creation err=%@", v33, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v29(0);
  return swift_errorRelease();
}

void thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ()(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhoto(for:targetSize:contentMode:oneUpIntent:onComplete:)(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v15 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  uint64_t v16 = (int *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = a1;
  swift_retain();
  UUID.init()();
  *(void *)&v18[v16[7]] = v19;
  uint64_t v20 = (double *)&v18[v16[8]];
  *uint64_t v20 = a6;
  v20[1] = a7;
  *(void *)&v18[v16[9]] = a2;
  v18[v16[10]] = a3;
  uint64_t v21 = &v18[v16[11]];
  *(void *)uint64_t v21 = a4;
  *((void *)v21 + 1) = a5;
  (*(void (**)(char *))(*(void *)v7 + 224))(v18);
  return outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v18);
}

void MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = (int *)type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  uint64_t v74 = *((void *)v4 - 1);
  uint64_t v5 = *(void *)(v74 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v73 = (int *)((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v68 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v68 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v72 = (uint64_t)&v68 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (unint64_t *)((char *)&v68 - v16);
  __chkstk_darwin(v15);
  id v19 = (char *)&v68 - v18;
  uint64_t v20 = (int *)[objc_allocWithZone((Class)PHLivePhotoRequestOptions) init];
  [v20 setDeliveryMode:1];
  id v21 = [v20 setNetworkAccessAllowed:1];
  if (*(unsigned char *)(a1 + v4[8]) == 1) {
    id v21 = [v20 setDownloadIntent:3];
  }
  if ((*(uint64_t (**)(id))(*v1 + 136))(v21) > 1)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)static MOAngelLogger.assets);
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v12);
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v9);
    id v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.debug.getter();
    int v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      aBlock[0] = v72;
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v70 = v40 + 4;
      id v41 = [*(id *)&v12[v4[5]] localIdentifier];
      uint64_t v42 = v20;
      uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      LODWORD(v71) = v39;
      unint64_t v45 = v44;

      uint64_t v46 = v43;
      uint64_t v20 = v42;
      uint64_t v76 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v45, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v12);
      *(_WORD *)(v40 + 12) = 2080;
      uint64_t v47 = UUID.uuidString.getter();
      uint64_t v76 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v48, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v71, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] queueing task request, assetID=%s, uuid=%s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v12);
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v9);
    }

    id v4 = v73;
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v73);
    uint64_t v23 = (*(uint64_t (**)(uint64_t *))(*v2 + 128))(aBlock);
    uint64_t v17 = v64;
    unint64_t v49 = *v64;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v17 = v49;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_17;
    }
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.assets);
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v19);
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, (uint64_t)v17);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      aBlock[0] = v71;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v68 = v26 + 4;
      id v27 = [*(id *)&v19[v4[5]] localIdentifier:v26 + 4];
      LODWORD(v70) = v25;
      id v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v73 = v20;
      uint64_t v30 = v29;
      os_log_t v69 = v23;
      unint64_t v32 = v31;

      uint64_t v76 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v32, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v19);
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v33 = UUID.uuidString.getter();
      uint64_t v76 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, aBlock);
      uint64_t v20 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v17);
      os_log_t v35 = v69;
      _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v70, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] executing task request, assetID=%s, uuid=%s", (uint8_t *)v26, 0x16u);
      uint64_t v23 = v71;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v19);
      outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v17);
    }
    unint64_t v49 = (unint64_t)v2;
    uint64_t v50 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*v2 + 152))(aBlock);
    if (!__OFADD__(*v51, 1))
    {
      ++*v51;
      v50(aBlock, 0);
      unint64_t v52 = (void *)v2[2];
      uint64_t v53 = v4[6];
      uint64_t v54 = *(void *)(a1 + v4[5]);
      double v55 = *(double *)(a1 + v53);
      double v56 = *(double *)(a1 + v53 + 8);
      uint64_t v57 = *(void *)(a1 + v4[7]);
      uint64_t v58 = swift_allocObject();
      swift_weakInit();
      uint64_t v59 = v72;
      outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(a1, v72);
      unint64_t v60 = (*(unsigned __int8 *)(v74 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v58;
      outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v59, v61 + v60);
      aBlock[4] = (uint64_t)partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:);
      aBlock[5] = v61;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed UIImage?, @guaranteed [AnyHashable : Any]?) -> ();
      aBlock[3] = (uint64_t)&block_descriptor_42_0;
      os_log_type_t v62 = _Block_copy(aBlock);
      id v63 = v20;
      swift_release();
      [v52 requestLivePhotoForAsset:v54 targetSize:v57 contentMode:v63 options:v62 resultHandler:v55, v56];

      _Block_release(v62);
      goto LABEL_20;
    }
    __break(1u);
  }
  unint64_t v49 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v49 + 16) + 1, 1, v49);
  unint64_t *v17 = v49;
LABEL_17:
  unint64_t v67 = *(void *)(v49 + 16);
  unint64_t v66 = *(void *)(v49 + 24);
  if (v67 >= v66 >> 1)
  {
    unint64_t v49 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1, v49);
    unint64_t *v17 = v49;
  }
  *(void *)(v49 + 16) = v67 + 1;
  outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v4, v49+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v67);
  ((void (*)(uint64_t *, void))v23)(aBlock, 0);
LABEL_20:
}

uint64_t closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
    (*(void (**)(uint64_t))(a4 + *(int *)(v8 + 36)))(a1);
    uint64_t v9 = *(NSObject **)(v7 + 24);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:);
    *(void *)(v10 + 24) = v7;
    aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_89;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v11);
    swift_release();
    _Block_release(v11);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v9) {
      __break(1u);
    }
  }
  return result;
}

void (*closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(void *a1))(void *, void)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v50 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v48 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DispatchQoS();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v46 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v43 = (char *)&v40 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask?);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v42 = (uint64_t)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v51 = (uint64_t)&v40 - v21;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*a1 + 112))(v20);
  if (*(void *)(v22 + 16))
  {
    outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v22 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v15);
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v23(v15, 0, 1, v16);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v23(v15, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask?);
    uint64_t result = (void (*)(void *, void))(*(uint64_t (**)(void *))(*a1 + 152))(aBlock);
    if (!__OFSUB__(*v25, 1))
    {
      --*v25;
      return (void (*)(void *, void))((uint64_t (*)(void *, void))result)(aBlock, 0);
    }
    __break(1u);
    goto LABEL_12;
  }
  outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask((uint64_t)v15, v51);
  uint64_t result = (void (*)(void *, void))(*(uint64_t (**)(void *))(*a1 + 128))(aBlock);
  uint64_t v27 = *v26;
  if (!*(void *)(*v26 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v28 = result;
  uint64_t v29 = v26;
  uint64_t v41 = v2;
  uint64_t v30 = *(unsigned __int8 *)(v17 + 80);
  outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v27 + ((v30 + 32) & ~v30), (uint64_t)v13);
  v23(v13, 0, 1, v16);
  uint64_t result = (void (*)(void *, void))outlined destroy of Any?((uint64_t)v13, &demangling cache variable for type metadata for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask?);
  if (!*(void *)(*v29 + 16))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  specialized Array.replaceSubrange<A>(_:with:)(0, 1);
  v28(aBlock, 0);
  uint64_t v40 = a1[3];
  static DispatchTime.now()();
  unint64_t v31 = v43;
  + infix(_:_:)();
  uint64_t v44 = *(void *)(v44 + 8);
  unint64_t v32 = v8;
  uint64_t v33 = v45;
  ((void (*)(char *, uint64_t))v44)(v32, v45);
  uint64_t v34 = v42;
  outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v51, v42);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a1;
  outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v34, v35 + ((v30 + 24) & ~v30));
  aBlock[4] = partial apply for closure #1 in closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:);
  aBlock[5] = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_95;
  uint64_t v36 = _Block_copy(aBlock);
  swift_retain();
  id v37 = v46;
  static DispatchQoS.unspecified.getter();
  unint64_t v52 = _swiftEmptyArrayStorage;
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  os_log_type_t v38 = v48;
  uint64_t v39 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v49);
  ((void (*)(char *, uint64_t))v44)(v31, v33);
  outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(v51);
  return (void (*)(void *, void))swift_release();
}

void (*closure #1 in closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(uint64_t a1, uint64_t a2))(unsigned char *, void)
{
  uint64_t result = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)a1 + 152))(v6);
  if (__OFSUB__(*v5, 1))
  {
    __break(1u);
  }
  else
  {
    --*v5;
    result(v6, 0);
    return (void (*)(unsigned char *, void))(*(uint64_t (**)(uint64_t))(*(void *)a1 + 224))(a2);
  }
  return result;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = _swiftEmptyArrayStorage;
  id v21 = [objc_allocWithZone((Class)PHVideoRequestOptions) init];
  [v21 setNetworkAccessAllowed:1];
  if (a2) {
    [v21 setDownloadIntent:3];
  }
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_5;
    }
LABEL_13:

LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_5:
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    id v19 = *(id *)(v4 + 16);
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      ++v12;
      uint64_t v15 = (void *)swift_allocObject();
      v15[2] = v14;
      v15[3] = v9;
      v15[4] = v8;
      v15[5] = a1;
      v15[6] = a3;
      v15[7] = a4;
      aBlock[4] = partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:);
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed AVAsset?, @guaranteed AVAudioMix?, @guaranteed [AnyHashable : Any]?) -> ();
      aBlock[3] = &block_descriptor_50;
      uint64_t v16 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      id v17 = v21;
      id v18 = v14;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v19 requestAVAssetForVideo:v18 options:v17 resultHandler:v16];
      _Block_release(v16);
    }
    while (v10 != v12);

    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(uint64_t))
{
  uint64_t v11 = (void *)(a5 + 16);
  if (a1)
  {
    self;
    uint64_t v14 = swift_dynamicCastObjCClass();
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      id v16 = a1;
      id result = [v15 URL];
      if (!result)
      {
        __break(1u);
        return result;
      }
      id v18 = result;
      uint64_t v19 = MOSuggestionAssetsTypeVideo;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSURL);
      id v20 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v18 type:v19 contentClassType:swift_getObjCClassFromMetadata()];

      id v21 = specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(a4);
      specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v21);
      swift_bridgeObjectRelease();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 addMetadata:isa];

      swift_beginAccess();
      id v23 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
    }
  }
  os_log_type_t v24 = (uint64_t *)(a6 + 16);
  id result = (id)swift_beginAccess();
  uint64_t v25 = *v24 + 1;
  if (__OFADD__(*v24, 1))
  {
    __break(1u);
  }
  else
  {
    *os_log_type_t v24 = v25;
    if (!(a7 >> 62))
    {
      if (v25 != *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return result;
      }
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  id result = (id)swift_bridgeObjectRelease();
  if (v25 == v28)
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = specialized _arrayConditionalCast<A, B>(_:)(v26);
    swift_bridgeObjectRelease();
    a8(v27);
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MOSuggestionAssetPhotoLivePhotoVideosProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  MOSuggestionAssetPhotoLivePhotoVideosProvider.init()();
  return v0;
}

void *MOSuggestionAssetPhotoLivePhotoVideosProvider.init()()
{
  v7[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v7[0] - 8);
  __chkstk_darwin(v7[0]);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  v0[2] = [objc_allocWithZone((Class)PHCachingImageManager) init];
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  v7[1] = &_swiftEmptyArrayStorage;
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7[0]);
  v0[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v0[4] = &_swiftEmptyArrayStorage;
  v0[5] = 0;
  return v0;
}

void static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  id v9 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  URL._bridgeToObjectiveC()(v10);
  uint64_t v12 = v11;
  id v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = partial apply for closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:);
  v14[3] = v13;
  aBlock[4] = partial apply for thunk for @callee_guaranteed (@in_guaranteed URL) -> ();
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@in_guaranteed URL) -> ();
  aBlock[3] = &block_descriptor_59;
  uint64_t v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  [v9 coordinateReadingItemAtURL:v12 options:0 error:aBlock byAccessor:v15];
  _Block_release(v15);

  id v16 = aBlock[0];
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  if (!v16) {
    goto LABEL_8;
  }
  connectionProperties = serverManager._connectionProperties;
  uint64_t isEscapingClosureAtFileLocation = (uint64_t)v16;
  if (connectionProperties != (NSMutableDictionary *)-1) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static MOAngelLogger.assets);
  id v20 = (id)isEscapingClosureAtFileLocation;
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v29 = a4;
    id v23 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = (id)swift_slowAlloc();
    *(_DWORD *)id v23 = 136315138;
    id v24 = [v20 localizedDescription];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v28 = v9;
    unint64_t v27 = v26;

    a4 = v29;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v27, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v9 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[MOSuggestionAssetPhotoLivePhotoVideosProvider] Failed to retrieve URL for Live Photo %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  a4(0);

LABEL_8:
  swift_release();
}

void closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v72 = a4;
  uint64_t v73 = a3;
  uint64_t v71 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v84 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v83 = (char *)v69 - v14;
  __chkstk_darwin(v13);
  id v91 = (char *)v69 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = [self defaultManager];
  URL._bridgeToObjectiveC()(v20);
  os_log_type_t v22 = v21;
  id aBlock = 0;
  id v23 = [v19 contentsOfDirectoryAtURL:v21 includingPropertiesForKeys:0 options:0 error:&aBlock];

  id v24 = aBlock;
  if (!v23)
  {
    id v55 = aBlock;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    __swift_project_value_buffer(v56, (uint64_t)static MOAngelLogger.assets);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      id aBlock = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136315138;
      swift_getErrorValue();
      uint64_t v60 = Error.localizedDescription.getter();
      uint64_t v92 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v61, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s", v59, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_25;
  }
  uint64_t v70 = a5;
  uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = v24;

  uint64_t v27 = *(void *)(v25 + 16);
  if (!v27)
  {
    a5 = v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
    goto LABEL_23;
  }
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v28 = v10 + 16;
  uint64_t v82 = v29;
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64);
  v69[2] = v25;
  unint64_t v74 = v30;
  unint64_t v31 = v25 + v30;
  uint64_t v32 = *(void *)(v28 + 56);
  uint64_t v80 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 32);
  unint64_t v86 = (void (**)(char *, uint64_t))(v28 - 8);
  v87 = (void (**)(char *, char *, uint64_t))(v28 + 16);
  uint64_t v33 = _swiftEmptyArrayStorage;
  os_log_type_t v81 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 40);
  v69[1] = (v28 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v34 = (uint64_t)v8;
  unint64_t v79 = v8;
  uint64_t v78 = v18;
  uint64_t v77 = v28;
  uint64_t v76 = v32;
  do
  {
    id v37 = v82;
    v82(v18, (char *)v31, v9);
    uint64_t v75 = *v81;
    v75(v18, 0, 1, v9);
    if ((*v80)(v18, 1, v9) == 1)
    {
      swift_bridgeObjectRelease();
      a5 = v70;
      goto LABEL_25;
    }
    unint64_t v88 = v31;
    uint64_t v89 = v27;
    id v90 = v33;
    os_log_type_t v38 = v91;
    unint64_t v85 = *v87;
    v85(v91, v18, v9);
    id aBlock = (id)URL.pathExtension.getter();
    uint64_t v95 = v39;
    uint64_t v92 = 5656397;
    unint64_t v93 = 0xE300000000000000;
    uint64_t v40 = type metadata accessor for Locale();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
    v41(v34, 1, 1, v40);
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v42 = StringProtocol.compare<A>(_:options:range:locale:)();
    outlined destroy of Any?(v34, &demangling cache variable for type metadata for Locale?);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = v34;
    uint64_t v44 = v83;
    uint64_t v45 = v38;
    uint64_t v46 = v43;
    v37(v83, v45, v9);
    if (v42)
    {
      id aBlock = (id)URL.pathExtension.getter();
      uint64_t v95 = v47;
      uint64_t v92 = 1128875336;
      unint64_t v93 = 0xE400000000000000;
      v41(v46, 1, 1, v40);
      uint64_t v48 = StringProtocol.compare<A>(_:options:range:locale:)();
      outlined destroy of Any?(v46, &demangling cache variable for type metadata for Locale?);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = *v86;
      (*v86)(v44, v9);
      if (v48)
      {
        v49(v91, v9);
        uint64_t v34 = (uint64_t)v79;
        id v18 = v78;
        uint64_t v35 = v89;
        uint64_t v33 = v90;
        uint64_t v36 = v76;
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v49 = *v86;
      (*v86)(v44, v9);
    }
    uint64_t v33 = v90;
    v37(v84, v91, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = (uint64_t)v79;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v33 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v33[2] + 1, 1, (unint64_t)v33);
    }
    id v18 = v78;
    uint64_t v35 = v89;
    uint64_t v51 = v85;
    unint64_t v53 = v33[2];
    unint64_t v52 = v33[3];
    if (v53 >= v52 >> 1) {
      uint64_t v33 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1, (unint64_t)v33);
    }
    v33[2] = v53 + 1;
    uint64_t v54 = (char *)v33 + v74 + v53 * v76;
    uint64_t v36 = v76;
    v51(v54, v84, v9);
    v49(v91, v9);
LABEL_5:
    unint64_t v31 = v88 + v36;
    uint64_t v27 = v35 - 1;
  }
  while (v27);
  a5 = v70;
  v75(v18, 1, 1, v9);
LABEL_23:
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v62 = v73;
  uint64_t v63 = v72;
  uint64_t v64 = v71;
  unint64_t v65 = self;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  unint64_t v67 = (void *)swift_allocObject();
  v67[2] = v64;
  v67[3] = v62;
  v67[4] = v63;
  v67[5] = a5;
  v98 = partial apply for closure #1 in closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:);
  uint64_t v99 = v67;
  id aBlock = _NSConcreteStackBlock;
  uint64_t v95 = 1107296256;
  uint64_t v96 = thunk for @escaping @callee_guaranteed (@guaranteed PHLivePhoto?, @guaranteed [AnyHashable : Any]) -> ();
  uint64_t v97 = &block_descriptor_83;
  uint64_t v68 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v65 requestLivePhotoWithResourceFileURLs:isa placeholderImage:0 targetSize:0 contentMode:0 resultHandler:0.0 0.0];
  _Block_release(v68);
}

void closure #1 in closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (a1)
  {
    uint64_t v7 = MOSuggestionAssetsTypeLivePhoto;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for PHLivePhoto);
    id v8 = objc_allocWithZone((Class)MOSuggestionAsset);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = a1;
    id v11 = [v8 init:v10 type:v7 contentClassType:ObjCClassFromMetadata];
    NSString v12 = String._bridgeToObjectiveC()();
    [v11 addIdentifier:v12];

    id v13 = v11;
    ((void (*)(id))a5)(v11);
  }
  else
  {
    a5();
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed URL) -> ()(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void static MOSuggestionAssetPhotoLivePhotoVideosProvider.normalizedSquareCrop(normalizedCropRect:imageBounds:)()
{
  specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.squareCrop(normalizedCropRect:imageBounds:)();
  CGFloat x = v5.origin.x;
  CGFloat y = v5.origin.y;
  CGFloat width = v5.size.width;
  CGFloat height = v5.size.height;
  CGRectGetWidth(v5);
  v6.origin.CGFloat x = x;
  v6.origin.CGFloat y = y;
  v6.size.CGFloat width = width;
  v6.size.CGFloat height = height;
  CGRectGetHeight(v6);

  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

void specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.assetTypeFromIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)PHFetchOptions) init];
  [v4 setIncludeGuestAssets:1];
  CGRect v5 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001DA0F0;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v5 fetchAssetsWithLocalIdentifiers:isa options:v4];

  id v9 = [v8 fetchedObjects];
  if (!v9)
  {

    return;
  }
  id v10 = v9;
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHAsset);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v11 >> 62))
  {
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_12:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v12 = *(id *)(v11 + 32);
  }
  id v13 = v12;
  swift_bridgeObjectRelease();
  if ([v13 mediaType] == (id)1)
  {
    [v13 mediaSubtypes];
  }
  else
  {
  }
}

uint64_t sub_1000B4FD8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B4FE8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:)(uint64_t a1)
{
  return closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.getAssetsFor(identifiers:cacheType:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40));
}

void *specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.packedImageMetadata(from:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v73 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v74 = (uint64_t)&v73 - v6;
  __chkstk_darwin(v5);
  id v8 = (char *)&v73 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v73 - v14;
  unint64_t v79 = &_swiftEmptyDictionarySingleton;
  id v16 = [a1 creationDate];
  if (v16)
  {
    uint64_t v17 = v16;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v18(v8, v13, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v18(v15, v8, v9);
      id v19 = (void *)MOSuggestionAssetMetadataKeyPhotoMomentDate;
      uint64_t v78 = (void *)v9;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v77);
      (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v15, v9);
      outlined init with take of Any(&v77, v76);
      id v21 = v19;
      os_log_type_t v22 = v79;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v75 = v22;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v76, v21, isUniquelyReferenced_nonNull_native);
      unint64_t v79 = v75;

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  outlined destroy of Any?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for Date?);
LABEL_6:
  id v24 = (void *)MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
  uint64_t v25 = self;
  id v26 = v24;
  [v25 preferredContentsRectForAsset:a1 targetSize:200.0, 200.0];
  id v31 = [objc_allocWithZone((Class)MOSuggestionAssetPhotoCropRect) initWithCGRect:v27, v28, v29, v30];
  uint64_t v32 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
  uint64_t v78 = (void *)v32;
  *(void *)&long long v77 = v31;
  outlined init with take of Any(&v77, v76);
  uint64_t v33 = v79;
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = v33;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v76, v26, v34);
  uint64_t v35 = v75;

  swift_bridgeObjectRelease();
  id v36 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
  [v25 preferredContentsRectForAsset:a1 targetSize:200.0, 98.0];
  id v41 = [objc_allocWithZone((Class)MOSuggestionAssetPhotoCropRect) initWithCGRect:v37, v38, v39, v40];
  uint64_t v78 = (void *)v32;
  *(void *)&long long v77 = v41;
  outlined init with take of Any(&v77, v76);
  char v42 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = v35;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v76, v36, v42);
  uint64_t v43 = v75;

  swift_bridgeObjectRelease();
  id v44 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
  [v25 preferredContentsRectForAsset:a1 targetSize:CGSizeMake(98.0, 200.0)];
  id v49 = [objc_allocWithZone((Class)MOSuggestionAssetPhotoCropRect) initWithCGRect:v45, v46, v47, v48];
  uint64_t v78 = (void *)v32;
  *(void *)&long long v77 = v49;
  outlined init with take of Any(&v77, v76);
  char v50 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = v43;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v76, v44, v50);
  uint64_t v51 = v75;

  swift_bridgeObjectRelease();
  id v52 = MOSuggestionAssetMetadataKeyPhotoLocalIdentifier;
  id v53 = [a1 localIdentifier];
  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v56 = v55;

  uint64_t v78 = &type metadata for String;
  *(void *)&long long v77 = v54;
  *((void *)&v77 + 1) = v56;
  outlined init with take of Any(&v77, v76);
  char v57 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = v51;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v76, v52, v57);
  unint64_t v79 = v75;

  swift_bridgeObjectRelease();
  id v58 = MOSuggestionAssetMetadataKeyPhotoTakenDate;
  id v59 = [a1 creationDate];
  if (v59)
  {
    uint64_t v60 = v59;
    uint64_t v61 = (uint64_t)v73;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v62 = 0;
  }
  else
  {
    uint64_t v62 = 1;
    uint64_t v61 = (uint64_t)v73;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v61, v62, 1, v9);
  uint64_t v63 = v74;
  outlined init with take of Date?(v61, v74);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v63, 1, v9) == 1)
  {
    outlined destroy of Any?(v63, (uint64_t *)&demangling cache variable for type metadata for Date?);
    specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)v58, &v77);

    outlined destroy of Any?((uint64_t)&v77, &demangling cache variable for type metadata for Any?);
    uint64_t v64 = v79;
  }
  else
  {
    uint64_t v78 = (void *)v9;
    unint64_t v65 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v77);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 32))(v65, v63, v9);
    outlined init with take of Any(&v77, v76);
    unint64_t v66 = v79;
    char v67 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v75 = v66;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v76, v58, v67);
    uint64_t v64 = v75;

    swift_bridgeObjectRelease();
  }
  id v68 = MOSuggestionAssetMetadataKeyVideoDuration;
  [a1 duration];
  uint64_t v78 = &type metadata for Double;
  *(void *)&long long v77 = v69;
  outlined init with take of Any(&v77, v76);
  char v70 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v75 = v64;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v76, v68, v70);
  uint64_t v71 = v75;

  swift_bridgeObjectRelease();
  return v71;
}

uint64_t sub_1000B57E4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(uint64_t a1)
{
  return partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:));
}

uint64_t sub_1000B5838()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:)(uint64_t a1)
{
  return partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchLivePhotoObjects(_:size:completion:));
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchImages(_:cacheType:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1000B58BC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  id v8 = *(void (**)(uint64_t))(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + v5);
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void **)(v1 + v7);
  uint64_t v13 = *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchURLAsset(_:assetType:completion:)(a1, v8, v9, (void *)(v1 + v4), v10, v11, v12, v13);
}

uint64_t outlined destroy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B5BC4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(a1, a2, v6, v7);
}

uint64_t objectdestroy_13Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

id partial apply for closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  return closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.fetchVideos(_:oneUpIntent:completion:)(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void (**)(uint64_t))(v3 + 48));
}

void partial apply for closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(uint64_t a1)
{
  closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1000B5D20()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @callee_guaranteed (@in_guaranteed URL) -> ()()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.squareCrop(normalizedCropRect:imageBounds:)()
{
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  CGFloat x = v8.origin.x;
  CGFloat y = v8.origin.y;
  CGFloat width = v8.size.width;
  CGFloat height = v8.size.height;
  CGRectGetHeight(v8);
  v9.origin.CGFloat x = x;
  v9.origin.CGFloat y = y;
  v9.size.CGFloat width = width;
  v9.size.CGFloat height = height;
  CGRectGetWidth(v9);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.assets);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218752;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2048;
    v10.origin.CGFloat x = x;
    v10.origin.CGFloat y = y;
    v10.size.CGFloat width = width;
    v10.size.CGFloat height = height;
    CGRectGetWidth(v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 32) = 2048;
    v11.origin.CGFloat x = x;
    v11.origin.CGFloat y = y;
    v11.size.CGFloat width = width;
    v11.size.CGFloat height = height;
    CGRectGetHeight(v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Cropping to %f, %f, %f, %f", (uint8_t *)v7, 0x2Au);
    swift_slowDealloc();
  }

  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetPhotoLivePhotoVideosType and conformance MOSuggestionAssetPhotoLivePhotoVideosType()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionAssetPhotoLivePhotoVideosType and conformance MOSuggestionAssetPhotoLivePhotoVideosType;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetPhotoLivePhotoVideosType and conformance MOSuggestionAssetPhotoLivePhotoVideosType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetPhotoLivePhotoVideosType and conformance MOSuggestionAssetPhotoLivePhotoVideosType);
  }
  return result;
}

uint64_t sub_1000B5FFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 112))();
  *a2 = result;
  return result;
}

uint64_t sub_1000B6048(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 120);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1000B609C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_1000B60E8(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 144))(*a1);
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetPhotoLivePhotoVideosType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionAssetPhotoLivePhotoVideosType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B628CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosType()
{
  return &type metadata for MOSuggestionAssetPhotoLivePhotoVideosType;
}

uint64_t type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    CGRect v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)v4 + v8) = v10;
    *(_OWORD *)((char *)v4 + v9) = *(_OWORD *)((char *)a2 + v9);
    uint64_t v11 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)v4 + v11) = *((unsigned char *)a2 + v11);
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    id v16 = v10;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  return swift_release();
}

uint64_t initializeWithCopy for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  id v15 = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v14 = a3[9];
  id v15 = (void *)(a1 + v14);
  id v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *id v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B6778);
}

uint64_t sub_1000B6778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B684C);
}

uint64_t sub_1000B684C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed PHLivePhoto?) -> (@out ())(uint64_t a1)
{
  int v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed PHLivePhoto?) -> ()(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t objectdestroy_52Tm()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(void *a1, uint64_t a2)
{
  closure #1 in closure #1 in static MOSuggestionAssetPhotoLivePhotoVideosProvider.getLivePhotoFromComponentsURL(baseURL:assetIdentifier:completion:)(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

void (*partial apply for closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)())(void *, void)
{
  return closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(v0);
}

uint64_t sub_1000B6A8C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

void (*partial apply for closure #1 in closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)())(unsigned char *, void)
{
  uint64_t v1 = *(void *)(type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider.LivePhotoTask() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return closure #1 in closure #1 in closure #1 in MOSuggestionAssetPhotoLivePhotoVideosProvider.executeLivePhotoTask(_:)(v2, v3);
}

uint64_t _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

CGFloat one-time initialization function for GridWidth()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v10.origin.CGFloat x = v2;
  v10.origin.CGFloat y = v4;
  v10.size.CGFloat width = v6;
  v10.size.CGFloat height = v8;
  CGFloat result = CGRectGetWidth(v10) + -8.0 + -4.0;
  static MOSuggestionSheetGridManager.GridWidth = *(void *)&result;
  return result;
}

uint64_t *MOSuggestionSheetGridManager.GridWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for GridWidth != -1) {
    swift_once();
  }
  return &static MOSuggestionSheetGridManager.GridWidth;
}

double static MOSuggestionSheetGridManager.GridWidth.getter()
{
  if (one-time initialization token for GridWidth != -1) {
    swift_once();
  }
  return *(double *)&static MOSuggestionSheetGridManager.GridWidth;
}

uint64_t MOSuggestionSheetGridManager.AssetSizeType.rawValue.getter(char a1)
{
  uint64_t result = 0x656772616CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x69576D756964656DLL;
      break;
    case 2:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      uint64_t result = 0x6C6C616D73;
      break;
    case 4:
      uint64_t result = 0x616D536172747865;
      break;
    case 5:
      uint64_t result = 0x657263536C6C7566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionSheetGridManager.AssetSizeType(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x656772616CLL;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x656772616CLL;
  switch(v3)
  {
    case 1:
      uint64_t v5 = 0x69576D756964656DLL;
      unint64_t v4 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 3:
      uint64_t v5 = 0x6C6C616D73;
      break;
    case 4:
      uint64_t v5 = 0x616D536172747865;
      unint64_t v4 = 0xEA00000000006C6CLL;
      break;
    case 5:
      uint64_t v5 = 0x657263536C6C7566;
      unint64_t v4 = 0xEA00000000006E65;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006564;
      if (v5 == 0x69576D756964656DLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6D756964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x6C6C616D73) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x616D536172747865;
      unint64_t v6 = 0xEA00000000006C6CLL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000006E65;
      if (v5 != 0x657263536C6C7566) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOSuggestionSheetGridManager.AssetSizeType()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MOSuggestionSheetGridManager.AssetSizeType()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionSheetGridManager.AssetSizeType()
{
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionSheetGridManager.AssetSizeType@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized MOSuggestionSheetGridManager.AssetSizeType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionSheetGridManager.AssetSizeType(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x656772616CLL;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x69576D756964656DLL;
      unint64_t v2 = 0xEA00000000006564;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6C6C616D73;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x616D536172747865;
      a1[1] = 0xEA00000000006C6CLL;
      break;
    case 5:
      *a1 = 0x657263536C6C7566;
      a1[1] = 0xEA00000000006E65;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t specialized static MOSuggestionSheetGridManager.getSizeType(for:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width = CGRectGetWidth(*(CGRect *)&a1);
  if (one-time initialization token for GridWidth != -1) {
    swift_once();
  }
  if (*(double *)&static MOSuggestionSheetGridManager.GridWidth * 0.5 >= Width)
  {
    double v10 = *(double *)&static MOSuggestionSheetGridManager.GridWidth * 0.25;
    if (Width < *(double *)&static MOSuggestionSheetGridManager.GridWidth * 0.5 && v10 < Width)
    {
      v13.origin.CGFloat x = a1;
      v13.origin.CGFloat y = a2;
      v13.size.CGFloat width = a3;
      v13.size.CGFloat height = a4;
      return 2 * (CGRectGetHeight(v13) < v10);
    }
    else if (Width >= *(double *)&static MOSuggestionSheetGridManager.GridWidth / 5.0)
    {
      return 3;
    }
    else
    {
      return 4;
    }
  }
  else
  {
    v12.origin.CGFloat x = a1;
    v12.origin.CGFloat y = a2;
    v12.size.CGFloat width = a3;
    v12.size.CGFloat height = a4;
    if (Width == CGRectGetHeight(v12)) {
      return 5;
    }
    else {
      return 1;
    }
  }
}

unint64_t specialized MOSuggestionSheetGridManager.AssetSizeType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MOSuggestionSheetGridManager.AssetSizeType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

unint64_t lazy protocol witness table accessor for type MOSuggestionSheetGridManager.AssetSizeType and conformance MOSuggestionSheetGridManager.AssetSizeType()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionSheetGridManager.AssetSizeType and conformance MOSuggestionSheetGridManager.AssetSizeType;
  if (!lazy protocol witness table cache variable for type MOSuggestionSheetGridManager.AssetSizeType and conformance MOSuggestionSheetGridManager.AssetSizeType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionSheetGridManager.AssetSizeType and conformance MOSuggestionSheetGridManager.AssetSizeType);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionSheetGridManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionSheetGridManager.AssetSizeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B7794);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionSheetGridManager.AssetSizeType()
{
  return &type metadata for MOSuggestionSheetGridManager.AssetSizeType;
}

uint64_t *MOSuggestionAssetWorkoutProvider.queue.unsafeMutableAddressor()
{
  if (one-time initialization token for queue != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetWorkoutProvider.queue;
}

id static MOSuggestionAssetWorkoutProvider.queue.getter()
{
  if (one-time initialization token for queue != -1) {
    swift_once();
  }
  id v0 = (void *)static MOSuggestionAssetWorkoutProvider.queue;

  return v0;
}

id one-time initialization function for sharedHealthStore()
{
  id result = [objc_allocWithZone((Class)HKHealthStore) init];
  static MOSuggestionAssetWorkoutProvider.sharedHealthStore = (uint64_t)result;
  return result;
}

void MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  char v7 = self;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [v7 predicateForObjectWithUUID:isa];

  id v10 = [self workoutType];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  id v12 = objc_allocWithZone((Class)HKSampleQuery);
  v15[4] = partial apply for closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:);
  v15[5] = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed HKSampleQuery, @guaranteed [HKSample]?, @guaranteed Error?) -> ();
  v15[3] = &block_descriptor_17;
  CGRect v13 = _Block_copy(v15);
  swift_retain();
  id v14 = [v12 initWithSampleType:v10 predicate:v9 limit:1 sortDescriptors:0 resultsHandler:v13];

  _Block_release(v13);
  swift_release();
  [*(id *)(v4 + 24) executeQuery:v14];
}

void closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!(a2 >> 62))
  {
    uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_13;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v6 + 16))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(a2 + 32);
  }
  id v9 = v8;
  swift_bridgeObjectRelease();
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (!v10)
  {

LABEL_14:
    a4(0);
    return;
  }
  uint64_t v11 = v10;
  id v12 = v9;
  a4(v11);
}

uint64_t sub_1000B7DC8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(a1, a2, a3, *(void (**)(uint64_t))(v3 + 16));
}

uint64_t MOSuggestionAssetWorkoutProvider.deinit()
{
  return v0;
}

uint64_t MOSuggestionAssetWorkoutProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t MOSuggestionAssetWorkoutProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = -1;
  *(void *)(v0 + 24) = [objc_allocWithZone((Class)HKHealthStore) init];
  return v0;
}

uint64_t MOSuggestionAssetWorkoutProvider.init()()
{
  *(void *)(v0 + 16) = -1;
  *(void *)(v0 + 24) = [objc_allocWithZone((Class)HKHealthStore) init];
  return v0;
}

uint64_t static MOSuggestionAssetWorkoutProvider.localizedDistanceUsingPreferredUnit(meters:workoutType:)(uint64_t a1, double a2)
{
  if (one-time initialization token for sharedHealthStore != -1) {
    swift_once();
  }
  id v4 = [objc_allocWithZone((Class)FIUIUnitManager) initWithHealthStore:static MOSuggestionAssetWorkoutProvider.sharedHealthStore];
  id v5 = [objc_allocWithZone((Class)FIUIFormattingManager) initWithUnitManager:v4];

  if (!v5) {
    return 0;
  }
  id v6 = [objc_allocWithZone((Class)FIUIWorkoutActivityType) initWithActivityTypeIdentifier:a1 isIndoor:0];
  uint64_t v7 = FIUIDistanceTypeForActivityType();

  id v8 = [v5 localizedStringWithDistanceInMeters:v7 distanceType:3 unitStyle:a2];
  if (!v8)
  {

    return 0;
  }
  id v9 = v8;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

HKQuantityType_optional __swiftcall HKWorkout.distanceQuantityTypeForWorkoutType()()
{
  id v2 = [v0 workoutActivityType];
  Class isa = 0;
  id v4 = (id *)&HKQuantityTypeIdentifierDistanceWalkingRunning;
  switch((unint64_t)v2)
  {
    case 0xDuLL:
    case 0x4AuLL:
      id v4 = (id *)&HKQuantityTypeIdentifierDistanceCycling;
      goto LABEL_6;
    case 0x18uLL:
    case 0x25uLL:
    case 0x34uLL:
      goto LABEL_6;
    case 0x28uLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x43uLL:
      id v4 = (id *)&HKQuantityTypeIdentifierDistanceDownhillSnowSports;
      goto LABEL_6;
    case 0x2EuLL:
      id v4 = (id *)&HKQuantityTypeIdentifierDistanceSwimming;
      goto LABEL_6;
    case 0x46uLL:
    case 0x47uLL:
      id v4 = (id *)&HKQuantityTypeIdentifierDistanceWheelchair;
LABEL_6:
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType);
      Class isa = HKQuantityType.init(_:)((HKQuantityTypeIdentifier)*v4).super.super.super.isa;
      break;
    default:
      break;
  }
  result.value.super.super.super.Class isa = isa;
  result.is_nil = v1;
  return result;
}

uint64_t HKWorkout.packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for queue != -1) {
    swift_once();
  }
  v17[0] = static MOSuggestionAssetWorkoutProvider.queue;
  CGRect v13 = (void *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = partial apply for closure #1 in HKWorkout.packedSuggestionAssetMetadata(completion:);
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_6_0;
  id v14 = _Block_copy(aBlock);
  id v15 = v2;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void HKWorkout._packedSuggestionAssetMetadata(completion:)(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &_swiftEmptyDictionarySingleton;
  id v7 = MOSuggestionAssetMetadataKeyWorkoutWorkoutStartTime;
  id v8 = [v3 startDate];
  uint64_t v9 = type metadata accessor for Date();
  *((void *)&v88 + 1) = v9;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&aBlock);
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v7);
  id v10 = MOSuggestionAssetMetadataKeyWorkoutWorkoutEndTime;
  id v11 = [v3 endDate];
  *((void *)&v88 + 1) = v9;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&aBlock);
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v10);
  id v12 = MOSuggestionAssetMetadataKeyWorkoutDuration;
  [v3 duration];
  *((void *)&v88 + 1) = &type metadata for Double;
  *(void *)&long long aBlock = v13;
  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v12);
  id v14 = MOSuggestionAssetMetadataKeyWorkoutType;
  [v3 workoutActivityType];
  [v3 fi_swimmingLocationType];
  _HKWorkoutIsIndoor(v3);
  id v15 = (id)FILocalizedNameForActivityType();
  uint64_t v86 = a2;
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    *((void *)&v88 + 1) = &type metadata for String;
    *(void *)&long long aBlock = v17;
    *((void *)&aBlock + 1) = v19;
  }
  else
  {
    long long aBlock = 0u;
    long long v88 = 0u;
  }
  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v14);
  id v20 = MOSuggestionAssetMetadataKeyWorkoutHKType;
  id v21 = [v3 workoutActivityType];
  *((void *)&v88 + 1) = &type metadata for UInt;
  *(void *)&long long aBlock = v21;
  specialized Dictionary.subscript.setter((uint64_t)&aBlock, v20);
  id v22 = [v3 metadata];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v24 + 16) && (unint64_t v27 = specialized __RawDictionaryStorage.find<A>(_:)(v25, v26), (v28 & 1) != 0))
    {
      outlined init with copy of Any(*(void *)(v24 + 56) + 32 * v27, (uint64_t)&aBlock);
    }
    else
    {
      long long aBlock = 0u;
      long long v88 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v88 + 1))
    {
      if (swift_dynamicCast())
      {
        *((void *)&v88 + 1) = &type metadata for Bool;
        LOBYTE(aBlock) = v91;
        specialized Dictionary.subscript.setter((uint64_t)&aBlock, MOSuggestionAssetMetadataKeyWorkoutIsIndoors);
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&aBlock);
    }
  }
  if (one-time initialization token for sharedHealthStore != -1) {
    swift_once();
  }
  uint64_t v29 = static MOSuggestionAssetWorkoutProvider.sharedHealthStore;
  id v30 = [objc_allocWithZone((Class)HKQuantityType) initWithIdentifier:HKQuantityTypeIdentifierHeartRate];
  id v31 = [objc_allocWithZone((Class)HKQuantityType) initWithIdentifier:HKQuantityTypeIdentifierActiveEnergyBurned];
  unint64_t v32 = (unint64_t)HKWorkout.distanceQuantityTypeForWorkoutType()();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  char v34 = (uint64_t *)(v33 + 16);
  id v85 = (id)v29;
  id v35 = [objc_allocWithZone((Class)FIUIUnitManager) initWithHealthStore:v29];
  id v36 = [objc_allocWithZone((Class)FIUIFormattingManager) initWithUnitManager:v35];

  if (!v36)
  {
    uint64_t v46 = swift_bridgeObjectRetain();
    a1(v46);
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    Class v47 = (Class)v32;
LABEL_40:

    return;
  }
  unint64_t v84 = (void *)v32;
  double v37 = (void *)swift_allocObject();
  v37[2] = v33;
  v37[3] = 2;
  v37[4] = a1;
  v37[5] = v86;
  os_log_type_t v81 = v37;
  uint64_t v82 = v31;
  v37[6] = v6;
  uint64_t v83 = v30;
  if (v30 && v31)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001DACA0;
    *(void *)(inited + 32) = v30;
    *(void *)(inited + 40) = v31;
    *(void *)&long long aBlock = inited;
    specialized Array._endMutation()();
    unint64_t v39 = aBlock;
    if ((unint64_t)aBlock >> 62)
    {
      id v52 = v30;
      id v53 = v31;
      id v54 = v52;
      id v55 = v53;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v56) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v40 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v41 = v6;
      id v42 = v30;
      id v43 = v31;
      id v44 = v42;
      uint64_t v6 = v41;
      id v45 = v43;
      swift_retain();
      swift_retain();
      swift_retain();
      if (!v40)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType);
        lazy protocol witness table accessor for type HKQuantityType and conformance NSObject();
        Class isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        char v57 = (void *)swift_allocObject();
        v57[2] = v84;
        v57[3] = v83;
        v57[4] = v3;
        v57[5] = v6;
        v57[6] = v36;
        id v58 = v36;
        v57[7] = v82;
        v57[8] = partial apply for closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:);
        v57[9] = v81;
        uint64_t v89 = partial apply for closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:);
        id v90 = v57;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v88 = thunk for @escaping @callee_guaranteed (@guaranteed [HKQuantityType : HKUnit], @guaranteed Error?) -> ();
        *((void *)&v88 + 1) = &block_descriptor_30;
        id v59 = _Block_copy(&aBlock);
        id v60 = v84;
        id v61 = v3;
        id v62 = v36;
        swift_retain();
        id v63 = v83;
        id v64 = v82;
        uint64_t v49 = v6;
        swift_retain();
        swift_release();
        uint64_t v51 = v85;
        [v85 preferredUnitsForQuantityTypes:isa completion:v59];
        _Block_release(v59);

        id v36 = v58;
        goto LABEL_29;
      }
    }
    specialized Set.init(_nonEmptyArrayLiteral:)(v39);
    goto LABEL_28;
  }
  swift_beginAccess();
  uint64_t v48 = *v34 + 1;
  if (__OFADD__(*v34, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  *char v34 = v48;
  if (v48 == 2)
  {
    swift_beginAccess();
    swift_retain();
    uint64_t v49 = v6;
    swift_retain();
    swift_retain();
    uint64_t v50 = swift_bridgeObjectRetain();
    a1(v50);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    uint64_t v49 = v6;
    swift_retain();
    swift_retain();
  }
  uint64_t v51 = v85;
LABEL_29:
  unint64_t v65 = (unint64_t)HKWorkout.distanceQuantityTypeForWorkoutType()();
  if (v65)
  {
    unint64_t v66 = (void *)v65;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v67 = swift_initStackObject();
    *(_OWORD *)(v67 + 16) = xmmword_1001DA250;
    *(void *)(v67 + 32) = v66;
    *(void *)&long long aBlock = v67;
    specialized Array._endMutation()();
    unint64_t v68 = aBlock;
    if ((unint64_t)aBlock >> 62)
    {
      id v73 = v66;
      swift_bridgeObjectRetain();
      uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v74) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v69 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v70 = v66;
      if (!v69)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType);
        lazy protocol witness table accessor for type HKQuantityType and conformance NSObject();
        Class v47 = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v75 = (void *)swift_allocObject();
        v75[2] = v66;
        v75[3] = v3;
        v75[4] = v49;
        v75[5] = v36;
        v75[6] = partial apply for closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:);
        v75[7] = v81;
        uint64_t v89 = partial apply for closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:);
        id v90 = v75;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v88 = thunk for @escaping @callee_guaranteed (@guaranteed [HKQuantityType : HKUnit], @guaranteed Error?) -> ();
        *((void *)&v88 + 1) = &block_descriptor_24;
        uint64_t v76 = _Block_copy(&aBlock);
        swift_retain();
        id v77 = v3;
        id v78 = v36;
        swift_retain();
        id v79 = v66;
        swift_release();
        [v51 preferredUnitsForQuantityTypes:v47 completion:v76];
        swift_release();

        _Block_release(v76);
        swift_release();
        swift_release();

        goto LABEL_40;
      }
    }
    specialized Set.init(_nonEmptyArrayLiteral:)(v68);
    goto LABEL_39;
  }
  swift_beginAccess();
  uint64_t v71 = *v34 + 1;
  if (!__OFADD__(*v34, 1))
  {
    *char v34 = v71;
    if (v71 == 2)
    {
      swift_beginAccess();
      uint64_t v72 = swift_bridgeObjectRetain();
      a1(v72);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    swift_release();
    swift_release();
    swift_release();

    Class v47 = (Class)v84;
    goto LABEL_40;
  }
LABEL_42:
  __break(1u);
}

uint64_t closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = (void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *uint64_t v6 = v10;
    if (v10 == a2)
    {
      swift_beginAccess();
      uint64_t v11 = swift_bridgeObjectRetain();
      a3(v11);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  double v37 = a8;
  uint64_t v34 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  unint64_t v32 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for queue != -1) {
    swift_once();
  }
  uint64_t v35 = static MOSuggestionAssetWorkoutProvider.queue;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a1;
  v19[5] = a4;
  v19[6] = a5;
  v19[7] = a6;
  id v20 = v37;
  v19[8] = a7;
  v19[9] = v20;
  v19[10] = a9;
  v19[11] = a10;
  aBlock[4] = partial apply for closure #1 in closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:);
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_36_0;
  id v21 = _Block_copy(aBlock);
  swift_errorRetain();
  id v22 = a3;
  swift_bridgeObjectRetain();
  id v23 = a4;
  id v24 = a5;
  swift_retain();
  id v25 = a7;
  id v26 = v20;
  swift_retain();
  unint64_t v27 = v32;
  static DispatchQoS.unspecified.getter();
  uint64_t v40 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v29 = v33;
  uint64_t v28 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v38);
  return swift_release();
}

id closure #1 in closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t (*a9)(void))
{
  BOOL v9 = a8;
  uint64_t v10 = a6;
  if (a1)
  {
    swift_errorRetain();
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)static MOAngelLogger.assets);
    swift_errorRetain();
    id v16 = a2;
    swift_errorRetain();
    id v17 = v16;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      long long v88 = a5;
      uint64_t v20 = swift_slowAlloc();
      v95._countAndFlagsBits = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HKQuantityType?);
      uint64_t v21 = Optional.debugDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v95._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v23 = Error.localizedDescription.getter();
      v94[1] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v95._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[HKWorkout] Failed to fetch HK preferred units for %s error=%s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a5 = v88;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    BOOL v9 = a8;
    uint64_t v10 = a6;
  }
  id v25 = (uint64_t *)(v10 + 16);
  id v26 = a4;
  unint64_t v27 = specialized Dictionary.subscript.getter(v26, a3);

  uint64_t v28 = (SEL *)&selRef_statisticsForType_;
  if (v27)
  {
    id v29 = [a5 statisticsForType:v26];
    if (v29
      && (id v30 = v29,
          id v31 = [v29 averageQuantity],
          v30,
          v31))
    {
      uint64_t v89 = a5;
      [v31 doubleValueForUnit:v27];
      if (v32 <= 0.0)
      {
      }
      else
      {
        id v33 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRate;
        [v31 doubleValueForUnit:v27];
        *((void *)&v96 + 1) = &type metadata for Double;
        v95._countAndFlagsBits = v34;
        swift_beginAccess();
        specialized Dictionary.subscript.setter((uint64_t)&v95, v33);
        uint64_t v35 = (void *)MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateQuantity;
        *((void *)&v96 + 1) = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity);
        v95._countAndFlagsBits = (uint64_t)v31;
        id v36 = v35;
        id v37 = v31;
        specialized Dictionary.subscript.setter((uint64_t)&v95, v36);
        swift_endAccess();
        id v38 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
        v87 = v37;
        id result = [a7 localizedStringWithHeartRate:v37 unitStyle:1];
        if (!result)
        {
          __break(1u);
          goto LABEL_50;
        }
        uint64_t v40 = result;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.uppercased()();
        swift_bridgeObjectRelease();
        NSString v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v42 = [v41 trimmedString];

        if (v42)
        {
          uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v45 = v44;

          *((void *)&v96 + 1) = &type metadata for String;
          v95._countAndFlagsBits = v43;
          v95._object = v45;
        }
        else
        {
          Swift::String v95 = (Swift::String)0;
          long long v96 = 0u;
        }
        swift_beginAccess();
        specialized Dictionary.subscript.setter((uint64_t)&v95, v38);
        swift_endAccess();
        uint64_t v28 = (SEL *)&selRef_statisticsForType_;
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v46 = type metadata accessor for Logger();
        __swift_project_value_buffer(v46, (uint64_t)static MOAngelLogger.assets);
        swift_retain_n();
        Class v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v92 = v9;
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          v94[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = 136315138;
          uint64_t v50 = (void *)MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
          swift_beginAccess();
          uint64_t v51 = *v25;
          if (*(void *)(*v25 + 16))
          {
            id v52 = v50;
            uint64_t v53 = specialized __RawDictionaryStorage.find<A>(_:)(v52);
            if (v54)
            {
              outlined init with copy of Any(*(void *)(v51 + 56) + 32 * v53, (uint64_t)&v95);
            }
            else
            {
              Swift::String v95 = (Swift::String)0;
              long long v96 = 0u;
            }
          }
          else
          {
            Swift::String v95 = (Swift::String)0;
            long long v96 = 0u;
          }
          swift_endAccess();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
          uint64_t v55 = Optional.debugDescription.getter();
          unint64_t v57 = v56;
          outlined destroy of Any?((uint64_t)&v95);
          v95._countAndFlagsBits = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v57, v94);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "[HKWorkout] heartrate: %s", v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          a5 = v89;
          BOOL v9 = v92;
          uint64_t v28 = (SEL *)&selRef_statisticsForType_;
        }
        else
        {

          swift_release_n();
          a5 = v89;
        }
      }
    }
    else
    {
    }
  }
  id v58 = v9;
  id v59 = specialized Dictionary.subscript.getter(v58, a3);

  if (!v59) {
    return (id)a9();
  }
  id v60 = [objc_allocWithZone((Class)HKQuantityFormattingParameters) init];
  [v60 setPreferredUnit:v59];
  [v60 setPrecision:0];
  id v61 = [a5 *v28 v58];
  if (!v61
    || (id v62 = v61, v63 = [v61 sumQuantity], v62, !v63))
  {

LABEL_41:
    return (id)a9();
  }
  [v63 doubleValueForUnit:v59];
  if (v64 <= 0.0)
  {
LABEL_43:

    return (id)a9();
  }
  id v65 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurnt;
  [v63 doubleValueForUnit:v59];
  *((void *)&v96 + 1) = &type metadata for Double;
  v95._countAndFlagsBits = v66;
  swift_beginAccess();
  specialized Dictionary.subscript.setter((uint64_t)&v95, v65);
  swift_endAccess();
  id v59 = v59;
  [v63 doubleValueForUnit:v59];
  id v68 = [self quantityWithUnit:v59 doubleValue:floor(v67)];

  id v69 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntWithUnit;
  id result = [a7 localizedStringWithActiveEnergy:v63 unitStyle:1];
  if (result)
  {
    id v70 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v71 = String.uppercased()();
    swift_bridgeObjectRelease();
    *((void *)&v96 + 1) = &type metadata for String;
    Swift::String v95 = v71;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)&v95, v69);
    uint64_t v72 = (void *)MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntQuantity;
    *((void *)&v96 + 1) = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity);
    v95._countAndFlagsBits = (uint64_t)v68;
    id v73 = v72;
    id v74 = v68;
    specialized Dictionary.subscript.setter((uint64_t)&v95, v73);
    swift_endAccess();
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v75 = type metadata accessor for Logger();
    __swift_project_value_buffer(v75, (uint64_t)static MOAngelLogger.assets);
    swift_retain_n();
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v76, v77))
    {
      id v78 = (uint8_t *)swift_slowAlloc();
      v94[0] = swift_slowAlloc();
      *(_DWORD *)id v78 = 136315138;
      id v79 = (void *)MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntWithUnit;
      swift_beginAccess();
      uint64_t v80 = *v25;
      if (*(void *)(*v25 + 16))
      {
        id v81 = v79;
        uint64_t v82 = specialized __RawDictionaryStorage.find<A>(_:)(v81);
        if (v83)
        {
          outlined init with copy of Any(*(void *)(v80 + 56) + 32 * v82, (uint64_t)&v95);
        }
        else
        {
          Swift::String v95 = (Swift::String)0;
          long long v96 = 0u;
        }
      }
      else
      {
        Swift::String v95 = (Swift::String)0;
        long long v96 = 0u;
      }
      swift_endAccess();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
      uint64_t v84 = Optional.debugDescription.getter();
      unint64_t v86 = v85;
      outlined destroy of Any?((uint64_t)&v95);
      v95._countAndFlagsBits = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v86, v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "[HKWorkout] calories: %s", v78, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_41;
    }

    swift_release_n();
    goto LABEL_43;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v18 - 8);
  uint64_t v31 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for queue != -1) {
    swift_once();
  }
  uint64_t v28 = static MOSuggestionAssetWorkoutProvider.queue;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a2;
  v21[3] = a3;
  v21[4] = a1;
  v21[5] = a4;
  v21[6] = a5;
  v21[7] = a6;
  v21[8] = a7;
  v21[9] = a8;
  aBlock[4] = partial apply for closure #1 in closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:);
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_42_1;
  unint64_t v22 = _Block_copy(aBlock);
  swift_errorRetain();
  id v23 = a3;
  swift_bridgeObjectRetain();
  id v24 = a4;
  swift_retain();
  id v25 = a6;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v33 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v26 = v29;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v26);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v31);
  return swift_release();
}

id closure #1 in closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t (*a7)(void))
{
  if (a1)
  {
    swift_errorRetain();
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static MOAngelLogger.assets);
    id v10 = a2;
    swift_errorRetain();
    id v11 = v10;
    swift_errorRetain();
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      v49._countAndFlagsBits = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v15 = a7;
      id v16 = [v11 debugDescription];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      a7 = v15;
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v49._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v20 = Error.localizedDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v49._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[HKWorkout] Failed to fetch HK preferred units for %s error=%s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v22 = swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    return (id)a7(v22);
  }
  id v26 = a2;
  unint64_t v27 = specialized Dictionary.subscript.getter(v26, a3);

  if (!v27) {
    return (id)a7(v22);
  }
  id v28 = [objc_allocWithZone((Class)HKQuantityFormattingParameters) init];
  [v28 setPreferredUnit:v27];
  [v28 setPrecision:2];
  id v29 = [a4 statisticsForType:v26];
  if (!v29
    || (uint64_t v30 = v29, v31 = [v29 sumQuantity], v30, !v31))
  {

    return (id)a7(v22);
  }
  [v31 doubleValueForUnit:v27];
  if (v32 <= 0.0)
  {

    return (id)a7(v22);
  }
  id v33 = MOSuggestionAssetMetadataKeyWorkoutTotalDistance;
  [v31 doubleValueForUnit:v27];
  uint64_t v50 = &type metadata for Double;
  v49._countAndFlagsBits = v34;
  swift_beginAccess();
  specialized Dictionary.subscript.setter((uint64_t)&v49, v33);
  uint64_t v35 = (void *)MOSuggestionAssetMetadataKeyWorkoutTotalDistanceQuantity;
  uint64_t v50 = (void *)type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity);
  v49._countAndFlagsBits = (uint64_t)v31;
  id v36 = v35;
  id v37 = v31;
  specialized Dictionary.subscript.setter((uint64_t)&v49, v36);
  swift_endAccess();
  id v38 = (void *)MOSuggestionAssetMetadataKeyWorkoutTotalDistanceWithUnit;
  uint64_t v39 = self;
  id v40 = v38;
  id v41 = [v39 meterUnit];
  [v37 doubleValueForUnit:v41];
  double v43 = v42;

  id v44 = [self activityTypeWithWorkout:a4];
  uint64_t v45 = FIUIDistanceTypeForActivityType();

  id result = [a6 localizedStringWithDistanceInMeters:v45 distanceType:1 unitStyle:v43];
  if (result)
  {
    Class v47 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v48 = String.uppercased()();
    swift_bridgeObjectRelease();
    uint64_t v50 = &type metadata for String;
    Swift::String v49 = v48;
    swift_beginAccess();
    specialized Dictionary.subscript.setter((uint64_t)&v49, v40);
    swift_endAccess();

    return (id)a7(v22);
  }
  __break(1u);
  return result;
}

Swift::String __swiftcall String.trimmed()()
{
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v0 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t sub_1000BA870()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in HKWorkout.packedSuggestionAssetMetadata(completion:)()
{
  HKWorkout._packedSuggestionAssetMetadata(completion:)(*(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t type metadata accessor for MOSuggestionAssetWorkoutProvider()
{
  return self;
}

uint64_t sub_1000BA900()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

id _HKWorkoutIsIndoor(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 metadata];
  uint64_t v3 = [v2 objectForKeyedSubscript:HKMetadataKeyIndoorWorkout];
  id v4 = [v3 BOOLValue];

  return v4;
}

uint64_t sub_1000BA9A0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BA9B0()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:)()
{
  return closure #1 in HKWorkout._packedSuggestionAssetMetadata(completion:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

unint64_t lazy protocol witness table accessor for type HKQuantityType and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type HKQuantityType and conformance NSObject;
  if (!lazy protocol witness table cache variable for type HKQuantityType and conformance NSObject)
  {
    type metadata accessor for UIApplication(255, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HKQuantityType and conformance NSObject);
  }
  return result;
}

uint64_t sub_1000BAA70()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2)
{
  return closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_1000BAAD8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(uint64_t a1, uint64_t a2)
{
  return closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_1000BAB74()
{
  swift_errorRelease();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

id partial apply for closure #1 in closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)()
{
  return closure #1 in closure #2 in HKWorkout._packedSuggestionAssetMetadata(completion:)(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void **)(v0 + 72), *(uint64_t (**)(void))(v0 + 80));
}

uint64_t sub_1000BAC24()
{
  swift_errorRelease();

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

id partial apply for closure #1 in closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)()
{
  return closure #1 in closure #3 in HKWorkout._packedSuggestionAssetMetadata(completion:)(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(uint64_t (**)(void))(v0 + 64));
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *MOSuggestionInterstitialListAssetViewModel.__allocating_init(workoutAsset:)(void *a1)
{
  uint64_t v2 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  *(void *)&long long v107 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v109 = (uint64_t)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v97 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v110 = *(void **)(v10 - 8);
  uint64_t v111 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v97 - v14;
  id v16 = [a1 assetType];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;
  BOOL v21 = v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20;
  if (v21)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_12;
    }
  }
  [a1 contentClassType];
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  if (ObjCClassMetadata == type metadata accessor for MOSuggestionGenericFallBackInfo())
  {
LABEL_12:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)static MOAngelLogger.shared);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      double v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[MOSuggestionInterstitialListAssetViewModel.workoutAsset] Mismatched init for asset type", v32, 2u);
      swift_slowDealloc();
    }
    goto LABEL_38;
  }
  id v24 = [a1 content];
  self;
  id v25 = (void *)swift_dynamicCastObjCClass();
  if (!v25)
  {
    swift_unknownObjectRelease();
    id v33 = 0;
LABEL_34:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    __swift_project_value_buffer(v47, (uint64_t)static MOAngelLogger.shared);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v48))
    {

      return 0;
    }
    Swift::String v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v48, "[MOSuggestionInterstitialListAssetViewModel.workoutAsset] Invalid workout object", v49, 2u);
    swift_slowDealloc();

LABEL_38:
    return 0;
  }
  id v26 = v25;
  id v27 = [v25 icon];
  if (v27)
  {
    swift_unknownObjectRelease();
    int v106 = 7;
    id v28 = v27;
  }
  else
  {
    id v34 = [v26 renderedRouteMap];
    swift_unknownObjectRelease();
    if (!v34)
    {
      id v33 = 0;
      goto LABEL_34;
    }
    id v28 = v34;
    int v106 = 9;
  }
  id v35 = v27;
  id v36 = [a1 metadata];
  uint64_t v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v38 = specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v37);
  swift_bridgeObjectRelease();
  if (!v38)
  {
    id v33 = v28;

    goto LABEL_34;
  }
  if (!*(void *)(v38 + 16))
  {
    long long v116 = 0u;
    long long v117 = 0u;
    goto LABEL_30;
  }
  id v39 = MOSuggestionAssetMetadataKeyWorkoutType;
  uint64_t v40 = specialized __RawDictionaryStorage.find<A>(_:)(v39);
  if ((v41 & 1) == 0)
  {
    long long v116 = 0u;
    long long v117 = 0u;

    goto LABEL_30;
  }
  outlined init with copy of Any(*(void *)(v38 + 56) + 32 * v40, (uint64_t)&v116);

  if (!*((void *)&v117 + 1))
  {
LABEL_30:
    id v33 = v28;

    swift_bridgeObjectRelease();
    uint64_t v45 = &demangling cache variable for type metadata for Any?;
    uint64_t v46 = (char *)&v116;
LABEL_31:
    outlined destroy of Any?((uint64_t)v46, v45);
    goto LABEL_34;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    id v33 = v28;

    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  uint64_t v105 = v113;
  if (!*(void *)(v38 + 16))
  {
    long long v116 = 0u;
    long long v117 = 0u;
LABEL_49:
    outlined destroy of Any?((uint64_t)&v116, &demangling cache variable for type metadata for Any?);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v110[7])(v9, 1, 1, v111);
    goto LABEL_50;
  }
  uint64_t v104 = v112;
  id v42 = MOSuggestionAssetMetadataKeyWorkoutWorkoutStartTime;
  uint64_t v43 = specialized __RawDictionaryStorage.find<A>(_:)(v42);
  if (v44)
  {
    outlined init with copy of Any(*(void *)(v38 + 56) + 32 * v43, (uint64_t)&v116);
  }
  else
  {
    long long v116 = 0u;
    long long v117 = 0u;
  }

  if (!*((void *)&v117 + 1)) {
    goto LABEL_49;
  }
  int v52 = swift_dynamicCast();
  uint64_t v53 = v110;
  char v54 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v110[7];
  id v102 = v110 + 7;
  uint64_t v103 = v54;
  v54(v9, v52 ^ 1u, 1, v111);
  uint64_t v55 = v53;
  uint64_t v56 = v111;
  unint64_t v57 = (uint64_t (*)(char *, uint64_t, uint64_t))v55[6];
  uint64_t v101 = (uint64_t)(v55 + 6);
  v100 = v57;
  if (v57(v9, 1, v111) == 1)
  {
LABEL_50:
    id v33 = v28;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    uint64_t v46 = v9;
    goto LABEL_31;
  }
  id v58 = (void (*)(char *, char *, uint64_t))v110[4];
  uint64_t v99 = v110 + 4;
  v98 = v58;
  v58(v15, v9, v56);
  if (*(void *)(v38 + 16))
  {
    id v59 = MOSuggestionAssetMetadataKeyWorkoutWorkoutEndTime;
    uint64_t v60 = specialized __RawDictionaryStorage.find<A>(_:)(v59);
    if (v61)
    {
      outlined init with copy of Any(*(void *)(v38 + 56) + 32 * v60, (uint64_t)&v116);
    }
    else
    {
      long long v116 = 0u;
      long long v117 = 0u;
    }

    uint64_t v62 = v111;
  }
  else
  {
    uint64_t v62 = v56;
    long long v116 = 0u;
    long long v117 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v117 + 1))
  {
    outlined destroy of Any?((uint64_t)&v116, &demangling cache variable for type metadata for Any?);
    v103(v7, 1, 1, v62);
    id v65 = v110;
    goto LABEL_62;
  }
  int v63 = swift_dynamicCast();
  v103(v7, v63 ^ 1u, 1, v62);
  int v64 = v100(v7, 1, v62);
  id v65 = v110;
  if (v64 == 1)
  {
LABEL_62:
    id v33 = v28;

    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v65[1])(v15, v62);
    uint64_t v45 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    uint64_t v46 = v7;
    goto LABEL_31;
  }
  BOOL v21 = v27 == 0;
  uint64_t v66 = v110;
  char v67 = !v21;
  v98(v13, v7, v62);
  id v68 = self;
  id v69 = v28;
  id v70 = [v68 blackColor];
  long long v116 = 0u;
  long long v117 = 0u;
  char v118 = 1;
  type metadata accessor for MOSuggestionSheetImage();
  swift_allocObject();
  id v102 = v69;
  uint64_t v101 = MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)((uint64_t)v69, 0, 0, v70, v67, (uint64_t)&v116, 0, 1);
  Swift::String v71 = (void (*)(uint64_t, char *, uint64_t))v66[2];
  uint64_t v72 = v109;
  v71(v109, v15, v62);
  uint64_t v73 = *(int *)(v2 + 20);
  uint64_t v74 = v72;
  uint64_t v75 = (char *)(v72 + v73);
  v71((uint64_t)v75, v13, v62);
  v103(v75, 0, 1, v62);
  id v76 = [a1 identifier];
  uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v79 = v78;

  uint64_t v112 = v77;
  uint64_t v113 = v79;
  uint64_t v114 = 35;
  unint64_t v115 = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = (void *)StringProtocol.components<A>(separatedBy:)();
  if (result[2])
  {
    id v81 = (void (*)(char *, uint64_t, uint64_t, uint64_t))result[4];
    uint64_t v80 = (uint64_t (*)(char *, uint64_t, uint64_t))result[5];
    uint64_t v103 = v81;
    v100 = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionSheetAssetDateRange>);
    unint64_t v82 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    uint64_t v83 = swift_allocObject();
    long long v107 = xmmword_1001DA0F0;
    *(_OWORD *)(v83 + 16) = xmmword_1001DA0F0;
    outlined init with copy of MOSuggestionSheetAssetDateRange(v74, v83 + v82);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = v107;
    uint64_t v85 = v105;
    *(void *)(v84 + 32) = v104;
    *(void *)(v84 + 40) = v85;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_1001DA250;
    *(void *)(v86 + 32) = v101;
    uint64_t v112 = v86;
    specialized Array._endMutation()();
    uint64_t v87 = v112;
    long long v88 = *(uint64_t (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t (*)(char *, uint64_t, uint64_t), void, void, void, uint64_t, uint64_t, uint64_t, int))(v108 + 344);
    swift_retain();
    HIBYTE(v96) = 0;
    *(_WORD *)((char *)&v96 + 1) = 1;
    LOBYTE(v96) = v106;
    uint64_t v50 = v88(v103, v100, 0, 0, 0, v83, v84, v87, v96);
    swift_retain();
    uint64_t v89 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(0);
    uint64_t v91 = v90;
    id v92 = v102;

    swift_release();
    outlined destroy of MOSuggestionSheetAssetDateRange(v109);
    unint64_t v93 = (void (*)(char *, uint64_t))v110[1];
    uint64_t v94 = v13;
    uint64_t v95 = v111;
    v93(v94, v111);
    v93(v15, v95);
    swift_beginAccess();
    *(void *)(v50 + 24) = v89;
    *(void *)(v50 + 32) = v91;
    swift_release();
    swift_bridgeObjectRelease();
    return (void *)v50;
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.sortedByAscendingTime.getter(uint64_t a1)
{
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v1 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v4 = v1;
  specialized MutableCollection<>.sort(by:)(&v4);
  return v4;
}

uint64_t closure #1 in Array<A>.sortedByAscendingTime.getter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetAssetDateRange?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v47 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  uint64_t v11 = *(void *)(v47 - 8);
  uint64_t v12 = __chkstk_darwin(v47);
  uint64_t v44 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v45 = (uint64_t)&v41 - v15;
  uint64_t v16 = *a1;
  uint64_t v17 = *a2;
  uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)v16 + 224);
  uint64_t v19 = v18(v14);
  uint64_t v20 = swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v43 = v8;
    uint64_t v46 = v2;
    BOOL v21 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 224);
    uint64_t v22 = v21(v20);
    uint64_t v23 = swift_bridgeObjectRelease();
    if (v22)
    {
      uint64_t v24 = v18(v23);
      if (!v24)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v47);
LABEL_10:
        outlined destroy of MOSuggestionSheetAssetDateRange?((uint64_t)v10);
        LOBYTE(v19) = 0;
        return v19 & 1;
      }
      uint64_t v25 = v11;
      if (*(void *)(v24 + 16))
      {
        outlined init with copy of MOSuggestionSheetAssetDateRange(v24 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v10);
        id v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        id v27 = v10;
        uint64_t v28 = 0;
      }
      else
      {
        id v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        id v27 = v10;
        uint64_t v28 = 1;
      }
      uint64_t v29 = v47;
      v26(v27, v28, 1, v47);
      swift_bridgeObjectRelease();
      uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v30(v10, 1, v29) == 1) {
        goto LABEL_10;
      }
      char v41 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v30;
      id v42 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v26;
      uint64_t v31 = v45;
      uint64_t v32 = outlined init with take of MOSuggestionSheetAssetDateRange((uint64_t)v10, v45);
      uint64_t v33 = v21(v32);
      if (v33)
      {
        if (*(void *)(v33 + 16))
        {
          uint64_t v34 = v33 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
          uint64_t v35 = (uint64_t)v43;
          outlined init with copy of MOSuggestionSheetAssetDateRange(v34, (uint64_t)v43);
          uint64_t v36 = 0;
        }
        else
        {
          uint64_t v36 = 1;
          uint64_t v35 = (uint64_t)v43;
        }
        uint64_t v37 = v47;
        v42(v35, v36, 1, v47);
        swift_bridgeObjectRelease();
        if (v41(v35, 1, v37) != 1)
        {
          uint64_t v38 = v35;
          uint64_t v39 = v44;
          outlined init with take of MOSuggestionSheetAssetDateRange(v38, v44);
          LOBYTE(v19) = static Date.< infix(_:_:)();
          outlined destroy of MOSuggestionSheetAssetDateRange(v39);
          outlined destroy of MOSuggestionSheetAssetDateRange(v31);
          return v19 & 1;
        }
      }
      else
      {
        uint64_t v35 = (uint64_t)v43;
        v42((uint64_t)v43, 1, 1, v29);
      }
      outlined destroy of MOSuggestionSheetAssetDateRange(v31);
      outlined destroy of MOSuggestionSheetAssetDateRange?(v35);
      LOBYTE(v19) = 0;
    }
    else
    {
      LOBYTE(v19) = 1;
    }
  }
  return v19 & 1;
}

uint64_t outlined destroy of MOSuggestionSheetAssetDateRange?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetAssetDateRange?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t UIImage.temporaryCacheURL(assetIdentifier:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v41 = a3;
  id v42 = a1;
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v40 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v40 - v14;
  uint64_t v16 = NSTemporaryDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = v13;
  URL.init(fileURLWithPath:)();
  swift_bridgeObjectRelease();
  static UTType.png.getter();
  uint64_t v43 = v15;
  URL.appendingPathComponent(_:conformingTo:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)static MOAngelLogger.assets);
  uint64_t v20 = v45;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v10, v13, v7);
  BOOL v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    v40[1] = v19;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    id v42 = v17;
    uint64_t v47 = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v26 = URL.debugDescription.getter();
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v20 + 8);
    v28(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] path=%s", v24, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v42;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v20 + 8);
    v28(v10, v7);
  }

  uint64_t v29 = UIImagePNGRepresentation(v44);
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;

    Data.write(to:options:)();
    v28(v43, v7);
    outlined consume of Data._Representation(v31, v33);
    uint64_t v37 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v41, v17, v7);
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[UIImage.temporaryCacheURL] Failed to generate png data", v36, 2u);
      swift_slowDealloc();
    }

    v28(v17, v7);
    v28(v43, v7);
    uint64_t v38 = 1;
    uint64_t v37 = v41;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v37, v38, 1, v7);
}

void specialized static MOSuggestionAssetCacheManager.wrapWorkoutAssetInURLIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, void (*a3)(id), uint8_t *a4)
{
  int v7 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v77 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v7 - 2) >= 9)
  {
    uint64_t v86 = a4;
    id v18 = [a1 content];
    self;
    uint64_t v19 = (void *)swift_dynamicCastObjCClass();
    if (v19)
    {
      uint64_t v20 = v19;
      id v21 = [v19 icon];
      if (v21)
      {
        os_log_type_t v22 = v21;
        id v83 = v18;
        uint64_t v87 = a3;
        id v23 = [a1 identifier];
        uint64_t v85 = v15;
        id v24 = v23;
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v84 = v22;
        uint64_t v26 = (char *)v25;
        uint64_t v28 = v27;

        uint64_t v29 = v26;
        id v30 = v84;
        UIImage.temporaryCacheURL(assetIdentifier:)(v29, v28, (uint64_t)v13);
        uint64_t v31 = v85;
        swift_bridgeObjectRelease();
        unint64_t v32 = *(unsigned int (**)(void, void, void))(v31 + 48);
        if (v32(v13, 1, v14) == 1)
        {
          outlined destroy of URL?((uint64_t)v13);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v33 = type metadata accessor for Logger();
          __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
          id v34 = a1;
          os_log_type_t v35 = Logger.logObject.getter();
          os_log_type_t v36 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v35, v36))
          {
            uint64_t v37 = (uint8_t *)swift_slowAlloc();
            uint64_t v89 = swift_slowAlloc();
            *(_DWORD *)uint64_t v37 = 136315138;
            id v38 = [v34 identifier];
            uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v41 = v40;

            id v30 = v84;
            uint64_t v88 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &v89);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Failed to wrap image identifier=%s", v37, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          v87(0);
          swift_unknownObjectRelease();
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v17, v13, v14);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v51 = type metadata accessor for Logger();
          __swift_project_value_buffer(v51, (uint64_t)static MOAngelLogger.assets);
          id v52 = a1;
          uint64_t v53 = Logger.logObject.getter();
          os_log_type_t v54 = static os_log_type_t.default.getter();
          int v55 = v54;
          if (os_log_type_enabled(v53, v54))
          {
            int v81 = v55;
            uint64_t v56 = (uint8_t *)swift_slowAlloc();
            uint64_t v80 = swift_slowAlloc();
            uint64_t v89 = v80;
            unint64_t v82 = v32;
            uint64_t v79 = v56;
            *(_DWORD *)uint64_t v56 = 136315138;
            v77[1] = v56 + 4;
            id v57 = [v52 identifier];
            uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            os_log_t v78 = v53;
            id v59 = v52;
            uint64_t v60 = v58;
            unint64_t v62 = v61;

            uint64_t v63 = v60;
            id v52 = v59;
            uint64_t v88 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v62, &v89);
            unint64_t v32 = v82;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            os_log_t v64 = v78;
            _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v81, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Wrapping image identifier=%s", v79, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          id v65 = [v20 route];
          uint64_t v66 = v85;
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v11, v17, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v11, 0, 1, v14);
          if (v32(v11, 1, v14) == 1)
          {
            id v68 = 0;
          }
          else
          {
            URL._bridgeToObjectiveC()(v67);
            id v68 = v69;
            (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v14);
          }
          id v70 = [objc_allocWithZone((Class)MOSuggestionAssetWorkout) init:0 route:v65 iconURL:v68];

          id v71 = v70;
          id v72 = [v52 assetType];
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetWorkout);
          id v73 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v71 type:v72 contentClassType:swift_getObjCClassFromMetadata()];

          id v74 = [v52 metadata];
          static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v73 addMetadata:isa];

          id v76 = v73;
          v87(v73);

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v85 + 8))(v17, v14);
        }
        return;
      }
    }
    swift_unknownObjectRelease();
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v42 = type metadata accessor for Logger();
  __swift_project_value_buffer(v42, (uint64_t)static MOAngelLogger.assets);
  id v43 = a1;
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v87 = a3;
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136315138;
    uint64_t v86 = v46 + 4;
    id v47 = [v43 identifier];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v50 = v49;

    uint64_t v88 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v50, &v89);
    a3 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Pass through without wrapping identifier=%s", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  a3(v43);
}

{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  id v30;
  uint64_t v31;
  unsigned int (*v32)(void, void, void);
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  int v55;
  uint8_t *v56;
  id v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  os_log_t v64;
  id v65;
  uint64_t v66;
  NSURL *v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  Class isa;
  id v76;
  void v77[2];
  os_log_t v78;
  uint8_t *v79;
  uint64_t v80;
  int v81;
  unsigned int (*v82)(void, void, void);
  id v83;
  id v84;
  uint64_t v85;
  uint8_t *v86;
  void (*v87)(id);
  uint64_t v88;
  uint64_t v89;

  int v7 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v77 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v7 - 2) >= 9)
  {
    uint64_t v86 = a4;
    id v18 = [a1 content];
    self;
    uint64_t v19 = (void *)swift_dynamicCastObjCClass();
    if (v19)
    {
      uint64_t v20 = v19;
      id v21 = [v19 icon];
      if (v21)
      {
        os_log_type_t v22 = v21;
        id v83 = v18;
        uint64_t v87 = a3;
        id v23 = [a1 identifier];
        uint64_t v85 = v15;
        id v24 = v23;
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v84 = v22;
        uint64_t v26 = (char *)v25;
        uint64_t v28 = v27;

        uint64_t v29 = v26;
        id v30 = v84;
        UIImage.temporaryCacheURL(assetIdentifier:)(v29, v28, (uint64_t)v13);
        uint64_t v31 = v85;
        swift_bridgeObjectRelease();
        unint64_t v32 = *(unsigned int (**)(void, void, void))(v31 + 48);
        if (v32(v13, 1, v14) == 1)
        {
          outlined destroy of URL?((uint64_t)v13);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v33 = type metadata accessor for Logger();
          __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
          id v34 = a1;
          os_log_type_t v35 = Logger.logObject.getter();
          os_log_type_t v36 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v35, v36))
          {
            uint64_t v37 = (uint8_t *)swift_slowAlloc();
            uint64_t v89 = swift_slowAlloc();
            *(_DWORD *)uint64_t v37 = 136315138;
            id v38 = [v34 identifier];
            uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v41 = v40;

            id v30 = v84;
            uint64_t v88 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &v89);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Failed to wrap image identifier=%s", v37, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          v87(0);
          swift_unknownObjectRelease();
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v17, v13, v14);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v51 = type metadata accessor for Logger();
          __swift_project_value_buffer(v51, (uint64_t)static MOAngelLogger.assets);
          id v52 = a1;
          uint64_t v53 = Logger.logObject.getter();
          os_log_type_t v54 = static os_log_type_t.default.getter();
          int v55 = v54;
          if (os_log_type_enabled(v53, v54))
          {
            int v81 = v55;
            uint64_t v56 = (uint8_t *)swift_slowAlloc();
            uint64_t v80 = swift_slowAlloc();
            uint64_t v89 = v80;
            unint64_t v82 = v32;
            uint64_t v79 = v56;
            *(_DWORD *)uint64_t v56 = 136315138;
            v77[1] = v56 + 4;
            id v57 = [v52 identifier];
            uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            os_log_t v78 = v53;
            id v59 = v52;
            uint64_t v60 = v58;
            unint64_t v62 = v61;

            uint64_t v63 = v60;
            id v52 = v59;
            uint64_t v88 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v62, &v89);
            unint64_t v32 = v82;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            os_log_t v64 = v78;
            _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v81, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Wrapping image identifier=%s", v79, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          id v65 = [v20 route];
          uint64_t v66 = v85;
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v11, v17, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v11, 0, 1, v14);
          if (v32(v11, 1, v14) == 1)
          {
            id v68 = 0;
          }
          else
          {
            URL._bridgeToObjectiveC()(v67);
            id v68 = v69;
            (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v14);
          }
          id v70 = [objc_allocWithZone((Class)MOSuggestionAssetWorkout) init:0 route:v65 iconURL:v68];

          id v71 = v70;
          id v72 = [v52 assetType];
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetWorkout);
          id v73 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v71 type:v72 contentClassType:swift_getObjCClassFromMetadata()];

          id v74 = [v52 metadata];
          static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v73 addMetadata:isa];

          id v76 = v73;
          v87(v73);

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v85 + 8))(v17, v14);
        }
        return;
      }
    }
    swift_unknownObjectRelease();
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v42 = type metadata accessor for Logger();
  __swift_project_value_buffer(v42, (uint64_t)static MOAngelLogger.assets);
  id v43 = a1;
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v87 = a3;
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136315138;
    uint64_t v86 = v46 + 4;
    id v47 = [v43 identifier];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v50 = v49;

    uint64_t v88 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v50, &v89);
    a3 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "[MOSuggestionAssetCacheManager.wrapWorkoutAssetssetInURLIfNecessary] Pass through without wrapping identifier=%s", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  a3(v43);
}

uint64_t specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(void), uint64_t a10)
{
  int v94 = a4;
  uint64_t v95 = a6;
  int v96 = a9;
  int v15 = a2;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v93 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v97 = a10;
  swift_retain_n();
  if ((v15 - 2) < 9) {
    goto LABEL_9;
  }
  id v22 = [a1 content];
  self;
  if (!swift_dynamicCastObjCClass())
  {
    swift_unknownObjectRelease();
LABEL_9:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    __swift_project_value_buffer(v42, (uint64_t)static MOAngelLogger.assets);
    id v43 = a1;
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      unint64_t v92 = a8;
      id v47 = (uint8_t *)v46;
      uint64_t v91 = swift_slowAlloc();
      uint64_t v99 = v91;
      *(_DWORD *)id v47 = 136315138;
      uint64_t v90 = v47 + 4;
      uint64_t v48 = a7;
      id v49 = [v43 identifier];
      uint64_t v50 = a5;
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v93 = a3;
      unint64_t v53 = v52;

      a7 = v48;
      uint64_t v54 = v51;
      a5 = v50;
      uint64_t v98 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, v53, &v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      a3 = v93;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Pass through without wrapping identifier=%s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a8 = v92;
      swift_slowDealloc();
    }
    else
    {
    }
    int v55 = v96;
    uint64_t v56 = v95;
    int v57 = v94;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v43, a3, v57, a5, v56, a7, a8, v55);
    goto LABEL_15;
  }
  id v89 = v22;
  uint64_t v90 = (uint8_t *)a7;
  unint64_t v92 = a8;
  id v23 = [a1 identifier];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v91 = v19;
  uint64_t v25 = (char *)v24;
  unint64_t v27 = v26;

  uint64_t v28 = v25;
  uint64_t v29 = v91;
  UIImage.temporaryCacheURL(assetIdentifier:)(v28, v27, (uint64_t)v18);
  swift_bridgeObjectRelease();
  uint64_t v30 = v93;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v18, 1, v29) == 1)
  {
    outlined destroy of URL?((uint64_t)v18);
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)static MOAngelLogger.assets);
    id v32 = a1;
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      LODWORD(v93) = v35;
      uint64_t v37 = (uint8_t *)v36;
      uint64_t v99 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v91 = (uint64_t)(v37 + 4);
      id v38 = [v32 identifier];
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v40;

      uint64_t v98 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v93, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Failed to wrap image identifier=%s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    unint64_t v71 = v92;
    id v72 = v96;
    uint64_t v73 = v95;
    int v74 = v94;
    swift_retain();
    swift_retain();
    uint64_t v75 = (uint64_t)v90;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, v74, a5, v73, v75, v71, v72);
    swift_unknownObjectRelease();
LABEL_15:
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  uint64_t v88 = a5;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v21, v18, v29);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v59 = type metadata accessor for Logger();
  __swift_project_value_buffer(v59, (uint64_t)static MOAngelLogger.assets);
  id v60 = a1;
  unint64_t v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.default.getter();
  int v63 = v62;
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v64 = swift_slowAlloc();
    int v87 = v63;
    id v65 = (uint8_t *)v64;
    uint64_t v99 = swift_slowAlloc();
    *(_DWORD *)id v65 = 136315138;
    id v66 = [v60 identifier:v65 + 4];
    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v69 = v68;

    uint64_t v98 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v69, &v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v87, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Wrapping image identifier=%s", v65, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  URL._bridgeToObjectiveC()(v70);
  uint64_t v77 = v76;
  id v78 = [v60 assetType];
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSURL);
  id v79 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v77 type:v78 contentClassType:swift_getObjCClassFromMetadata()];

  id v80 = [v60 metadata];
  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v79 addMetadata:isa];

  swift_retain();
  uint64_t v82 = v88;
  swift_retain();
  uint64_t v83 = (uint64_t)v90;
  swift_retain();
  unint64_t v84 = v92;
  swift_bridgeObjectRetain();
  swift_retain();
  id v85 = v79;
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v79, a3, v94, v82, v95, v83, v84, v96);
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v21, v91);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_16:
  swift_release();
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  return swift_release_n();
}

uint64_t specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, void (*a3)(void), uint64_t a4)
{
  int v7 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(uint8_t **)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v7 - 2) >= 9)
  {
    id v15 = [a1 content];
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v61 = v15;
      uint64_t v62 = a4;
      id v16 = [a1 identifier];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int v63 = v12;
      id v18 = (char *)v17;
      uint64_t v20 = v19;

      id v21 = v18;
      id v22 = v63;
      UIImage.temporaryCacheURL(assetIdentifier:)(v21, v20, (uint64_t)v10);
      swift_bridgeObjectRelease();
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v22 + 6))(v10, 1, v11) == 1)
      {
        outlined destroy of URL?((uint64_t)v10);
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v23 = type metadata accessor for Logger();
        __swift_project_value_buffer(v23, (uint64_t)static MOAngelLogger.assets);
        id v24 = a1;
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v64 = a3;
          unint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v66 = swift_slowAlloc();
          *(_DWORD *)unint64_t v27 = 136315138;
          id v28 = [v24 identifier];
          uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v31 = v30;

          uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v31, &v66);
          a3 = v64;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Failed to wrap image identifier=%s", v27, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        a3(0);
        return swift_unknownObjectRelease();
      }
      else
      {
        (*((void (**)(char *, char *, uint64_t))v22 + 4))(v14, v10, v11);
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v64 = a3;
        uint64_t v42 = type metadata accessor for Logger();
        __swift_project_value_buffer(v42, (uint64_t)static MOAngelLogger.assets);
        id v43 = a1;
        uint64_t v44 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          uint64_t v66 = v60;
          *(_DWORD *)uint64_t v46 = 136315138;
          id v47 = [v43 identifier:v46 + 4 v60];
          uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v50 = v49;

          uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v50, &v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          id v22 = v63;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Wrapping image identifier=%s", v46, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        URL._bridgeToObjectiveC()(v51);
        unint64_t v53 = v52;
        id v54 = [v43 assetType];
        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSURL);
        id v55 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v53 type:v54 contentClassType:swift_getObjCClassFromMetadata()];

        id v56 = [v43 metadata];
        static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v55 addMetadata:isa];

        id v58 = v55;
        v64(v55);
        swift_unknownObjectRelease();

        return (*((uint64_t (**)(char *, uint64_t))v22 + 1))(v14, v11);
      }
    }
    swift_unknownObjectRelease();
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  __swift_project_value_buffer(v32, (uint64_t)static MOAngelLogger.assets);
  id v33 = a1;
  os_log_type_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v64 = a3;
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136315138;
    int v63 = v36 + 4;
    id v37 = [v33 identifier];
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v40 = v39;

    uint64_t v65 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v40, &v66);
    a3 = v64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "[MOSuggestionAssetCacheManager.wrapImageAssetInURL] Pass through without wrapping identifier=%s", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return ((uint64_t (*)(id))a3)(v33);
}

uint64_t specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(void))
{
  unsigned int v14 = a2 - 2;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if (v14 >= 9)
  {
    [a1 content];
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v50 = a5;
      swift_unknownObjectRetain();
      id v17 = [a1 identifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v18 = objc_allocWithZone((Class)MOSuggestionAssetImageURLPair);
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v20 = [v18 init:v16 urlAppendix:v19];

      swift_unknownObjectRelease();
      if (v20)
      {
        id v21 = v20;
        id v22 = [a1 assetType];
        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetImageURLPair);
        id v23 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v21 type:v22 contentClassType:swift_getObjCClassFromMetadata()];

        id v24 = [a1 metadata];
        static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v23 addMetadata:isa];

        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        id v26 = v23;
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v23, a3, a4, v50, a6, a7, a8, a9);
        swift_unknownObjectRelease();
      }
      else
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v38 = type metadata accessor for Logger();
        __swift_project_value_buffer(v38, (uint64_t)static MOAngelLogger.assets);
        id v39 = a1;
        unint64_t v40 = Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v40, v41))
        {
          log = v40;
          os_log_type_t type = v41;
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          uint64_t v55 = swift_slowAlloc();
          *(_DWORD *)uint64_t v42 = 136315138;
          id v47 = v42;
          id v43 = [v39 identifier];
          uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v46 = v45;

          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, &v55);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, log, type, "[MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary] Failed to wrap image identifier=%s", v47, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, a4, v50, a6, a7, a8, a9);
        swift_unknownObjectRelease();
      }
      goto LABEL_12;
    }
    swift_unknownObjectRelease();
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static MOAngelLogger.assets);
  id v28 = a1;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v52 = a7;
    unint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)unint64_t v31 = 136315138;
    unint64_t v32 = a8;
    id v33 = [v28 identifier];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v51 = a3;
    unint64_t v36 = v35;

    a8 = v32;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v55);
    a7 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a3 = v51;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "[MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary] Pass through without wrapping identifier=%s", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v28, a3, a4, a5, a6, a7, a8, a9);
LABEL_12:
  swift_release_n();
  swift_release_n();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  return swift_release_n();
}

void specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary(asset:cacheType:completion:)(id a1, unsigned __int8 a2, void (*a3)(id))
{
  if (a2 - 2 >= 9)
  {
    id v5 = [a1 content];
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      uint64_t v7 = v6;
      swift_unknownObjectRetain();
      id v8 = [a1 identifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v9 = objc_allocWithZone((Class)MOSuggestionAssetImageURLPair);
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v11 = [v9 init:v7 urlAppendix:v10];

      swift_unknownObjectRelease();
      if (v11)
      {
        id v12 = v11;
        id v13 = [a1 assetType];
        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetImageURLPair);
        id v14 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v12 type:v13 contentClassType:swift_getObjCClassFromMetadata()];

        id v15 = [a1 metadata];
        static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v14 addMetadata:isa];

        id v37 = v14;
        a3(v14);
        swift_unknownObjectRelease();
      }
      else
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v27 = type metadata accessor for Logger();
        __swift_project_value_buffer(v27, (uint64_t)static MOAngelLogger.assets);
        id v28 = a1;
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v29, v30))
        {
          unint64_t v31 = (uint8_t *)swift_slowAlloc();
          uint64_t v38 = swift_slowAlloc();
          *(_DWORD *)unint64_t v31 = 136315138;
          buf = v31;
          id v32 = [v28 identifier];
          uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v35 = v34;

          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, &v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "[MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary] Failed to wrap image identifier=%s", buf, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        a3(0);
        swift_unknownObjectRelease();
      }
      return;
    }
    swift_unknownObjectRelease();
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.assets);
  id v18 = a1;
  NSString v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)id v21 = 136315138;
    id v22 = [v18 identifier];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v24 = a3;
    unint64_t v26 = v25;

    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v26, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary] Pass through without wrapping identifier=%s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v24(v18);
  }
  else
  {

    a3(v18);
  }
}

void specialized static MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary(asset:cacheType:completion:)(void *a1, unsigned __int8 a2, void (*a3)(id), uint8_t *a4)
{
  int v7 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  id v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (char *)&v89 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v89 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  os_log_type_t v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v7 - 2) >= 9)
  {
    uint64_t v101 = a4;
    id v21 = [a1 content];
    self;
    id v22 = (void *)swift_dynamicCastObjCClass();
    if (v22)
    {
      uint64_t v23 = v22;
      id v24 = [v22 albumArt];
      if (v24)
      {
        id v98 = v21;
        uint64_t v99 = v20;
        id v102 = a3;
        unint64_t v25 = v24;
        id v26 = [a1 identifier];
        uint64_t v27 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v100 = v18;
        uint64_t v29 = v28;

        id v97 = v25;
        UIImage.temporaryCacheURL(assetIdentifier:)(v27, v29, (uint64_t)v16);
        uint64_t v30 = v100;
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v16, 1, v17) == 1)
        {
          outlined destroy of URL?((uint64_t)v16);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v31 = type metadata accessor for Logger();
          __swift_project_value_buffer(v31, (uint64_t)static MOAngelLogger.assets);
          id v32 = a1;
          uint64_t v33 = Logger.logObject.getter();
          os_log_type_t v34 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v33, v34))
          {
            unint64_t v35 = (uint8_t *)swift_slowAlloc();
            uint64_t v104 = swift_slowAlloc();
            *(_DWORD *)unint64_t v35 = 136315138;
            id v36 = [v32 identifier];
            uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v39 = v38;

            uint64_t v103 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, &v104);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary] Failed to wrap image identifier=%s", v35, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          v102(0);
          swift_unknownObjectRelease();
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v99, v16, v17);
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v49 = type metadata accessor for Logger();
          __swift_project_value_buffer(v49, (uint64_t)static MOAngelLogger.assets);
          id v50 = a1;
          uint64_t v51 = Logger.logObject.getter();
          os_log_type_t v52 = static os_log_type_t.default.getter();
          int v53 = v52;
          if (os_log_type_enabled(v51, v52))
          {
            os_log_t v96 = v51;
            id v54 = (uint8_t *)swift_slowAlloc();
            uint64_t v95 = swift_slowAlloc();
            uint64_t v104 = v95;
            LODWORD(v94) = v53;
            uint64_t v55 = v50;
            id v56 = v54;
            *(_DWORD *)id v54 = 136315138;
            uint64_t v93 = v54 + 4;
            id v57 = [v55 identifier];
            uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v60 = v59;

            uint64_t v103 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v60, &v104);
            uint64_t v30 = v100;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            os_log_t v61 = v96;
            _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v94, "[MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary] Wrapping image identifier=%s", v56, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            id v50 = v55;
            swift_slowDealloc();
          }
          else
          {
          }
          id v62 = [v23 title];
          int v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v95 = v64;
          os_log_t v96 = v63;

          id v65 = [v23 albumTitle];
          uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v93 = (_DWORD *)v67;
          uint64_t v94 = v66;

          id v68 = [v23 artistName];
          uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v91 = v70;
          uint64_t v92 = v69;

          id v71 = [v23 trackIdentifier];
          if (v71)
          {
            id v72 = v71;
            uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v74 = v73;
          }
          else
          {
            uint64_t v90 = 0;
            uint64_t v74 = 0;
          }
          id v75 = [v23 previewURL];
          if (v75)
          {
            id v76 = v75;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v77 = v30;
            id v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
            v78(v14, 0, 1, v17);
          }
          else
          {
            uint64_t v77 = v30;
            id v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
            v78(v14, 1, 1, v17);
          }
          id v79 = [v23 mediaType];
          (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v11, v99, v17);
          v78(v11, 0, 1, v17);
          id v80 = [v23 bgColor];
          id v81 = [v23 bgColorVariant];
          id v82 = objc_allocWithZone((Class)MOSuggestionAssetMediaItem);
          id v83 = @nonobjc MOSuggestionAssetMediaItem.init(title:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:imageURL:bgColor:bgColorVariant:)((uint64_t)v96, v95, v94, (uint64_t)v93, v92, v91, 0, v90, v74, (uint64_t)v14, (uint64_t)v79, (uint64_t)v11, v80, (uint64_t)v81);
          id v84 = [v50 assetType];
          type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem);
          id v85 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v83 type:v84 contentClassType:swift_getObjCClassFromMetadata()];

          id v86 = [v50 metadata];
          static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v85 addMetadata:isa];

          id v88 = v85;
          v102(v85);

          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v17);
        }
        return;
      }
    }
    swift_unknownObjectRelease();
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  __swift_project_value_buffer(v40, (uint64_t)static MOAngelLogger.assets);
  id v41 = a1;
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    id v102 = a3;
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v104 = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136315138;
    uint64_t v101 = v44 + 4;
    id v45 = [v41 identifier];
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v48 = v47;

    uint64_t v103 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, &v104);
    a3 = v102;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "[MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary] Pass through without wrapping identifier=%s", v44, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  a3(v41);
}

uint64_t outlined destroy of URL?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MOSuggestionTipCoordinator.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t MOSuggestionTipCoordinator.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*MOSuggestionTipCoordinator.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return MOSuggestionTipCoordinator.delegate.modify;
}

void MOSuggestionTipCoordinator.delegate.modify(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t MOSuggestionTipCoordinator.onboardingTip.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t MOSuggestionTipCoordinator.onboardingTip.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 32) = a1;
  return result;
}

uint64_t key path setter for MOSuggestionTipCoordinator.privacyTip : MOSuggestionTipCoordinator(uint64_t a1, uint64_t a2)
{
  outlined init with take of Date?(a1, (uint64_t)v5, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
  uint64_t v3 = *(uint64_t (**)(unsigned char *))(**(void **)a2 + 176);
  outlined retain of MOSuggestionPrivacyTip?((uint64_t)v5, (void (*)(void, void, void, void, void))outlined copy of MOSuggestionPrivacyTip?);
  return v3(v5);
}

uint64_t MOSuggestionTipCoordinator.privacyTip.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  char v7 = *(unsigned char *)(v1 + 72);
  uint64_t result = outlined copy of MOSuggestionPrivacyTip?(v3, v4);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return result;
}

uint64_t MOSuggestionTipCoordinator.privacyTip.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  outlined init with take of Date?(a1, v1 + 40, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
  outlined retain of MOSuggestionPrivacyTip?(a1, (void (*)(void, void, void, void, void))outlined copy of MOSuggestionPrivacyTip?);
  outlined consume of MOSuggestionPrivacyTip?(v3, v4);
  return outlined retain of MOSuggestionPrivacyTip?(a1, (void (*)(void, void, void, void, void))outlined consume of MOSuggestionPrivacyTip?);
}

uint64_t MOSuggestionTipCoordinator.stateOfMindTip.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t MOSuggestionTipCoordinator.stateOfMindTip.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 73) = a1;
  return result;
}

uint64_t (*MOSuggestionTipCoordinator.stateOfMindTip.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionTipCoordinator.privacyTipWasShownAndInvalidated.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t MOSuggestionTipCoordinator.privacyTipWasShownAndInvalidated.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 74) = a1;
  return result;
}

uint64_t (*MOSuggestionTipCoordinator.privacyTipWasShownAndInvalidated.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionTipCoordinator.__allocating_init(clientId:clientName:isPublicUI:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  MOSuggestionTipCoordinator.init(clientId:clientName:isPublicUI:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t MOSuggestionTipCoordinator.init(clientId:clientName:isPublicUI:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v5 + 32) = 0;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_DWORD *)(v5 + 71) = 0;
  swift_beginAccess();
  char v11 = *(unsigned char *)(v5 + 32);
  *((void *)&v23 + 1) = &type metadata for MOSuggestionOnboardingTip;
  unint64_t v24 = lazy protocol witness table accessor for type MOSuggestionOnboardingTip and conformance MOSuggestionOnboardingTip();
  LOBYTE(v22) = v11;
  MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)((uint64_t)&v22);
  outlined destroy of Any?((uint64_t)&v22, &demangling cache variable for type metadata for Tip?);
  if (a2)
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(v5 + 40);
    uint64_t v13 = *(void *)(v5 + 48);
    *(void *)(v5 + 40) = a1;
    *(void *)(v5 + 48) = a2;
    *(void *)(v5 + 56) = a3;
    *(void *)(v5 + 64) = a4;
    *(unsigned char *)(v5 + 72) = 0;
    outlined consume of MOSuggestionPrivacyTip?(v12, v13);
    uint64_t v15 = *(void *)(v5 + 40);
    uint64_t v14 = *(void *)(v5 + 48);
    uint64_t v16 = *(void *)(v5 + 56);
    uint64_t v17 = *(void *)(v5 + 64);
    char v18 = *(unsigned char *)(v5 + 72);
    if (v14)
    {
      *((void *)&v23 + 1) = &type metadata for MOSuggestionPrivacyTip;
      unint64_t v24 = lazy protocol witness table accessor for type MOSuggestionPrivacyTip and conformance MOSuggestionPrivacyTip();
      uint64_t v19 = swift_allocObject();
      *(void *)&long long v22 = v19;
      *(void *)(v19 + 16) = v15;
      *(void *)(v19 + 24) = v14;
      *(void *)(v19 + 32) = v16;
      *(void *)(v19 + 40) = v17;
      *(unsigned char *)(v19 + 48) = v18 & 1;
    }
    else
    {
      unint64_t v24 = 0;
      long long v22 = 0u;
      long long v23 = 0u;
    }
    outlined copy of MOSuggestionPrivacyTip?(v15, v14);
    MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)((uint64_t)&v22);
    outlined destroy of Any?((uint64_t)&v22, &demangling cache variable for type metadata for Tip?);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  char v20 = *(unsigned char *)(v5 + 73);
  *((void *)&v23 + 1) = &type metadata for MOSuggestionStateOfMindTip;
  unint64_t v24 = lazy protocol witness table accessor for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip();
  LOBYTE(v22) = v20;
  MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)((uint64_t)&v22);
  outlined destroy of Any?((uint64_t)&v22, &demangling cache variable for type metadata for Tip?);
  *(unsigned char *)(v5 + 73) = a5 & 1;
  return v5;
}

uint64_t MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)&v9, &demangling cache variable for type metadata for Tip?);
  if (!v10) {
    return outlined destroy of Any?((uint64_t)&v9, &demangling cache variable for type metadata for Tip?);
  }
  outlined init with take of Tip(&v9, (uint64_t)v11);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v11, (uint64_t)&v9);
  char v7 = (void *)swift_allocObject();
  void v7[2] = 0;
  v7[3] = 0;
  outlined init with take of Tip(&v9, (uint64_t)(v7 + 4));
  v7[9] = v6;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v4, (uint64_t)&async function pointer to partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:), (uint64_t)v7);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

unint64_t lazy protocol witness table accessor for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip;
  if (!lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip;
  if (!lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip);
  }
  return result;
}

uint64_t sub_1000C0D68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[37] = a4;
  v5[38] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[39] = v6;
  unsigned char v5[40] = *(void *)(v6 - 8);
  v5[41] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[42] = v7;
  v5[43] = *(void *)(v7 - 8);
  v5[44] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Tips.Status();
  v5[45] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[46] = v9;
  v5[47] = *(void *)(v9 + 64);
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[50] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[51] = v10;
  v5[52] = *(void *)(v10 - 8);
  v5[53] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[54] = v11;
  v5[55] = *(void *)(v11 - 8);
  v5[56] = swift_task_alloc();
  return _swift_task_switch(closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:), 0, 0);
}

uint64_t closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)()
{
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 408);
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 296), *(void *)(*(void *)(v0 + 296) + 24));
  Tip.statusUpdates.getter();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  uint64_t v5 = *(void *)(v0 + 432);
  uint64_t v6 = *(void *)(v0 + 400);
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  void (*v6)(unint64_t, uint64_t, uint64_t);
  uint64_t Strong;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  long long *v31;
  void (*v32)(unint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  uint64_t v1 = v0[50];
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[46];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[55] + 8))(v0[56], v0[54]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  uint64_t v6 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  v6(v0[49], v1, v2);
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v32 = v6;
    uint64_t v33 = Strong;
    uint64_t v31 = (long long *)(v0 + 23);
    outlined init with copy of MOProtectedAppsManagerDelegate(v0[37], (uint64_t)(v0 + 8));
    outlined init with copy of Date?((uint64_t)(v0 + 8), (uint64_t)(v0 + 13), &demangling cache variable for type metadata for Tip?);
    if (v0[16])
    {
      outlined init with copy of Date?((uint64_t)(v0 + 13), (uint64_t)(v0 + 18), &demangling cache variable for type metadata for Tip?);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tip);
      if (swift_dynamicCast())
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 18));
        long long v23 = 0;
LABEL_16:
        uint64_t v11 = v0[48];
        uint64_t v10 = v0[49];
        uint64_t v13 = v0[46];
        uint64_t v12 = v0[47];
        uint64_t v14 = v0[45];
        uint64_t v29 = v0[43];
        uint64_t v30 = v0[42];
        unint64_t v24 = v0[44];
        unint64_t v25 = v0[41];
        id v28 = v0[40];
        id v26 = v0[39];
        uint64_t v15 = v0[37];
        outlined destroy of Any?((uint64_t)(v0 + 13), &demangling cache variable for type metadata for Tip?);
        outlined destroy of Any?((uint64_t)(v0 + 8), &demangling cache variable for type metadata for Tip?);
        type metadata accessor for OS_dispatch_queue();
        uint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, v10, v14);
        outlined init with copy of MOProtectedAppsManagerDelegate(v15, (uint64_t)v31);
        uint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        uint64_t v17 = swift_allocObject();
        v32(v17 + v16, v11, v14);
        char v18 = v17 + ((v16 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
        *(void *)char v18 = v33;
        *(unsigned char *)(v18 + 8) = v23;
        outlined init with take of Tip(v31, v17 + ((v16 + v12 + 23) & 0xFFFFFFFFFFFFFFF8));
        v0[6] = partial apply for closure #1 in MOSuggestionTipCoordinator.statusDidChange(status:for:);
        v0[7] = v17;
        v0[2] = _NSConcreteStackBlock;
        v0[3] = 1107296256;
        v0[4] = thunk for @escaping @callee_guaranteed () -> ();
        v0[5] = &block_descriptor_18;
        uint64_t v19 = _Block_copy(v0 + 2);
        swift_retain();
        swift_release();
        static DispatchQoS.unspecified.getter();
        v0[36] = _swiftEmptyArrayStorage;
        lazy protocol witness table accessor for type Tips.Status and conformance Tips.Status((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v19);

        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v25, v26);
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v24, v30);
        swift_release();
        goto LABEL_17;
      }
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 18));
        uint64_t v8 = 1;
      }
      else
      {
        uint64_t v9 = swift_dynamicCast();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 18));
        if (v9) {
          uint64_t v8 = 2;
        }
        else {
          uint64_t v8 = 3;
        }
      }
    }
    else
    {
      uint64_t v8 = 3;
    }
    long long v23 = v8;
    goto LABEL_16;
  }
LABEL_17:
  (*(void (**)(void, void))(v0[46] + 8))(v0[49], v0[45]);
  char v20 = (void *)swift_task_alloc();
  v0[57] = v20;
  *char v20 = v0;
  v20[1] = closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  id v21 = v0[54];
  long long v22 = v0[50];
  return AsyncStream.Iterator.next(isolation:)(v22, 0, 0, v21);
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  outlined destroy of Any?(a1, &demangling cache variable for type metadata for TaskPriority?);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void closure #1 in MOSuggestionTipCoordinator.statusDidChange(status:for:)(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unsigned int v53 = a3;
  uint64_t v7 = type metadata accessor for Tips.Status();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = enum case for Tips.InvalidationReason.tipClosed(_:);
  uint64_t v12 = type metadata accessor for Tips.InvalidationReason();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  os_log_type_t v52 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v52(v10, enum case for Tips.Status.invalidated(_:), v7);
  LOBYTE(v11) = static Tips.Status.== infix(_:_:)();
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v13 = v51(v10, v7);
  p_weak_ivar_lyt = (void **)(&MOSuggestionSheetNewEntryButton + 56);
  if (v11)
  {
    uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(v13);
    if (v15)
    {
      uint64_t v17 = v16;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void, uint64_t, uint64_t))(v17 + 16))(v53, ObjectType, v17);
      uint64_t v15 = swift_unknownObjectRelease();
    }
    uint64_t v50 = a1;
    if (v53 == 1)
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a2 + 168))(&v59, v15);
      outlined init with take of Date?((uint64_t)&v59, (uint64_t)v56, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
      outlined init with take of Date?((uint64_t)&v59, (uint64_t)v60, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
      if (*((void *)&v60[0] + 1))
      {
        long long v62 = v60[0];
        long long v63 = v60[1];
        char v64 = v61;
        long long v65 = v60[0];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined release of String((uint64_t)&v65);
        outlined init with take of Date?((uint64_t)&v63, (uint64_t)v66, &demangling cache variable for type metadata for String?);
        outlined release of String((uint64_t)v66);
        uint64_t v19 = v58;
        outlined consume of MOSuggestionPrivacyTip?(v56[0], v56[1]);
      }
      else
      {
        uint64_t v19 = 0;
      }
      (*(void (**)(uint64_t))(*(void *)a2 + 224))(v19);
      id v20 = [self sharedInstance];
      [v20 setOnboardingFlowCompletionStatus:3];
    }
    p_weak_ivar_lyt = &MOSuggestionSheetNewEntryButton.weak_ivar_lyt;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static MOAngelLogger.shared);
    outlined init with copy of MOProtectedAppsManagerDelegate(a4, (uint64_t)v56);
    long long v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    int v49 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v48 = a4;
      uint64_t v25 = v24;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v55 = v47;
      *(_DWORD *)uint64_t v25 = 136315394;
      os_log_t v46 = v22;
      LOBYTE(v54) = v53;
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v55);
      v45[2] = &v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      v45[1] = v25 + 14;
      __swift_project_boxed_opaque_existential_1(v56, v57);
      p_weak_ivar_lyt = (void **)(&MOSuggestionSheetNewEntryButton + 56);
      uint64_t v28 = dispatch thunk of Tip.id.getter();
      uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
      long long v22 = v46;
      _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v49, "[Tip] invalidated tipType: %s, for tipID: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a4 = v48;
      swift_slowDealloc();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    }
  }
  v52(v10, enum case for Tips.Status.available(_:), v7);
  char v30 = static Tips.Status.== infix(_:_:)();
  v51(v10, v7);
  if (v30)
  {
    if ((*(uint64_t (**)(void))(*(void *)a2 + 272))(v53))
    {
      uint64_t v31 = p_weak_ivar_lyt;
      if ((*(uint64_t (**)(void))(*(void *)a2 + 120))())
      {
        uint64_t v33 = v32;
        uint64_t v34 = swift_getObjectType();
        (*(void (**)(void, uint64_t, uint64_t))(v33 + 8))(v53, v34, v33);
        swift_unknownObjectRelease();
      }
      id v36 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)a2 + 184))(v56);
      if (*(void *)(v35 + 8)) {
        *(unsigned char *)(v35 + 32) = v53 == 1;
      }
      v36(v56, 0);
      p_weak_ivar_lyt = v31;
    }
    if (p_weak_ivar_lyt[451] != (void *)-1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static MOAngelLogger.shared);
    outlined init with copy of MOProtectedAppsManagerDelegate(a4, (uint64_t)v56);
    unint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315394;
      LOBYTE(v54) = v53;
      uint64_t v41 = String.init<A>(describing:)();
      uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1(v56, v57);
      uint64_t v43 = dispatch thunk of Tip.id.getter();
      uint64_t v54 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v44, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[Tip] available tipType: %s, for tipID: %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    }
  }
}

Swift::Bool __swiftcall MOSuggestionTipCoordinator.tipShouldShow(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Tips.Status?, Tips.Status?));
  uint64_t v2 = __chkstk_darwin(v89);
  uint64_t v88 = (uint64_t)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v85 = (uint64_t)&v82 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v84 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v82 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v86 = (uint64_t)&v82 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v83 = (uint64_t)&v82 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v82 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v82 - v18;
  uint64_t v20 = type metadata accessor for Tips.Status();
  uint64_t v91 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  int v87 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v90 = (char *)&v82 - v23;
  uint64_t v24 = self;
  id v25 = [v24 sharedInstance];
  id v26 = [v25 onboardingFlowCompletionStatus];

  if (v26 != (id)1)
  {
    id v27 = [v24 sharedInstance];
    id v26 = [v27 onboardingFlowCompletionStatus];

    LODWORD(v26) = v26 == 0;
  }
  id v28 = [v24 sharedInstance];
  unsigned __int8 v29 = [v28 isOnboarded];

  char v30 = 0;
  switch(tipType)
  {
    case MomentsUIService_MOSuggestionTipType_privacy:
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v92 + 168))(&v98);
      uint64_t v38 = v98;
      uint64_t v37 = v99;
      uint64_t v40 = v100;
      uint64_t v39 = v101;
      char v41 = v102;
      outlined init with take of Date?((uint64_t)&v98, (uint64_t)&v103, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
      if (*((void *)&v103 + 1))
      {
        long long v106 = v103;
        long long v107 = v104;
        char v108 = v105;
        long long v109 = v103;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined release of String((uint64_t)&v109);
        outlined init with take of Date?((uint64_t)&v107, (uint64_t)v110, &demangling cache variable for type metadata for String?);
        outlined release of String((uint64_t)v110);
        uint64_t v93 = v38;
        uint64_t v94 = v37;
        uint64_t v95 = v40;
        uint64_t v96 = v39;
        char v97 = v41 & 1;
        lazy protocol witness table accessor for type MOSuggestionPrivacyTip and conformance MOSuggestionPrivacyTip();
        Tip.status.getter();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = v91;
        uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56);
        v43(v19, 0, 1, v20);
      }
      else
      {
        uint64_t v42 = v91;
        uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56);
        v43(v19, 1, 1, v20);
      }
      (*(void (**)(char *, void, uint64_t))(v42 + 104))(v17, enum case for Tips.Status.available(_:), v20);
      v43(v17, 0, 1, v20);
      uint64_t v53 = v85;
      uint64_t v54 = v85 + *(int *)(v89 + 48);
      outlined init with copy of Date?((uint64_t)v19, v85, &demangling cache variable for type metadata for Tips.Status?);
      outlined init with copy of Date?((uint64_t)v17, v54, &demangling cache variable for type metadata for Tips.Status?);
      uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
      if (v55(v53, 1, v20) == 1)
      {
        outlined destroy of Any?((uint64_t)v17, &demangling cache variable for type metadata for Tips.Status?);
        outlined destroy of Any?((uint64_t)v19, &demangling cache variable for type metadata for Tips.Status?);
        if (v55(v54, 1, v20) == 1)
        {
          outlined destroy of Any?(v53, &demangling cache variable for type metadata for Tips.Status?);
          char v30 = v29;
          return v30 & 1;
        }
        goto LABEL_16;
      }
      uint64_t v56 = v83;
      outlined init with copy of Date?(v53, v83, &demangling cache variable for type metadata for Tips.Status?);
      if (v55(v54, 1, v20) == 1)
      {
        outlined destroy of Any?((uint64_t)v17, &demangling cache variable for type metadata for Tips.Status?);
        outlined destroy of Any?((uint64_t)v19, &demangling cache variable for type metadata for Tips.Status?);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v56, v20);
LABEL_16:
        outlined destroy of Any?(v53, &demangling cache variable for type metadata for (Tips.Status?, Tips.Status?));
        char v30 = 0;
        return v30 & 1;
      }
      uint64_t v68 = v91;
      uint64_t v69 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v90, v54, v20);
      lazy protocol witness table accessor for type Tips.Status and conformance Tips.Status(&lazy protocol witness table cache variable for type Tips.Status and conformance Tips.Status, (void (*)(uint64_t))&type metadata accessor for Tips.Status);
      char v70 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v71 = *(void (**)(char *, uint64_t))(v68 + 8);
      v71(v69, v20);
      outlined destroy of Any?((uint64_t)v17, &demangling cache variable for type metadata for Tips.Status?);
      outlined destroy of Any?((uint64_t)v19, &demangling cache variable for type metadata for Tips.Status?);
      v71((char *)v56, v20);
      outlined destroy of Any?(v53, &demangling cache variable for type metadata for Tips.Status?);
      char v30 = v29;
      if ((v70 & 1) == 0) {
        goto LABEL_25;
      }
      return v30 & 1;
    case MomentsUIService_MOSuggestionTipType_stateOfMind:
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v92 + 168))(&v98);
      uint64_t v44 = v98;
      uint64_t v45 = v99;
      uint64_t v47 = v100;
      uint64_t v46 = v101;
      char v48 = v102;
      outlined init with take of Date?((uint64_t)&v98, (uint64_t)&v103, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
      if (*((void *)&v103 + 1))
      {
        long long v106 = v103;
        long long v107 = v104;
        char v108 = v105;
        long long v109 = v103;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        outlined release of String((uint64_t)&v109);
        outlined init with take of Date?((uint64_t)&v107, (uint64_t)v110, &demangling cache variable for type metadata for String?);
        outlined release of String((uint64_t)v110);
        uint64_t v93 = v44;
        uint64_t v94 = v45;
        uint64_t v95 = v47;
        uint64_t v96 = v46;
        char v97 = v48 & 1;
        lazy protocol witness table accessor for type MOSuggestionPrivacyTip and conformance MOSuggestionPrivacyTip();
        uint64_t v49 = v86;
        Tip.status.getter();
        uint64_t v50 = v49;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v51 = v91;
        os_log_type_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
        v52(v50, 0, 1, v20);
      }
      else
      {
        uint64_t v51 = v91;
        os_log_type_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
        uint64_t v50 = v86;
        v52(v86, 1, 1, v20);
      }
      uint64_t v57 = enum case for Tips.InvalidationReason.tipClosed(_:);
      uint64_t v58 = type metadata accessor for Tips.InvalidationReason();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 104))(v10, v57, v58);
      uint64_t v59 = *(void (**)(char *, void, uint64_t))(v51 + 104);
      v59(v10, enum case for Tips.Status.invalidated(_:), v20);
      v52((uint64_t)v10, 0, 1, v20);
      uint64_t v60 = v88;
      uint64_t v61 = v88 + *(int *)(v89 + 48);
      outlined init with copy of Date?(v50, v88, &demangling cache variable for type metadata for Tips.Status?);
      uint64_t v62 = v60;
      outlined init with copy of Date?((uint64_t)v10, v61, &demangling cache variable for type metadata for Tips.Status?);
      long long v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
      if (v63(v60, 1, v20) == 1)
      {
        outlined destroy of Any?((uint64_t)v10, &demangling cache variable for type metadata for Tips.Status?);
        uint64_t v62 = v88;
        outlined destroy of Any?(v50, &demangling cache variable for type metadata for Tips.Status?);
        int v64 = v63(v61, 1, v20);
        p_ivar_lyt = (void **)(&ThirdPartyMediaColorEffectView + 16);
        if (v64 == 1)
        {
          outlined destroy of Any?(v62, &demangling cache variable for type metadata for Tips.Status?);
          char v66 = 0;
          goto LABEL_27;
        }
        goto LABEL_23;
      }
      uint64_t v67 = v84;
      outlined init with copy of Date?(v60, v84, &demangling cache variable for type metadata for Tips.Status?);
      if (v63(v61, 1, v20) == 1)
      {
        outlined destroy of Any?((uint64_t)v10, &demangling cache variable for type metadata for Tips.Status?);
        outlined destroy of Any?(v86, &demangling cache variable for type metadata for Tips.Status?);
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v67, v20);
        p_ivar_lyt = (void **)(&ThirdPartyMediaColorEffectView + 16);
LABEL_23:
        outlined destroy of Any?(v62, &demangling cache variable for type metadata for (Tips.Status?, Tips.Status?));
        char v66 = 1;
        goto LABEL_27;
      }
      id v72 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v90, v61, v20);
      lazy protocol witness table accessor for type Tips.Status and conformance Tips.Status(&lazy protocol witness table cache variable for type Tips.Status and conformance Tips.Status, (void (*)(uint64_t))&type metadata accessor for Tips.Status);
      char v73 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v74 = *(void (**)(char *, uint64_t))(v51 + 8);
      v74(v72, v20);
      outlined destroy of Any?((uint64_t)v10, &demangling cache variable for type metadata for Tips.Status?);
      outlined destroy of Any?(v86, &demangling cache variable for type metadata for Tips.Status?);
      v74((char *)v67, v20);
      outlined destroy of Any?(v88, &demangling cache variable for type metadata for Tips.Status?);
      char v66 = v73 ^ 1;
      p_ivar_lyt = &ThirdPartyMediaColorEffectView.ivar_lyt;
LABEL_27:
      id v75 = [self p_ivar_lyt[482]];
      unsigned __int8 v76 = [v75 getStateForSetting:9];

      LOBYTE(v93) = (*(uint64_t (**)(void))(*(void *)v92 + 192))() & 1;
      lazy protocol witness table accessor for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip();
      uint64_t v77 = v90;
      Tip.status.getter();
      id v78 = v87;
      v59(v87, enum case for Tips.Status.available(_:), v20);
      LOBYTE(v75) = static Tips.Status.== infix(_:_:)();
      id v79 = *(void (**)(char *, uint64_t))(v51 + 8);
      v79(v78, v20);
      uint64_t v80 = ((uint64_t (*)(char *, uint64_t))v79)(v77, v20);
      char v30 = 0;
      if ((v75 & 1) != 0 && (v76 & 1) == 0 && (v66 & 1) == 0) {
        char v30 = (*(uint64_t (**)(uint64_t))(*(void *)v92 + 216))(v80) ^ 1;
      }
      return v30 & 1;
    case MomentsUIService_MOSuggestionTipType_none:
      return v30 & 1;
    default:
      if (v26)
      {
        LOBYTE(v106) = (*(uint64_t (**)(void))(*(void *)v92 + 144))() & 1;
        lazy protocol witness table accessor for type MOSuggestionOnboardingTip and conformance MOSuggestionOnboardingTip();
        uint64_t v31 = v90;
        Tip.status.getter();
        uint64_t v32 = enum case for Tips.InvalidationReason.tipClosed(_:);
        uint64_t v33 = type metadata accessor for Tips.InvalidationReason();
        uint64_t v34 = v87;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v87, v32, v33);
        uint64_t v35 = v91;
        (*(void (**)(char *, void, uint64_t))(v91 + 104))(v34, enum case for Tips.Status.invalidated(_:), v20);
        lazy protocol witness table accessor for type Tips.Status and conformance Tips.Status(&lazy protocol witness table cache variable for type Tips.Status and conformance Tips.Status, (void (*)(uint64_t))&type metadata accessor for Tips.Status);
        LOBYTE(v32) = dispatch thunk of static Equatable.== infix(_:_:)();
        id v36 = *(void (**)(char *, uint64_t))(v35 + 8);
        v36(v34, v20);
        v36(v31, v20);
        char v30 = v32 ^ 1;
      }
      else
      {
LABEL_25:
        char v30 = 0;
      }
      return v30 & 1;
  }
}

uint64_t MOSuggestionTipCoordinator.deinit()
{
  outlined destroy of weak MOSuggestionSheetInterstitialGridInteractionsDelegate?(v0 + 16);
  outlined consume of MOSuggestionPrivacyTip?(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return v0;
}

uint64_t MOSuggestionTipCoordinator.__deallocating_deinit()
{
  outlined destroy of weak MOSuggestionSheetInterstitialGridInteractionsDelegate?(v0 + 16);
  outlined consume of MOSuggestionPrivacyTip?(*(void *)(v0 + 40), *(void *)(v0 + 48));

  return swift_deallocClassInstance();
}

uint64_t outlined release of String(uint64_t a1)
{
  return a1;
}

unint64_t lazy protocol witness table accessor for type MOSuggestionTipType and conformance MOSuggestionTipType()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionTipType and conformance MOSuggestionTipType;
  if (!lazy protocol witness table cache variable for type MOSuggestionTipType and conformance MOSuggestionTipType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionTipType and conformance MOSuggestionTipType);
  }
  return result;
}

uint64_t sub_1000C3168@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 120))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000C31B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 128);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000C3218@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 144))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000C3268(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 152))(*a1);
}

uint64_t sub_1000C32B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 168))(v4);
  return outlined init with take of Date?((uint64_t)v4, a2, &demangling cache variable for type metadata for MOSuggestionPrivacyTip?);
}

uint64_t sub_1000C331C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 192))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000C336C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 200))(*a1);
}

uint64_t sub_1000C33B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 216))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000C3404(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 224))(*a1);
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionTipType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C3518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionTipType()
{
  return &type metadata for MOSuggestionTipType;
}

uint64_t type metadata accessor for MOSuggestionTipCoordinator()
{
  return self;
}

uint64_t outlined init with take of Tip(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000C358C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C35C4()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  return closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)(a1, v4, v5, v6, v7);
}

uint64_t partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:)()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000C3998()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu);
  return v6(a1, v4);
}

uint64_t sub_1000C3A88()
{
  uint64_t v1 = type metadata accessor for Tips.Status();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (v4 + *(void *)(v2 + 64) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + v6);

  return _swift_deallocObject(v0, v6 + 40, v5);
}

void partial apply for closure #1 in MOSuggestionTipCoordinator.statusDidChange(status:for:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for Tips.Status() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = *(void *)v5;
  unsigned int v7 = *(unsigned __int8 *)(v5 + 8);

  closure #1 in MOSuggestionTipCoordinator.statusDidChange(status:for:)(v4, v6, v7, v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t lazy protocol witness table accessor for type Tips.Status and conformance Tips.Status(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MOEventBundle.annotationState.getter()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v0 suggestionEngagementEvents];
  if (!v5) {
    return 1;
  }
  uint64_t v6 = v5;
  if ((uint64_t)[v5 count] < 1)
  {

    return 1;
  }
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.shared);
  id v8 = v6;
  id v9 = v0;
  id v10 = v8;
  id v11 = v9;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v50 = v2;
    uint64_t v16 = v15;
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v55 = (uint64_t)v10;
    uint64_t v56 = v53;
    *(_DWORD *)uint64_t v16 = 138412546;
    os_log_t v51 = v12;
    int v52 = v14;
    id v18 = v10;
    *(void *)&long long v54 = v10;
    id v19 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v17 = v6;

    *(_WORD *)(v16 + 12) = 2080;
    id v20 = [v11 bundleIdentifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    lazy protocol witness table accessor for type UUID and conformance UUID();
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v4, v1);
    uint64_t v55 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v10 = (id)v54;
    swift_bridgeObjectRelease();
    os_log_t v24 = v51;
    _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v52, "[AnnotationState] Engagement events=%@ id=%s", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionEngagementEvent>);
  uint64_t inited = swift_initStackObject();
  long long v54 = xmmword_1001DA390;
  *(_OWORD *)(inited + 16) = xmmword_1001DA390;
  id v27 = (void *)MOSuggestionEngagementEventHidden;
  *(void *)(inited + 32) = MOSuggestionEngagementEventHidden;
  id v28 = (void *)MOSuggestionEngagementEventDeleted;
  *(void *)(inited + 40) = MOSuggestionEngagementEventDeleted;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v29 = v27;
  id v30 = v28;
  id v31 = v29;
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v33 = [v10 containsObject:v32];

  if (v33)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    swift_setDeallocating();
    type metadata accessor for MOSuggestionEngagementEvent(0);
    swift_arrayDestroy();

    return 0;
  }
  uint64_t v34 = *(void **)(inited + 40);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v35 = v34;
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v37 = [v10 containsObject:v36];
  swift_bridgeObjectRelease();

  if (v37) {
    goto LABEL_13;
  }
  swift_setDeallocating();
  type metadata accessor for MOSuggestionEngagementEvent(0);
  swift_arrayDestroy();
  uint64_t v38 = swift_initStackObject();
  *(_OWORD *)(v38 + 16) = v54;
  uint64_t v39 = (void *)MOSuggestionEngagementEventSelected;
  *(void *)(v38 + 32) = MOSuggestionEngagementEventSelected;
  uint64_t v40 = (void *)MOSuggestionEngagementEventQuickAddEntry;
  *(void *)(v38 + 40) = MOSuggestionEngagementEventQuickAddEntry;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v41 = v39;
  id v42 = v40;
  id v43 = v41;
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned __int8 v45 = [v10 containsObject:v44];

  if ((v45 & 1) == 0)
  {
    uint64_t v46 = *(void **)(v38 + 40);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v47 = v46;
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v49 = [v10 containsObject:v48];

    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_17;
    }
    swift_setDeallocating();
    swift_arrayDestroy();
    return 1;
  }

  swift_bridgeObjectRelease();
LABEL_17:
  swift_setDeallocating();
  swift_arrayDestroy();
  return 2;
}

Swift::Bool __swiftcall NSMutableSet.containsAnyOf(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = (char *)*((void *)a1._rawValue + 2);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    id v5 = v2 - 1;
    do
    {
      uint64_t v2 = (char *)*((void *)a1._rawValue + (void)v4 + 4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v2;
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      LOBYTE(v2) = [v1 containsObject:v7];

      if (v2) {
        break;
      }
    }
    while (v5 != v4++);
    swift_bridgeObjectRelease();
  }
  return (char)v2;
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MOEventBundleAnnotationState and conformance MOEventBundleAnnotationState()
{
  unint64_t result = lazy protocol witness table cache variable for type MOEventBundleAnnotationState and conformance MOEventBundleAnnotationState;
  if (!lazy protocol witness table cache variable for type MOEventBundleAnnotationState and conformance MOEventBundleAnnotationState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOEventBundleAnnotationState and conformance MOEventBundleAnnotationState);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MOEventBundleAnnotationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C44B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOEventBundleAnnotationState()
{
  return &type metadata for MOEventBundleAnnotationState;
}

uint64_t specialized _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(Swift::Bool a1, Swift::Int a2, MomentsUIService::SuggestionCellStyle a3, Swift::Bool a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = (unint64_t)MOSuggestionCollectionViewCellViewModel.prioritizedAssetReferences(previewOnly:previewMax:style:typeSorted:)(a1, a2, a3, a4);
  if (!v6) {
    return 0;
  }
  unint64_t v7 = v6;
  unint64_t v8 = v6 >> 62;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    size_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    size_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v10 = specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(a3, v9);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v11 = v10;
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = 0;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  uint64_t v39 = v11;
  if (os_log_type_enabled(v13, v14))
  {
    size_t v15 = v9;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134218498;
    uint64_t v43 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2080;
    uint64_t v18 = Array.debugDescription.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[MOSuggestionCollectionViewCellViewModel] style: %ld, assetReferencesCount: %ld, assetSizes: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    size_t v9 = v15;
    swift_slowDealloc();

    uint64_t v20 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v8) {
      goto LABEL_9;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v20 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v8)
    {
LABEL_9:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v22 = result;
      if (result) {
        goto LABEL_10;
      }
      goto LABEL_26;
    }
  }
  uint64_t v22 = *(void *)(v20 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v22)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v9;
  }
LABEL_10:
  if (v22 < 1)
  {
    __break(1u);
  }
  else if (v22 - 1 < (unint64_t)v11[2])
  {
    size_t v34 = v9;
    uint64_t v23 = 0;
    unint64_t v35 = v7 & 0xC000000000000001;
    uint64_t v36 = v22;
    unint64_t v37 = v7;
    do
    {
      if (v35)
      {
        uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v24 = *(void *)(v7 + 8 * v23 + 32);
        swift_retain();
      }
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      uint64_t v25 = static MOSuggestionAssetCacheManager.shared;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1001DA250;
      *(void *)(v26 + 32) = v24;
      uint64_t v43 = v26;
      specialized Array._endMutation()();
      uint64_t v27 = v43;
      uint64_t v28 = *((unsigned __int8 *)v11 + v23 + 32);
      uint64_t v29 = swift_allocObject();
      swift_weakInit();
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v29;
      *(void *)(v30 + 24) = v23;
      *(void *)(v30 + 32) = a5;
      *(void *)(v30 + 40) = a6;
      *(unsigned char *)(v30 + 48) = a3;
      *(void *)(v30 + 56) = v7;
      *(void *)(v30 + 64) = v38;
      uint64_t v31 = one-time initialization token for defaultQueue;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (v31 != -1) {
        swift_once();
      }
      ++v23;
      NSString v32 = *(void (**)(uint64_t, void, id, uint64_t, void (*)(unint64_t), uint64_t))(*(void *)v25 + 232);
      id v33 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
      v32(v27, 0, v33, v28, partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:), v30);
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v7 = v37;
      id v11 = v39;
    }
    while (v36 != v23);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v34;
  }
  __break(1u);
  return result;
}

Swift::OpaquePointer_optional __swiftcall MOSuggestionCollectionViewCellViewModel.prioritizedAssetReferences(previewOnly:previewMax:style:typeSorted:)(Swift::Bool previewOnly, Swift::Int previewMax, MomentsUIService::SuggestionCellStyle style, Swift::Bool typeSorted)
{
  if (previewOnly)
  {
    Swift::OpaquePointer_optional result = MOEventBundle.orderedAssetReferencesForPreview(max:)(previewMax);
    unint64_t rawValue = (unint64_t)result.value._rawValue;
    goto LABEL_8;
  }
  Swift::OpaquePointer_optional result = MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  unint64_t rawValue = (unint64_t)result.value._rawValue;
  if (!typeSorted)
  {
LABEL_8:
    if (rawValue) {
      goto LABEL_9;
    }
LABEL_25:
    result.value._unint64_t rawValue = 0;
    return result;
  }
  if (!result.value._rawValue) {
    goto LABEL_25;
  }
  if ((unint64_t)result.value._rawValue >> 62)
  {
    unint64_t v62 = swift_bridgeObjectRetain();
    unint64_t v7 = specialized _copyCollectionToContiguousArray<A>(_:)(v62);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = (void *)((uint64_t)result.value._rawValue & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  long long v65 = v7;
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v65);
  swift_bridgeObjectRelease();
  unint64_t rawValue = (unint64_t)v65;
LABEL_9:
  long long v65 = (void *)rawValue;
  unint64_t v8 = rawValue >> 62;
  if (rawValue >> 62)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v8 = rawValue >> 62;
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (!v9) {
      goto LABEL_24;
    }
LABEL_11:
    unint64_t v64 = v8;
    if ((rawValue & 0xC000000000000001) != 0)
    {
      uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v11;
    }
    else
    {
      uint64_t v10 = *(void *)(rawValue + 32);
      uint64_t v11 = swift_retain();
    }
    uint64_t v12 = *(uint64_t (**)(uint64_t))(*(void *)v10 + 120);
    os_log_type_t v13 = (void *)v12(v11);
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
    if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t v20 = swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        uint64_t v21 = (void *)v12(v20);
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;
        if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
        {
          swift_release();

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_release();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v27 & 1) == 0)
          {
            if (v9 == 1) {
              goto LABEL_24;
            }
            uint64_t v28 = 5;
            while (1)
            {
              uint64_t v63 = v28 - 4;
              if ((rawValue & 0xC000000000000001) != 0)
              {
                uint64_t v43 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                uint64_t v43 = *(void *)(rawValue + 8 * v28);
                swift_retain();
              }
              NSString v44 = *(uint64_t (**)(void))(*(void *)v43 + 120);
              unsigned __int8 v45 = (void *)v44();
              uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v48 = v47;
              if (v46 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v48 == v49)
              {

                swift_bridgeObjectRelease_n();
LABEL_75:
                swift_bridgeObjectRelease();
                swift_release();
                MomentsUIService::SuggestionCellStyle v60 = style;
                goto LABEL_78;
              }
              char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              uint64_t v52 = swift_bridgeObjectRelease();
              if (v51) {
                goto LABEL_75;
              }
              uint64_t v53 = (void *)((uint64_t (*)(uint64_t))v44)(v52);
              uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v56 = v55;
              if (v54 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v56 == v57) {
                break;
              }
              char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_release();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              MomentsUIService::SuggestionCellStyle v60 = style;
              if (v59) {
                goto LABEL_77;
              }
              if (__OFADD__(v63, 1))
              {
                __break(1u);
                goto LABEL_98;
              }
              ++v28;
              if (v63 + 1 == v9) {
                goto LABEL_24;
              }
            }
            swift_release();

            swift_bridgeObjectRelease_n();
            MomentsUIService::SuggestionCellStyle v60 = style;
LABEL_77:
            swift_bridgeObjectRelease();
LABEL_78:
            if (v60 != MomentsUIService_SuggestionCellStyle_halfWidth)
            {
              v28 -= 4;
              if (v60 == MomentsUIService_SuggestionCellStyle_fullWidth) {
                goto LABEL_30;
              }
              goto LABEL_49;
            }
            v28 -= 4;
            if (!v64) {
              goto LABEL_51;
            }
            goto LABEL_82;
          }
        }
        swift_bridgeObjectRelease();
        if (style != MomentsUIService_SuggestionCellStyle_halfWidth)
        {
          if (style) {
            goto LABEL_49;
          }
          goto LABEL_29;
        }
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    if (style != MomentsUIService_SuggestionCellStyle_halfWidth)
    {
      if (style)
      {
LABEL_49:
        swift_bridgeObjectRelease();
        goto LABEL_92;
      }
LABEL_29:
      uint64_t v28 = 0;
LABEL_30:
      if (v64)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = *(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v29 >= 5 && v28 <= 4)
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
LABEL_98:
        }
          swift_once();
        uint64_t v30 = type metadata accessor for Logger();
        __swift_project_value_buffer(v30, (uint64_t)static MOAngelLogger.assets);
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          id v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v33 = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "[MOEventBundle] (Asset Prioritization Special Case) Adjusting map position to fix in top right (small), FULLWIDTH", v33, 2u);
          swift_slowDealloc();
        }

        unint64_t v34 = v28;
        unint64_t v35 = 2;
        goto LABEL_91;
      }
      if (v29 == 4)
      {
        if (v28 > 2) {
          goto LABEL_92;
        }
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v42 = type metadata accessor for Logger();
        __swift_project_value_buffer(v42, (uint64_t)static MOAngelLogger.assets);
        unint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v37, v38)) {
          goto LABEL_90;
        }
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        uint64_t v40 = "[MOEventBundle] (Asset Prioritization Special Case) Adjusting map position to fix in top right (mediumHori"
              "ziontal), FULLWIDTH";
      }
      else
      {
        if (v29 != 3 || v28 == 2) {
          goto LABEL_92;
        }
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v36 = type metadata accessor for Logger();
        __swift_project_value_buffer(v36, (uint64_t)static MOAngelLogger.assets);
        unint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v37, v38)) {
          goto LABEL_90;
        }
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        uint64_t v40 = "[MOEventBundle] (Asset Prioritization Special Case) Adjusting map position to fix in top right (mediumHori"
              "ziontal top), FULLWIDTH";
      }
      goto LABEL_89;
    }
LABEL_50:
    uint64_t v28 = 0;
    if (!v64)
    {
LABEL_51:
      uint64_t v41 = *(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_83;
    }
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_83:
    swift_bridgeObjectRelease();
    if (v41 < 4 || v28 > 3) {
      goto LABEL_92;
    }
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    __swift_project_value_buffer(v61, (uint64_t)static MOAngelLogger.assets);
    unint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v37, v38)) {
      goto LABEL_90;
    }
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    uint64_t v40 = "[MOEventBundle] (Asset Prioritization Special Case) Adjusting map position to fix in top right (small), HALFWIDTH";
LABEL_89:
    _os_log_impl((void *)&_mh_execute_header, v37, v38, v40, v39, 2u);
    swift_slowDealloc();
LABEL_90:

    unint64_t v34 = v28;
    unint64_t v35 = 1;
LABEL_91:
    specialized MutableCollection.swapAt(_:_:)(v34, v35);
    goto LABEL_92;
  }
  uint64_t v9 = *(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v9) {
    goto LABEL_11;
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
LABEL_92:
  result.value._unint64_t rawValue = v65;
  return result;
}

uint64_t specialized Array.append<A>(contentsOf:)(unint64_t a1)
{
  return specialized Array.append<A>(contentsOf:)(a1, (uint64_t (*)(uint64_t, void, unint64_t))specialized Array._copyContents(initializing:));
}

{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t vars8;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    int v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    unsigned int v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  void *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      unint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    void *v1 = v9;
    unint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    Swift::OpaquePointer_optional result = specialized Array._copyContents(initializing:)(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    os_log_type_t v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

{
  return specialized Array.append<A>(contentsOf:)(a1, (uint64_t (*)(uint64_t, void, unint64_t))specialized Array._copyContents(initializing:));
}

uint64_t specialized Array.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8 = a4 >> 1;
  uint64_t v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_11;
  }
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v9;
  if (!__OFADD__(v10, v9)) {
    goto LABEL_4;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *unsigned int v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v11 = v14 + v9;
      if (__OFADD__(v14, v9)) {
        goto LABEL_14;
      }
LABEL_4:
      unint64_t v7 = *v4;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *unsigned int v4 = v7;
      if (!isUniquelyReferenced_nonNull_bridgeObject) {
        goto LABEL_15;
      }
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      if ((v7 & 0x4000000000000000) != 0) {
        goto LABEL_15;
      }
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      if (v8 != v5) {
        goto LABEL_18;
      }
    }
    goto LABEL_25;
  }
LABEL_18:
  uint64_t v15 = *(void *)(v13 + 16);
  if ((*(void *)(v13 + 24) >> 1) - v15 < v9)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 < 0) {
    goto LABEL_30;
  }
  unint64_t v16 = v13 + 8 * v15 + 32;
  unint64_t v17 = v6 + 8 * v5;
  if (v17 < v16 + 8 * v9 && v16 < v17 + 8 * v9) {
    goto LABEL_30;
  }
  type metadata accessor for MOSuggestionCollectionViewCellViewModel();
  swift_arrayInitWithCopy();
  if (v9)
  {
    uint64_t v18 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v19 = __OFADD__(v18, v9);
    uint64_t v20 = v18 + v9;
    if (!v19)
    {
      *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
      goto LABEL_25;
    }
    goto LABEL_29;
  }
LABEL_25:
  swift_unknownObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t specialized Array.append<A>(contentsOf:)(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t specialized Array.append<A>(contentsOf:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[14 * v8 + 4];
  if (a1 + 32 < v9 + 112 * v2 && v9 < a1 + 32 + 112 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    void *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t key path getter for MOSuggestionCollectionViewModel.reloadCollectionViewHandler : MOSuggestionCollectionViewModel@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1, unsigned __int8 *a2)@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 328))();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool, @unowned Bool) -> ();
  }
  else
  {
    uint64_t v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *))result;
  return result;
}

uint64_t key path setter for MOSuggestionCollectionViewModel.reloadCollectionViewHandler : MOSuggestionCollectionViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed Bool) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(void, uint64_t))(**(void **)a2 + 336);
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t MOSuggestionCollectionViewModel.reloadCollectionViewHandler.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 80);
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v1);
  return v1;
}

uint64_t MOSuggestionCollectionViewModel.reloadCollectionViewHandler.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 80);
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v5);
}

uint64_t (*MOSuggestionSheetAssetViewModel.evergreenData.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path getter for MOSuggestionCollectionViewModel.reloadCollectionViewIndexHandler : MOSuggestionCollectionViewModel@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 352))();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    uint64_t v7 = partial apply for thunk for @callee_guaranteed (@in_guaranteed URL) -> ();
  }
  else
  {
    uint64_t v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for MOSuggestionCollectionViewModel.reloadCollectionViewIndexHandler : MOSuggestionCollectionViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed IndexPath) -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))(**(void **)a2 + 360);
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t MOSuggestionCollectionViewModel.reloadCollectionViewIndexHandler.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v1);
  return v1;
}

uint64_t MOSuggestionCollectionViewModel.reloadCollectionViewIndexHandler.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 96);
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v5);
}

uint64_t (*MOSuggestionSheetAssetViewModel.mediaAssetID.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path getter for MOSuggestionCollectionViewModel.bundleLoadingChangedHandler : MOSuggestionCollectionViewModel@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 376))();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    uint64_t v7 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  }
  else
  {
    uint64_t v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for MOSuggestionCollectionViewModel.bundleLoadingChangedHandler : MOSuggestionCollectionViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))(**(void **)a2 + 384);
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t MOSuggestionCollectionViewModel.bundleLoadingChangedHandler.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 112);
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v1);
  return v1;
}

uint64_t MOSuggestionCollectionViewModel.bundleLoadingChangedHandler.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 112);
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v5);
}

uint64_t (*MOSuggestionCollectionViewModel.bundleLoadingChangedHandler.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewModel.collectionViewDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return outlined init with copy of Date?(v1 + 128, a1, &demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);
}

uint64_t MOSuggestionCollectionViewModel.collectionViewDelegate.setter(uint64_t a1)
{
  swift_beginAccess();
  outlined assign with take of Date?(a1, v1 + 128, &demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);
  return swift_endAccess();
}

uint64_t (*MOSuggestionCollectionViewModel.collectionViewDelegate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewModel.currentSegment.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t MOSuggestionCollectionViewModel.currentSegment.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 168) = v2;
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.currentSegment.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionCollectionViewModel.options.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 176);
  id v2 = v1;
  return v1;
}

void MOSuggestionCollectionViewModel.options.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 176);
  *(void *)(v1 + 176) = a1;
}

uint64_t (*MOSuggestionCollectionViewModel.options.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewModel.hasDismissedATip.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 192);
}

uint64_t MOSuggestionCollectionViewModel.hasDismissedATip.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 192) = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.hasDismissedATip.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionCollectionViewModel.protectedAppsManager.getter()
{
  return *(id *)(v0 + 200);
}

uint64_t MOSuggestionCollectionViewModel.targetProtectedApps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MOSuggestionCollectionViewModel.targetProtectedApps.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 208) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOSuggestionCollectionViewModel.targetProtectedApps.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewModel.isCurrentlyPresentingProtectedShield.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 216);
}

uint64_t MOSuggestionCollectionViewModel.isCurrentlyPresentingProtectedShield.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 216) = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.isCurrentlyPresentingProtectedShield.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t one-time initialization function for viewmodelQueue()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.utility.getter();
  v7[1] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  static MOSuggestionCollectionViewModel.viewmodelQueue = result;
  return result;
}

uint64_t *MOSuggestionCollectionViewModel.viewmodelQueue.unsafeMutableAddressor()
{
  if (one-time initialization token for viewmodelQueue != -1) {
    swift_once();
  }
  return &static MOSuggestionCollectionViewModel.viewmodelQueue;
}

id static MOSuggestionCollectionViewModel.viewmodelQueue.getter()
{
  if (one-time initialization token for viewmodelQueue != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MOSuggestionCollectionViewModel.viewmodelQueue;

  return v0;
}

uint64_t MOSuggestionCollectionViewModel.__allocating_init(clientDetails:clientId:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  MOSuggestionCollectionViewModel.init(clientDetails:clientId:)(a1, a2, a3, a4);
  return v8;
}

uint64_t MOSuggestionCollectionViewModel.init(clientDetails:clientId:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  *(void *)(v5 + 48) = _swiftEmptyArrayStorage;
  *(void *)(v5 + 56) = _swiftEmptyArrayStorage;
  *(void *)(v5 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v5 + 72) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 153) = 0u;
  *(_OWORD *)(v5 + 176) = xmmword_1001DC7E0;
  *(unsigned char *)(v5 + 192) = 0;
  *(void *)(v5 + 200) = [objc_allocWithZone((Class)type metadata accessor for MOProtectedAppsManager()) init];
  if (one-time initialization token for allFixedApps != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(void *)(v5 + 208) = static MOProtectedAppSource.allFixedApps;
  *(_WORD *)(v5 + 216) = 0;
  *(unsigned char *)(v5 + 218) = 0;
  *(unsigned char *)(v5 + 16) = a1 & 1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  uint64_t v10 = *(void **)(v5 + 200);
  v13[3] = type metadata accessor for MOSuggestionCollectionViewModel();
  v13[4] = &protocol witness table for MOSuggestionCollectionViewModel;
  v13[0] = v5;
  uint64_t v11 = *(void (**)(void *))((swift_isaMask & *v10) + 0x70);
  swift_bridgeObjectRetain();
  swift_retain();
  v11(v13);
  return v5;
}

id MOSuggestionCollectionViewModel.showNewEntryHeader.getter()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 448))();
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v1 showBlankEntryButton];

  return v3;
}

BOOL MOSuggestionCollectionViewModel.hasLoadedViewModels.getter()
{
  swift_beginAccess();
  return *(void *)(*(void *)(v0 + 56) + 16) != 0;
}

uint64_t MOSuggestionCollectionViewModel.recentsTabSectionIndexOffset.getter()
{
  if ((*(uint64_t (**)(void))(*(void *)v0 + 424))()) {
    return (*(uint64_t (**)(void))(*(void *)v0 + 552))() & 1;
  }
  else {
    return 0;
  }
}

uint64_t MOSuggestionCollectionViewModel.isLoadingBundles.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 217);
}

void (*MOSuggestionCollectionViewModel.isLoadingBundles.setter(char a1))(void)
{
  uint64_t v3 = swift_beginAccess();
  v1[217] = a1;
  uint64_t result = (void (*)(void))(*(uint64_t (**)(uint64_t))(*(void *)v1 + 376))(v3);
  if (result)
  {
    uint64_t v5 = (uint64_t)result;
    result();
    return (void (*)(void))outlined consume of (@escaping @callee_guaranteed () -> ())?(v5);
  }
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.isLoadingBundles.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionCollectionViewModel.isLoadingBundles.modify;
}

Swift::Int __swiftcall MOSuggestionCollectionViewModel.bundleCount(section:)(Swift::Int section)
{
  if (((*(uint64_t (**)(void))(*v1 + 424))() & 1) != 0
    && ((*(uint64_t (**)(void))(*v1 + 552))() & 1) != 0
    && !section)
  {
    return 0;
  }
  swift_beginAccess();
  uint64_t v3 = v1[7];
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*v1 + 568);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = v4(v5);
  Swift::Int v7 = section - v6;
  if (__OFSUB__(section, v6))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v7 < 0 || v7 >= *(void *)(v3 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v8 = *(void *)(v3 + 8 * v7 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    Swift::Int v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease_n();
    return v9;
  }
  Swift::Int v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MOSuggestionCollectionViewModel.sectionCount.getter()
{
  if ((*(uint64_t (**)(void))(*v0 + 576))()) {
    return 1;
  }
  uint64_t v2 = swift_beginAccess();
  uint64_t v3 = *(void *)(v0[7] + 16);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*v0 + 568))(v2);
  BOOL v5 = __OFADD__(v3, v4);
  uint64_t result = v3 + v4;
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t MOSuggestionCollectionViewModel.date(section:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 56);
  uint64_t v13 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 568);
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = v13(v14);
  uint64_t v16 = a1 - v15;
  if (__OFSUB__(a1, v15))
  {
    __break(1u);
  }
  else
  {
    if (v16 < 0 || v16 >= *(void *)(v12 + 16)) {
      goto LABEL_11;
    }
    unint64_t v2 = *(void *)(v12 + 8 * v16 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    if (!(v2 >> 62))
    {
      if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_6;
      }
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_11;
  }
LABEL_6:
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    id v19 = *(id *)(v23 + 16);
    swift_unknownObjectRelease();
    if (v19)
    {
LABEL_9:
      id v20 = [v19 displayStartDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v21(v11, v8, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
      {

        return ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(a2, v11, v5);
      }
      goto LABEL_13;
    }
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    id v19 = 0;
LABEL_13:
    static Date.now.getter();

    return outlined destroy of Any?((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for Date?);
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v18 = *(void *)(v2 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    id v19 = *(id *)(v18 + 16);
    swift_release();
    if (v19) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t MOSuggestionCollectionViewModel.shouldShowDateHeader.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))() & 1;
}

uint64_t MOSuggestionCollectionViewModel.shouldShowSupportingTextBelowIndicator.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 218);
}

void (*MOSuggestionCollectionViewModel.shouldShowSupportingTextBelowIndicator.setter(char a1))(void)
{
  uint64_t v3 = swift_beginAccess();
  v1[218] = a1;
  uint64_t result = (void (*)(void))(*(uint64_t (**)(uint64_t))(*(void *)v1 + 376))(v3);
  if (result)
  {
    uint64_t v5 = (uint64_t)result;
    result();
    return (void (*)(void))outlined consume of (@escaping @callee_guaranteed () -> ())?(v5);
  }
  return result;
}

uint64_t (*MOSuggestionCollectionViewModel.shouldShowSupportingTextBelowIndicator.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionCollectionViewModel.isLoadingBundles.modify;
}

void (*MOSuggestionCollectionViewModel.isLoadingBundles.modify(uint64_t a1, char a2))(void)
{
  uint64_t result = (void (*)(void))swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = (void (*)(void))(*(uint64_t (**)(void (*)(void)))(**(void **)(a1 + 24) + 376))(result);
    if (result)
    {
      uint64_t v5 = (uint64_t)result;
      result();
      return (void (*)(void))outlined consume of (@escaping @callee_guaranteed () -> ())?(v5);
    }
  }
  return result;
}

Swift::Bool __swiftcall MOSuggestionCollectionViewModel.shouldShowShowMoreFooterFor(section:)(Swift::Int section)
{
  if (((*(uint64_t (**)(void))(*v1 + 424))() & 1) == 0) {
    goto LABEL_7;
  }
  swift_beginAccess();
  uint64_t v3 = v1[8];
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*v1 + 568);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = v4(v5);
  BOOL v7 = __OFSUB__(section, v6);
  uint64_t v8 = section - v6;
  if (v7)
  {
    __break(1u);
    return v8;
  }
  if (!*(void *)(v3 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  specialized __RawDictionaryStorage.find<A>(_:)(v8);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_7:
    LOBYTE(v8) = 0;
    return v8;
  }
  LOBYTE(v8) = 1;
  return v8;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      BOOL v6 = v5;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle);
      char v7 = static NSObject.== infix(_:_:)();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t MOSuggestionCollectionViewModel._sectionedSuggestionCellViewModelsIndexPath(suggestionID:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v20 = *(void *)(v7 + 16);
  if (v20)
  {
    uint64_t v19 = a1;
    uint64_t v22 = v7 + 32;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v9 = 0;
    uint64_t v21 = result;
    while (v9 < *(void *)(result + 16))
    {
      unint64_t v10 = *(void *)(v22 + 8 * v9);
      unint64_t v23 = v9;
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v11)
        {
LABEL_7:
          uint64_t v12 = 0;
          while (1)
          {
            if ((v10 & 0xC000000000000001) != 0)
            {
              uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v13 = *(void *)(v10 + 8 * v12 + 32);
              swift_retain();
            }
            id v14 = [*(id *)(v13 + 16) suggestionID];
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            LOBYTE(v14) = static UUID.== infix(_:_:)();
            (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
            uint64_t result = swift_release();
            if (v14)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v16 = v19;
              IndexPath.init(row:section:)();
              uint64_t v17 = type metadata accessor for IndexPath();
              return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
            }
            uint64_t v15 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              break;
            }
            ++v12;
            if (v15 == v11) {
              goto LABEL_3;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v11) {
          goto LABEL_7;
        }
      }
LABEL_3:
      unint64_t v9 = v23 + 1;
      swift_bridgeObjectRelease();
      uint64_t result = v21;
      if (v9 == v20)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    uint64_t v18 = type metadata accessor for IndexPath();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
  return result;
}

uint64_t MOSuggestionCollectionViewModel.cellViewModelIndexPath(suggestionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v70 = type metadata accessor for UUID();
  uint64_t v68 = *(void *)(v70 - 8);
  uint64_t v4 = __chkstk_darwin(v70);
  unint64_t v64 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v65 = (char *)v62 - v7;
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v62 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v62 - v14;
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  char v66 = (char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v62 - v20;
  MOSuggestionCollectionViewModel._sectionedSuggestionCellViewModelsIndexPath(suggestionID:)((uint64_t)v15);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v22(v15, 1, v16) != 1)
  {
    char v66 = *(char **)(v17 + 32);
    ((void (*)(char *, char *, uint64_t))v66)(v21, v15, v16);
    uint64_t v25 = v16;
    uint64_t v36 = v17;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static MOAngelLogger.shared);
    uint64_t v38 = v68;
    uint64_t v39 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v9, a1, v70);
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v67 = v36;
      long long v65 = (char *)v43;
      uint64_t v72 = v43;
      uint64_t v63 = v25;
      *(_DWORD *)uint64_t v42 = 136315138;
      unint64_t v64 = (char *)(v42 + 4);
      lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v44 = v70;
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v45, v46, &v72);
      uint64_t v25 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v44);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "[HandleReviewSuggestion] Found suggestionID=%s in Recommended", v42, 0xCu);
      swift_arrayDestroy();
      uint64_t v36 = v67;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
    }

    uint64_t v59 = v69;
    ((void (*)(uint64_t, char *, uint64_t))v66)(v69, v21, v25);
    goto LABEL_21;
  }
  uint64_t v67 = v17;
  outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for IndexPath?);
  unint64_t v23 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 752);
  uint64_t v24 = *v23;
  (*v23)(1, 1, 1);
  MOSuggestionCollectionViewModel._sectionedSuggestionCellViewModelsIndexPath(suggestionID:)((uint64_t)v13);
  uint64_t v25 = v16;
  if (v22(v13, 1, v16) != 1)
  {
    uint64_t v36 = v67;
    uint64_t v47 = *(char **)(v67 + 32);
    ((void (*)(char *, char *, uint64_t))v47)(v66, v13, v16);
    uint64_t v48 = v70;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    __swift_project_value_buffer(v49, (uint64_t)static MOAngelLogger.shared);
    uint64_t v50 = v68;
    char v51 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v65, a1, v48);
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      unint64_t v64 = v47;
      uint64_t v55 = v50;
      uint64_t v56 = (uint8_t *)v54;
      uint64_t v72 = swift_slowAlloc();
      uint64_t v63 = v25;
      *(_DWORD *)uint64_t v56 = 136315138;
      lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v58, &v72);
      uint64_t v36 = v67;
      uint64_t v25 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v65, v48);
      uint64_t v47 = v64;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "[HandleReviewSuggestion] Found suggestionID=%s in Recents", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v48);
    }

    uint64_t v59 = v69;
    ((void (*)(uint64_t, char *, uint64_t))v47)(v69, v66, v25);
LABEL_21:
    uint64_t v60 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v59, v60, 1, v25);
  }
  long long v65 = (char *)v24;
  char v66 = v2;
  outlined destroy of Any?((uint64_t)v13, &demangling cache variable for type metadata for IndexPath?);
  uint64_t v26 = v70;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static MOAngelLogger.shared);
  uint64_t v28 = v68;
  uint64_t v29 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v64, a1, v26);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    os_log_type_t v32 = v29;
    id v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    uint64_t v63 = v16;
    *(_DWORD *)id v33 = 136315138;
    v62[1] = v33 + 4;
    lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v72);
    uint64_t v25 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v26);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[HandleReviewSuggestion] Did not find suggestionID=%s anywhere, fallbacking to recommended", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v26);
  }

  uint64_t v36 = v67;
  uint64_t v60 = 1;
  ((void (*)(void, uint64_t, uint64_t))v65)(0, 1, 1);
  uint64_t v59 = v69;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v59, v60, 1, v25);
}

uint64_t MOSuggestionCollectionViewModel.cellViewModelFor(indexPath:)()
{
  unint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  uint64_t v3 = IndexPath.section.getter();
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v0 + 568))();
  uint64_t v5 = v3 - v4;
  if (__OFSUB__(v3, v4))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0 || v5 >= *(void *)(v2 + 16)) {
      goto LABEL_12;
    }
    unint64_t v1 = *(void *)(v2 + 8 * v5 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = IndexPath.row.getter();
    unint64_t v0 = result;
    if (!(v1 >> 62))
    {
      unint64_t v7 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
LABEL_6:
  if ((v0 & 0x8000000000000000) != 0 || v0 >= v7)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_17:
    uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  if (v0 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v8 = *(void *)(v1 + 8 * v0 + 32);
    swift_retain();
LABEL_11:
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t MOSuggestionCollectionViewModel.cellViewModelForWithoutOffset(indexPath:)()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  uint64_t v2 = IndexPath.section.getter();
  if (v2 < 0 || v2 >= *(void *)(v1 + 16))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v3 = *(void *)(v1 + 8 * v2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = IndexPath.row.getter();
  if (!(v3 >> 62))
  {
    unint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((v4 & 0x8000000000000000) == 0)
    {
      while (v4 < v5)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          goto LABEL_13;
        }
        if (v4 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v6 = *(void *)(v3 + 8 * v4 + 32);
          swift_retain();
          goto LABEL_9;
        }
        __break(1u);
LABEL_15:
        unint64_t v4 = v1;
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_16;
        }
      }
    }
    goto LABEL_16;
  }
  unint64_t v1 = v4;
  swift_bridgeObjectRetain();
  unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_15;
  }
  __break(1u);
LABEL_13:
  uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
  swift_bridgeObjectRelease();
  return v6;
}

void MOSuggestionCollectionViewModel.setCheckmarkVisibilityFor(indexPath:visibility:)(char *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  unint64_t v7 = *(char **)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = IndexPath.section.getter();
  uint64_t v11 = (*(uint64_t (**)(void))(*v2 + 568))();
  uint64_t v12 = v10 - v11;
  if (!__OFSUB__(v10, v11))
  {
    uint64_t v13 = IndexPath.row.getter();
    uint64_t v14 = v3 + 7;
    swift_beginAccess();
    uint64_t v15 = v3[7];
    if (v12 >= *(void *)(v15 + 16)) {
      goto LABEL_14;
    }
    if (v12 < 0)
    {
      __break(1u);
    }
    else
    {
      os_log_type_t v32 = v9;
      unint64_t v9 = v7;
      unint64_t v7 = a1;
      LOBYTE(a1) = a2;
      a2 = v6;
      unint64_t v16 = *(void *)(v15 + 8 * v12 + 32);
      if (!(v16 >> 62))
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v6 = a2;
    char v18 = (char)a1;
    a1 = v7;
    unint64_t v7 = v9;
    unint64_t v9 = v32;
    if (v13 < v17)
    {
      if ((unint64_t)v12 >= *(void *)(*v14 + 16))
      {
        __break(1u);
      }
      else
      {
        uint64_t v19 = *(void *)(*v14 + 8 * v12 + 32);
        if ((v19 & 0xC000000000000001) == 0)
        {
          if (v13 < 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v13 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v20 = *(void *)(v19 + 8 * v13 + 32);
            swift_retain();
            goto LABEL_12;
          }
          __break(1u);
          return;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
LABEL_12:
      (*(void (**)(void))(*(void *)v20 + 232))(v18 & 1);
      uint64_t v21 = swift_release();
      uint64_t v22 = (void (*)(char *))(*(uint64_t (**)(uint64_t))(*v3 + 352))(v21);
      if (v22)
      {
        uint64_t v23 = (uint64_t)v22;
        v22(a1);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v23);
      }
      return;
    }
LABEL_14:
    if (serverManager._clientConnections == (NSMutableDictionary *)-1) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  __break(1u);
LABEL_20:
  swift_once();
LABEL_15:
  uint64_t v24 = type metadata accessor for Logger();
  __swift_project_value_buffer(v24, (uint64_t)static MOAngelLogger.shared);
  (*((void (**)(char *, char *, uint64_t))v7 + 2))(v9, a1, v6);
  swift_retain_n();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    os_log_type_t v32 = (char *)v6;
    uint64_t v34 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v29 = IndexPath.debugDescription.getter();
    uint64_t v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*((void (**)(char *, char *))v7 + 1))(v9, v32);
    *(_WORD *)(v27 + 12) = 2048;
    uint64_t v31 = *(void *)(v3[7] + 16);
    swift_release();
    uint64_t v33 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "[MOSuggestionCollectionViewModel] attempt to setCheckmarkVisibilityFor for invalid indexPath=%s, sectionedSuggestionCellViewModels.count=%ld", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    (*((void (**)(char *, uint64_t))v7 + 1))(v9, v6);

    swift_release();
  }
}

void MOSuggestionCollectionViewModel.setInteractionStateFor(indexPath:interaction:)(uint64_t a1, char a2)
{
  unint64_t v4 = (void *)v2;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = IndexPath.section.getter();
  uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v2 + 568))();
  unint64_t v13 = v11 - v12;
  if (__OFSUB__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = IndexPath.row.getter();
    if ((v13 & 0x8000000000000000) != 0) {
      goto LABEL_24;
    }
    uint64_t v2 = v14;
    if (v14 < 0) {
      goto LABEL_24;
    }
    uint64_t v11 = (uint64_t)(v4 + 7);
    swift_beginAccess();
    uint64_t v15 = v4[7];
    if (v13 >= *(void *)(v15 + 16)) {
      goto LABEL_24;
    }
    uint64_t v3 = *(void *)(v15 + 8 * v13 + 32);
    if (!((unint64_t)v3 >> 62))
    {
      if (v2 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  uint64_t v25 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v25 = v3;
  }
  uint64_t v34 = v25;
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v2 < v34)
  {
LABEL_7:
    uint64_t v16 = *(void *)v11;
    unint64_t v17 = *(void *)(*(void *)v11 + 16);
    if ((a2 & 1) == 0)
    {
      if (v13 >= v17)
      {
        __break(1u);
      }
      else
      {
        uint64_t v18 = *(void *)(v16 + 8 * v13 + 32);
        if ((v18 & 0xC000000000000001) == 0)
        {
          if ((unint64_t)v2 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v19 = *(void *)(v18 + 8 * v2 + 32);
            swift_retain();
LABEL_12:
            (*(void (**)(uint64_t))(*(void *)v19 + 232))(1);
            goto LABEL_18;
          }
          __break(1u);
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    if (v13 < v17)
    {
      uint64_t v20 = *(void *)(v16 + 8 * v13 + 32);
      if ((v20 & 0xC000000000000001) == 0)
      {
        if ((unint64_t)v2 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        uint64_t v21 = *(void *)(v20 + 8 * v2 + 32);
        swift_retain();
        goto LABEL_17;
      }
LABEL_34:
      swift_bridgeObjectRetain();
      uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
LABEL_17:
      (*(void (**)(uint64_t))(*(void *)v21 + 256))(1);
LABEL_18:
      uint64_t v22 = swift_release();
      uint64_t v23 = (void (*)(uint64_t))(*(uint64_t (**)(uint64_t))(*v4 + 352))(v22);
      if (v23)
      {
        uint64_t v24 = (uint64_t)v23;
        v23(a1);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v24);
      }
      return;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_24:
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.shared);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  swift_retain_n();
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v30 = IndexPath.debugDescription.getter();
    uint64_t v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v29 + 12) = 2048;
    swift_beginAccess();
    uint64_t v32 = *(void *)(v4[7] + 16);
    swift_release();
    uint64_t v35 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "[MOSuggestionCollectionViewModel] attempt to setInteractionStateFor for invalid indexPath=%s, sectionedSuggestionCellViewModels.count=%ld", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

    swift_release();
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.createSuggestionCellViewModels()()
{
  uint64_t v105 = type metadata accessor for UUID();
  uint64_t v100 = *(void *)(v105 - 8);
  uint64_t v1 = __chkstk_darwin(v105);
  uint64_t v3 = (uint64_t)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v1);
  uint64_t v96 = (char *)&v91 - v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v91 - v6;
  uint64_t v91 = (char **)(v0 + 56);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v94 = *(void *)(v8 + 16);
  uint64_t v95 = v0;
  uint64_t v98 = v3;
  if (!v94)
  {
LABEL_32:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      goto LABEL_78;
    }
    goto LABEL_33;
  }
  uint64_t v9 = (uint64_t *)(v0 + 72);
  uint64_t v93 = v8 + 32;
  uint64_t v99 = v100 + 16;
  uint64_t v101 = (void (**)(char *, uint64_t))(v100 + 8);
  uint64_t v10 = swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  uint64_t v92 = v10;
  while (1)
  {
    if (v11 >= *(void *)(v10 + 16)) {
      goto LABEL_77;
    }
    unint64_t v97 = v11;
    unint64_t v12 = *(void *)(v93 + 8 * v11);
    if (!(v12 >> 62))
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13) {
        break;
      }
      goto LABEL_3;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      break;
    }
LABEL_3:
    unint64_t v11 = v97 + 1;
    swift_bridgeObjectRelease();
    uint64_t v3 = v98;
    uint64_t v10 = v92;
    if (v11 == v94)
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  uint64_t v103 = v12;
  unint64_t v104 = v12 & 0xC000000000000001;
  uint64_t v3 = 4;
  uint64_t v102 = v13;
  while (1)
  {
    uint64_t v15 = v3 - 4;
    if (!v104) {
      break;
    }
    uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v17 = (uint64_t (*)(uint64_t))(v3 - 3);
    if (__OFADD__(v15, 1)) {
      goto LABEL_74;
    }
LABEL_16:
    long long v107 = v17;
    uint64_t v18 = *(uint64_t (**)(void))(*(void *)v16 + 224);
    if ((v18() & 1) == 0 && ((*(uint64_t (**)(void))(*(void *)v16 + 248))() & 1) == 0) {
      goto LABEL_10;
    }
    uint64_t v19 = (*(uint64_t (**)(void))(*(void *)v16 + 344))();
    LODWORD(v106) = ((uint64_t (*)(uint64_t))v18)(v19);
    char v20 = (*(uint64_t (**)(void))(*(void *)v16 + 248))();
    swift_beginAccess();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v114 = *v9;
    uint64_t v22 = v114;
    uint64_t v23 = v9;
    *uint64_t v9 = 0x8000000000000000;
    uint64_t v24 = (uint64_t)v7;
    unint64_t v26 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v7);
    uint64_t v27 = *(void *)(v22 + 16);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_75;
    }
    char v30 = v25;
    if (*(void *)(v22 + 24) >= v29)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v33 = (void *)v114;
        if ((v25 & 1) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        specialized _NativeDictionary.copy()();
        uint64_t v33 = (void *)v114;
        if ((v30 & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    else
    {
      specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v29, isUniquelyReferenced_nonNull_native);
      unint64_t v31 = specialized __RawDictionaryStorage.find<A>(_:)(v24);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_87;
      }
      unint64_t v26 = v31;
      uint64_t v33 = (void *)v114;
      if ((v30 & 1) == 0)
      {
LABEL_25:
        v33[(v26 >> 6) + 8] |= 1 << v26;
        uint64_t v7 = (char *)v24;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v100 + 16))(v33[6] + *(void *)(v100 + 72) * v26, v24, v105);
        uint64_t v34 = (unsigned char *)(v33[7] + 2 * v26);
        *uint64_t v34 = v106 & 1;
        v34[1] = v20 & 1;
        uint64_t v35 = v33[2];
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        if (v36) {
          goto LABEL_76;
        }
        v33[2] = v37;
        goto LABEL_9;
      }
    }
    uint64_t v14 = (unsigned char *)(v33[7] + 2 * v26);
    *uint64_t v14 = v106 & 1;
    v14[1] = v20 & 1;
    uint64_t v7 = (char *)v24;
LABEL_9:
    uint64_t v9 = v23;
    uint64_t *v23 = (uint64_t)v33;
    swift_bridgeObjectRelease();
    (*v101)(v7, v105);
    swift_endAccess();
    uint64_t v13 = v102;
    unint64_t v12 = v103;
LABEL_10:
    swift_release();
    ++v3;
    if (v107 == (uint64_t (*)(uint64_t))v13) {
      goto LABEL_3;
    }
  }
  uint64_t v16 = *(void *)(v12 + 8 * v3);
  swift_retain();
  unint64_t v17 = (uint64_t (*)(uint64_t))(v3 - 3);
  if (!__OFADD__(v15, 1)) {
    goto LABEL_16;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  swift_once();
LABEL_33:
  uint64_t v38 = type metadata accessor for Logger();
  __swift_project_value_buffer(v38, (uint64_t)static MOAngelLogger.shared);
  uint64_t v39 = v95;
  swift_retain_n();
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    v115[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136315138;
    long long v107 = (uint64_t (*)(uint64_t))(v42 + 4);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Bool, Bool));
    lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v43 = Dictionary.debugDescription.getter();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    uint64_t v114 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v45, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "[MOSuggestionCollectionViewModel] stateBackup=%s", v42, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v98;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *(void *)(v39 + 56) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  unint64_t v116 = (unint64_t)_swiftEmptyArrayStorage;
  swift_beginAccess();
  unint64_t v46 = *(void *)(v39 + 48);
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v48 = v95;
    uint64_t v49 = (uint64_t)v96;
    if (!v47) {
      goto LABEL_80;
    }
LABEL_38:
    uint64_t v50 = *(uint64_t (**)(uint64_t))(*(void *)v48 + 424);
    uint64_t v106 = *(void *)v48 + 424;
    long long v107 = v50;
    if (v47 < 1)
    {
      __break(1u);
LABEL_87:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return;
    }
    uint64_t v51 = v48 + 72;
    uint64_t v101 = *(void (***)(char *, uint64_t))(v48 + 24);
    LODWORD(v99) = *(unsigned __int8 *)(v48 + 16);
    unint64_t v97 = v46 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v52 = 0;
    os_log_type_t v53 = (void (**)(uint64_t, uint64_t))(v100 + 8);
    uint64_t v103 = v47;
    unint64_t v104 = v46;
    uint64_t v102 = v51;
    v100 += 8;
    while (1)
    {
      if (v97) {
        id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v54 = *(id *)(v46 + 8 * v52 + 32);
      }
      uint64_t v55 = v54;
      id v56 = [v54 bundleIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v57 = *(void *)v51;
      if (*(void *)(*(void *)v51 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v58 = specialized __RawDictionaryStorage.find<A>(_:)(v49);
        if (v59)
        {
          char v60 = *(unsigned char *)(*(void *)(v57 + 56) + 2 * v58);
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
        swift_bridgeObjectRelease();
      }
      char v60 = 2;
LABEL_48:
      uint64_t v61 = *v53;
      (*v53)(v49, v105);
      id v62 = [v55 bundleIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v63 = *(void *)v51;
      if (*(void *)(*(void *)v51 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v64 = specialized __RawDictionaryStorage.find<A>(_:)(v3);
        if (v65)
        {
          char v66 = *(unsigned char *)(*(void *)(v63 + 56) + 2 * v64 + 1);
          swift_bridgeObjectRelease();
          LOBYTE(v112) = v66;
          v61(v3, v105);
          char v67 = v112;
          goto LABEL_53;
        }
        swift_bridgeObjectRelease();
      }
      LOBYTE(v112) = 0;
      v61(v3, v105);
      char v67 = 0;
LABEL_53:
      type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      uint64_t v68 = swift_allocObject();
      *(unsigned char *)(v68 + 24) = 0;
      *(void *)(v68 + 32) = 0;
      *(void *)(v68 + 40) = 0xE000000000000000;
      *(void *)(v68 + 48) = 0;
      *(void *)(v68 + 56) = 0xE000000000000000;
      *(_WORD *)(v68 + 64) = 0;
      *(unsigned char *)(v68 + 66) = 0;
      *(void *)(v68 + 72) = 0;
      *(void *)(v68 + 16) = v55;
      swift_beginAccess();
      *(unsigned char *)(v68 + 64) = v60 & 1;
      swift_beginAccess();
      *(unsigned char *)(v68 + 65) = v67;
      *(unsigned char *)(v68 + 80) = v99;
      *(void *)(v68 + 88) = v101;
      id v69 = v55;
      if ([v69 interfaceType] != (id)10)
      {
        id v79 = [v69 labels];
        if (!v79) {
          goto LABEL_67;
        }
        uint64_t v82 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v3 = v98;
        if (v82[2])
        {
          id v79 = (id)v82[4];
          unint64_t v81 = v82[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          id v79 = 0;
          unint64_t v81 = 0xE000000000000000;
        }
LABEL_69:
        uint64_t v49 = (uint64_t)v96;
        goto LABEL_70;
      }
      id v70 = [v69 interfaceType];
      uint64_t v49 = (uint64_t)v96;
      if (v70 == (id)10)
      {
        id v71 = [v69 labels];
        uint64_t v3 = v98;
        if (v71)
        {
          uint64_t v72 = v71;
          char v73 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v73[2])
          {
            uint64_t v74 = v73[4];
            uint64_t v75 = v73[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v112 = v74;
            uint64_t v113 = v75;
            uint64_t v110 = 10;
            unint64_t v111 = 0xE100000000000000;
            lazy protocol witness table accessor for type String and conformance String();
            unsigned __int8 v76 = (void *)StringProtocol.components<A>(separatedBy:)();
            swift_bridgeObjectRelease();
            if (v76[2])
            {
              uint64_t v77 = v76[4];
              uint64_t v78 = v76[5];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v112 = v77;
              uint64_t v113 = v78;
              uint64_t v110 = 8224;
              unint64_t v111 = 0xE200000000000000;
              uint64_t v108 = 32;
              unint64_t v109 = 0xE100000000000000;
              id v79 = (id)StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
              unint64_t v81 = v80;
              swift_bridgeObjectRelease();
              goto LABEL_68;
            }
            swift_bridgeObjectRelease();
            id v79 = 0;
LABEL_67:
            unint64_t v81 = 0xE000000000000000;
LABEL_68:
            uint64_t v3 = v98;
            goto LABEL_69;
          }
          swift_bridgeObjectRelease();
        }
        id v79 = 0;
        unint64_t v81 = 0xE000000000000000;
      }
      else
      {
        id v79 = 0;
        unint64_t v81 = 0xE000000000000000;
        uint64_t v3 = v98;
      }
LABEL_70:
      swift_beginAccess();
      *(void *)(v68 + 32) = v79;
      *(void *)(v68 + 40) = v81;
      uint64_t v83 = swift_bridgeObjectRelease();
      char v84 = v107(v83) & 1;
      swift_beginAccess();
      *(unsigned char *)(v68 + 66) = v84;
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v52;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();

      unint64_t v46 = v104;
      uint64_t v51 = v102;
      os_log_type_t v53 = (void (**)(uint64_t, uint64_t))v100;
      if (v103 == v52)
      {
        swift_bridgeObjectRelease();
        uint64_t v85 = (void *)v116;
        goto LABEL_81;
      }
    }
  }
  uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v48 = v95;
  uint64_t v49 = (uint64_t)v96;
  if (v47) {
    goto LABEL_38;
  }
LABEL_80:
  swift_bridgeObjectRelease();
  uint64_t v85 = _swiftEmptyArrayStorage;
LABEL_81:
  uint64_t v86 = v91;
  swift_beginAccess();
  int v87 = *v86;
  char v88 = swift_isUniquelyReferenced_nonNull_native();
  uint8_t *v86 = v87;
  if ((v88 & 1) == 0)
  {
    int v87 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v87 + 2) + 1, 1, v87);
    *uint64_t v91 = v87;
  }
  unint64_t v90 = *((void *)v87 + 2);
  unint64_t v89 = *((void *)v87 + 3);
  if (v90 >= v89 >> 1)
  {
    int v87 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v89 > 1), v90 + 1, 1, v87);
    *uint64_t v91 = v87;
  }
  *((void *)v87 + 2) = v90 + 1;
  *(void *)&v87[8 * v90 + 32] = v85;
  swift_endAccess();
}

uint64_t MOSuggestionCollectionViewCellViewModel.__allocating_init(_:clientDetails:showAdded:showSaved:)(void *a1, char a2, uint64_t a3, char a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  MOSuggestionCollectionViewCellViewModel.init(_:clientDetails:showAdded:showSaved:)(a1, a2, a3, a4, a5);
  return v10;
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.fetchCollectionViewBundles()()
{
  (*(void (**)(uint64_t))(*(void *)v0 + 584))(1);
  uint64_t v1 = *(void (**)(void))(*(void *)v0 + 736);

  v1();
}

void MOSuggestionCollectionViewModel.refreshAndFetchBundles(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v6 = static MOEventBundleStore.shared;
  uint64_t v7 = *(unsigned __int8 *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  uint64_t v10[3] = a1;
  v10[4] = a2;
  uint64_t v11 = one-time initialization token for defaultQueue;
  swift_retain();
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  unint64_t v12 = *(void (**)(uint64_t, uint64_t, id, uint64_t (*)(uint64_t, unsigned char *), void *))(*(void *)v6 + 592);
  id v13 = (id)static MOEventBundleStore.defaultQueue;
  v12(v7, v8, v13, partial apply for closure #1 in MOSuggestionCollectionViewModel.refreshAndFetchBundles(completionHandler:), v10);
  swift_release();
  swift_release();
}

uint64_t closure #1 in MOSuggestionCollectionViewModel.refreshAndFetchBundles(completionHandler:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(a2, (uint64_t (*)(uint64_t))closure #1 in MOSuggestionCollectionViewModel.showLatestBundles(bundles:additionalBundleIds:)partial apply, v9);
    swift_release();
    uint64_t Strong = swift_release();
  }
  return a4(Strong);
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.fetchBundles()()
{
  uint64_t v1 = v0;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v2 = static MOEventBundleStore.shared;
  uint64_t v3 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = one-time initialization token for defaultQueue;
  swift_retain();
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, id, uint64_t (*)(char), uint64_t, uint64_t (*)(uint64_t, unsigned char *), uint64_t))(*(void *)v2 + 600);
  id v9 = (id)static MOEventBundleStore.defaultQueue;
  v8(v3, v4, v9, partial apply for closure #1 in MOSuggestionCollectionViewModel.fetchBundles(), v5, partial apply for closure #2 in MOSuggestionCollectionViewModel.fetchBundles(), v6);
  swift_release_n();
  swift_release_n();
}

uint64_t closure #1 in MOSuggestionCollectionViewModel.fetchBundles()(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(void))(*(void *)result + 640))(a1 & 1);
    return swift_release();
  }
  return result;
}

uint64_t closure #2 in MOSuggestionCollectionViewModel.fetchBundles()(uint64_t a1, unsigned char *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(a2, (uint64_t (*)(uint64_t))partial apply for closure #1 in MOSuggestionCollectionViewModel.showLatestBundles(bundles:additionalBundleIds:), v6);
    swift_release();
    return swift_release();
  }
  return result;
}

void (*closure #1 in MOSuggestionCollectionViewModel.showLatestBundles(bundles:additionalBundleIds:)(void *a1, unint64_t a2))(uint64_t, void)
{
  swift_beginAccess();
  a1[6] = a2;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = *(uint64_t (**)(void))(*a1 + 424);
  if ((((uint64_t (*)(uint64_t))v5)(v4) & 1) == 0)
  {
    MOSuggestionCollectionViewModel.groupViewModelsByRecommended()();
    goto LABEL_7;
  }
  if (v5())
  {
    if (!(a2 >> 62))
    {
      if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
LABEL_6:
    }
      MOSuggestionCollectionViewModel.groupViewModelsBundlesByDate()();
  }
LABEL_7:
  uint64_t v6 = (*(uint64_t (**)(void))(*a1 + 584))(0);
  uint64_t result = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(*a1 + 328))(v6);
  if (result)
  {
    uint64_t v8 = (uint64_t)result;
    result(1, 0);
    return (void (*)(uint64_t, void))outlined consume of (@escaping @callee_guaranteed () -> ())?(v8);
  }
  return result;
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.sortBundles(with:scrollToTop:scrollToHeaderOffset:)(MomentsUIService::SegmentType with, Swift::Bool scrollToTop, Swift::Bool scrollToHeaderOffset)
{
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v3 + 432))(with & 1);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v3 + 424))(v6)) {
    uint64_t v7 = MOSuggestionCollectionViewModel.groupViewModelsBundlesByDate()();
  }
  else {
    uint64_t v7 = MOSuggestionCollectionViewModel.groupViewModelsByRecommended()();
  }
  uint64_t v8 = (void (*)(Swift::Bool, Swift::Bool))(*(uint64_t (**)(uint64_t))(*(void *)v3 + 328))(v7);
  if (v8)
  {
    uint64_t v9 = (uint64_t)v8;
    v8(scrollToTop, scrollToHeaderOffset);
    outlined consume of (@escaping @callee_guaranteed () -> ())?(v9);
  }
}

uint64_t MOSuggestionCollectionViewModel.groupViewModelsByRecommended()()
{
  swift_beginAccess();
  v36[0] = v0[6];
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(v36, specialized _ArrayBuffer._consumeAndCreateNew(), specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  v0[6] = v36[0];
  uint64_t v1 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*v0 + 712))(v1);
  swift_beginAccess();
  char v32 = v0;
  uint64_t v2 = (char **)v0[7];
  clientConnections = serverManager._clientConnections;
  swift_bridgeObjectRetain();
  if (clientConnections == (NSMutableDictionary *)-1) {
    goto LABEL_2;
  }
LABEL_43:
  swift_once();
LABEL_2:
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = specialized FlattenSequence<>.startIndex.getter(v8);
    uint64_t v12 = specialized FlattenSequence<>.distance(from:to:)(v9, v11, v10 & 1, (uint64_t)v2[2], 0, 1, (uint64_t)v2);
    swift_bridgeObjectRelease_n();
    v36[0] = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[Bundles] Begin Filtering suggestions by recommended eligibility, bundle count before filter:%ld", v7, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v35 = 0;
  uint64_t v39 = _swiftEmptyArrayStorage;
  uint64_t v33 = v2 + 4;
  uint64_t v34 = v2;
  uint64_t v2 = &selRef_statisticsForType_;
LABEL_29:
  while (1)
  {
    uint64_t v21 = v34[2];
    if (v35 == v21) {
      break;
    }
    if (v35 >= v21) {
      goto LABEL_42;
    }
    uint64_t v22 = v33[(void)v35];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = v22;
    ++v35;
    if (v22)
    {
      unint64_t v13 = 0;
      if (!((unint64_t)v22 >> 62)) {
        goto LABEL_13;
      }
LABEL_7:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v13 != v14)
      {
        while (1)
        {
          if (((unint64_t)v23 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (__OFADD__(v13, 1)) {
              goto LABEL_41;
            }
          }
          else
          {
            if (v13 >= *(void *)(((unint64_t)v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              __break(1u);
              goto LABEL_43;
            }
            uint64_t v15 = *(void *)&v23[8 * v13 + 32];
            swift_retain();
            if (__OFADD__(v13, 1)) {
              goto LABEL_41;
            }
          }
          id v16 = [*(id *)(v15 + 16) rankingDictionary];
          if (!v16) {
            break;
          }
          unint64_t v17 = v16;
          uint64_t v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          AnyHashable.init<A>(_:)();
          if (*(void *)(v18 + 16)
            && (unint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v36), (v20 & 1) != 0))
          {
            outlined init with copy of Any(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v37);
          }
          else
          {
            long long v37 = 0u;
            long long v38 = 0u;
          }
          outlined destroy of AnyHashable((uint64_t)v36);
          swift_bridgeObjectRelease();
          if (!*((void *)&v38 + 1)) {
            goto LABEL_10;
          }
          if (swift_dynamicCast() && (unint64_t)(v36[0] - 1) < 2)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            goto LABEL_12;
          }
LABEL_11:
          swift_release();
LABEL_12:
          ++v13;
          if ((unint64_t)v23 >> 62) {
            goto LABEL_7;
          }
LABEL_13:
          if (v13 == *(void *)(((unint64_t)v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_29;
          }
        }
        long long v37 = 0u;
        long long v38 = 0u;
LABEL_10:
        outlined destroy of Any?((uint64_t)&v37, &demangling cache variable for type metadata for Any?);
        goto LABEL_11;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v24 = (unint64_t)v39;
  swift_retain_n();
  char v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 134217984;
    if ((v24 & 0x8000000000000000) != 0 || (v24 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
    }
    else
    {
      uint64_t v28 = *(void *)(v24 + 16);
    }
    swift_release();
    v36[0] = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "[Bundles] Filtering suggestions by recommended eligibility, bundle count after filter:%ld", v27, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v29 = MOSuggestionCollectionViewModel.reorderEvergreenBundles(recommendedViewModels:)(v24);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[MOSuggestionCollectionViewCellViewModel]>);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1001DA0F0;
  *(void *)(v30 + 32) = v29;
  v32[7] = v30;
  return swift_bridgeObjectRelease();
}

uint64_t Array<A>.sortedByRankingScore.getter(uint64_t result)
{
  return result;
}

uint64_t MOSuggestionCollectionViewModel.reorderEvergreenBundles(recommendedViewModels:)(unint64_t a1)
{
  uint64_t v155 = type metadata accessor for UUID();
  int64_t v4 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  v154 = (char *)v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v159 = __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.shared);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[Bundles] Constructing reordered recommended suggestions", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = (uint64_t)_swiftEmptyArrayStorage;
  v163 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_7;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_26;
  }
LABEL_7:
  if (v11 < 1) {
    goto LABEL_255;
  }
  uint64_t v12 = 0;
  unint64_t v13 = a1 & 0xC000000000000001;
  do
  {
    if (v13)
    {
      uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v14 = *(void *)(a1 + 8 * v12 + 32);
      swift_retain();
    }
    if ([*(id *)(v14 + 16) interfaceType] == (id)11)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
    ++v12;
  }
  while (v11 != v12);
  swift_bridgeObjectRelease();
  uint64_t v15 = v163;
  v163 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v11; ++i)
  {
    if (v13)
    {
      uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v17 = *(void *)(a1 + 8 * i + 32);
      swift_retain();
    }
    if ([*(id *)(v17 + 16) interfaceType] == (id)11)
    {
      swift_release();
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v163;
  unint64_t v2 = (unint64_t)v15;
  uint64_t v10 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_27:
  unint64_t v165 = (unint64_t)v18;
  swift_retain_n();
  uint64_t v19 = Logger.logObject.getter();
  a1 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v19, (os_log_type_t)a1))
  {

    swift_release_n();
    goto LABEL_35;
  }
  uint64_t v11 = swift_slowAlloc();
  *(_DWORD *)uint64_t v11 = 134218240;
  if ((v2 & 0x8000000000000000) != 0 || (v2 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  else
  {
    uint64_t v20 = *(void *)(v2 + 16);
  }
  swift_release();
  v163 = (void *)v20;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release();
  *(_WORD *)(v11 + 12) = 2048;
  swift_beginAccess();
  if (v165 >> 62) {
    goto LABEL_263;
  }
  uint64_t v21 = *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v163 = (void *)v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v19, (os_log_type_t)a1, "[Bundles] Constructing reordered recommended suggestions - Evergreen Count:%ld, Recommended Count:%ld", (uint8_t *)v11, 0x16u);
    swift_slowDealloc();

LABEL_35:
    uint64_t v164 = v10;
    swift_beginAccess();
    uint64_t v11 = v165;
    uint64_t v1 = v165 >> 62;
    if (v165 >> 62)
    {
LABEL_210:
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      if (!v19) {
        goto LABEL_78;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v19) {
        goto LABEL_78;
      }
    }
    a1 = v11 & 0xC000000000000001;
    if ((v11 & 0xC000000000000001) != 0) {
      goto LABEL_256;
    }
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    __break(1u);
LABEL_258:
    __break(1u);
LABEL_259:
    __break(1u);
LABEL_260:
    __break(1u);
LABEL_261:
    __break(1u);
LABEL_262:
    __break(1u);
LABEL_263:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = *(void *)(v11 + 32);
  swift_retain();
LABEL_40:
  swift_bridgeObjectRelease();
  id v23 = *(id *)(v22 + 16);
  unint64_t v24 = (unint64_t)MOEventBundle._orderedAssetReferences()();
  if (!v24)
  {
    swift_release();

    goto LABEL_87;
  }
  if (!(v24 >> 62))
  {
    char v25 = *(uint64_t (**)(uint64_t))((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_43;
  }
LABEL_268:
  char v25 = (uint64_t (*)(uint64_t))_CocoaArrayWrapper.endIndex.getter();
LABEL_43:

  swift_bridgeObjectRelease();
  if (v25 != (uint64_t (*)(uint64_t))1) {
    goto LABEL_86;
  }
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v26 < 3) {
      goto LABEL_86;
    }
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v27 < 1) {
      goto LABEL_278;
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v28 < 3) {
      goto LABEL_276;
    }
  }
  else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 2uLL)
  {
    goto LABEL_86;
  }
  if (a1)
  {
    type metadata accessor for MOSuggestionCollectionViewCellViewModel();
    _ArrayBuffer._typeCheckSlowPath(_:)(1);
    _ArrayBuffer._typeCheckSlowPath(_:)(2);
  }
  uint64_t v158 = v1;
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v1 = v31;
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v29 = v33 >> 1;
    if (v1 == v33 >> 1)
    {
      swift_unknownObjectRelease();
      unint64_t v34 = 1;
LABEL_72:
      swift_bridgeObjectRetain();
      unint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      if ((v38 & 0x8000000000000000) == 0) {
        goto LABEL_73;
      }
      __break(1u);
LABEL_276:
      __break(1u);
      goto LABEL_277;
    }
    uint64_t v153 = v30;
    unint64_t v156 = a1;
    uint64_t v157 = v22;
  }
  else
  {
    unint64_t v156 = a1;
    uint64_t v157 = v22;
    uint64_t v153 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    uint64_t v1 = 1;
    uint64_t v29 = 3;
  }
  uint64_t v35 = (uint64_t (**)(uint64_t))(*(void *)v147 + 808);
  char v25 = *v35;
  uint64_t v160 = v29;
  a1 = v29 - v1;
  if (v29 <= v1)
  {
LABEL_277:
    __break(1u);
LABEL_278:
    __break(1u);
LABEL_279:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v137 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v137 & 0x8000000000000000) == 0) {
      goto LABEL_84;
    }
    __break(1u);
    goto LABEL_281;
  }
  uint64_t v10 = (uint64_t)v35;
  uint64_t v36 = swift_retain();
  uint64_t v19 = v25(v36);
  swift_release();
  if (v19)
  {
    swift_unknownObjectRelease();
    unint64_t v34 = 1;
  }
  else
  {
    v152 = v4;
    unint64_t v148 = v2;
    v151 = (a1 + 1);
    unint64_t v2 = 1;
    while (1)
    {
      int64_t v4 = v2 + 1;
      if (__OFADD__(v2, 1)) {
        goto LABEL_261;
      }
      if (a1 == v2) {
        break;
      }
      uint64_t v19 = v147;
      if ((uint64_t)(v1 + v2) < v1 || (uint64_t)(v1 + v2) >= v160) {
        goto LABEL_262;
      }
      uint64_t v37 = swift_retain();
      uint64_t v19 = v25(v37);
      swift_release();
      ++v2;
      if (v19)
      {
        unint64_t v34 = v4;
        goto LABEL_69;
      }
    }
    unint64_t v34 = (unint64_t)v151;
LABEL_69:
    swift_unknownObjectRelease();
    unint64_t v2 = v148;
    int64_t v4 = (int64_t)v152;
  }
  a1 = v156;
  if (v158) {
    goto LABEL_72;
  }
  unint64_t v38 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_73:
  if ((v34 & 0x8000000000000000) != 0 || v34 >= v38)
  {
    swift_release();
LABEL_78:
    swift_bridgeObjectRelease();
LABEL_87:
    uint64_t v11 = v165;
    if (v165 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
      if (v40) {
        goto LABEL_89;
      }
    }
    else
    {
      uint64_t v40 = *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v40)
      {
LABEL_89:
        uint64_t v42 = v2;
        unint64_t v2 = 0;
        uint64_t v157 = 0;
        uint64_t v139 = 0;
        uint64_t v1 = 0;
        LODWORD(v158) = 0;
        unint64_t v156 = v11 & 0xC000000000000001;
        uint64_t v143 = v11 & 0xFFFFFFFFFFFFFF8;
        v151 = (v4 + 8);
        v150 = v162;
        uint64_t v43 = ((unint64_t)v42 >> 62) & 1;
        if (v42 < 0) {
          LODWORD(v43) = 1;
        }
        int v142 = v43;
        unint64_t v141 = v42 & 0xC000000000000001;
        unint64_t v148 = v42;
        v140 = (uint64_t *)(v42 + 32);
        uint64_t v10 = 1;
        *(void *)&long long v41 = 136315906;
        long long v149 = v41;
        v138[1] = (char *)&type metadata for Any + 8;
        v152 = v40;
        uint64_t v153 = v11;
        while (1)
        {
          if (v156)
          {
            a1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            unint64_t v44 = v2 + 1;
            if (__OFADD__(v2, 1)) {
              goto LABEL_198;
            }
          }
          else
          {
            if (v2 >= *(void *)(v143 + 16)) {
              goto LABEL_199;
            }
            a1 = *(void *)(v11 + 8 * v2 + 32);
            swift_retain();
            unint64_t v44 = v2 + 1;
            if (__OFADD__(v2, 1))
            {
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
LABEL_206:
              __break(1u);
LABEL_207:
              __break(1u);
LABEL_208:
              __break(1u);
LABEL_209:
              __break(1u);
              goto LABEL_210;
            }
          }
          uint64_t v160 = v44;
          if (v10 > 2)
          {
            if (v10 != 3 && (((_BYTE)v10 + 1) & 3) != 0) {
              goto LABEL_157;
            }
            if (v142)
            {
              swift_retain();
              int64_t v4 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
              if (!v4) {
                goto LABEL_157;
              }
              int64_t v4 = v148;
              swift_bridgeObjectRetain();
              uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
LABEL_105:
              if (v1 >= v45)
              {
                if (v141)
                {
                  uint64_t v49 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  if (!*(void *)(v148 + 16)) {
                    goto LABEL_204;
                  }
                  uint64_t v49 = *v140;
                  swift_retain();
                }
                (*(void (**)(uint64_t))(*(void *)v49 + 160))(3);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
                BOOL v47 = __OFADD__(v10++, 1);
                if (v47) {
                  goto LABEL_203;
                }
                uint64_t v139 = 1;
                uint64_t v1 = 1;
              }
              else
              {
                if (v141)
                {
                  uint64_t v46 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  if (v1 < 0) {
                    goto LABEL_205;
                  }
                  if ((unint64_t)v1 >= *(void *)(v148 + 16)) {
                    goto LABEL_207;
                  }
                  uint64_t v46 = v140[v1];
                  swift_retain();
                }
                (*(void (**)(uint64_t))(*(void *)v46 + 160))(3);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
                BOOL v47 = __OFADD__(v10++, 1);
                if (v47) {
                  goto LABEL_206;
                }
                ++v1;
              }
              swift_retain_n();
              int64_t v4 = Logger.logObject.getter();
              os_log_type_t v50 = static os_log_type_t.default.getter();
              int v51 = v50;
              if (os_log_type_enabled((os_log_t)v4, v50))
              {
                uint64_t v52 = swift_slowAlloc();
                uint64_t v157 = swift_slowAlloc();
                v162[0] = v157;
                *(_DWORD *)uint64_t v52 = v149;
                os_log_t v146 = (os_log_t)v4;
                os_log_type_t v53 = *(void (**)(void))(*(void *)a1 + 344);
                unint64_t v54 = v2;
                uint64_t v55 = v1;
                id v56 = v154;
                LODWORD(v145) = v51;
                v53();
                lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
                uint64_t v57 = v155;
                uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
                uint64_t v59 = v10;
                unint64_t v61 = v60;
                id v62 = v56;
                uint64_t v1 = v55;
                unint64_t v2 = v54;
                uint64_t v63 = v57;
                uint64_t v11 = v153;
                ((void (*)(char *, uint64_t))v151->isa)(v62, v63);
                double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v58, v61, v162));
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_release_n();
                uint64_t v10 = v59;
                swift_bridgeObjectRelease();
                *(_WORD *)(v52 + 12) = 2080;
                double v161 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
                type metadata accessor for MOVisibilityCategoryForUI(0);
                uint64_t v64 = String.init<A>(describing:)();
                double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v65, v162));
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_release_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v52 + 22) = 2048;
                double v161 = MOEventBundle.bundleRankingScore.getter();
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                uint64_t v66 = swift_release_n();
                *(_WORD *)(v52 + 32) = 2080;
                LOBYTE(v161) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(v66);
                uint64_t v67 = String.init<A>(describing:)();
                double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, v162));
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_release_n();
                swift_bridgeObjectRelease();
                int64_t v4 = (int64_t)v146;
                _os_log_impl((void *)&_mh_execute_header, v146, (os_log_type_t)v145, "[Bundles] inserted evergreen suggestion: %s into Recommended with ranking category: %s, ranking score: %f, with cell style: %s", (uint8_t *)v52, 0x2Au);
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v40 = (uint64_t)v152;
                swift_slowDealloc();
              }
              else
              {

                swift_release_n();
              }
              unint64_t v44 = v160;
              if (v158) {
                goto LABEL_158;
              }
              uint64_t v157 = 0;
            }
            else
            {
              uint64_t v45 = *(void *)(v148 + 16);
              if (v45) {
                goto LABEL_105;
              }
LABEL_157:
              if (v158)
              {
LABEL_158:
                (*(void (**)(uint64_t))(*(void *)a1 + 160))(1);
                BOOL v47 = __OFADD__(v10++, 1);
                if (v47) {
                  goto LABEL_200;
                }
                uint64_t v157 = 0;
                LODWORD(v158) = 0;
LABEL_167:
                swift_retain();
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
                swift_retain_n();
                int64_t v4 = Logger.logObject.getter();
                os_log_type_t v94 = static os_log_type_t.default.getter();
                int v95 = v94;
                if (os_log_type_enabled((os_log_t)v4, v94))
                {
                  uint64_t v96 = swift_slowAlloc();
                  os_log_t v146 = (os_log_t)swift_slowAlloc();
                  v162[0] = (uint64_t)v146;
                  *(_DWORD *)uint64_t v96 = v149;
                  os_log_t v145 = (os_log_t)v4;
                  unint64_t v97 = *(void (**)(void))(*(void *)a1 + 344);
                  unint64_t v98 = v2;
                  uint64_t v99 = v1;
                  uint64_t v100 = v154;
                  LODWORD(v144) = v95;
                  v97();
                  lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v101 = v155;
                  uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
                  uint64_t v103 = v10;
                  unint64_t v105 = v104;
                  uint64_t v106 = v100;
                  uint64_t v1 = v99;
                  unint64_t v2 = v98;
                  uint64_t v107 = v101;
                  uint64_t v11 = v153;
                  ((void (*)(char *, uint64_t))v151->isa)(v106, v107);
                  double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v102, v105, v162));
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_release_n();
                  uint64_t v10 = v103;
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v96 + 12) = 2080;
                  double v161 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
                  type metadata accessor for MOVisibilityCategoryForUI(0);
                  uint64_t v108 = String.init<A>(describing:)();
                  double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v108, v109, v162));
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v96 + 22) = 2048;
                  double v161 = MOEventBundle.bundleRankingScore.getter();
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  uint64_t v110 = swift_release_n();
                  *(_WORD *)(v96 + 32) = 2080;
                  unint64_t v44 = v160;
                  LOBYTE(v161) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(v110);
                  uint64_t v111 = String.init<A>(describing:)();
                  double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v111, v112, v162));
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  int64_t v4 = (int64_t)v145;
                  _os_log_impl((void *)&_mh_execute_header, v145, (os_log_type_t)v144, "[Bundles] inserted suggestion: %s into Recommended with ranking category: %s, ranking score: %f, with cell style: %s", (uint8_t *)v96, 0x2Au);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v40 = (uint64_t)v152;
                  swift_slowDealloc();
                  swift_release();

                  goto LABEL_93;
                }
                goto LABEL_92;
              }
            }
            if (((*(uint64_t (**)(unint64_t))(*(void *)v147 + 800))(a1) & 1) != 0 && v157 < 2
              || (uint64_t v93 = (NSObject **)(*(void *)v147 + 776),
                  int64_t v4 = (int64_t)*v93,
                  (((uint64_t (*)(unint64_t))*v93)(a1) & 1) != 0))
            {
              (*(void (**)(void))(*(void *)a1 + 160))(0);
              BOOL v47 = __OFADD__(v10++, 1);
              if (v47) {
                goto LABEL_201;
              }
              BOOL v47 = __OFADD__(v157++, 1);
              if (v47) {
                goto LABEL_202;
              }
LABEL_165:
              LODWORD(v158) = 0;
LABEL_166:
              unint64_t v44 = v160;
              goto LABEL_167;
            }
            uint64_t v19 = v165;
            if (v165 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v118 = _CocoaArrayWrapper.endIndex.getter();
              if (v118 < 0) {
                goto LABEL_209;
              }
              unint64_t v113 = v118;
              unint64_t v114 = v160;
              if ((v160 & 0x8000000000000000) == 0) {
                goto LABEL_173;
              }
            }
            else
            {
              unint64_t v113 = *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              unint64_t v114 = v160;
              if ((v160 & 0x8000000000000000) == 0)
              {
LABEL_173:
                if (v114 < v113)
                {
                  if ((v19 & 0xC000000000000001) != 0)
                  {
                    uint64_t v115 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if ((unint64_t)v160 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_259;
                    }
                    uint64_t v115 = *(void *)(v19 + 8 * v160 + 32);
                    swift_retain();
                  }
                  swift_bridgeObjectRelease();
                  char v116 = ((uint64_t (*)(uint64_t))v4)(v115);
                  long long v117 = *(void (**)(uint64_t))(*(void *)a1 + 160);
                  if (v116)
                  {
                    v117(0);
                    swift_release();
                    BOOL v47 = __OFADD__(v10++, 1);
                    unint64_t v44 = v160;
                    if (v47) {
                      goto LABEL_270;
                    }
                    BOOL v47 = __OFADD__(v157++, 1);
                    if (v47) {
                      goto LABEL_271;
                    }
                    LODWORD(v158) = 0;
                    goto LABEL_167;
                  }
                  LODWORD(v158) = 1;
                  v117(1);
                  swift_release();
                  goto LABEL_166;
                }
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v19 = a1;
            (*(void (**)(void))(*(void *)a1 + 160))(0);
            BOOL v47 = __OFADD__(v10++, 1);
            if (v47) {
              goto LABEL_258;
            }
            BOOL v47 = __OFADD__(v157++, 1);
            if (v47) {
              goto LABEL_260;
            }
            goto LABEL_165;
          }
          unint64_t v48 = v165;
          int64_t v4 = v165 >> 62;
          if (v165 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v73 < 3)
            {
LABEL_149:
              (*(void (**)(void))(*(void *)a1 + 160))(0);
              goto LABEL_150;
            }
          }
          else if (*(uint64_t *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3)
          {
            goto LABEL_149;
          }
          if (v10 == 1)
          {
            (*(void (**)(void))(*(void *)a1 + 160))(0);
            uint64_t v10 = 2;
            goto LABEL_151;
          }
          if (v158) {
            break;
          }
          if (v4)
          {
            swift_bridgeObjectRetain();
            unint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
            if ((v69 & 0x8000000000000000) != 0) {
              goto LABEL_208;
            }
          }
          else
          {
            unint64_t v69 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          if ((v44 & 0x8000000000000000) != 0 || v44 >= v69)
          {
            swift_bridgeObjectRelease();
            goto LABEL_143;
          }
          if ((v48 & 0xC000000000000001) != 0)
          {
            uint64_t v70 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v44 >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_266;
            }
            uint64_t v70 = *(void *)(v48 + 8 * v44 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          if (((*(uint64_t (**)(uint64_t))(*(void *)v147 + 776))(v70) & 1) == 0)
          {
            swift_release();
LABEL_143:
            char v71 = (*(uint64_t (**)(unint64_t))(*(void *)v147 + 776))(a1);
            uint64_t v72 = *(void (**)(uint64_t))(*(void *)a1 + 160);
            if ((v71 & 1) == 0)
            {
              LODWORD(v158) = 1;
              v72(1);
              goto LABEL_151;
            }
            v72(0);
LABEL_145:
            LODWORD(v158) = 0;
            goto LABEL_150;
          }
          (*(void (**)(void))(*(void *)a1 + 160))(0);
          swift_release();
          LODWORD(v158) = 0;
LABEL_150:
          ++v10;
LABEL_151:
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_retain_n();
          int64_t v4 = Logger.logObject.getter();
          os_log_type_t v74 = static os_log_type_t.default.getter();
          int v75 = v74;
          if (os_log_type_enabled((os_log_t)v4, v74))
          {
            uint64_t v76 = swift_slowAlloc();
            os_log_t v146 = (os_log_t)swift_slowAlloc();
            v162[0] = (uint64_t)v146;
            *(_DWORD *)uint64_t v76 = v149;
            uint64_t v77 = *(void (**)(void))(*(void *)a1 + 344);
            unint64_t v78 = v2;
            uint64_t v79 = v1;
            unint64_t v80 = v154;
            LODWORD(v145) = v75;
            v77();
            lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v81 = v155;
            uint64_t v82 = dispatch thunk of CustomStringConvertible.description.getter();
            os_log_t v144 = (os_log_t)v4;
            unint64_t v84 = v83;
            uint64_t v85 = v80;
            uint64_t v1 = v79;
            unint64_t v2 = v78;
            uint64_t v86 = v81;
            uint64_t v11 = v153;
            ((void (*)(char *, uint64_t))v151->isa)(v85, v86);
            double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v82, v84, v162));
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v76 + 12) = 2080;
            double v161 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
            type metadata accessor for MOVisibilityCategoryForUI(0);
            uint64_t v87 = String.init<A>(describing:)();
            double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v87, v88, v162));
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v76 + 22) = 2048;
            double v161 = MOEventBundle.bundleRankingScore.getter();
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v89 = swift_release_n();
            *(_WORD *)(v76 + 32) = 2080;
            unint64_t v44 = v160;
            LOBYTE(v161) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(v89);
            uint64_t v90 = String.init<A>(describing:)();
            double v161 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v91, v162));
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            os_log_t v92 = v144;
            _os_log_impl((void *)&_mh_execute_header, v144, (os_log_type_t)v145, "[Bundles] inserted suggestion: %s into Top Lockup Recommended with ranking category: %s, ranking score: %f, with cell style: %s", (uint8_t *)v76, 0x2Au);
            int64_t v4 = (int64_t)v146;
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v40 = (uint64_t)v152;
            swift_slowDealloc();
            swift_release();

            goto LABEL_93;
          }
LABEL_92:

          swift_release_n();
LABEL_93:
          ++v2;
          if (v44 == v40)
          {
            swift_bridgeObjectRelease();
            if (v139)
            {
              swift_release();
              goto LABEL_242;
            }
            unint64_t v2 = v148;
            if (!v142)
            {
              v119 = *(NSObject **)(v148 + 16);
              if (!v119)
              {
                if (v1 <= 0)
                {
                  uint64_t v120 = 0;
                  int64_t v4 = 0;
                  int v121 = 0;
                  goto LABEL_226;
                }
                goto LABEL_272;
              }
LABEL_216:
              swift_retain();
              uint64_t v22 = 0;
              int64_t v4 = (int64_t)v119;
              goto LABEL_217;
            }
LABEL_248:
            swift_retain();
            uint64_t v136 = _CocoaArrayWrapper.endIndex.getter();
            if (v136)
            {
              int64_t v4 = v136;
              if (v136 < 1)
              {
                __break(1u);
LABEL_251:
                __break(1u);
                goto LABEL_252;
              }
              goto LABEL_283;
            }
            goto LABEL_273;
          }
        }
        (*(void (**)(uint64_t))(*(void *)a1 + 160))(1);
        goto LABEL_145;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = 0;
    if ((v2 & 0x8000000000000000) != 0 || (v2 & 0x4000000000000000) != 0) {
      goto LABEL_248;
    }
    uint64_t v1 = 0;
    int64_t v4 = 0;
    v119 = *(NSObject **)(v2 + 16);
    if (v119) {
      goto LABEL_216;
    }
LABEL_230:
    int v123 = 0;
    uint64_t v122 = *(void *)(v2 + 16);
    goto LABEL_231;
  }
  uint64_t v39 = v147;
  if (a1)
  {
    char v25 = (uint64_t (*)(uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_81:
    swift_bridgeObjectRelease();
    if (((*(uint64_t (**)(void))(*(void *)v39 + 808))(v25) & 1) == 0)
    {
      swift_release();
LABEL_86:
      swift_release();
      goto LABEL_87;
    }
    swift_beginAccess();
    specialized Array.remove(at:)(v34, specialized _ArrayBuffer._consumeAndCreateNew());
    swift_release();
    if (!(v165 >> 62))
    {
      swift_retain();
LABEL_84:
      specialized Array.replaceSubrange<A>(_:with:)(0, 0, (uint64_t)v25);
      swift_endAccess();
      swift_release();
      goto LABEL_86;
    }
    goto LABEL_279;
  }
  if (v34 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    char v25 = *(uint64_t (**)(uint64_t))(v11 + 8 * v34 + 32);
    swift_retain();
    goto LABEL_81;
  }
LABEL_281:
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_283:
    uint64_t v22 = 1;
LABEL_217:
    a1 = 0;
    uint64_t v11 = v2 & 0xC000000000000001;
    do
    {
      if (v11)
      {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v23 = *(id *)(v2 + 8 * a1 + 32);
        swift_retain();
      }
      ++a1;
      (*(void (**)(uint64_t))(*(void *)v23 + 160))(3);
      swift_release();
    }
    while (v4 != a1);
    swift_release();
    if (v4 < v1)
    {
      __break(1u);
      goto LABEL_268;
    }
    if (v22) {
      goto LABEL_224;
    }
    int v121 = 0;
    uint64_t v120 = *(void *)(v2 + 16);
LABEL_226:
    if (v120 < v1) {
      goto LABEL_251;
    }
    if (v1 < 0)
    {
LABEL_252:
      __break(1u);
LABEL_253:
      __break(1u);
LABEL_254:
      __break(1u);
LABEL_255:
      __break(1u);
LABEL_256:
      uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_40;
    }
    if (!v121) {
      goto LABEL_230;
    }
    swift_bridgeObjectRetain();
    uint64_t v122 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    int v123 = 1;
LABEL_231:
    if (v122 < v4) {
      goto LABEL_253;
    }
    if (v4 < 0) {
      goto LABEL_254;
    }
    if ((v2 & 0xC000000000000001) == 0 || v1 == v4) {
      goto LABEL_238;
    }
    if (v1 < (unint64_t)v4) {
      break;
    }
    __break(1u);
LABEL_270:
    __break(1u);
LABEL_271:
    __break(1u);
LABEL_272:
    __break(1u);
LABEL_273:
    swift_release();
    if (v1 <= 0)
    {
      int64_t v4 = 0;
LABEL_224:
      swift_bridgeObjectRetain();
      uint64_t v120 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      int v121 = 1;
      goto LABEL_226;
    }
  }
  type metadata accessor for MOSuggestionCollectionViewCellViewModel();
  Swift::Int v124 = v1;
  do
  {
    v125 = (v124 + 1);
    _ArrayBuffer._typeCheckSlowPath(_:)(v124);
    Swift::Int v124 = (Swift::Int)v125;
  }
  while (v4 != v125);
LABEL_238:
  if (v123)
  {
    swift_bridgeObjectRetain();
    uint64_t v126 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v128 = v127;
    uint64_t v1 = v129;
    unint64_t v131 = v130;
    swift_release_n();
    unint64_t v2 = v126;
  }
  else
  {
    uint64_t v128 = v2 + 32;
    unint64_t v131 = (2 * v4) | 1;
  }
  specialized Array.append<A>(contentsOf:)(v2, v128, v1, v131);
LABEL_242:
  unint64_t v132 = v164;
  swift_bridgeObjectRetain_n();
  int64_t v4 = Logger.logObject.getter();
  LOBYTE(v48) = static os_log_type_t.default.getter();
  if (os_log_type_enabled((os_log_t)v4, (os_log_type_t)v48))
  {
    a1 = swift_slowAlloc();
    *(_DWORD *)a1 = 134217984;
    if (!(v132 >> 62))
    {
      uint64_t v133 = *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_245;
    }
LABEL_266:
    swift_bridgeObjectRetain();
    uint64_t v133 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_245:
    swift_bridgeObjectRelease();
    v162[0] = v133;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v4, (os_log_type_t)v48, "[Bundles] reordered recommended suggestions: %ld into Recommended", (uint8_t *)a1, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v134 = v164;
  swift_bridgeObjectRelease();
  return v134;
}

uint64_t specialized Array.remove(at:)(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t v5 = a2(v5);
    uint64_t *v2 = v5;
  }
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      uint64_t v11 = v7 + 8 * a1;
      uint64_t v12 = *(void *)(v11 + 32);
      memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(void *)(v7 + 16) = v9;
      specialized Array._endMutation()();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized Array.remove(at:)(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[8 * a1];
      uint64_t v8 = *((void *)v7 + 4);
      memmove(v7 + 32, v7 + 40, 8 * v6);
      *((void *)v3 + 2) = v5;
      void *v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

BOOL MOSuggestionCollectionViewModel.shouldForceFullWidth(cellViewModel:)(uint64_t a1)
{
  return [*(id *)(a1 + 16) interfaceType] == (id)10;
}

uint64_t MOSuggestionCollectionViewModel.cellStyleFor(indexPath:)()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 680))();
  if (!v1) {
    return 6;
  }
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 152))(v1);
  swift_release();
  return v2;
}

uint64_t MOSuggestionCollectionViewModel.groupViewModelsBundlesByDate()()
{
  uint64_t v1 = v0;
  uint64_t v156 = type metadata accessor for UUID();
  uint64_t v173 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v155 = (char *)&v146 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for Calendar();
  *(void *)&long long v171 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v164 = (char *)&v146 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = type metadata accessor for Date();
  uint64_t v147 = *(void *)(v170 - 8);
  uint64_t v4 = __chkstk_darwin(v170);
  v169 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (uint64_t)&v146 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (uint64_t)&v146 - v9;
  if (serverManager._clientConnections == (NSMutableDictionary *)-1) {
    goto LABEL_2;
  }
LABEL_261:
  swift_once();
LABEL_2:
  uint64_t v158 = v10;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v178 = __swift_project_value_buffer(v11, (uint64_t)static MOAngelLogger.shared);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Bundles] Constructing recents suggestions by date", v14, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  v180[0] = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(v180, specialized _ArrayBuffer._consumeAndCreateNew(), specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  uint64_t v160 = 0;
  *(void *)(v1 + 48) = v180[0];
  uint64_t v15 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v1 + 712))(v15);
  os_log_t v146 = (char **)(v1 + 56);
  swift_beginAccess();
  uint64_t v16 = *(void *)(v1 + 56);
  long long v149 = (uint64_t *)(v1 + 64);
  swift_beginAccess();
  *(void *)(v1 + 64) = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled((os_log_t)v10, v17);
  uint64_t v177 = v16;
  v174 = (id *)v8;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134217984;
    uint64_t v8 = (uint64_t)(v19 + 4);
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = specialized FlattenSequence<>.startIndex.getter(v20);
    uint64_t v24 = specialized FlattenSequence<>.distance(from:to:)(v21, v23, v22 & 1, *(void *)(v16 + 16), 0, 1, v16);
    swift_bridgeObjectRelease_n();
    v180[0] = v24;
    uint64_t v16 = v177;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v10, v17, "[Bundles] Begin Filtering suggestions by recents eligibility, bundle count before filter:%ld", v19, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v179 = 0;
  v185[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v176 = v16 + 32;
  uint64_t v1 = 0x80000001001E5B90;
  while (1)
  {
    unint64_t v33 = *(void *)(v177 + 16);
    if (v179 == v33) {
      break;
    }
    if (v179 >= v33) {
      goto LABEL_236;
    }
    unint64_t v34 = v179 + 1;
    uint64_t v10 = *(void *)(v176 + 8 * v179);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v35 = v10;
    unint64_t v179 = v34;
    if (v10)
    {
      unint64_t v25 = 0;
      uint64_t v8 = v10 & 0xFFFFFFFFFFFFFF8;
      if (v10 >= 0) {
        uint64_t v26 = v10 & 0xFFFFFFFFFFFFFF8;
      }
      else {
        uint64_t v26 = v10;
      }
      uint64_t v175 = v26;
      if ((unint64_t)v10 >> 62)
      {
LABEL_12:
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v25 != v10) {
          goto LABEL_19;
        }
      }
      else
      {
        while (2)
        {
          uint64_t v10 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v25 != v10)
          {
LABEL_19:
            if ((v35 & 0xC000000000000001) != 0)
            {
              uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              if (__OFADD__(v25, 1)) {
                goto LABEL_231;
              }
            }
            else
            {
              if (v25 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_232;
              }
              uint64_t v27 = *(void *)(v35 + 8 * v25 + 32);
              swift_retain();
              if (__OFADD__(v25, 1))
              {
LABEL_231:
                __break(1u);
LABEL_232:
                __break(1u);
LABEL_233:
                __break(1u);
LABEL_234:
                __break(1u);
LABEL_235:
                __break(1u);
LABEL_236:
                __break(1u);
LABEL_237:
                __break(1u);
LABEL_238:
                __break(1u);
LABEL_239:
                __break(1u);
LABEL_240:
                __break(1u);
LABEL_241:
                __break(1u);
LABEL_242:
                __break(1u);
LABEL_243:
                __break(1u);
LABEL_244:
                __break(1u);
LABEL_245:
                __break(1u);
LABEL_246:
                __break(1u);
LABEL_247:
                __break(1u);
LABEL_248:
                __break(1u);
LABEL_249:
                __break(1u);
LABEL_250:
                __break(1u);
LABEL_251:
                __break(1u);
LABEL_252:
                __break(1u);
LABEL_253:
                __break(1u);
LABEL_254:
                __break(1u);
LABEL_255:
                __break(1u);
LABEL_256:
                __break(1u);
LABEL_257:
                __break(1u);
LABEL_258:
                __break(1u);
LABEL_259:
                __break(1u);
LABEL_260:
                __break(1u);
                goto LABEL_261;
              }
            }
            id v28 = [*(id *)(v27 + 16) rankingDictionary];
            if (!v28)
            {
              long long v181 = 0u;
              long long v182 = 0u;
LABEL_15:
              outlined destroy of Any?((uint64_t)&v181, &demangling cache variable for type metadata for Any?);
              goto LABEL_16;
            }
            uint64_t v29 = v28;
            uint64_t v30 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            v185[3] = 0xD000000000000017;
            v185[4] = 0x80000001001E5B90;
            AnyHashable.init<A>(_:)();
            if (*(void *)(v30 + 16)
              && (unint64_t v31 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v180), (v32 & 1) != 0))
            {
              outlined init with copy of Any(*(void *)(v30 + 56) + 32 * v31, (uint64_t)&v181);
            }
            else
            {
              long long v181 = 0u;
              long long v182 = 0u;
            }
            outlined destroy of AnyHashable((uint64_t)v180);
            swift_bridgeObjectRelease();
            if (!*((void *)&v182 + 1)) {
              goto LABEL_15;
            }
            if (swift_dynamicCast() && (v180[0] | 2) == 3)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              goto LABEL_17;
            }
LABEL_16:
            swift_release();
LABEL_17:
            ++v25;
            if (!(v35 >> 62)) {
              continue;
            }
            goto LABEL_12;
          }
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v185[0];
  swift_retain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled((os_log_t)v10, v36))
  {
    uint64_t v1 = swift_slowAlloc();
    *(_DWORD *)uint64_t v1 = 134217984;
    uint64_t v37 = v158;
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v38 = *(void *)(v8 + 16);
      goto LABEL_42;
    }
LABEL_267:
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
LABEL_42:
    swift_release();
    v180[0] = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v10, v36, "[Bundles] Filtering suggestions by recommended eligibility, bundle count after filter:%ld", (uint8_t *)v1, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    uint64_t v37 = v158;
  }
  Date.init()();
  uint64_t v187 = 0;
  unint64_t v188 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v186 = 0;
  if (v8 < 0) {
    uint64_t v1 = 1;
  }
  else {
    uint64_t v1 = ((unint64_t)v8 >> 62) & 1;
  }
  uint64_t v163 = v8;
  uint64_t v39 = v174;
  if (v1 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    uint64_t v8 = v163;
    if (v10 <= 0) {
      goto LABEL_58;
    }
    swift_retain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_50:
      if ((v8 & 0xC000000000000001) == 0)
      {
        if (!*(void *)(v8 + 16))
        {
          __break(1u);
          goto LABEL_267;
        }
        uint64_t v40 = *(void *)(v8 + 32);
        swift_retain();
LABEL_53:
        swift_release();
        id v41 = *(id *)(v40 + 16);
        swift_release();
        uint64_t v10 = (uint64_t)[v41 displayStartDate];

        static Date._unconditionallyBridgeFromObjectiveC(_:)();
        char v42 = static Date.< infix(_:_:)();
        uint64_t v43 = v147;
        unint64_t v44 = *(void (**)(uint64_t, uint64_t))(v147 + 8);
        if (v42)
        {
          uint64_t v10 = v170;
          v44(v37, v170);
          (*(void (**)(uint64_t, id *, uint64_t))(v43 + 32))(v37, v39, v10);
          uint64_t v8 = v163;
          if ((v1 & 1) == 0) {
            goto LABEL_60;
          }
        }
        else
        {
          v44((uint64_t)v39, v170);
          uint64_t v8 = v163;
          if ((v1 & 1) == 0)
          {
LABEL_60:
            uint64_t v172 = *(void *)(v8 + 16);
            goto LABEL_61;
          }
        }
LABEL_58:
        swift_retain();
        uint64_t v172 = _CocoaArrayWrapper.endIndex.getter();
        if (!v172) {
          goto LABEL_59;
        }
        goto LABEL_62;
      }
    }
    else
    {
      swift_release();
      __break(1u);
    }
    uint64_t v40 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_53;
  }
  if (*(void *)(v8 + 16))
  {
    swift_retain();
    goto LABEL_50;
  }
  uint64_t v172 = 0;
LABEL_61:
  swift_retain();
  if (!v172)
  {
LABEL_59:
    swift_release_n();
    uint64_t v45 = (char *)_swiftEmptyArrayStorage;
    (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v37, v170);
LABEL_230:
    *os_log_t v146 = v45;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_62:
  unint64_t v162 = v8 & 0xC000000000000001;
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  unint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t v157 = 0;
  double v161 = (uint64_t *)(v171 + 8);
  v150 = (void (**)(uint64_t, char *, uint64_t))(v147 + 32);
  uint64_t v151 = v8 + 32;
  uint64_t v153 = v185;
  v154 = (void (**)(char *, uint64_t))(v173 + 8);
  v168 = (void (**)(uint64_t, uint64_t))(v147 + 8);
  uint64_t v147 = (v147 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  *(void *)&long long v48 = 136315650;
  long long v152 = v48;
  unint64_t v148 = (char *)&type metadata for Any + 8;
  *(void *)&long long v48 = 136316162;
  long long v171 = v48;
  uint64_t v159 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    if (v162)
    {
      uint64_t v49 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v50 = __OFADD__(v46, 1);
      uint64_t v51 = v46 + 1;
      if (v50) {
        goto LABEL_240;
      }
    }
    else
    {
      if (v46 >= *(void *)(v8 + 16)) {
        goto LABEL_246;
      }
      uint64_t v49 = *(id **)(v151 + 8 * v46);
      swift_retain();
      BOOL v50 = __OFADD__(v46, 1);
      uint64_t v51 = v46 + 1;
      if (v50) {
        goto LABEL_240;
      }
    }
    uint64_t v173 = v51;
    uint64_t v52 = v164;
    static Calendar.current.getter();
    id v53 = [v49[2] displayStartDate];
    uint64_t v1 = (uint64_t)v169;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v53) = Calendar.isDate(_:inSameDayAs:)();
    v166 = *v168;
    v166(v1, v170);
    uint64_t v8 = *v161;
    ((void (*)(char *, uint64_t))*v161)(v52, v165);
    v174 = v49;
    if ((v53 & 1) == 0) {
      break;
    }
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_retain_n();
    uint64_t v10 = v178;
    unint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v1 = swift_slowAlloc();
      uint64_t v177 = swift_slowAlloc();
      v185[0] = v177;
      *(_DWORD *)uint64_t v1 = v152;
      uint64_t v56 = v47;
      uint64_t v57 = v155;
      (*((void (**)(void))*v49 + 43))();
      lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
      unint64_t v179 = v8;
      uint64_t v58 = v156;
      uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v61 = v60;
      id v62 = v57;
      uint64_t v47 = v56;
      (*v154)(v62, v58);
      double v184 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, v185));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      uint64_t v49 = v174;
      swift_bridgeObjectRelease();
      *(_WORD *)(v1 + 12) = 2080;
      double v184 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
      type metadata accessor for MOVisibilityCategoryForUI(0);
      uint64_t v63 = String.init<A>(describing:)();
      double v184 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, v185));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v1 + 22) = 2048;
      double v184 = MOEventBundle.baseScore.getter();
      uint64_t v8 = v179;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "[Bundles] inserted suggestion: %s into Recents with ranking category: %s, bundle goodness score: %f", (uint8_t *)v1, 0x20u);
      uint64_t v10 = v177;
      swift_arrayDestroy();
      uint64_t v37 = v158;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v67 = v173;
    if (v172 < 0) {
      goto LABEL_241;
    }
    if (v173 < 0) {
      goto LABEL_92;
    }
LABEL_85:
    if (v67 >= v172) {
      goto LABEL_92;
    }
    if (v162)
    {
      uint64_t v68 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((unint64_t)v67 >= *(void *)(v163 + 16)) {
        goto LABEL_253;
      }
      uint64_t v68 = *(void *)(v151 + 8 * v67);
      swift_retain();
    }
    uint64_t v1 = (uint64_t)v164;
    static Calendar.current.getter();
    id v69 = [*(id *)(v68 + 16) displayStartDate];
    uint64_t v70 = v169;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v10 = Calendar.isDate(_:inSameDayAs:)();
    swift_release();
    v166((uint64_t)v70, v170);
    ((void (*)(uint64_t, uint64_t))v8)(v1, v165);
    unint64_t v46 = v173;
    if ((v10 & 1) == 0) {
      goto LABEL_92;
    }
    swift_release();
    uint64_t v71 = v47;
    uint64_t v8 = v163;
LABEL_65:
    uint64_t v47 = v71;
    if (v46 == v172)
    {
      swift_release_n();
      uint64_t v45 = v159;
      v166(v37, v170);
      goto LABEL_230;
    }
  }
  swift_beginAccess();
  unint64_t v188 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  id v65 = [v49[2] displayStartDate];
  uint64_t v66 = v169;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v10 = v170;
  v166(v37, v170);
  (*v150)(v37, v66, v10);
  if (v172 < 0) {
    goto LABEL_242;
  }
  uint64_t v67 = v173;
  if ((v173 & 0x8000000000000000) == 0) {
    goto LABEL_85;
  }
LABEL_92:
  if (!(v188 >> 62))
  {
    if (*(uint64_t *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_94;
    }
LABEL_137:
    uint64_t v71 = v47;
LABEL_220:
    uint64_t v186 = 0;
    uint64_t v187 = 0;
    swift_retain_n();
    uint64_t v134 = Logger.logObject.getter();
    os_log_type_t v135 = static os_log_type_t.default.getter();
    uint64_t v10 = v135;
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v1 = swift_slowAlloc();
      unint64_t v179 = swift_slowAlloc();
      v185[0] = v179;
      *(_DWORD *)uint64_t v1 = v152;
      uint64_t v136 = (void (*)(void))*((void *)*v49 + 43);
      uint64_t v137 = v155;
      LODWORD(v177) = v10;
      v136();
      lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v138 = v156;
      uint64_t v139 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v141 = v140;
      int v142 = v137;
      uint64_t v37 = v158;
      (*v154)(v142, v138);
      double v184 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v139, v141, v185));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v1 + 12) = 2080;
      double v184 = COERCE_DOUBLE(MOEventBundle.visibilityCategory.getter());
      type metadata accessor for MOVisibilityCategoryForUI(0);
      uint64_t v143 = String.init<A>(describing:)();
      double v184 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v143, v144, v185));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v1 + 22) = 2048;
      double v184 = MOEventBundle.baseScore.getter();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v177, "[Bundles] inserted suggestion: %s into Recents with ranking category: %s, bundle goodness score: %f", (uint8_t *)v1, 0x20u);
      uint64_t v10 = v179;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v8 = v163;
    unint64_t v46 = v173;
    goto LABEL_65;
  }
  swift_bridgeObjectRetain();
  uint64_t v90 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v90 < 1) {
    goto LABEL_137;
  }
LABEL_94:
  swift_beginAccess();
  uint64_t v72 = v160;
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v188, specialized _ArrayBuffer._consumeAndCreateNew(), (void (*)(void *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  uint64_t v160 = v72;
  swift_endAccess();
  unint64_t v73 = v188;
  if (v188 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (!v10) {
      goto LABEL_139;
    }
LABEL_96:
    uint64_t v177 = v73 & 0xC000000000000001;
    swift_beginAccess();
    unint64_t v74 = 0;
    uint64_t v167 = v73 & 0xFFFFFFFFFFFFFF8;
    uint64_t v175 = v10;
    uint64_t v176 = v73;
    while (1)
    {
      LODWORD(v179) = v47;
      if (v177)
      {
        uint64_t v75 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v8 = v74 + 1;
        if (__OFADD__(v74, 1)) {
          goto LABEL_233;
        }
      }
      else
      {
        if (v74 >= *(void *)(v167 + 16)) {
          goto LABEL_237;
        }
        uint64_t v75 = *(void *)(v73 + 8 * v74 + 32);
        swift_retain();
        uint64_t v8 = v74 + 1;
        if (__OFADD__(v74, 1)) {
          goto LABEL_233;
        }
      }
      swift_retain_n();
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = swift_slowAlloc();
        v185[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v78 = v171;
        uint64_t v79 = (*(uint64_t (**)(void))(*(void *)v75 + 448))();
        *(void *)(v78 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v79, v80, v185);
        swift_release_n();
        uint64_t v81 = swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 12) = 1024;
        char v82 = (*(uint64_t (**)(uint64_t))(*(void *)v75 + 408))(v81);
        swift_release();
        *(_DWORD *)(v78 + 14) = v82 & 1;
        swift_release();
        *(_WORD *)(v78 + 18) = 2048;
        *(void *)(v78 + 20) = v186;
        *(_WORD *)(v78 + 28) = 2048;
        unint64_t v83 = v188;
        *(void *)(v78 + 30) = v187;
        *(_WORD *)(v78 + 38) = 2048;
        if (v83 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v84 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        *(void *)(v78 + 40) = v84;
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "[RecentTabLayout] Date: %s, isFullWidthEligible: %{BOOL}d, rowCount: %ld, topLockCount: %ld, count: %ld", (uint8_t *)v78, 0x30u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v49 = v174;
      }
      else
      {

        uint64_t v85 = swift_release_n();
      }
      uint64_t v1 = v186;
      if (v186 > 1)
      {
        swift_release();
        uint64_t v71 = v179;
        goto LABEL_140;
      }
      uint64_t v86 = *(void *)v75;
      if (v179) {
        break;
      }
      if ((*(uint64_t (**)(uint64_t))(v86 + 408))(v85)) {
        goto LABEL_117;
      }
      uint64_t v10 = v188;
      if (v188 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v88 == 1)
        {
LABEL_117:
          uint64_t v10 = v75;
          (*(void (**)(void))(*(void *)v75 + 160))(0);
          swift_release();
          if (__OFADD__(v186, 1)) {
            goto LABEL_238;
          }
          ++v186;
          uint64_t v87 = v187 + 1;
          if (__OFADD__(v187, 1)) {
            goto LABEL_239;
          }
          goto LABEL_119;
        }
      }
      else if (*(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
      {
        goto LABEL_117;
      }
      if (v1 == 1)
      {
        uint64_t v1 = v187 + 1;
        if (__OFADD__(v187, 1)) {
          goto LABEL_247;
        }
        if (v188 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v1 == v89)
          {
LABEL_128:
            uint64_t v10 = v75;
            (*(void (**)(void))(*(void *)v75 + 160))(0);
            swift_release();
            if (__OFADD__(v186, 1)) {
              goto LABEL_255;
            }
            ++v186;
            uint64_t v87 = v187 + 1;
            if (__OFADD__(v187, 1)) {
              goto LABEL_256;
            }
            goto LABEL_119;
          }
        }
        else if (v1 == *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_128;
        }
      }
      uint64_t v10 = v75;
      (*(void (**)(uint64_t))(*(void *)v75 + 160))(1);
      swift_release();
      if (__OFADD__(v187, 1)) {
        goto LABEL_245;
      }
      ++v187;
      LODWORD(v47) = 1;
      uint64_t v71 = 1;
LABEL_120:
      uint64_t v10 = v175;
      unint64_t v73 = v176;
      if (v8 == v175) {
        goto LABEL_140;
      }
      ++v74;
    }
    uint64_t v10 = v75;
    (*(void (**)(uint64_t))(v86 + 160))(1);
    swift_release();
    if (__OFADD__(v186, 1)) {
      goto LABEL_234;
    }
    ++v186;
    uint64_t v87 = v187 + 1;
    if (__OFADD__(v187, 1)) {
      goto LABEL_235;
    }
LABEL_119:
    uint64_t v187 = v87;
    LODWORD(v47) = 0;
    uint64_t v71 = 0;
    goto LABEL_120;
  }
  uint64_t v10 = *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v10) {
    goto LABEL_96;
  }
LABEL_139:
  uint64_t v71 = v47;
LABEL_140:
  swift_bridgeObjectRelease();
  uint64_t v10 = v188;
  if (v188 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v91 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v91 = *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = v187;
  if (v187 >= v91)
  {
    uint64_t v10 = v188;
    double v184 = *(double *)&v188;
    swift_bridgeObjectRetain();
    uint64_t v37 = v158;
    goto LABEL_201;
  }
  swift_beginAccess();
  if (v8 < 0) {
    goto LABEL_248;
  }
  unint64_t v92 = v188;
  if (!(v188 >> 62))
  {
    uint64_t v10 = *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10 < v8) {
      goto LABEL_249;
    }
    goto LABEL_146;
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v1 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 < v8) {
      goto LABEL_249;
    }
LABEL_146:
    if (v8 && (v92 & 0xC000000000000001) != 0)
    {
      type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      Swift::Int v93 = 0;
      do
      {
        Swift::Int v94 = v93 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v93);
        Swift::Int v93 = v94;
      }
      while (v8 != v94);
    }
    if (v92 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v1 = v97;
      uint64_t v96 = v98;
      unint64_t v95 = v99;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = v92 & 0xFFFFFFFFFFFFFF8;
      uint64_t v1 = (v92 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v95 = (2 * v8) | 1;
      swift_bridgeObjectRetain();
      uint64_t v96 = 0;
    }
    swift_endAccess();
    if (v95)
    {
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      uint64_t v101 = (void *)swift_dynamicCastClass();
      if (!v101)
      {
        swift_unknownObjectRelease();
        uint64_t v101 = _swiftEmptyArrayStorage;
      }
      uint64_t v102 = v101[2];
      swift_release();
      if (__OFSUB__(v95 >> 1, v96)) {
        goto LABEL_257;
      }
      if (v102 != (v95 >> 1) - v96)
      {
        swift_unknownObjectRelease();
        goto LABEL_155;
      }
      uint64_t v100 = (void *)swift_dynamicCastClass();
      if (!v100)
      {
        swift_unknownObjectRelease();
        uint64_t v100 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
LABEL_155:
      uint64_t v100 = specialized _copyCollectionToContiguousArray<A>(_:)(v10, v1, v96, v95);
    }
    swift_unknownObjectRelease();
    swift_beginAccess();
    uint64_t v10 = v188;
    if (v188 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v1 < v8) {
        goto LABEL_269;
      }
      swift_bridgeObjectRetain();
      uint64_t v118 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v118 < v8) {
        goto LABEL_270;
      }
      swift_bridgeObjectRetain();
      uint64_t v119 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v119 < v1) {
        goto LABEL_251;
      }
    }
    else
    {
      uint64_t v1 = *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v1 < v8) {
        goto LABEL_250;
      }
    }
    if ((v10 & 0xC000000000000001) != 0 && v8 != v1)
    {
      if (v8 >= v1) {
        goto LABEL_259;
      }
      type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      Swift::Int v103 = v8;
      do
      {
        Swift::Int v104 = v103 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v103);
        Swift::Int v103 = v104;
      }
      while (v1 != v104);
    }
    if ((unint64_t)v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v105 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v106 = v108;
      uint64_t v107 = v109;
      uint64_t v1 = v110;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v105 = v10 & 0xFFFFFFFFFFFFFF8;
      uint64_t v106 = (v10 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v1 = (2 * v1) | 1;
      swift_bridgeObjectRetain();
      uint64_t v107 = v8;
    }
    swift_endAccess();
    if (v1)
    {
      uint64_t v10 = type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      uint64_t v111 = (void *)swift_dynamicCastClass();
      if (!v111)
      {
        swift_unknownObjectRelease();
        uint64_t v111 = _swiftEmptyArrayStorage;
      }
      uint64_t v112 = v111[2];
      swift_release();
      if (__OFSUB__((unint64_t)v1 >> 1, v107)) {
        goto LABEL_260;
      }
      if (v112 != ((unint64_t)v1 >> 1) - v107)
      {
        swift_unknownObjectRelease();
        goto LABEL_173;
      }
      uint64_t v10 = swift_dynamicCastClass();
      if (!v10)
      {
        swift_unknownObjectRelease();
        uint64_t v10 = (uint64_t)_swiftEmptyArrayStorage;
      }
    }
    else
    {
LABEL_173:
      uint64_t v10 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v105, v106, v107, v1);
    }
    swift_unknownObjectRelease();
    v185[0] = v10;
    uint64_t v113 = v160;
    specialized MutableCollection<>.sort(by:)(v185, specialized _ArrayBuffer._consumeAndCreateNew(), (void (*)(void *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
    uint64_t v160 = v113;
    unint64_t v114 = v185[0];
    if ((unint64_t)v185[0] >> 62)
    {
      if (v185[0] < 0) {
        uint64_t v10 = v185[0];
      }
      else {
        uint64_t v10 = v185[0] & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
      if (v1)
      {
LABEL_182:
        if (v1 < 1) {
          goto LABEL_254;
        }
        for (uint64_t i = 0; i != v1; ++i)
        {
          if ((v114 & 0xC000000000000001) != 0)
          {
            uint64_t v116 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v116 = *(void *)(v114 + 8 * i + 32);
            swift_retain();
          }
          (*(void (**)(uint64_t))(*(void *)v116 + 160))(2);
          swift_release();
        }
      }
    }
    else
    {
      uint64_t v1 = *(void *)((v185[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v1) {
        goto LABEL_182;
      }
    }
    swift_bridgeObjectRelease();
    double v184 = *(double *)&v100;
    specialized Array.append<A>(contentsOf:)(v114);
    uint64_t v10 = *(void *)&v184;
    uint64_t v37 = v158;
    uint64_t v49 = v174;
LABEL_201:
    uint64_t v120 = v8 + 3;
    if (__OFADD__(v8, 3)) {
      goto LABEL_243;
    }
    if (!((unint64_t)v10 >> 62))
    {
      if (v120 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_204;
      }
LABEL_215:
      unint64_t v131 = v159;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v131 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v131 + 2) + 1, 1, v131);
      }
      uint64_t v1 = *((void *)v131 + 2);
      unint64_t v132 = *((void *)v131 + 3);
      uint64_t v159 = v131;
      if (v1 >= v132 >> 1) {
        uint64_t v159 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v132 > 1), v1 + 1, 1, v159);
      }
      uint64_t v133 = v159;
      *((void *)v159 + 2) = v1 + 1;
      *(void *)&v133[8 * v1 + 32] = v10;
      BOOL v50 = __OFADD__(v157++, 1);
      if (v50) {
        goto LABEL_244;
      }
      goto LABEL_220;
    }
    swift_bridgeObjectRetain();
    uint64_t v145 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v120 >= v145) {
      goto LABEL_215;
    }
LABEL_204:
    swift_bridgeObjectRetain();
    uint64_t v1 = specialized Collection.dropFirst(_:)(v8 + 3, v10);
    uint64_t v122 = v121;
    uint64_t v8 = v123;
    unint64_t v125 = v124;
    swift_bridgeObjectRelease();
    if (v125)
    {
      unint64_t v179 = v122;
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      uint64_t v127 = (void *)swift_dynamicCastClass();
      if (!v127)
      {
        swift_unknownObjectRelease();
        uint64_t v127 = _swiftEmptyArrayStorage;
      }
      uint64_t v128 = v127[2];
      swift_release();
      if (__OFSUB__(v125 >> 1, v8)) {
        goto LABEL_258;
      }
      if (v128 != (v125 >> 1) - v8)
      {
        swift_unknownObjectRelease();
        uint64_t v37 = v158;
        uint64_t v122 = v179;
        goto LABEL_205;
      }
      uint64_t v126 = (void *)swift_dynamicCastClass();
      uint64_t v37 = v158;
      if (!v126)
      {
        swift_unknownObjectRelease();
        uint64_t v126 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
LABEL_205:
      uint64_t v126 = specialized _copyCollectionToContiguousArray<A>(_:)(v1, v122, v8, v125);
    }
    swift_unknownObjectRelease();
    uint64_t v49 = v174;
    if ((unint64_t)v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v1 < v120) {
        goto LABEL_252;
      }
    }
    else
    {
      uint64_t v1 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v1 < v120) {
        goto LABEL_252;
      }
    }
    specialized Array.replaceSubrange<A>(_:with:)(v120, v1);
    uint64_t v129 = v149;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v183 = *v129;
    *uint64_t v129 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v126, v157, isUniquelyReferenced_nonNull_native);
    *uint64_t v129 = v183;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v10 = *(void *)&v184;
    goto LABEL_215;
  }
  __break(1u);
LABEL_269:
  __break(1u);
LABEL_270:
  __break(1u);
  return result;
}

uint64_t Array<A>.sortedByStartDate.getter(uint64_t result)
{
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Array<A>.sortedByRankingScore.getter(uint64_t a1, void (*a2)(void *))
{
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(&v3, specialized _ArrayBuffer._consumeAndCreateNew(), a2);
}

uint64_t specialized MutableCollection<>.sort(by:)(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(void *))
{
  uint64_t v6 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v6;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v6 < 0 || (v6 & 0x4000000000000000) != 0)
  {
    uint64_t v6 = a2(v6);
    *a1 = v6;
  }
  uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10[0] = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
  v10[1] = v8;
  a3(v10);
  return specialized Array._endMutation()();
}

BOOL MOSuggestionCollectionViewModel.isFullWidthEligible(_:)(uint64_t a1)
{
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 400))(a1)) {
    return 0;
  }
  unint64_t v2 = (unint64_t)MOEventBundle._orderedAssetReferences()();
  if (!v2) {
    return 1;
  }
  if (v2 >> 62) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v3 != 1;
}

BOOL MOSuggestionCollectionViewModel.isEligibleToBeUpranked(_:)(uint64_t a1)
{
  return ((*(uint64_t (**)(void))(*(void *)v1 + 800))() & 1) != 0
      && [*(id *)(a1 + 16) interfaceType] != (id)10;
}

uint64_t MOSuggestionCollectionViewModel.removeBundle(_:)(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = v1 + 6;
  swift_beginAccess();
  unint64_t v5 = v2[6];
  swift_bridgeObjectRetain();
  char v6 = specialized Sequence<>.contains(_:)(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    specialized Collection<>.firstIndex(of:)(a1, v8);
    unint64_t v10 = v9;
    char v12 = v11;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      swift_beginAccess();
      os_log_type_t v13 = (void *)specialized Array.remove(at:)(v10, specialized _ArrayBuffer._consumeAndCreateNew());
      swift_endAccess();

      uint64_t v14 = (*(uint64_t (**)(void))(*v2 + 424))() & 1;
      return (*(uint64_t (**)(uint64_t, void, void))(*v2 + 752))(v14, 0, 0);
    }
  }
  return result;
}

void specialized Collection<>.firstIndex(of:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      unint64_t v5 = v4;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle);
      char v6 = static NSObject.== infix(_:_:)();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          unint64_t v9 = v8;
          char v10 = static NSObject.== infix(_:_:)();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t specialized Collection<>.firstIndex(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    uint64_t v9 = 0;
LABEL_17:
    swift_bridgeObjectRelease_n();
    return v9;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = 0;
  if ((v8 & 1) == 0)
  {
    uint64_t v10 = v2 - 1;
    while (1)
    {
      if (v10 == v9) {
        return 0;
      }
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
      if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14) {
        break;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v9;
      if (v16) {
        return v9;
      }
    }
    ++v9;
    goto LABEL_17;
  }
  return v9;
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.showMoreForDaySection(section:)(Swift::Int section)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*v1 + 568))();
  BOOL v4 = __OFSUB__(section, v3);
  unint64_t v5 = section - v3;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  swift_beginAccess();
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = v1[7];
    if ((int64_t)v5 < *(void *)(v6 + 16))
    {
      uint64_t v9 = *(void *)(v6 + 8 * v5 + 32);
      swift_beginAccess();
      if (*(void *)(v1[8] + 16))
      {
        specialized __RawDictionaryStorage.find<A>(_:)(v5);
        if (v7)
        {
          swift_bridgeObjectRetain();
          unint64_t v8 = swift_bridgeObjectRetain();
          specialized Array.append<A>(contentsOf:)(v8);
          swift_beginAccess();
          specialized Array.remove(at:)(v5);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          if (*(void *)(v1[7] + 16) >= v5)
          {
            specialized Array.replaceSubrange<A>(_:with:)(v5, v5, v9);
            swift_endAccess();
            swift_beginAccess();
            specialized Dictionary._Variant.removeValue(forKey:)(v5);
            swift_endAccess();
            swift_bridgeObjectRelease();
            return;
          }
LABEL_10:
          __break(1u);
        }
      }
    }
  }
}

uint64_t MOSuggestionCollectionViewModel.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v0 + 80));
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v0 + 96));
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v0 + 112));
  outlined destroy of Any?(v0 + 128, &demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOSuggestionCollectionViewModel.__deallocating_deinit()
{
  MOSuggestionCollectionViewModel.deinit();

  return swift_deallocClassInstance();
}

id MOSuggestionCollectionViewCellViewModel.bundle.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t MOSuggestionCollectionViewCellViewModel.cellStyle.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MOSuggestionCollectionViewCellViewModel.cellStyle.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t MOSuggestionAssetReference.appendices.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MOSuggestionAssetReference.appendices.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOSuggestionSheetAssetViewModel.image.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCellViewModel.sourcesText.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MOSuggestionCollectionViewCellViewModel.sourcesText.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t MOSuggestionCollectionViewCellViewModel.showSaved.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t MOSuggestionCollectionViewCellViewModel.showSaved.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 65) = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewCellViewModel.showSaved.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCellViewModel.segmentType.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t MOSuggestionCollectionViewCellViewModel.segmentType.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 66) = v2;
  return result;
}

uint64_t (*MOSuggestionCollectionViewCellViewModel.segmentType.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCellViewModel.assetViewModels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MOSuggestionCollectionViewCellViewModel.assetViewModels.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOSuggestionCollectionViewCellViewModel.assetViewModels.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionCollectionViewCellViewModel.clientDetails.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

BOOL MOSuggestionCollectionViewCellViewModel.isPhotoMemory.getter()
{
  return [*(id *)(v0 + 16) interfaceType] == (id)10;
}

BOOL MOSuggestionCollectionViewCellViewModel.isThirdPartyMedia.getter()
{
  return [*(id *)(v0 + 16) interfaceType] == (id)5;
}

uint64_t MOSuggestionCollectionViewCellViewModel.init(_:clientDetails:showAdded:showSaved:)(void *a1, char a2, uint64_t a3, char a4, char a5)
{
  *(void *)(v5 + 32) = 0;
  *(unsigned char *)(v5 + 24) = 0;
  *(void *)(v5 + 40) = 0xE000000000000000;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = 0xE000000000000000;
  *(_WORD *)(v5 + 64) = 0;
  *(unsigned char *)(v5 + 66) = 0;
  *(void *)(v5 + 72) = 0;
  *(void *)(v5 + 16) = a1;
  swift_beginAccess();
  *(unsigned char *)(v5 + 64) = a4;
  swift_beginAccess();
  *(unsigned char *)(v5 + 65) = a5;
  *(unsigned char *)(v5 + 80) = a2;
  *(void *)(v5 + 88) = a3;
  uint64_t v11 = *(uint64_t (**)(void))(*(void *)v5 + 352);
  id v12 = a1;
  uint64_t v13 = v11();
  uint64_t v15 = v14;

  swift_beginAccess();
  *(void *)(v5 + 32) = v13;
  *(void *)(v5 + 40) = v15;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t MOSuggestionCollectionViewCellViewModel.deinit()
{
  swift_beginAccess();
  if (*(void *)(v0 + 72))
  {
    *(void *)(v0 + 72) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOSuggestionCollectionViewCellViewModel.__deallocating_deinit()
{
  swift_beginAccess();
  if (*(void *)(v0 + 72))
  {
    *(void *)(v0 + 72) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void MOSuggestionCollectionViewCellViewModel.bundleIdentifier()()
{
  id v1 = [*(id *)(v0 + 16) bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t MOSuggestionCollectionViewCellViewModel.bundleTitle.getter()
{
  if ((*((uint64_t (**)(void))*v0 + 40))()) {
    return (*((uint64_t (**)(void))*v0 + 45))();
  }
  id v1 = [v0[2] labels];
  if (v1)
  {
    uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v2 + 16))
    {
      id v1 = *(id *)(v2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return (uint64_t)v1;
}

uint64_t MOSuggestionCollectionViewCellViewModel.photoMemoryTitle.getter()
{
  if (((*((uint64_t (**)(void))*v0 + 40))() & 1) == 0) {
    return 0;
  }
  id v1 = [v0[2] labels];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v3 + 16)
    || (swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        lazy protocol witness table accessor for type String and conformance String(),
        uint64_t v4 = StringProtocol.components<A>(separatedBy:)(),
        swift_bridgeObjectRelease(),
        !*(void *)(v4 + 16)))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t MOSuggestionCollectionViewCellViewModel.photoMemorySubtitle.getter()
{
  if (((*((uint64_t (**)(void))*v0 + 40))() & 1) == 0) {
    return 0;
  }
  id v1 = [v0[2] labels];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v3 + 16)
    || (swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        lazy protocol witness table accessor for type String and conformance String(),
        uint64_t v4 = StringProtocol.components<A>(separatedBy:)(),
        swift_bridgeObjectRelease(),
        (uint64_t v5 = *(void *)(v4 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = *(void *)(v4 + 16 * v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v6;
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.subtitle()()
{
  id v1 = (uint64_t (**)(void))(*v0 + 272);
  uint64_t v2 = *v1;
  if ((*v1)())
  {
    if (v2() & 1) != 0 && ((*(uint64_t (**)(void))(*v0 + 416))())
    {
      uint64_t v5 = (*(uint64_t (**)(void))(*v0 + 472))();
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = (void *)0xE000000000000000;
    }
  }
  else
  {
    char v3 = (*(uint64_t (**)(void))(*v0 + 320))();
    uint64_t v4 = *v0;
    if (v3) {
      uint64_t v5 = (*(uint64_t (**)(void))(v4 + 368))();
    }
    else {
      uint64_t v5 = (*(uint64_t (**)(void))(v4 + 464))();
    }
  }
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

unint64_t MOSuggestionCollectionViewCellViewModel.contactNames.getter()
{
  unint64_t result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (!result) {
    return 0;
  }
  unint64_t v1 = result;
  if (result >> 62)
  {
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_38;
    }
    goto LABEL_23;
  }
  uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_22;
  }
LABEL_4:
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_44;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v4 = *(void *)(v1 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v5 = (void *)(*(uint64_t (**)(void))(*(void *)v4 + 120))();
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {

      swift_bridgeObjectRelease_n();
LABEL_7:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      continue;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0)
  {
LABEL_23:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0) {
      goto LABEL_38;
    }
    uint64_t v13 = _swiftEmptyArrayStorage[2];
    unint64_t result = swift_retain();
    if (v13) {
      goto LABEL_25;
    }
LABEL_39:
    swift_release_n();
    if (one-time initialization token for COMMA_SEPARATOR != -1) {
      swift_once();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [String]);
    uint64_t v12 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    return v12;
  }
LABEL_38:
  swift_retain();
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_39;
  }
LABEL_25:
  if (v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = _swiftEmptyArrayStorage;
    do
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v16 = _swiftEmptyArrayStorage[v14 + 4];
        swift_retain();
      }
      os_log_type_t v17 = (void *)(*(uint64_t (**)(void))(*(void *)v16 + 216))();
      id v18 = [v17 personName];

      if (v18)
      {
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;
        swift_release();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
        }
        unint64_t v23 = v15[2];
        unint64_t v22 = v15[3];
        if (v23 >= v22 >> 1) {
          uint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v22 > 1), v23 + 1, 1, v15);
        }
        v15[2] = v23 + 1;
        uint64_t v24 = &v15[2 * v23];
        v24[4] = v19;
        v24[5] = v21;
      }
      else
      {
        swift_release();
      }
      ++v14;
    }
    while (v13 != v14);
    goto LABEL_39;
  }
LABEL_44:
  __break(1u);
  return result;
}

unint64_t MOSuggestionCollectionViewCellViewModel.assetCount.getter()
{
  unint64_t result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  unint64_t v1 = result;
  if (!result) {
    return v1;
  }
  uint64_t v9 = &_swiftEmptySetSingleton;
  if (!(result >> 62))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v7 = &_swiftEmptySetSingleton;
LABEL_13:
    unint64_t v1 = v7[2];
    swift_bridgeObjectRelease();
    return v1;
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if (v2 >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
        swift_retain();
      }
      ++v3;
      Swift::Int v5 = (*(uint64_t (**)(void))(*(void *)v4 + 304))();
      specialized Set._Variant.insert(_:)(&v8, v5, v6);
      swift_release();
      swift_bridgeObjectRelease();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v7 = v9;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t MOSuggestionCollectionViewCellViewModel.isCondensedHeight.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (!v3) {
    return 0;
  }
  unint64_t v4 = v3;
  Swift::Int v5 = (void *)(v3 >> 62);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t)&selRef_collectionView_didSelectItemAtIndexPath_;
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    [(id)v2 interfaceType];
    goto LABEL_31;
  }
  uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v7 = (uint64_t)&selRef_collectionView_didSelectItemAtIndexPath_;
  if (!v6) {
    goto LABEL_30;
  }
LABEL_4:
  unint64_t v1 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0) {
    goto LABEL_77;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v8 = *(void *)(v4 + 32);
  swift_retain();
  while (1)
  {
    uint64_t v9 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v8 + 272))(v9);
    swift_release();
    uint64_t result = (uint64_t)[(id)v2 *(SEL *)(v7 + 3640)];
    if (result == 5)
    {
      if (v1) {
        goto LABEL_80;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v11 = *(void *)(v4 + 32);
        uint64_t v12 = swift_retain();
        goto LABEL_11;
      }
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      return result;
    }
LABEL_31:
    uint64_t v18 = 0;
    BOOL v27 = 0;
    if (!v5)
    {
LABEL_32:
      uint64_t v29 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v27;
      if (!v29) {
        goto LABEL_43;
      }
      goto LABEL_33;
    }
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v29) {
        break;
      }
LABEL_33:
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v29 & ~(v29 >> 63), 0);
      if ((v29 & 0x8000000000000000) == 0)
      {
        uint64_t v47 = v2;
        uint64_t v30 = 0;
        Swift::Int v5 = _swiftEmptyArrayStorage;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            uint64_t v31 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v31 = *(void *)(v4 + 8 * v30 + 32);
            swift_retain();
          }
          uint64_t v32 = (*(uint64_t (**)(void))(*(void *)v31 + 120))();
          swift_release();
          unint64_t v34 = _swiftEmptyArrayStorage[2];
          unint64_t v33 = _swiftEmptyArrayStorage[3];
          unint64_t v1 = v34 + 1;
          if (v34 >= v33 >> 1) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
          }
          ++v30;
          _swiftEmptyArrayStorage[2] = v1;
          _swiftEmptyArrayStorage[v34 + 4] = v32;
        }
        while (v29 != v30);
        goto LABEL_45;
      }
LABEL_79:
      __break(1u);
LABEL_80:
      swift_bridgeObjectRetain();
      uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v12 = swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 272))(v12);
      char v15 = v14;
      uint64_t result = swift_release();
      if ((v15 & 1) != 0 || v13 != 6)
      {
        if (v1)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v17 = swift_bridgeObjectRelease();
        }
        else
        {
          if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_82;
          }
          uint64_t v16 = *(void *)(v4 + 32);
          uint64_t v17 = swift_retain();
        }
        uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 272))(v17);
        char v21 = v20;
        uint64_t result = swift_release();
        if ((v21 & 1) != 0 || v19 != 7)
        {
          if (v1)
          {
            swift_bridgeObjectRetain();
            uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v23 = swift_bridgeObjectRelease();
          }
          else
          {
            if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_83;
            }
            uint64_t v22 = *(void *)(v4 + 32);
            uint64_t v23 = swift_retain();
          }
          uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 272))(v23);
          char v26 = v25;
          swift_release();
          if ((v26 & 1) != 0 || v24 != 8) {
            goto LABEL_31;
          }
        }
      }
      if (!v5)
      {
        BOOL v27 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1;
        goto LABEL_32;
      }
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v28 == 1;
    }
LABEL_43:
    Swift::Int v5 = _swiftEmptyArrayStorage;
    unint64_t v1 = _swiftEmptyArrayStorage[2];
    if (!v1)
    {
      int v39 = 1;
      goto LABEL_66;
    }
    uint64_t v47 = v2;
LABEL_45:
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;
    if (v7 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v36 != v37) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    if (v1 == 1) {
      goto LABEL_51;
    }
LABEL_53:
    unsigned int v46 = v18;
    uint64_t v2 = 5;
    while (1)
    {
      uint64_t v40 = v2 - 3;
      if (__OFADD__(v2 - 4, 1)) {
        break;
      }
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;
      if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v42 == v43)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          int v39 = 0;
LABEL_64:
          uint64_t v18 = v46;
          goto LABEL_65;
        }
      }
      ++v2;
      if (v40 == v1)
      {
        int v39 = 1;
        goto LABEL_64;
      }
    }
    __break(1u);
LABEL_77:
    uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  uint64_t v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v39 = 0;
  if ((v7 & 1) == 0) {
    goto LABEL_65;
  }
  if (v1 != 1) {
    goto LABEL_53;
  }
LABEL_51:
  int v39 = 1;
LABEL_65:
  swift_bridgeObjectRelease();
  uint64_t v2 = v47;
  uint64_t v7 = (uint64_t)&selRef_collectionView_didSelectItemAtIndexPath_;
LABEL_66:
  swift_bridgeObjectRelease();
  id v45 = [(id)v2 *(SEL *)(v7 + 3640)];
  swift_bridgeObjectRelease();
  if (v45 == (id)12)
  {
    if (v29 != 1) {
      return v39 | v18;
    }
  }
  else
  {
    if (v29 != 1) {
      return v18;
    }
    int v39 = 0;
  }
  if ((specialized Sequence<>.contains(_:)((uint64_t)[(id)v2 *(SEL *)(v7 + 3640)], (uint64_t)&outlined read-only object #0 of MOSuggestionCollectionViewCellViewModel.isCondensedHeight.getter) & 1) == 0)return v39 | v18; {
  return 1;
  }
}

BOOL MOSuggestionCollectionViewCellViewModel.isFullWidthEligible.getter()
{
  unint64_t v0 = (unint64_t)MOEventBundle._orderedAssetReferences()();
  if (!v0) {
    return 1;
  }
  if (v0 >> 62) {
    uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v1 != 1;
}

BOOL MOSuggestionCollectionViewCellViewModel.shouldIncludeRecentsSubtitle.getter()
{
  return [*(id *)(v0 + 16) interfaceType] != (id)4;
}

BOOL MOSuggestionCollectionViewCellViewModel.shouldShowInterstitial.getter()
{
  id v1 = [v0[2] interfaceType];
  if (v1 == (id)11) {
    (*((void (**)(void))*v0 + 55))();
  }
  return v1 != (id)11;
}

BOOL MOSuggestionCollectionViewCellViewModel.isEvergreen.getter()
{
  return [*(id *)(v0 + 16) interfaceType] == (id)11;
}

Swift::Void __swiftcall MOSuggestionCollectionViewCellViewModel.markEvergreenEligible()()
{
  if (((*(uint64_t (**)(void))(*(void *)v0 + 432))() & 1) == 0) {
    return;
  }
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 296))();
  if (!v1) {
    return;
  }
  unint64_t v2 = v1;
  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v1 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)(v3 + 16))
      {
        __break(1u);
        return;
      }
      uint64_t v4 = *(void *)(v2 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v5 = static MOSuggestionAssetCacheManager.shared;
    uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v4 + 512))();
    uint64_t v8 = v7;
    uint64_t v9 = (*(uint64_t (**)(void))(*(void *)v4 + 704))();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v5 + 272))(v6, v8, v9);
    swift_release();
  }

  swift_bridgeObjectRelease();
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.dateString()()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)v0[2];
  if (((unint64_t)[v5 interfaceType] & 0xFFFFFFFFFFFFFFFELL) == 0xA)
  {
    uint64_t v6 = (*(uint64_t (**)(void))(*v0 + 368))();
LABEL_4:
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    goto LABEL_5;
  }
  uint64_t v6 = MOSuggestionCollectionViewCellViewModel.timeRangeString.getter();
  if (v7) {
    goto LABEL_4;
  }
  id v12 = [v5 displayStartDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  if (one-time initialization token for fullDateFormatter != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)static MODateFormatter.fullDateFormatter;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v15 = [v13 stringFromDate:isa];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v16;

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_5:
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

uint64_t MOSuggestionCollectionViewCellViewModel.timeRangeString.getter()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v37 - v6;
  uint64_t v8 = *(void **)(v0 + 16);
  id v9 = [v8 displayEndDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v10 = [v8 displayStartDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.timeIntervalSince(_:)();
  double v12 = v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v5, v1);
  v13(v7, v1);
  double v14 = fabs(v12);
  if (one-time initialization token for ONE_DAY != -1) {
    swift_once();
  }
  if (*(double *)&static MOSuggestionCollectionViewCellConstants.ONE_DAY >= v14) {
    return 0;
  }
  id v15 = [v8 displayStartDate:MOSuggestionCollectionViewCellConstants.ONE_DAY];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  if (one-time initialization token for fullDateFormatter != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)static MODateFormatter.fullDateFormatter;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v18 = [v16 stringFromDate:isa];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  v13(v7, v1);
  id v22 = [self mainBundle];
  v39._object = (void *)0x80000001001E4490;
  v23._countAndFlagsBits = 2108704;
  v23._object = (void *)0xE300000000000000;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0xD000000000000034;
  Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v39);

  uint64_t v37 = v19;
  uint64_t v38 = v21;
  swift_bridgeObjectRetain();
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = v37;
  uint64_t v26 = v38;
  id v28 = [v8 displayEndDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v29 = (void *)static MODateFormatter.fullDateFormatter;
  Class v30 = Date._bridgeToObjectiveC()().super.isa;
  id v31 = [v29 stringFromDate:v30];

  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v34 = v33;

  v13(v7, v1);
  uint64_t v37 = v27;
  uint64_t v38 = v26;
  swift_bridgeObjectRetain();
  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v37;
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.relativeDateString()()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MOSuggestionCollectionViewCellViewModel.timeRangeString.getter();
  if (v6)
  {
    uint64_t countAndFlagsBits = v5;
    object = v6;
  }
  else
  {
    id v9 = [*(id *)(v0 + 16) displayStartDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v10 = Date.getRelativeDate()();
    uint64_t countAndFlagsBits = v10._countAndFlagsBits;
    object = v10._object;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v11 = countAndFlagsBits;
  double v12 = object;
  result._object = v12;
  result._uint64_t countAndFlagsBits = v11;
  return result;
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.categoryString()()
{
  unint64_t v0 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (v0)
  {
    unint64_t v1 = v0;
    id v2 = [objc_allocWithZone((Class)NSCountedSet) init];
    if (v1 >> 62) {
      goto LABEL_56;
    }
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v3)
    {
      uint64_t v4 = 0;
      uint64_t v48 = v3;
      while ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v7 = __OFADD__(v4++, 1);
        if (v7) {
          goto LABEL_55;
        }
LABEL_12:
        type metadata accessor for MOMultiMapAssetReference(0);
        uint64_t v8 = swift_dynamicCastClass();
        if (!v8)
        {
          if (one-time initialization token for assetTypeDirectMapping != -1) {
            swift_once();
          }
          double v12 = static MOSuggestionAssetReference.assetTypeDirectMapping;
          uint64_t v13 = *(uint64_t (**)(void))(*(void *)v6 + 120);
          uint64_t v14 = v13();
          id v15 = (void *)v14;
          if (v12[2])
          {
            uint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(v14);
            if (v17)
            {
              char v18 = *(unsigned char *)(v12[7] + v16);

              uint64_t v3 = v48;
LABEL_40:
              if (v18 == 13) {
                char v34 = 12;
              }
              else {
                char v34 = v18;
              }
              BOOL v50 = &type metadata for MOSuggestionAssetVisualSubType;
              v49[0] = v34;
              uint64_t v10 = 1;
LABEL_44:
              uint64_t v35 = static Array._allocateBufferUninitialized(minimumCapacity:)();
              *(void *)(v35 + 16) = v10;
              uint64_t v36 = v35 + 32;
              do
              {
                outlined init with copy of Any((uint64_t)v49, v36);
                v36 += 32;
                --v10;
              }
              while (v10);
              goto LABEL_5;
            }
          }

          uint64_t v19 = (void *)v13();
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v22 = v21;
          if (v20 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v22 == v23)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v25 & 1) == 0)
            {
              uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v28 = v27;
              if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_37;
              }
              char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v33)
              {
LABEL_37:

                char v18 = MOSuggestionAssetReference.motionActivitySubType.getter();
                uint64_t v3 = v48;
              }
              else
              {
                uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v39 = v38;
                if (v37 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v39 == v40)
                {

                  swift_bridgeObjectRelease_n();
                  uint64_t v3 = v48;
                }
                else
                {
                  char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v3 = v48;
                  if ((v41 & 1) == 0) {
                    goto LABEL_39;
                  }
                }
                char v18 = MOSuggestionAssetReference.genericMapSubType.getter();
              }
              if (v18 == 26) {
                goto LABEL_39;
              }
              goto LABEL_40;
            }
          }

          uint64_t v30 = (*(uint64_t (**)(void))(*(void *)v6 + 272))();
          uint64_t v3 = v48;
          if ((v31 & 1) != 0 || (char v32 = v30 - 1, (unint64_t)(v30 - 1) >= 8) || ((0xEBu >> v32) & 1) == 0)
          {
LABEL_39:
            swift_release();
            goto LABEL_6;
          }
          unint64_t v11 = 0x605040001000200uLL >> (8 * v32);
          uint64_t v10 = 1;
          goto LABEL_15;
        }
        unint64_t v9 = (*(uint64_t (**)(void))(*(void *)v8 + 360))();
        if (!(v9 >> 62))
        {
          uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
          LOBYTE(v11) = 15;
LABEL_15:
          BOOL v50 = &type metadata for MOSuggestionAssetVisualSubType;
          v49[0] = v11;
          goto LABEL_16;
        }
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        BOOL v50 = &type metadata for MOSuggestionAssetVisualSubType;
        v49[0] = 15;
        if (v10 < 0)
        {
          uint64_t v45 = _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          goto LABEL_61;
        }
LABEL_16:
        if (v10) {
          goto LABEL_44;
        }
LABEL_5:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v2 addObjectsFromArray:isa];
        swift_release();

LABEL_6:
        if (v4 == v3) {
          goto LABEL_57;
        }
      }
      uint64_t v6 = *(void *)(v1 + 32 + 8 * v4);
      swift_retain();
      BOOL v7 = __OFADD__(v4++, 1);
      if (!v7) {
        goto LABEL_12;
      }
LABEL_55:
      __break(1u);
LABEL_56:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_57:
    swift_bridgeObjectRelease_n();
    if (one-time initialization token for COMMA_SEPARATOR != -1) {
      swift_once();
    }
    uint64_t v42 = specialized static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)(v2, 0, static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR, *((uint64_t *)&static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR + 1));
    unint64_t v43 = v44;
  }
  else
  {
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
  }
  uint64_t v45 = v42;
  unsigned int v46 = (void *)v43;
LABEL_61:
  result._object = v46;
  result._uint64_t countAndFlagsBits = v45;
  return result;
}

Swift::String __swiftcall MOSuggestionCollectionViewCellViewModel.promptString()()
{
  id v1 = [*(id *)(v0 + 16) promptLanguages];
  if (!v1) {
    goto LABEL_5;
  }
  id v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v3 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v4 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v7 = v4;
  uint64_t v8 = (void *)v6;
  result._object = v8;
  result._uint64_t countAndFlagsBits = v7;
  return result;
}

void *MOSuggestionCollectionViewCellViewModel.createAssetViewModel(for:cellStyle:totalCount:index:hasSetAutoplay:bundleInterfaceType:)(void *a1, char a2, size_t a3, uint64_t a4, char *a5)
{
  v1063 = a5;
  uint64_t v1075 = a4;
  uint64_t v8 = type metadata accessor for Date();
  unint64_t v9 = *(void (***)(void, void, void, void))(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v1061 = (uint64_t)&v1031 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  char v17 = (char *)&v1031 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v1079 = (char *)&v1031 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v1066 = (char *)&v1031 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  *((void *)&v1064 + 1) = (char *)&v1031 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v1068 = (char *)&v1031 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v1070 = (char *)&v1031 - v27;
  __chkstk_darwin(v26);
  v1078 = (char *)&v1031 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  v1062 = (char *)&v1031 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  v1065 = (char *)&v1031 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  *(void *)&long long v1064 = (char *)&v1031 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v1067 = (uint64_t)&v1031 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  v1069 = (char *)&v1031 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v1031 - v41;
  __chkstk_darwin(v40);
  v1077 = (char *)&v1031 - v43;
  unint64_t v44 = specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(a2, a3);
  if (!v44)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    __swift_project_value_buffer(v50, (uint64_t)static MOAngelLogger.assets);
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      id v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "[MOSuggestionCollectionViewCellViewModel] Unable to convert asset view models, returning nil", v53, 2u);
      specialized UnsafeMutablePointer.deallocate()();
    }

    return 0;
  }
  uint64_t v1074 = (uint64_t)v44;
  uint64_t v1071 = v8;
  v1072 = v9;
  id v1073 = a1;
  id v45 = [a1 assetType];
  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v47;
  if (v46 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v48 == v49)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v55)
  {
LABEL_12:

    uint64_t v56 = v1073;
    uint64_t v57 = (char *)[v1073 content];
    self;
    uint64_t v58 = (void *)swift_dynamicCastObjCClass();
    if (!v58)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      id v65 = [v56 identifier];
      uint64_t v1075 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v1074 = v66;

      uint64_t v67 = (void *)MOSuggestionAssetsTypeSystemImage;
      uint64_t v68 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v1077, 1, 1, v68);
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v1078, 1, 1, v69);
      long long v1083 = 0u;
      long long v1084 = 0u;
      char v1085 = 1;
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
      id v1073 = (id)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1072 = (void (**)(void, void, void, void))variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1071) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1070 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1069 = v70;
      v1068 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1067 = v71;
      v1066 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1065 = (char *)v72;
      *((void *)&v1064 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(void *)&long long v1064 = v73;
      v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1062 = v74;
      uint64_t v1061 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1060 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1059 = v75;
      v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1057 = v76;
      uint64_t v1056 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1055) = v77 & 1;
      uint64_t v1054 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      id v1053 = v78;
      v1049 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1048 = v79;
      LODWORD(v1052) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1050) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1046 = v80;
      uint64_t v1045 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v1044 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v82 = v81;
      uint64_t v83 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      uint64_t v1051 = swift_allocObject();
      uint64_t v84 = v1076;
      swift_retain();
      id v85 = v67;
      return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1075, v1074, (uint64_t)v84, 0, 0, 0, 0, v67, 26, 0, (uint64_t)v1073, 0, 0, (uint64_t)v1077, (uint64_t)v1072, v1071 & 1, (uint64_t)v1070, (uint64_t)v1069, (uint64_t)v1068,
               v1067,
               (uint64_t)v1066,
               (uint64_t)v1065,
               0,
               0,
               *((uint64_t *)&v1064 + 1),
               v1064,
               (uint64_t)v1063,
               (uint64_t)v1062,
               v1061,
               0,
               0,
               0,
               0,
               v1060,
               v1059,
               (uint64_t)v1078,
               (uint64_t)v1058,
               (uint64_t)v1057,
               v1056,
               v1055,
               v1054,
               (uint64_t)v1053,
               (uint64_t)v1049,
               (uint64_t)v1048,
               v1052 & 1,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               11,
               0,
               0,
               0,
               0,
               0,
               1,
               v1050 & 1,
               0,
               v1047,
               v1046,
               v1045,
               v1044,
               v82,
               v83);
    }
    uint64_t v59 = v58;
    v1069 = (char *)[v58 icon];
    id v60 = [v56 metadata];
    uint64_t v61 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v62 = MOSuggestionAssetMetadataKeyWorkoutType;
    specialized _convertToAnyHashable<A>(_:)(v62);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v61, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    uint64_t v63 = v1071;
    if (*((void *)&v1091 + 1))
    {
      if (swift_dynamicCast())
      {
        unint64_t v64 = *((void *)&v1086 + 1);
        v1068 = (char *)v1086;
        goto LABEL_22;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
    }
    v1068 = 0;
    unint64_t v64 = 0xE000000000000000;
LABEL_22:
    uint64_t v1067 = v64;
    id v90 = [v56 metadata];
    uint64_t v91 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v92 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntWithUnit;
    specialized _convertToAnyHashable<A>(_:)(v92);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v91, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    if (*((void *)&v1091 + 1))
    {
      if (swift_dynamicCast())
      {
        unint64_t v93 = *((void *)&v1086 + 1);
        v1066 = (char *)v1086;
        goto LABEL_27;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
    }
    v1066 = 0;
    unint64_t v93 = 0xE000000000000000;
LABEL_27:
    v1065 = (char *)v93;
    id v94 = [v56 metadata];
    uint64_t v95 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v96 = MOSuggestionAssetMetadataKeyWorkoutTotalDistanceWithUnit;
    specialized _convertToAnyHashable<A>(_:)(v96);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v95, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    if (*((void *)&v1091 + 1))
    {
      if (swift_dynamicCast())
      {
        unint64_t v97 = *((void *)&v1086 + 1);
        *((void *)&v1064 + 1) = v1086;
        goto LABEL_32;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
    }
    *((void *)&v1064 + 1) = 0;
    unint64_t v97 = 0xE000000000000000;
LABEL_32:
    *(void *)&long long v1064 = v97;
    id v98 = [v56 metadata];
    uint64_t v99 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v100 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
    specialized _convertToAnyHashable<A>(_:)(v100);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v99, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    if (*((void *)&v1091 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v101 = (char *)*((void *)&v1086 + 1);
        v1063 = (char *)v1086;
LABEL_37:
        v1062 = v101;
        id v102 = [v56 metadata];
        uint64_t v103 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v104 = MOSuggestionAssetMetadataKeyWorkoutDuration;
        specialized _convertToAnyHashable<A>(_:)(v104);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v103, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          int v105 = swift_dynamicCast();
          uint64_t v106 = v1072;
          uint64_t v107 = v1074;
          if (v105) {
            uint64_t v108 = v1086;
          }
          else {
            uint64_t v108 = 0;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
          uint64_t v108 = 0;
          uint64_t v106 = v1072;
          uint64_t v107 = v1074;
        }
        id v109 = [v59 renderedRouteMap];
        v1070 = v57;
        uint64_t v1074 = v108;
        if (v109)
        {
          uint64_t v110 = v109;
          id v111 = [v56 identifier];
          id v1073 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
          v1072 = v112;

          uint64_t v113 = (void *)MOSuggestionAssetsTypeRoutePreview;
          uint64_t v114 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v1077, 1, 1, v114);
          uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v1078, 1, 1, v115);
          long long v1083 = 0u;
          long long v1084 = 0u;
          char v1085 = 1;
          int v116 = 11;
          if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v107 + 16) > v1075) {
            int v116 = *(unsigned __int8 *)(v107 + v1075 + 32);
          }
          LODWORD(v1057) = v116;
          swift_retain();
          uint64_t v1075 = v110;
          id v117 = v113;
          swift_bridgeObjectRelease();
          ((void (**)(char *, uint64_t, uint64_t, uint64_t))v106)[7](v1079, 1, 1, v63);
          uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          uint64_t v1061 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          LODWORD(v1060) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          uint64_t v1059 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1058 = (char *)v118;
          uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1055 = v119;
          uint64_t v1054 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          id v1053 = v120;
          uint64_t v1052 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1051 = v121;
          v1049 = (void *)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1046 = v122;
          LODWORD(v1045) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          LODWORD(v1044) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          uint64_t v1043 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1042 = v123;
          uint64_t v124 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
          uint64_t v125 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v127 = v126;
          uint64_t v128 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          id v1050 = v110;
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1048 = v113;
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          type metadata accessor for MOSuggestionSheetAssetViewModel(0);
          swift_allocObject();
          unint64_t v54 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1073, (uint64_t)v1072, (uint64_t)v1076, 0, 0, v1050, 0, v1048, 9, 0, v1071, 0, 0, (uint64_t)v1077, v1061, v1060 & 1, v1059, (uint64_t)v1058, v1056,
                  v1055,
                  (uint64_t)v1068,
                  v1067,
                  0,
                  0,
                  v1054,
                  (uint64_t)v1053,
                  v1052,
                  v1051,
                  (uint64_t)v1049,
                  0,
                  0,
                  0,
                  0,
                  v1047,
                  v1046,
                  (uint64_t)v1078,
                  (uint64_t)v1066,
                  (uint64_t)v1065,
                  v1074,
                  0,
                  *((uint64_t *)&v1064 + 1),
                  v1064,
                  (uint64_t)v1063,
                  (uint64_t)v1062,
                  v1045 & 1,
                  (uint64_t)&v1083,
                  (uint64_t)&v1083,
                  (uint64_t)&v1083,
                  (char)v1057,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  v1044 & 1,
                  0,
                  v1043,
                  (uint64_t)v1042,
                  v124,
                  v125,
                  v127,
                  v128);
          swift_unknownObjectRelease();

          return v54;
        }
        id v129 = [v56 identifier];
        unint64_t v130 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v132 = v131;

        uint64_t v133 = (void *)MOSuggestionAssetsTypeSystemImage;
        uint64_t v134 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v1077, 1, 1, v134);
        uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v1078, 1, 1, v135);
        long long v1083 = 0u;
        long long v1084 = 0u;
        char v1085 = 1;
        int v136 = 11;
        id v1073 = v130;
        v1072 = v132;
        if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v107 + 16) > v1075) {
          int v136 = *(unsigned __int8 *)(v107 + v1075 + 32);
        }
        LODWORD(v1056) = v136;
        swift_retain();
        id v137 = v133;
        swift_bridgeObjectRelease();
        ((void (**)(char *, uint64_t, uint64_t, uint64_t))v106)[7](v1079, 1, 1, v63);
        uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1061) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        uint64_t v1060 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1059 = v138;
        v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1057 = v139;
        uint64_t v1055 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1054 = v140;
        id v1053 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1052 = v141;
        uint64_t v1051 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1049 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1048 = v142;
        LODWORD(v1047) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        LODWORD(v1046) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1044 = v143;
        uint64_t v144 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
        uint64_t v145 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v147 = v146;
        uint64_t v148 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        id v1050 = v133;
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        swift_allocObject();
        long long v149 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1073, (uint64_t)v1072, (uint64_t)v1076, v1069, 0, 0, 0, v1050, 7, 0, v1075, 0, 0, (uint64_t)v1077, v1071, v1061 & 1, v1060, v1059, (uint64_t)v1058,
                 (uint64_t)v1057,
                 (uint64_t)v1068,
                 v1067,
                 0,
                 0,
                 v1055,
                 v1054,
                 (uint64_t)v1053,
                 v1052,
                 v1051,
                 0,
                 0,
                 0,
                 0,
                 (uint64_t)v1049,
                 (uint64_t)v1048,
                 (uint64_t)v1078,
                 (uint64_t)v1066,
                 (uint64_t)v1065,
                 v1074,
                 0,
                 *((uint64_t *)&v1064 + 1),
                 v1064,
                 (uint64_t)v1063,
                 (uint64_t)v1062,
                 v1047 & 1,
                 (uint64_t)&v1083,
                 (uint64_t)&v1083,
                 (uint64_t)&v1083,
                 v1056,
                 0,
                 0,
                 0,
                 0,
                 0,
                 1,
                 v1046 & 1,
                 0,
                 v1045,
                 v1044,
                 v144,
                 v145,
                 v147,
                 v148);
        goto LABEL_51;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
    }
    v1063 = 0;
    uint64_t v101 = (char *)0xE000000000000000;
    goto LABEL_37;
  }
  uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v88 = v87;
  if (v86 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v88 == v89)
  {
    swift_bridgeObjectRelease_n();
LABEL_53:

    uint64_t v151 = v1073;
    id v152 = [v1073 content];
    self;
    uint64_t v153 = (char *)swift_dynamicCastObjCClass();
    if (v153)
    {
      v1070 = v153;
      id v154 = [v151 metadata];
      uint64_t v155 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v156 = MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesWithUnit;
      specialized _convertToAnyHashable<A>(_:)(v156);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v155, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v157 = (char *)*((void *)&v1086 + 1);
          v1069 = (char *)v1086;
          goto LABEL_68;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      v1069 = 0;
      uint64_t v157 = (char *)0xE000000000000000;
LABEL_68:
      v1068 = v157;
      id v173 = [v151 metadata];
      uint64_t v174 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v175 = MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
      specialized _convertToAnyHashable<A>(_:)(v175);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v174, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v1067 = v1086;
          goto LABEL_73;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      uint64_t v1067 = 0;
LABEL_73:
      id v176 = [v151 metadata];
      uint64_t v177 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v178 = MOSuggestionAssetMetadataKeyWorkoutGroupCount;
      specialized _convertToAnyHashable<A>(_:)(v178);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v177, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v179 = v1086;
          goto LABEL_78;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      uint64_t v179 = 0;
LABEL_78:
      id v180 = [v151 metadata];
      uint64_t v181 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v182 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
      specialized _convertToAnyHashable<A>(_:)(v182);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v181, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        int v183 = swift_dynamicCast();
        double v184 = v1072;
        uint64_t v185 = v1071;
        if (v183)
        {
          uint64_t v186 = (char *)*((void *)&v1086 + 1);
          uint64_t v187 = (void (**)(void, void, void, void))v1086;
          goto LABEL_83;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        double v184 = v1072;
        uint64_t v185 = v1071;
      }
      uint64_t v187 = 0;
      uint64_t v186 = (char *)0xE000000000000000;
LABEL_83:
      v1066 = v186;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v188._uint64_t countAndFlagsBits = 0;
      v188._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v188);
      *(void *)&long long v1083 = v179;
      specialized formatSpecifier<A>(_:)();
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      swift_bridgeObjectRelease();
      v189._uint64_t countAndFlagsBits = 0x74756F6B726F5720;
      v189._object = (void *)0xE900000000000073;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v189);
      uint64_t v190 = String.LocalizationValue.init(stringInterpolation:)();
      default argument 3 of String.init(localized:table:bundle:locale:comment:)(v190);
      uint64_t v191 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v193 = v192;
      id v194 = [v151 identifier];
      v195 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v197 = v196;

      v198 = (void *)MOSuggestionAssetsTypeWorkoutGroup;
      uint64_t v199 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v199 - 8) + 56))(v1077, 1, 1, v199);
      uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v200 - 8) + 56))(v1078, 1, 1, v200);
      long long v1083 = 0u;
      long long v1084 = 0u;
      char v1085 = 1;
      int v201 = 11;
      v1072 = v187;
      v1065 = (char *)v191;
      id v1073 = v195;
      *((void *)&v1064 + 1) = v197;
      *(void *)&long long v1064 = v193;
      if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075) {
        int v201 = *(unsigned __int8 *)(v1074 + v1075 + 32);
      }
      LODWORD(v1059) = v201;
      swift_retain();
      id v232 = v198;
      swift_bridgeObjectRelease();
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v184)[7](v1079, 1, 1, v185);
      uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1071) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1062 = v233;
      uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1060 = v234;
      v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1057 = v235;
      uint64_t v1055 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1054 = v236;
      id v1053 = (id)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1052 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1051 = v237;
      LODWORD(v1050) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1049) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1048 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1047 = v238;
      uint64_t v239 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v240 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1056 = (uint64_t)v198;
      uint64_t v242 = v241;
      uint64_t v243 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject();
      uint64_t v1030 = v243;
      uint64_t v1028 = v240;
      uint64_t v1029 = v242;
      uint64_t v1027 = v239;
      uint64_t v1026 = v1047;
      uint64_t v1025 = (uint64_t)v1048;
      v1024 = v1070;
      LOBYTE(v1023) = 1;
      char v1020 = v1059;
      uint64_t v1016 = (uint64_t)v1066;
      uint64_t v1015 = (uint64_t)v1072;
      HIBYTE(v1023) = v1049 & 1;
      v1019 = &v1083;
      v1018 = &v1083;
      char v1017 = v1050 & 1;
      uint64_t v1013 = 0;
      uint64_t v1014 = 0xE000000000000000;
      char v1012 = 0;
      uint64_t v1011 = v1067;
      uint64_t v1010 = (uint64_t)v1068;
      uint64_t v1009 = (uint64_t)v1069;
      uint64_t v1008 = (uint64_t)v1078;
      uint64_t v1007 = v1051;
      uint64_t v1006 = v1052;
      long long v1005 = 0u;
      long long v1004 = 0u;
      uint64_t v1003 = (uint64_t)v1053;
      uint64_t v1002 = v1054;
      uint64_t v1001 = v1055;
      v1000 = v1057;
      v999 = v1058;
      long long v998 = 0u;
      uint64_t v997 = v1064;
      uint64_t v996 = (uint64_t)v1065;
      uint64_t v995 = v1060;
      uint64_t v994 = v1061;
      uint64_t v993 = (uint64_t)v1062;
      v992 = v1063;
      char v991 = v1071 & 1;
      uint64_t v990 = v1074;
      uint64_t v989 = (uint64_t)v1077;
      long long v988 = 0u;
      v986 = 0;
      uint64_t v987 = v1075;
      char v985 = 10;
      long long v1022 = 0u;
      long long v1021 = 0u;
      uint64_t v244 = (uint64_t)v1073;
      uint64_t v245 = *((void *)&v1064 + 1);
      v246 = v1076;
      v247 = 0;
      v248 = (char *)&v1083 + 8;
      goto LABEL_90;
    }
    swift_bridgeObjectRelease();
    goto LABEL_144;
  }
  char v150 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v150) {
    goto LABEL_53;
  }
  uint64_t v158 = (void *)MOSuggestionAssetsTypeMotionActivity;
  id v159 = v45;
  id v160 = v158;
  char v161 = specialized == infix<A>(_:_:)();

  if (v161)
  {

    unint64_t v162 = v1073;
    id v163 = [v1073 metadata];
    uint64_t v164 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v165 = MOSuggestionAssetMetadataKeyMotionActivityType;
    specialized _convertToAnyHashable<A>(_:)(v165);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v164, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    if (!*((void *)&v1091 + 1))
    {
LABEL_112:
      swift_bridgeObjectRelease();
      outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      return 0;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_114:
      swift_bridgeObjectRelease();
      return 0;
    }
    long long v166 = v1086;
    id v167 = [v162 metadata];
    uint64_t v168 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v169 = MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
    specialized _convertToAnyHashable<A>(_:)(v169);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v168, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    if (*((void *)&v1091 + 1))
    {
      type metadata accessor for MOSuggestionAssetMotionActivityType(0);
      if (swift_dynamicCast())
      {
        v1068 = (char *)v166;
        uint64_t v170 = (void *)v1086;
        id v171 = [v162 content];
        self;
        uint64_t v172 = (char *)swift_dynamicCastObjCClass();
        if (v172)
        {
          v1070 = v172;
        }
        else
        {
          swift_unknownObjectRelease();
          v1070 = 0;
        }
        id v314 = [v162 content];
        self;
        v315 = (char *)swift_dynamicCastObjCClass();
        if (v315)
        {
          v1069 = v315;
        }
        else
        {
          swift_unknownObjectRelease();
          v1069 = 0;
        }
        id v316 = [v162 metadata];
        uint64_t v317 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v318 = MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
        specialized _convertToAnyHashable<A>(_:)(v318);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v317, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          char v319 = swift_dynamicCast();
          v320 = v1072;
          if ((v319 & 1) == 0) {
            long long v1086 = 0uLL;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
          long long v1086 = 0uLL;
          v320 = v1072;
        }
        v321 = (void *)MOSuggestionAssetMotionActivityTypeWalking;
        id v322 = v170;
        id v323 = v321;
        char v324 = specialized == infix<A>(_:_:)();

        if (v324)
        {
          int v325 = 17;
          uint64_t v326 = v1071;
        }
        else
        {
          v327 = (void *)MOSuggestionAssetMotionActivityTypeRunning;
          id v328 = v322;
          id v329 = v327;
          char v330 = specialized == infix<A>(_:_:)();

          uint64_t v326 = v1071;
          if (v330)
          {
            int v325 = 18;
          }
          else
          {
            v338 = (void *)MOSuggestionAssetMotionActivityTypeRunningWalking;
            id v339 = v328;
            id v340 = v338;
            char v341 = specialized == infix<A>(_:_:)();

            if (v341) {
              int v325 = 19;
            }
            else {
              int v325 = 26;
            }
          }
        }
        if (*((void *)&v1086 + 1))
        {
          LODWORD(v1066) = v325;
          long long v1064 = v1086;
          swift_bridgeObjectRetain();
          id v342 = [v162 identifier];
          id v1073 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
          v1065 = (char *)v343;

          v344 = (void *)MOSuggestionAssetsTypeMotionActivity;
          uint64_t v345 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v345 - 8) + 56))(v1077, 1, 1, v345);
          uint64_t v346 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v346 - 8) + 56))(v1078, 1, 1, v346);
          long long v1083 = 0u;
          long long v1084 = 0u;
          char v1085 = 1;
          int v347 = 11;
          uint64_t v1067 = *((void *)&v166 + 1);
          v1072 = (void (**)(void, void, void, void))v166;
          if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075) {
            int v347 = *(unsigned __int8 *)(v1074 + v1075 + 32);
          }
          LODWORD(v1059) = v347;
          swift_retain();
          id v377 = v344;
          swift_bridgeObjectRelease();
          ((void (**)(char *, uint64_t, uint64_t, uint64_t))v320)[7](v1079, 1, 1, v326);
          uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          LODWORD(v1071) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1062 = v378;
          uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1060 = v379;
          v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1057 = v380;
          uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1055 = v381;
          uint64_t v1054 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          id v1053 = v382;
          uint64_t v1052 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          uint64_t v1051 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          id v1050 = v383;
          v1048 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1047 = v384;
          uint64_t v1046 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
          LODWORD(v1044) = v385 & 1;
          uint64_t v1043 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1042 = v386;
          uint64_t v1040 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1039 = v387;
          LODWORD(v1045) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          LODWORD(v1041) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          uint64_t v1038 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1037 = v388;
          uint64_t v389 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
          uint64_t v390 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1049 = v344;
          uint64_t v391 = v390;
          uint64_t v393 = v392;
          uint64_t v394 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          type metadata accessor for MOSuggestionSheetAssetViewModel(0);
          swift_allocObject();
          unint64_t v54 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1073, (uint64_t)v1065, (uint64_t)v1076, v1070, 0, 0, 0, v1049, (char)v1066, 0, v1075, 0, 0, (uint64_t)v1077, v1074, v1071 & 1, (uint64_t)v1063, (uint64_t)v1062, v1061,
                  v1060,
                  (uint64_t)v1058,
                  (uint64_t)v1057,
                  0,
                  0,
                  v1056,
                  v1055,
                  v1054,
                  (uint64_t)v1053,
                  v1052,
                  (uint64_t)v1068,
                  v1067,
                  v1064,
                  *((uint64_t *)&v1064 + 1),
                  v1051,
                  (uint64_t)v1050,
                  (uint64_t)v1078,
                  (uint64_t)v1048,
                  v1047,
                  v1046,
                  v1044,
                  v1043,
                  (uint64_t)v1042,
                  v1040,
                  v1039,
                  v1045 & 1,
                  (uint64_t)&v1083,
                  (uint64_t)&v1083,
                  (uint64_t)&v1083,
                  v1059,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  v1041 & 1,
                  v1069,
                  v1038,
                  v1037,
                  v389,
                  v391,
                  v393,
                  v394);

          swift_bridgeObjectRelease();
          return v54;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_113;
    }
LABEL_111:
    swift_bridgeObjectRelease();
    goto LABEL_112;
  }
  v202 = (void *)MOSuggestionAssetsTypeActivityRings;
  id v203 = v159;
  id v204 = v202;
  char v205 = specialized == infix<A>(_:_:)();

  v206 = v1072;
  uint64_t v207 = v1071;
  if (v205)
  {
    swift_bridgeObjectRelease();

    v208 = v1073;
    id v209 = [v1073 content];
    self;
    uint64_t v210 = swift_dynamicCastObjCClass();
    if (v210)
    {
      uint64_t v1075 = v210;
      id v211 = [v208 identifier];
      uint64_t v1074 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v1070 = v212;

      swift_retain();
      swift_unknownObjectRetain();
      id v1073 = [v208 assetType];
      uint64_t v213 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v213 - 8) + 56))(v1077, 1, 1, v213);
      uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v214 - 8) + 56))(v1078, 1, 1, v214);
      long long v1083 = 0u;
      long long v1084 = 0u;
      char v1085 = 1;
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v206)[7](v1079, 1, 1, v207);
      v1072 = (void (**)(void, void, void, void))variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1069) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1068 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1067 = v215;
      v1066 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1065 = (char *)v216;
      *((void *)&v1064 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(void *)&long long v1064 = v217;
      v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1062 = v218;
      uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1060 = v219;
      uint64_t v1059 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1057 = v220;
      uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1054 = v221;
      id v1053 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1052) = v222 & 1;
      id v1050 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1049 = v223;
      uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1046 = v224;
      LODWORD(v1051) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1048) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1044 = v225;
      uint64_t v226 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v227 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v229 = v228;
      uint64_t v230 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1055 = (uint64_t)v209;
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject();
      v231 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1074, (uint64_t)v1070, (uint64_t)v1076, 0, (void *)v1075, 0, 0, v1073, 26, 0, (uint64_t)v1072, 0, 0, (uint64_t)v1077, v1071, v1069 & 1, (uint64_t)v1068, v1067, (uint64_t)v1066,
               (uint64_t)v1065,
               *((uint64_t *)&v1064 + 1),
               v1064,
               0,
               0,
               (uint64_t)v1063,
               (uint64_t)v1062,
               v1061,
               v1060,
               v1059,
               0,
               0,
               0,
               0,
               (uint64_t)v1058,
               (uint64_t)v1057,
               (uint64_t)v1078,
               v1056,
               v1054,
               (uint64_t)v1053,
               v1052,
               (uint64_t)v1050,
               (uint64_t)v1049,
               v1047,
               v1046,
               v1051 & 1,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               11,
               0,
               0,
               0,
               0,
               0,
               1,
               v1048 & 1,
               0,
               v1045,
               v1044,
               v226,
               v227,
               v229,
               v230);
LABEL_96:
      unint64_t v54 = v231;
      goto LABEL_362;
    }
    goto LABEL_144;
  }
  v251 = (void *)MOSuggestionAssetsTypeAppIcon;
  id v252 = v203;
  id v253 = v251;
  char v254 = specialized == infix<A>(_:_:)();

  if (v254)
  {
    swift_bridgeObjectRelease();

    v255 = v1073;
    id v256 = [v1073 content];
    self;
    uint64_t v257 = swift_dynamicCastObjCClass();
    if (v257)
    {
      uint64_t v1075 = v257;
      id v258 = [v255 identifier];
      uint64_t v1074 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v1070 = v259;

      swift_retain();
      swift_unknownObjectRetain();
      id v1073 = [v255 assetType];
      uint64_t v260 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v260 - 8) + 56))(v1077, 1, 1, v260);
      uint64_t v261 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v261 - 8) + 56))(v1078, 1, 1, v261);
      long long v1083 = 0u;
      long long v1084 = 0u;
      char v1085 = 1;
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v206)[7](v1079, 1, 1, v207);
      v1072 = (void (**)(void, void, void, void))variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1069) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1068 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1067 = v262;
      v1066 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1065 = (char *)v263;
      *((void *)&v1064 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(void *)&long long v1064 = v264;
      v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1062 = v265;
      uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1060 = v266;
      uint64_t v1059 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1057 = v267;
      uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1054 = v268;
      id v1053 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1052) = v269 & 1;
      id v1050 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1049 = v270;
      uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1046 = v271;
      LODWORD(v1051) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1048) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1044 = v272;
      uint64_t v273 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v274 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v276 = v275;
      uint64_t v277 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1055 = (uint64_t)v256;
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject();
      v231 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1074, (uint64_t)v1070, (uint64_t)v1076, (void *)v1075, 0, 0, 0, v1073, 26, 0, (uint64_t)v1072, 0, 0, (uint64_t)v1077, v1071, v1069 & 1, (uint64_t)v1068, v1067, (uint64_t)v1066,
               (uint64_t)v1065,
               *((uint64_t *)&v1064 + 1),
               v1064,
               0,
               0,
               (uint64_t)v1063,
               (uint64_t)v1062,
               v1061,
               v1060,
               v1059,
               0,
               0,
               0,
               0,
               (uint64_t)v1058,
               (uint64_t)v1057,
               (uint64_t)v1078,
               v1056,
               v1054,
               (uint64_t)v1053,
               v1052,
               (uint64_t)v1050,
               (uint64_t)v1049,
               v1047,
               v1046,
               v1051 & 1,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               11,
               0,
               0,
               0,
               0,
               0,
               1,
               v1048 & 1,
               0,
               v1045,
               v1044,
               v273,
               v274,
               v276,
               v277);
      goto LABEL_96;
    }
LABEL_144:
    swift_unknownObjectRelease();
    return 0;
  }
  v278 = (void *)MOSuggestionAssetsTypeSystemImage;
  id v279 = v252;
  id v280 = v278;
  char v281 = specialized == infix<A>(_:_:)();

  if (v281)
  {
    swift_bridgeObjectRelease();

    v282 = v1073;
    v283 = (char *)[v1073 content];
    self;
    uint64_t v284 = swift_dynamicCastObjCClass();
    if (!v284) {
      goto LABEL_144;
    }
    uint64_t v1075 = v284;
    id v285 = [v1076[2] metaData];
    if (v285)
    {
      v286 = v285;
      id v287 = [v285 __swift_objectForKeyedSubscript:specialized _bridgeAnythingToObjectiveC<A>(_:)()];
      swift_unknownObjectRelease();

      if (v287)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v1091 = 0u;
        long long v1090 = 0u;
      }
      outlined init with take of Date?((uint64_t)&v1090, (uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
      if (*((void *)&v1084 + 1))
      {
        if (swift_dynamicCast())
        {
          v348 = (char *)*((void *)&v1090 + 1);
          uint64_t v1074 = v1090;
LABEL_151:
          v1070 = v348;
          id v349 = [v282 identifier];
          v1069 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          v1068 = v350;

          swift_retain();
          swift_unknownObjectRetain();
          id v1073 = [v282 assetType];
          uint64_t v351 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v351 - 8) + 56))(v1077, 1, 1, v351);
          uint64_t v352 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v352 - 8) + 56))(v1078, 1, 1, v352);
          long long v1083 = 0u;
          long long v1084 = 0u;
          char v1085 = 1;
          ((void (**)(char *, uint64_t, uint64_t, uint64_t))v206)[7](v1079, 1, 1, v207);
          v1072 = (void (**)(void, void, void, void))variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          LODWORD(v1067) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          v1066 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1065 = (char *)v353;
          *((void *)&v1064 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          *(void *)&long long v1064 = v354;
          v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1062 = v355;
          uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1060 = v356;
          uint64_t v1059 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v1057 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1056 = v357;
          uint64_t v1055 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1054 = v358;
          id v1053 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
          LODWORD(v1052) = v359 & 1;
          id v1050 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1049 = v360;
          uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1046 = v361;
          LODWORD(v1051) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          LODWORD(v1048) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1044 = v362;
          uint64_t v363 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
          uint64_t v364 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1058 = v283;
          uint64_t v365 = v364;
          uint64_t v367 = v366;
          uint64_t v368 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          type metadata accessor for MOSuggestionSheetAssetViewModel(0);
          swift_allocObject();
          unint64_t v54 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1069, (uint64_t)v1068, (uint64_t)v1076, (void *)v1075, 0, 0, 0, v1073, 26, 0, (uint64_t)v1072, 0, 0, (uint64_t)v1077, v1071, v1067 & 1, (uint64_t)v1066, (uint64_t)v1065, *((uint64_t *)&v1064 + 1),
                  v1064,
                  v1074,
                  (uint64_t)v1070,
                  0,
                  0,
                  (uint64_t)v1063,
                  (uint64_t)v1062,
                  v1061,
                  v1060,
                  v1059,
                  0,
                  0,
                  0,
                  0,
                  (uint64_t)v1057,
                  v1056,
                  (uint64_t)v1078,
                  v1055,
                  v1054,
                  (uint64_t)v1053,
                  v1052,
                  (uint64_t)v1050,
                  (uint64_t)v1049,
                  v1047,
                  v1046,
                  v1051 & 1,
                  (uint64_t)&v1083,
                  (uint64_t)&v1083,
                  (uint64_t)&v1083,
                  11,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  v1048 & 1,
                  0,
                  v1045,
                  v1044,
                  v363,
                  v365,
                  v367,
                  v368);
          goto LABEL_362;
        }
LABEL_150:
        uint64_t v1074 = 0;
        v348 = (char *)0xE000000000000000;
        goto LABEL_151;
      }
    }
    else
    {
      long long v1083 = 0u;
      long long v1084 = 0u;
    }
    outlined destroy of Any?((uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
    goto LABEL_150;
  }
  v288 = (void *)MOSuggestionAssetsTypeContactPhoto;
  id v289 = v279;
  id v290 = v288;
  char v291 = specialized == infix<A>(_:_:)();

  if ((v291 & 1) == 0)
  {
    v307 = (void *)MOSuggestionAssetsTypePhoto;
    id v308 = v289;
    id v309 = v307;
    char v310 = specialized == infix<A>(_:_:)();

    if (v310)
    {
      swift_bridgeObjectRelease();

      v311 = v1073;
      id v312 = [v1073 content];
      self;
      v313 = (char *)swift_dynamicCastObjCClass();
      if (v313)
      {
        v1078 = v313;
      }
      else
      {
        swift_unknownObjectRelease();
        v1078 = 0;
      }
      id v403 = [v311 identifier];
      v1077 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v1075 = v404;

      v405 = (void *)MOSuggestionAssetsTypePhoto;
      uint64_t v406 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v406 - 8) + 56))(v1069, 1, 1, v406);
      uint64_t v407 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v407 - 8) + 56))(v1070, 1, 1, v407);
      uint64_t v1074 = v405;
      id v408 = [v311 metadata];
      uint64_t v409 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v410 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
      specialized _convertToAnyHashable<A>(_:)(v410);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v409, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        if (swift_dynamicCast())
        {
          v411 = (void *)v1086;
          [(id)v1086 cgRect];
          uint64_t v413 = v412;
          uint64_t v415 = v414;
          uint64_t v417 = v416;
          uint64_t v419 = v418;

          char v420 = 0;
          goto LABEL_178;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      char v420 = 1;
      uint64_t v413 = 0;
      uint64_t v415 = 0;
      uint64_t v417 = 0;
      uint64_t v419 = 0;
LABEL_178:
      *(void *)&long long v1086 = v413;
      *((void *)&v1086 + 1) = v415;
      uint64_t v1087 = v417;
      uint64_t v1088 = v419;
      char v1089 = v420;
      id v421 = [v311 metadata];
      uint64_t v422 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v423 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
      specialized _convertToAnyHashable<A>(_:)(v423);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v422, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        if (swift_dynamicCast())
        {
          v424 = (void *)v1081;
          [(id)v1081 cgRect];
          uint64_t v426 = v425;
          uint64_t v428 = v427;
          uint64_t v430 = v429;
          uint64_t v432 = v431;

          char v433 = 0;
          goto LABEL_183;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      char v433 = 1;
      uint64_t v426 = 0;
      uint64_t v428 = 0;
      uint64_t v430 = 0;
      uint64_t v432 = 0;
LABEL_183:
      *(void *)&long long v1090 = v426;
      *((void *)&v1090 + 1) = v428;
      *(void *)&long long v1091 = v430;
      *((void *)&v1091 + 1) = v432;
      char v1092 = v433;
      id v434 = [v311 metadata];
      uint64_t v435 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v436 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
      specialized _convertToAnyHashable<A>(_:)(v436);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v435, &v1081);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (v1082)
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        if (swift_dynamicCast())
        {
          id v437 = v1080;
          [v1080 cgRect];
          uint64_t v439 = v438;
          uint64_t v441 = v440;
          uint64_t v443 = v442;
          uint64_t v445 = v444;

          char v446 = 0;
LABEL_188:
          *(void *)&long long v1083 = v439;
          *((void *)&v1083 + 1) = v441;
          *(void *)&long long v1084 = v443;
          *((void *)&v1084 + 1) = v445;
          char v1085 = v446;
          ((void (**)(char *, uint64_t, uint64_t, uint64_t))v206)[7](v1079, 1, 1, v207);
          uint64_t v1060 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          id v1073 = (id)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          LODWORD(v1072) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          uint64_t v1071 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1068 = v447;
          uint64_t v1067 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1066 = v448;
          v1065 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          *((void *)&v1064 + 1) = v449;
          *(void *)&long long v1064 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1063 = v450;
          v1062 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1061 = v451;
          uint64_t v1059 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1057 = v452;
          uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1055 = v453;
          uint64_t v1054 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
          LODWORD(v1053) = v454 & 1;
          id v1050 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          v1049 = v455;
          uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1046 = v456;
          LODWORD(v1052) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          LODWORD(v1048) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
          uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v1044 = v457;
          uint64_t v1043 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
          v1042 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          uint64_t v459 = v458;
          uint64_t v460 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
          variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
          type metadata accessor for MOSuggestionSheetAssetViewModel(0);
          uint64_t v1051 = swift_allocObject();
          v461 = v1076;
          swift_retain();
          uint64_t v1030 = v460;
          uint64_t v1029 = v459;
          uint64_t v1028 = (uint64_t)v1042;
          uint64_t v1027 = v1043;
          uint64_t v1026 = v1044;
          uint64_t v1025 = v1045;
          LOBYTE(v1023) = 1;
          uint64_t v1016 = v1046;
          uint64_t v1015 = v1047;
          uint64_t v1014 = (uint64_t)v1049;
          uint64_t v1013 = (uint64_t)v1050;
          v1024 = 0;
          HIBYTE(v1023) = v1048 & 1;
          char v1020 = 11;
          v1018 = &v1086;
          v1019 = &v1090;
          char v1017 = v1052 & 1;
          char v1012 = (char)v1053;
          uint64_t v1011 = v1054;
          uint64_t v1010 = v1055;
          uint64_t v1009 = v1056;
          uint64_t v1008 = (uint64_t)v1070;
          uint64_t v1007 = (uint64_t)v1057;
          uint64_t v1006 = (uint64_t)v1058;
          long long v1005 = 0u;
          long long v1004 = 0u;
          uint64_t v1003 = v1059;
          uint64_t v1002 = v1061;
          uint64_t v1001 = (uint64_t)v1062;
          v1000 = v1063;
          v999 = (char *)v1064;
          long long v998 = 0u;
          uint64_t v997 = *((void *)&v1064 + 1);
          uint64_t v996 = (uint64_t)v1065;
          uint64_t v995 = (uint64_t)v1066;
          uint64_t v994 = v1067;
          uint64_t v993 = (uint64_t)v1068;
          v992 = (char *)v1071;
          char v991 = v1072 & 1;
          uint64_t v990 = (uint64_t)v1073;
          uint64_t v989 = (uint64_t)v1069;
          long long v988 = 0u;
          v986 = 0;
          uint64_t v987 = v1060;
          char v985 = 12;
          long long v1022 = 0u;
          long long v1021 = 0u;
          uint64_t v244 = (uint64_t)v1077;
          uint64_t v245 = v1075;
          v246 = v461;
          v247 = v1078;
          v462 = &v1095;
LABEL_223:
          v249 = (void *)*(v462 - 32);
          return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v244, v245, (uint64_t)v246, v247, 0, 0, 0, v249, v985, v986, v987, v988, *((uint64_t *)&v988 + 1), v989, v990, v991, (uint64_t)v992, v993, v994,
                   v995,
                   v996,
                   v997,
                   (void *)v998,
                   *((void **)&v998 + 1),
                   (uint64_t)v999,
                   (uint64_t)v1000,
                   v1001,
                   v1002,
                   v1003,
                   v1004,
                   *((uint64_t *)&v1004 + 1),
                   v1005,
                   *((uint64_t *)&v1005 + 1),
                   v1006,
                   v1007,
                   v1008,
                   v1009,
                   v1010,
                   v1011,
                   v1012,
                   v1013,
                   v1014,
                   v1015,
                   v1016,
                   v1017,
                   (uint64_t)v1018,
                   (uint64_t)v1019,
                   (uint64_t)&v1083,
                   v1020,
                   v1021,
                   *((uint64_t *)&v1021 + 1),
                   v1022,
                   *((uint64_t *)&v1022 + 1),
                   0,
                   v1023,
                   SHIBYTE(v1023),
                   v1024,
                   v1025,
                   v1026,
                   v1027,
                   v1028,
                   v1029,
                   v1030);
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1081, &demangling cache variable for type metadata for Any?);
      }
      char v446 = 1;
      uint64_t v439 = 0;
      uint64_t v441 = 0;
      uint64_t v443 = 0;
      uint64_t v445 = 0;
      goto LABEL_188;
    }
    v331 = (void *)MOSuggestionAssetsTypeLivePhoto;
    id v332 = v308;
    id v333 = v331;
    char v334 = specialized == infix<A>(_:_:)();

    if (v334)
    {

      v335 = v1073;
      id v336 = [v1073 content];
      self;
      v337 = (void *)swift_dynamicCastObjCClass();
      if (v337)
      {
        v1042 = v337;
      }
      else
      {
        swift_unknownObjectRelease();
        v1042 = 0;
      }
      id v493 = [v335 identifier];
      v1078 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      v1077 = v494;

      v495 = (void *)MOSuggestionAssetsTypeLivePhoto;
      uint64_t v496 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v496 - 8) + 56))(v1067, 1, 1, v496);
      uint64_t v497 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v497 - 8) + 56))(v1068, 1, 1, v497);
      v1070 = v495;
      id v498 = [v335 metadata];
      uint64_t v499 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v500 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
      specialized _convertToAnyHashable<A>(_:)(v500);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v499, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        if (swift_dynamicCast())
        {
          v501 = (void *)v1086;
          [(id)v1086 cgRect];
          uint64_t v503 = v502;
          uint64_t v505 = v504;
          uint64_t v507 = v506;
          uint64_t v509 = v508;

          char v510 = 0;
          goto LABEL_209;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      char v510 = 1;
      uint64_t v503 = 0;
      uint64_t v505 = 0;
      uint64_t v507 = 0;
      uint64_t v509 = 0;
LABEL_209:
      *(void *)&long long v1086 = v503;
      *((void *)&v1086 + 1) = v505;
      uint64_t v1087 = v507;
      uint64_t v1088 = v509;
      char v1089 = v510;
      id v511 = [v335 metadata];
      uint64_t v512 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v513 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
      specialized _convertToAnyHashable<A>(_:)(v513);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v512, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        if (swift_dynamicCast())
        {
          v514 = (void *)v1081;
          [(id)v1081 cgRect];
          uint64_t v516 = v515;
          uint64_t v518 = v517;
          uint64_t v520 = v519;
          uint64_t v522 = v521;

          char v523 = 0;
          goto LABEL_214;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      char v523 = 1;
      uint64_t v516 = 0;
      uint64_t v518 = 0;
      uint64_t v520 = 0;
      uint64_t v522 = 0;
LABEL_214:
      *(void *)&long long v1090 = v516;
      *((void *)&v1090 + 1) = v518;
      *(void *)&long long v1091 = v520;
      *((void *)&v1091 + 1) = v522;
      char v1092 = v523;
      id v524 = [v335 metadata];
      uint64_t v525 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v526 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
      specialized _convertToAnyHashable<A>(_:)(v526);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v525, &v1081);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (v1082)
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        char v527 = swift_dynamicCast();
        uint64_t v528 = v1074;
        if (v527)
        {
          id v529 = v1080;
          [v1080 cgRect];
          uint64_t v531 = v530;
          uint64_t v533 = v532;
          uint64_t v535 = v534;
          uint64_t v537 = v536;

          char v538 = 0;
          goto LABEL_219;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1081, &demangling cache variable for type metadata for Any?);
        uint64_t v528 = v1074;
      }
      char v538 = 1;
      uint64_t v531 = 0;
      uint64_t v533 = 0;
      uint64_t v535 = 0;
      uint64_t v537 = 0;
LABEL_219:
      *(void *)&long long v1083 = v531;
      *((void *)&v1083 + 1) = v533;
      *(void *)&long long v1084 = v535;
      *((void *)&v1084 + 1) = v537;
      int v539 = 11;
      char v1085 = v538;
      if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v528 + 16) > v1075) {
        int v539 = *(unsigned __int8 *)(v528 + v1075 + 32);
      }
      LODWORD(v1064) = v539;
      swift_bridgeObjectRelease();
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v206)[7](v1079, 1, 1, v207);
      uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1073) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1072 = (void (**)(void, void, void, void))static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1071 = v540;
      v1069 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1066 = v541;
      v1065 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((void *)&v1064 + 1) = v542;
      v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1062 = v543;
      uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1060 = v544;
      uint64_t v1059 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1057 = v545;
      uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1055 = v546;
      uint64_t v1054 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1053) = v547 & 1;
      id v1050 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1049 = v548;
      uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1046 = v549;
      LODWORD(v1052) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1048) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1044 = v550;
      uint64_t v1043 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v551 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v553 = v552;
      uint64_t v554 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      uint64_t v1051 = swift_allocObject();
      v555 = v1076;
      swift_retain();
      uint64_t v1030 = v554;
      uint64_t v1028 = v551;
      uint64_t v1029 = v553;
      uint64_t v1027 = v1043;
      uint64_t v1026 = v1044;
      uint64_t v1025 = v1045;
      LOBYTE(v1023) = 1;
      char v1020 = v1064;
      uint64_t v1016 = v1046;
      uint64_t v1015 = v1047;
      uint64_t v1014 = (uint64_t)v1049;
      uint64_t v1013 = (uint64_t)v1050;
      v1024 = 0;
      HIBYTE(v1023) = v1048 & 1;
      v1018 = &v1086;
      v1019 = &v1090;
      char v1017 = v1052 & 1;
      char v1012 = (char)v1053;
      uint64_t v1011 = v1054;
      uint64_t v1010 = v1055;
      uint64_t v1009 = v1056;
      uint64_t v1008 = (uint64_t)v1068;
      uint64_t v1007 = (uint64_t)v1057;
      uint64_t v1006 = (uint64_t)v1058;
      long long v1005 = 0u;
      long long v1004 = 0u;
      uint64_t v1003 = v1059;
      uint64_t v1002 = v1060;
      uint64_t v1001 = v1061;
      v1000 = v1062;
      v999 = v1063;
      long long v998 = (unint64_t)v1042;
      uint64_t v997 = *((void *)&v1064 + 1);
      uint64_t v996 = (uint64_t)v1065;
      uint64_t v995 = (uint64_t)v1066;
      uint64_t v994 = (uint64_t)v1069;
      uint64_t v993 = v1071;
      v992 = (char *)v1072;
      char v991 = v1073 & 1;
      uint64_t v990 = v1074;
      uint64_t v989 = v1067;
      long long v988 = 0u;
      v986 = 0;
      uint64_t v987 = v1075;
      char v985 = 13;
      long long v1022 = 0u;
      long long v1021 = 0u;
      uint64_t v244 = (uint64_t)v1078;
      uint64_t v245 = (uint64_t)v1077;
      v246 = v555;
      v247 = 0;
      v462 = (uint64_t *)&v1093;
      goto LABEL_223;
    }
    v369 = (void *)MOSuggestionAssetsTypeVideo;
    id v370 = v332;
    id v371 = v369;
    char v372 = specialized == infix<A>(_:_:)();

    if (v372)
    {

      v373 = v1073;
      id v374 = [v1073 content];
      self;
      v375 = (void *)swift_dynamicCastObjCClass();
      if (v375)
      {
        v1042 = v375;
LABEL_155:
        LODWORD(v1077) = 0;
        if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075)
        {
          int v376 = *(unsigned __int8 *)(v1074 + v1075 + 32);
          if (v376 == 11
            || !specialized static MOSuggestionAssetTileSize.__derived_enum_equals(_:_:)(*(unsigned char *)(v1074 + v1075 + 32), 8u)&& ((*v1063 & 1) != 0 || (v376 - 2) < 9 && ((0x1BFu >> (v376 - 2)) & 1) != 0))
          {
            LODWORD(v1077) = 0;
          }
          else
          {
            LODWORD(v1077) = 1;
            char *v1063 = 1;
          }
        }
        v610 = v1073;
        id v611 = [v1073 identifier];
        v1070 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        v1069 = v612;

        v613 = (void *)MOSuggestionAssetsTypeVideo;
        uint64_t v614 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v614 - 8) + 56))(v1065, 1, 1, v614);
        uint64_t v615 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v615 - 8) + 56))(v1066, 1, 1, v615);
        v1068 = v613;
        id v616 = [v610 metadata];
        uint64_t v617 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v618 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
        specialized _convertToAnyHashable<A>(_:)(v618);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v617, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
          if (swift_dynamicCast())
          {
            v619 = (void *)v1086;
            [(id)v1086 cgRect];
            uint64_t v621 = v620;
            uint64_t v623 = v622;
            uint64_t v625 = v624;
            uint64_t v627 = v626;

            char v628 = 0;
            goto LABEL_246;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
        char v628 = 1;
        uint64_t v621 = 0;
        uint64_t v623 = 0;
        uint64_t v625 = 0;
        uint64_t v627 = 0;
LABEL_246:
        *(void *)&long long v1086 = v621;
        *((void *)&v1086 + 1) = v623;
        uint64_t v1087 = v625;
        uint64_t v1088 = v627;
        char v1089 = v628;
        id v629 = [v1073 metadata];
        uint64_t v630 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v631 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
        specialized _convertToAnyHashable<A>(_:)(v631);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v630, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
          if (swift_dynamicCast())
          {
            v632 = (void *)v1081;
            [(id)v1081 cgRect];
            uint64_t v634 = v633;
            uint64_t v636 = v635;
            uint64_t v638 = v637;
            uint64_t v640 = v639;

            char v641 = 0;
            goto LABEL_251;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
        char v641 = 1;
        uint64_t v634 = 0;
        uint64_t v636 = 0;
        uint64_t v638 = 0;
        uint64_t v640 = 0;
LABEL_251:
        *(void *)&long long v1090 = v634;
        *((void *)&v1090 + 1) = v636;
        *(void *)&long long v1091 = v638;
        *((void *)&v1091 + 1) = v640;
        char v1092 = v641;
        id v642 = [v1073 metadata];
        uint64_t v643 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v644 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
        specialized _convertToAnyHashable<A>(_:)(v644);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v643, &v1081);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (v1082)
        {
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
          if (swift_dynamicCast())
          {
            id v645 = v1080;
            [v1080 cgRect];
            uint64_t v647 = v646;
            uint64_t v649 = v648;
            uint64_t v651 = v650;
            uint64_t v653 = v652;

            char v654 = 0;
            goto LABEL_256;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1081, &demangling cache variable for type metadata for Any?);
        }
        char v654 = 1;
        uint64_t v647 = 0;
        uint64_t v649 = 0;
        uint64_t v651 = 0;
        uint64_t v653 = 0;
LABEL_256:
        *(void *)&long long v1083 = v647;
        *((void *)&v1083 + 1) = v649;
        *(void *)&long long v1084 = v651;
        *((void *)&v1084 + 1) = v653;
        LODWORD(v1078) = 11;
        char v1085 = v654;
        if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075) {
          LODWORD(v1078) = *(unsigned __int8 *)(v1074 + v1075 + 32);
        }
        swift_bridgeObjectRelease();
        ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
        uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1073) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1072 = (void (**)(void, void, void, void))static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1071 = v655;
        uint64_t v1067 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        *((void *)&v1064 + 1) = v656;
        *(void *)&long long v1064 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1063 = v657;
        v1062 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1061 = v658;
        uint64_t v1060 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1059 = v659;
        v1058 = (char *)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1057 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1056 = v660;
        uint64_t v1055 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1054 = v661;
        id v1053 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
        LODWORD(v1052) = v662 & 1;
        uint64_t v1051 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        id v1050 = v663;
        uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1046 = v664;
        LODWORD(v1048) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1044 = v665;
        uint64_t v1043 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
        uint64_t v666 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v668 = v667;
        uint64_t v669 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        v1049 = (void *)swift_allocObject();
        v670 = v1076;
        swift_retain();
        return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1070, (uint64_t)v1069, (uint64_t)v670, 0, 0, 0, 0, v1068, 14, 0, v1075, 0, 0, (uint64_t)v1065, v1074, v1073 & 1, (uint64_t)v1072, v1071, v1067,
                 *((uint64_t *)&v1064 + 1),
                 v1064,
                 (uint64_t)v1063,
                 0,
                 v1042,
                 (uint64_t)v1062,
                 v1061,
                 v1060,
                 v1059,
                 (uint64_t)v1058,
                 0,
                 0,
                 0,
                 0,
                 (uint64_t)v1057,
                 v1056,
                 (uint64_t)v1066,
                 v1055,
                 v1054,
                 (uint64_t)v1053,
                 v1052,
                 v1051,
                 (uint64_t)v1050,
                 v1047,
                 v1046,
                 (char)v1077,
                 (uint64_t)&v1086,
                 (uint64_t)&v1090,
                 (uint64_t)&v1083,
                 (char)v1078,
                 0,
                 0,
                 0,
                 0,
                 0,
                 1,
                 v1048 & 1,
                 0,
                 v1045,
                 v1044,
                 v1043,
                 v666,
                 v668,
                 v669);
      }
      swift_unknownObjectRelease();
      id v570 = [v373 content];
      self;
      v1078 = (char *)swift_dynamicCastObjCClass();
      if (!v1078)
      {
        swift_unknownObjectRelease();
        v1042 = 0;
        goto LABEL_155;
      }
      v571 = v1073;
      id v572 = [v1073 identifier];
      v1070 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      v1069 = v573;

      v574 = (void *)MOSuggestionAssetsTypeVideo;
      uint64_t v575 = type metadata accessor for URL();
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v575 - 8) + 56))(v1064, 1, 1, v575);
      uint64_t v576 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v576 - 8) + 56))(*((void *)&v1064 + 1), 1, 1, v576);
      v1068 = v574;
      id v577 = [v571 metadata];
      uint64_t v578 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v579 = MOSuggestionAssetMetadataKeyVideoDuration;
      specialized _convertToAnyHashable<A>(_:)(v579);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v578, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        int v580 = swift_dynamicCast();
        uint64_t v581 = v1086;
        if (!v580) {
          uint64_t v581 = 0;
        }
        uint64_t v1067 = v581;
        int v582 = v580 ^ 1;
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        uint64_t v1067 = 0;
        int v582 = 1;
      }
      LODWORD(v1066) = v582;
      id v719 = [v1073 metadata];
      uint64_t v720 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v721 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
      specialized _convertToAnyHashable<A>(_:)(v721);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v720, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        if (swift_dynamicCast())
        {
          v722 = (void *)v1086;
          [(id)v1086 cgRect];
          uint64_t v724 = v723;
          uint64_t v726 = v725;
          uint64_t v728 = v727;
          uint64_t v730 = v729;

          char v731 = 0;
          goto LABEL_279;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      char v731 = 1;
      uint64_t v724 = 0;
      uint64_t v726 = 0;
      uint64_t v728 = 0;
      uint64_t v730 = 0;
LABEL_279:
      *(void *)&long long v1086 = v724;
      *((void *)&v1086 + 1) = v726;
      uint64_t v1087 = v728;
      uint64_t v1088 = v730;
      char v1089 = v731;
      id v732 = [v1073 metadata];
      uint64_t v733 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v734 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
      specialized _convertToAnyHashable<A>(_:)(v734);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v733, &v1090);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (*((void *)&v1091 + 1))
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        if (swift_dynamicCast())
        {
          v735 = (void *)v1081;
          [(id)v1081 cgRect];
          uint64_t v737 = v736;
          uint64_t v739 = v738;
          uint64_t v741 = v740;
          uint64_t v743 = v742;

          char v744 = 0;
          goto LABEL_284;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      }
      char v744 = 1;
      uint64_t v737 = 0;
      uint64_t v739 = 0;
      uint64_t v741 = 0;
      uint64_t v743 = 0;
LABEL_284:
      *(void *)&long long v1090 = v737;
      *((void *)&v1090 + 1) = v739;
      *(void *)&long long v1091 = v741;
      *((void *)&v1091 + 1) = v743;
      char v1092 = v744;
      id v745 = [v1073 metadata];
      uint64_t v746 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v747 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
      specialized _convertToAnyHashable<A>(_:)(v747);

      specialized Dictionary.subscript.getter((uint64_t)&v1083, v746, &v1081);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v1083);
      if (v1082)
      {
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
        if (swift_dynamicCast())
        {
          id v748 = v1080;
          [v1080 cgRect];
          uint64_t v750 = v749;
          uint64_t v752 = v751;
          uint64_t v754 = v753;
          uint64_t v756 = v755;

          char v757 = 0;
          goto LABEL_289;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v1081, &demangling cache variable for type metadata for Any?);
      }
      char v757 = 1;
      uint64_t v750 = 0;
      uint64_t v752 = 0;
      uint64_t v754 = 0;
      uint64_t v756 = 0;
LABEL_289:
      *(void *)&long long v1083 = v750;
      *((void *)&v1083 + 1) = v752;
      *(void *)&long long v1084 = v754;
      *((void *)&v1084 + 1) = v756;
      LODWORD(v1077) = 11;
      char v1085 = v757;
      if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075) {
        LODWORD(v1077) = *(unsigned __int8 *)(v1074 + v1075 + 32);
      }
      swift_bridgeObjectRelease();
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
      uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1073) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1072 = (void (**)(void, void, void, void))static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1071 = v758;
      v1065 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1063 = v759;
      v1062 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1061 = v760;
      uint64_t v1060 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1059 = v761;
      v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1057 = v762;
      uint64_t v1056 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1055 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1054 = v763;
      id v1053 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1052 = v764;
      v1049 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1048 = v765;
      uint64_t v1046 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1045 = v766;
      LODWORD(v1051) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1047) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1044 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1043 = v767;
      v1042 = (void *)default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v768 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v770 = v769;
      uint64_t v771 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      id v1050 = (id)swift_allocObject();
      v772 = v1076;
      swift_retain();
      return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1070, (uint64_t)v1069, (uint64_t)v772, v1078, 0, 0, 0, v1068, 14, 0, v1075, 0, 0, v1064, v1074, v1073 & 1, (uint64_t)v1072, v1071, (uint64_t)v1065,
               (uint64_t)v1063,
               (uint64_t)v1062,
               v1061,
               0,
               0,
               v1060,
               v1059,
               (uint64_t)v1058,
               (uint64_t)v1057,
               v1056,
               0,
               0,
               0,
               0,
               v1055,
               v1054,
               *((uint64_t *)&v1064 + 1),
               (uint64_t)v1053,
               v1052,
               v1067,
               (char)v1066,
               (uint64_t)v1049,
               (uint64_t)v1048,
               v1046,
               v1045,
               v1051 & 1,
               (uint64_t)&v1086,
               (uint64_t)&v1090,
               (uint64_t)&v1083,
               (char)v1077,
               0,
               0,
               0,
               0,
               0,
               1,
               v1047 & 1,
               0,
               v1044,
               v1043,
               (uint64_t)v1042,
               v768,
               v770,
               v771);
    }
    v476 = (void *)MOSuggestionAssetsTypeMultiPinMap;
    id v477 = v370;
    id v478 = v476;
    char v479 = specialized == infix<A>(_:_:)();

    if (v479)
    {

      v480 = v1073;
      v481 = (char *)[v1073 content];
      self;
      v1070 = v481;
      v1069 = (char *)swift_dynamicCastObjCClass();
      if (v1069)
      {
        id v482 = [v480 metadata];
        uint64_t v483 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v484 = MOSuggestionAssetMetadataKeyMultiPinMapLocations;
        specialized _convertToAnyHashable<A>(_:)(v484);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v483, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[MOSuggestionAssetMetadataKey : Any]]);
          if (swift_dynamicCast())
          {
            uint64_t v485 = v1086;
            uint64_t v486 = specialized Collection.first.getter(v1086);
            if (v486)
            {
              uint64_t v487 = v486;
              v488 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
              swift_bridgeObjectRetain();
              id v489 = v488;
              specialized Dictionary.subscript.getter((uint64_t)v489, v487, &v1083);

              swift_bridgeObjectRelease();
              if (*((void *)&v1084 + 1))
              {
                int v490 = swift_dynamicCast();
                v491 = (char *)v1090;
                if (!v490) {
                  v491 = 0;
                }
                v1066 = v491;
                if (v490) {
                  v492 = (char *)*((void *)&v1090 + 1);
                }
                else {
                  v492 = 0;
                }
                v1068 = v492;
              }
              else
              {
                outlined destroy of Any?((uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
                v1068 = 0;
                v1066 = 0;
              }
              id v805 = MOSuggestionAssetMetadataKeyLocationPreviewCityName;
              specialized Dictionary.subscript.getter((uint64_t)v805, v487, &v1083);

              swift_bridgeObjectRelease();
              if (*((void *)&v1084 + 1))
              {
                int v806 = swift_dynamicCast();
                uint64_t v807 = v1090;
                if (!v806) {
                  uint64_t v807 = 0;
                }
                v1065 = (char *)v807;
                if (v806) {
                  uint64_t v808 = *((void *)&v1090 + 1);
                }
                else {
                  uint64_t v808 = 0;
                }
                uint64_t v1067 = v808;
LABEL_323:
                id v809 = [v1073 metadata];
                uint64_t v810 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                id v811 = MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                specialized _convertToAnyHashable<A>(_:)(v811);

                specialized Dictionary.subscript.getter((uint64_t)&v1083, v810, &v1090);
                swift_bridgeObjectRelease();
                outlined destroy of AnyHashable((uint64_t)&v1083);
                if (*((void *)&v1091 + 1))
                {
                  int v812 = swift_dynamicCast();
                  if (v812) {
                    v813 = (char *)v1086;
                  }
                  else {
                    v813 = 0;
                  }
                  if (v812) {
                    v814 = (char *)*((void *)&v1086 + 1);
                  }
                  else {
                    v814 = 0;
                  }
                }
                else
                {
                  outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
                  v813 = 0;
                  v814 = 0;
                }
                *((void *)&v1064 + 1) = specialized Array.count.getter(v485);
                if (*((uint64_t *)&v1064 + 1) >= 2)
                {
                  if (!v1068 || !v1067)
                  {
                    swift_bridgeObjectRelease();
                    v1065 = 0;
                    uint64_t v1067 = 0;
                    v1068 = v814;
LABEL_348:
                    v1066 = v813;
                    goto LABEL_351;
                  }
                  v815 = v1068;
                  v1068 = v814;
LABEL_338:
                  *(void *)&long long v1083 = v1066;
                  *((void *)&v1083 + 1) = v815;
                  *(void *)&long long v1090 = v1065;
                  *((void *)&v1090 + 1) = v1067;
                  lazy protocol witness table accessor for type String and conformance String();
                  char v816 = StringProtocol.contains<A>(_:)();
                  swift_bridgeObjectRelease();
                  if (*((uint64_t *)&v1064 + 1) > 1 || (v816 & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    v1065 = 0;
                    uint64_t v1067 = 0;
                  }
                  goto LABEL_348;
                }
                swift_bridgeObjectRelease();
                if (swift_bridgeObjectRetain())
                {
                  if (v1067)
                  {
                    v815 = v1068;
                    v813 = v1066;
                    goto LABEL_338;
                  }
                  swift_bridgeObjectRelease();
                  v817 = (char *)&v1091 + 8;
                }
                else
                {
                  v817 = &v1092;
                }
                *((void *)v817 - 32) = 0;
LABEL_351:
                v842 = v1073;
                id v843 = [v1073 identifier];
                *(void *)&long long v1064 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                v1063 = v844;

                swift_retain();
                swift_unknownObjectRetain();
                v1062 = (char *)[v842 assetType];
                uint64_t v845 = type metadata accessor for URL();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v845 - 8) + 56))(v1077, 1, 1, v845);
                uint64_t v846 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v846 - 8) + 56))(v1078, 1, 1, v846);
                long long v1083 = 0u;
                long long v1084 = 0u;
                char v1085 = 1;
                LODWORD(v1073) = 11;
                if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075) {
                  LODWORD(v1073) = *(unsigned __int8 *)(v1074 + v1075 + 32);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
                uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
                uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
                LODWORD(v1072) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
                uint64_t v1071 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                uint64_t v1061 = v847;
                uint64_t v1060 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                uint64_t v1059 = v848;
                v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1057 = v849;
                uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                uint64_t v1055 = v850;
                uint64_t v1054 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                id v1053 = v851;
                uint64_t v1052 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
                uint64_t v1051 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                id v1050 = v852;
                v1049 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                v1048 = v853;
                uint64_t v1047 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
                LODWORD(v1046) = v854 & 1;
                uint64_t v1044 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                uint64_t v1043 = v855;
                v1042 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                uint64_t v1040 = v856;
                LODWORD(v1045) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
                LODWORD(v1041) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
                uint64_t v1039 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                uint64_t v1038 = v857;
                uint64_t v858 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
                uint64_t v859 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                uint64_t v861 = v860;
                uint64_t v862 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
                variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
                type metadata accessor for MOSuggestionSheetAssetViewModel(0);
                swift_allocObject();
                long long v149 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1064, (uint64_t)v1063, (uint64_t)v1076, v1069, 0, 0, 0, v1062, 15, 0, v1075, 0, 0, (uint64_t)v1077, v1074, v1072 & 1, v1071, v1061, v1060,
                         v1059,
                         (uint64_t)v1058,
                         (uint64_t)v1057,
                         0,
                         0,
                         v1056,
                         v1055,
                         v1054,
                         (uint64_t)v1053,
                         v1052,
                         0,
                         0,
                         0,
                         0,
                         v1051,
                         (uint64_t)v1050,
                         (uint64_t)v1078,
                         (uint64_t)v1049,
                         (uint64_t)v1048,
                         v1047,
                         v1046,
                         v1044,
                         v1043,
                         (uint64_t)v1042,
                         v1040,
                         v1045 & 1,
                         (uint64_t)&v1083,
                         (uint64_t)&v1083,
                         (uint64_t)&v1083,
                         (char)v1073,
                         (uint64_t)v1066,
                         (uint64_t)v1068,
                         (uint64_t)v1065,
                         v1067,
                         *((uint64_t *)&v1064 + 1),
                         0,
                         v1041 & 1,
                         0,
                         v1039,
                         v1038,
                         v858,
                         v859,
                         v861,
                         v862);
                goto LABEL_51;
              }
            }
            else
            {
              long long v1083 = 0u;
              long long v1084 = 0u;
              outlined destroy of Any?((uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
              v1068 = 0;
              v1066 = 0;
              long long v1083 = 0u;
              long long v1084 = 0u;
            }
            outlined destroy of Any?((uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
            v1065 = 0;
            uint64_t v1067 = 0;
            goto LABEL_323;
          }
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      v698 = v1073;
      id v699 = [v1073 identifier];
      uint64_t v1075 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v1074 = v700;

      swift_retain();
      id v1073 = [v698 assetType];
      uint64_t v701 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v701 - 8) + 56))(v1077, 1, 1, v701);
      uint64_t v702 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v702 - 8) + 56))(v1078, 1, 1, v702);
      long long v1083 = 0u;
      long long v1084 = 0u;
      char v1085 = 1;
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
      v1072 = (void (**)(void, void, void, void))variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1070) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1069 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1068 = v703;
      uint64_t v1067 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1066 = v704;
      v1065 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((void *)&v1064 + 1) = v705;
      *(void *)&long long v1064 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1063 = v706;
      v1062 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1061 = v707;
      uint64_t v1060 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1059 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1058 = (char *)v708;
      v1057 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1056 = v709;
      uint64_t v1055 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1054) = v710 & 1;
      id v1053 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1052 = v711;
      v1049 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1048 = v712;
      LODWORD(v1051) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1050) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1046 = v713;
      uint64_t v714 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v715 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v717 = v716;
      uint64_t v718 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject();
      uint64_t v1030 = v718;
      uint64_t v1028 = v715;
      uint64_t v1029 = v717;
      uint64_t v1027 = v714;
      uint64_t v1026 = v1046;
      uint64_t v1025 = v1047;
      LOBYTE(v1023) = 1;
      uint64_t v1016 = (uint64_t)v1048;
      uint64_t v1015 = (uint64_t)v1049;
      v1024 = 0;
      HIBYTE(v1023) = v1050 & 1;
      char v1020 = 11;
      v1019 = &v1083;
      v1018 = &v1083;
      char v1017 = v1051 & 1;
      uint64_t v1014 = v1052;
      uint64_t v1013 = (uint64_t)v1053;
      char v1012 = v1054;
      uint64_t v1011 = v1055;
      uint64_t v1010 = v1056;
      uint64_t v1009 = (uint64_t)v1057;
      uint64_t v1008 = (uint64_t)v1078;
      uint64_t v1007 = (uint64_t)v1058;
      uint64_t v1006 = v1059;
      long long v1005 = 0u;
      long long v1004 = 0u;
      uint64_t v1003 = v1060;
      uint64_t v1002 = v1061;
      uint64_t v1001 = (uint64_t)v1062;
      v1000 = v1063;
      v999 = (char *)v1064;
      long long v998 = 0u;
      uint64_t v997 = *((void *)&v1064 + 1);
      uint64_t v996 = (uint64_t)v1065;
      uint64_t v995 = (uint64_t)v1066;
      uint64_t v994 = v1067;
      uint64_t v993 = (uint64_t)v1068;
      v992 = v1069;
      char v991 = v1070 & 1;
      uint64_t v990 = v1071;
      uint64_t v989 = (uint64_t)v1077;
      long long v988 = 0u;
      v986 = 0;
      uint64_t v987 = (uint64_t)v1072;
      char v985 = 26;
      long long v1022 = 0u;
      long long v1021 = 0u;
      uint64_t v244 = v1075;
      v697 = &v1095;
LABEL_268:
      uint64_t v245 = *(v697 - 32);
      v246 = v1076;
      v247 = 0;
      v248 = (char *)&v1094;
LABEL_90:
      v249 = (void *)*((void *)v248 - 32);
      return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v244, v245, (uint64_t)v246, v247, 0, 0, 0, v249, v985, v986, v987, v988, *((uint64_t *)&v988 + 1), v989, v990, v991, (uint64_t)v992, v993, v994,
               v995,
               v996,
               v997,
               (void *)v998,
               *((void **)&v998 + 1),
               (uint64_t)v999,
               (uint64_t)v1000,
               v1001,
               v1002,
               v1003,
               v1004,
               *((uint64_t *)&v1004 + 1),
               v1005,
               *((uint64_t *)&v1005 + 1),
               v1006,
               v1007,
               v1008,
               v1009,
               v1010,
               v1011,
               v1012,
               v1013,
               v1014,
               v1015,
               v1016,
               v1017,
               (uint64_t)v1018,
               (uint64_t)v1019,
               (uint64_t)&v1083,
               v1020,
               v1021,
               *((uint64_t *)&v1021 + 1),
               v1022,
               *((uint64_t *)&v1022 + 1),
               0,
               v1023,
               SHIBYTE(v1023),
               v1024,
               v1025,
               v1026,
               v1027,
               v1028,
               v1029,
               v1030);
    }
    v556 = (void *)MOSuggestionAssetsTypeGenericMap;
    id v557 = v477;
    id v558 = v556;
    char v559 = specialized == infix<A>(_:_:)();

    if (v559)
    {

      id v560 = [v1073 content];
      self;
      unint64_t v54 = (void *)swift_dynamicCastObjCClass();
      if (v54)
      {
        id v561 = [v1073 metadata];
        uint64_t v562 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v563 = specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v562);
        swift_bridgeObjectRelease();
        if (v563)
        {
          id v564 = MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
          specialized Dictionary.subscript.getter((uint64_t)v564, v563, &v1083);

          swift_bridgeObjectRelease();
          if (!*((void *)&v1084 + 1))
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            outlined destroy of Any?((uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
            return 0;
          }
          type metadata accessor for MOSuggestionAssetMotionActivityType(0);
          if (swift_dynamicCast())
          {
            v565 = (void *)MOSuggestionAssetMotionActivityTypeRunning;
            v566 = (char *)(id)v1090;
            id v567 = v565;
            char v568 = specialized == infix<A>(_:_:)();
            v1070 = v566;

            if (v568)
            {
              int v569 = 21;
            }
            else
            {
              v838 = (void *)MOSuggestionAssetMotionActivityTypeWalking;
              v839 = v1070;
              id v840 = v838;
              char v841 = specialized == infix<A>(_:_:)();

              if (v841)
              {
                int v569 = 20;
              }
              else
              {
                v863 = (void *)MOSuggestionAssetMotionActivityTypeRunningWalking;
                v864 = v839;
                id v865 = v863;
                char v866 = specialized == infix<A>(_:_:)();

                if (v866) {
                  int v569 = 22;
                }
                else {
                  int v569 = 26;
                }
              }
            }
            LODWORD(v1069) = v569;
            v867 = v1073;
            id v868 = [v1073 identifier];
            v1068 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v1067 = v869;

            swift_retain();
            swift_unknownObjectRetain();
            v1066 = (char *)[v867 assetType];
            uint64_t v870 = type metadata accessor for URL();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v870 - 8) + 56))(v1077, 1, 1, v870);
            uint64_t v871 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v871 - 8) + 56))(v1078, 1, 1, v871);
            long long v1083 = 0u;
            long long v1084 = 0u;
            char v1085 = 1;
            LODWORD(v1073) = 11;
            if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075) {
              LODWORD(v1073) = *(unsigned __int8 *)(v1074 + v1075 + 32);
            }
            swift_bridgeObjectRelease();
            ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
            uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            LODWORD(v1072) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            uint64_t v1071 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1065 = (char *)v872;
            *((void *)&v1064 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            *(void *)&long long v1064 = v873;
            v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1062 = v874;
            uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            uint64_t v1060 = v875;
            uint64_t v1059 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1058 = (char *)v876;
            v1057 = (char *)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            uint64_t v1055 = v877;
            uint64_t v1054 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            id v1053 = v878;
            uint64_t v1052 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
            LODWORD(v1051) = v879 & 1;
            v1049 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            v1048 = v880;
            uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            uint64_t v1045 = v881;
            LODWORD(v1050) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            LODWORD(v1046) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
            uint64_t v1044 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            uint64_t v1043 = v882;
            v1042 = (void *)default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
            uint64_t v1041 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            uint64_t v884 = v883;
            uint64_t v885 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
            variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
            type metadata accessor for MOSuggestionSheetAssetViewModel(0);
            swift_allocObject();
            unint64_t v54 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1068, v1067, (uint64_t)v1076, v54, 0, 0, 0, v1066, (char)v1069, 0, v1075, 0, 0, (uint64_t)v1077, v1074, v1072 & 1, v1071, (uint64_t)v1065, *((uint64_t *)&v1064 + 1),
                    v1064,
                    (uint64_t)v1063,
                    (uint64_t)v1062,
                    0,
                    0,
                    v1061,
                    v1060,
                    v1059,
                    (uint64_t)v1058,
                    (uint64_t)v1057,
                    0,
                    0,
                    0,
                    0,
                    v1056,
                    v1055,
                    (uint64_t)v1078,
                    v1054,
                    (uint64_t)v1053,
                    v1052,
                    v1051,
                    (uint64_t)v1049,
                    (uint64_t)v1048,
                    v1047,
                    v1045,
                    v1050 & 1,
                    (uint64_t)&v1083,
                    (uint64_t)&v1083,
                    (uint64_t)&v1083,
                    (char)v1073,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    v1046 & 1,
                    0,
                    v1044,
                    v1043,
                    (uint64_t)v1042,
                    v1041,
                    v884,
                    v885);

            goto LABEL_362;
          }
        }
        goto LABEL_313;
      }
LABEL_312:
      swift_bridgeObjectRelease();
      goto LABEL_362;
    }
    v583 = (void *)MOSuggestionAssetsTypeLinkPreview;
    id v584 = v557;
    id v585 = v583;
    char v586 = specialized == infix<A>(_:_:)();

    if (v586)
    {
      swift_bridgeObjectRelease();

      v587 = (char *)[v1073 content];
      self;
      v588 = v587;
      uint64_t v1075 = swift_dynamicCastObjCClass();
      if (!v1075) {
        goto LABEL_144;
      }
      v589 = v1073;
      id v590 = [v1073 identifier];
      uint64_t v1074 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v1069 = v591;

      swift_retain();
      v1070 = v588;
      swift_unknownObjectRetain();
      id v1073 = [v589 assetType];
      uint64_t v592 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v592 - 8) + 56))(v1077, 1, 1, v592);
      uint64_t v593 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v593 - 8) + 56))(v1078, 1, 1, v593);
      long long v1083 = 0u;
      long long v1084 = 0u;
      char v1085 = 1;
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
      v1072 = (void (**)(void, void, void, void))variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1068) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1067 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1066 = v594;
      v1065 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((void *)&v1064 + 1) = v595;
      *(void *)&long long v1064 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1063 = v596;
      v1062 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1061 = v597;
      uint64_t v1060 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1059 = v598;
      v1058 = (char *)variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1057 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1056 = v599;
      uint64_t v1055 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1054 = v600;
      id v1053 = (id)default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1052) = v601 & 1;
      id v1050 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1049 = v602;
      uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1046 = v603;
      LODWORD(v1051) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1048) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1044 = v604;
      uint64_t v605 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v606 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v608 = v607;
      uint64_t v609 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject();
      long long v149 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1074, (uint64_t)v1069, (uint64_t)v1076, 0, 0, 0, (void *)v1075, v1073, 26, 0, (uint64_t)v1072, 0, 0, (uint64_t)v1077, v1071, v1068 & 1, v1067, (uint64_t)v1066, (uint64_t)v1065,
               *((uint64_t *)&v1064 + 1),
               v1064,
               (uint64_t)v1063,
               0,
               0,
               (uint64_t)v1062,
               v1061,
               v1060,
               v1059,
               (uint64_t)v1058,
               0,
               0,
               0,
               0,
               (uint64_t)v1057,
               v1056,
               (uint64_t)v1078,
               v1055,
               v1054,
               (uint64_t)v1053,
               v1052,
               (uint64_t)v1050,
               (uint64_t)v1049,
               v1047,
               v1046,
               v1051 & 1,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               11,
               0,
               0,
               0,
               0,
               0,
               1,
               v1048 & 1,
               0,
               v1045,
               v1044,
               v605,
               v606,
               v608,
               v609);
LABEL_51:
      unint64_t v54 = v149;
LABEL_362:
      swift_unknownObjectRelease();
      return v54;
    }
    v671 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
    id v672 = v584;
    id v673 = v671;
    char v674 = specialized == infix<A>(_:_:)();

    if (v674)
    {
      swift_bridgeObjectRelease();

      id v675 = [v1073 content];
      self;
      uint64_t v1075 = swift_dynamicCastObjCClass();
      if (!v1075) {
        goto LABEL_144;
      }
      v676 = v1073;
      id v677 = [v1073 identifier];
      uint64_t v1074 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v1070 = v678;

      swift_retain();
      id v1073 = [v676 assetType];
      uint64_t v679 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v679 - 8) + 56))(v1077, 1, 1, v679);
      uint64_t v680 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v680 - 8) + 56))(v1078, 1, 1, v680);
      long long v1083 = 0u;
      long long v1084 = 0u;
      char v1085 = 1;
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
      v1072 = (void (**)(void, void, void, void))variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1069) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1068 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1067 = v681;
      v1066 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1065 = (char *)v682;
      *((void *)&v1064 + 1) = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *(void *)&long long v1064 = v683;
      v1063 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1062 = v684;
      uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1060 = v685;
      uint64_t v1059 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1057 = v686;
      uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1055 = v687;
      uint64_t v1054 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1053) = v688 & 1;
      uint64_t v1051 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      id v1050 = v689;
      v1048 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1047 = v690;
      LODWORD(v1052) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1049) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1046 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1045 = v691;
      uint64_t v692 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v693 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v695 = v694;
      uint64_t v696 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject();
      uint64_t v1030 = v696;
      uint64_t v1028 = v693;
      uint64_t v1029 = v695;
      uint64_t v1027 = v692;
      uint64_t v1026 = v1045;
      uint64_t v1025 = v1046;
      LOBYTE(v1023) = 1;
      uint64_t v1016 = v1047;
      uint64_t v1015 = (uint64_t)v1048;
      uint64_t v1014 = (uint64_t)v1050;
      uint64_t v1013 = v1051;
      v1024 = 0;
      HIBYTE(v1023) = v1049 & 1;
      char v1020 = 11;
      v1019 = &v1083;
      v1018 = &v1083;
      char v1017 = v1052 & 1;
      char v1012 = (char)v1053;
      uint64_t v1011 = v1054;
      uint64_t v1010 = v1055;
      uint64_t v1009 = v1056;
      uint64_t v1008 = (uint64_t)v1078;
      uint64_t v1007 = (uint64_t)v1057;
      uint64_t v1006 = (uint64_t)v1058;
      long long v1005 = 0u;
      long long v1004 = 0u;
      uint64_t v1003 = v1059;
      uint64_t v1002 = v1060;
      uint64_t v1001 = v1061;
      v1000 = v1062;
      v999 = v1063;
      long long v998 = 0u;
      uint64_t v996 = *((void *)&v1064 + 1);
      uint64_t v997 = v1064;
      uint64_t v995 = (uint64_t)v1065;
      uint64_t v994 = (uint64_t)v1066;
      uint64_t v993 = v1067;
      v992 = v1068;
      char v991 = v1069 & 1;
      uint64_t v990 = v1071;
      uint64_t v989 = (uint64_t)v1077;
      long long v988 = 0u;
      uint64_t v987 = (uint64_t)v1072;
      v986 = (void *)v1075;
      char v985 = 26;
      long long v1022 = 0u;
      long long v1021 = 0u;
      uint64_t v244 = v1074;
      v697 = (uint64_t *)&v1093;
      goto LABEL_268;
    }
    v773 = (void *)MOSuggestionAssetsTypeMediaCoverArt;
    id v774 = v672;
    id v775 = v773;
    char v776 = specialized == infix<A>(_:_:)();

    if (v776)
    {

      v777 = (char *)[v1073 content];
      self;
      v1077 = v777;
      v778 = (void *)swift_dynamicCastObjCClass();
      if (v778)
      {
        v779 = v778;
        v1070 = (char *)[v778 albumArt];
        id v780 = [v1073 metadata];
        uint64_t v781 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v782 = MOSuggestionAssetMetadataKeyMediaThirdPartyAppAssociatedColors;
        specialized _convertToAnyHashable<A>(_:)(v782);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v781, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [UIColor]);
          int v783 = swift_dynamicCast();
          uint64_t v784 = v1086;
          if (!v783) {
            uint64_t v784 = 0;
          }
          uint64_t v1034 = v784;
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
          uint64_t v1034 = 0;
        }
        uint64_t v886 = MOSuggestionAssetMediaItem.primaryTitle.getter();
        uint64_t v888 = v887;
        id v889 = [v779 albumTitle];
        uint64_t v890 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v892 = v891;

        id v893 = [v779 artistName];
        uint64_t v894 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v896 = v895;

        id v897 = [v779 mediaType];
        v898 = v1076;
        v899 = (char *)(*((uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))*v1076 + 63))(v886, v888, v890, v892, v894, v896, v897);
        v901 = v900;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v902 = [v779 albumTitle];
        uint64_t v903 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v905 = v904;

        id v906 = [v779 artistName];
        uint64_t v907 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v909 = v908;

        id v910 = [v779 mediaType];
        v911 = (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, id))*((void *)*v898 + 64);
        v1069 = v899;
        v1068 = v901;
        v1065 = (char *)v911(v899, v901, v903, v905, v907, v909, v910);
        *((void *)&v1064 + 1) = v912;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v913 = v1073;
        id v914 = [v1073 identifier];
        uint64_t v1067 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v1066 = v915;

        *(void *)&long long v1064 = [v913 assetType];
        LODWORD(v1063) = specialized MOSuggestionAssetVisualSubType.init(assetType:mediaType:motionActivityType:)([v913 assetType], (uint64_t)[v779 mediaType], 0, 0);
        id v916 = [v779 trackIdentifier];
        if (v916)
        {
          v917 = v916;
          uint64_t v1033 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v1032 = v918;
        }
        else
        {
          uint64_t v1033 = 0;
          uint64_t v1032 = 0;
        }
        id v919 = [v779 previewURL];
        if (v919)
        {
          v920 = v919;
          v921 = v1062;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v922 = type metadata accessor for URL();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v922 - 8) + 56))(v921, 0, 1, v922);
        }
        else
        {
          uint64_t v923 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v923 - 8) + 56))(v1062, 1, 1, v923);
        }
        uint64_t v1061 = (uint64_t)[v779 mediaType];
        uint64_t v924 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v924 - 8) + 56))(v1078, 1, 1, v924);
        long long v1083 = 0u;
        long long v1084 = 0u;
        char v1085 = 1;
        LODWORD(v1073) = 11;
        if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075) {
          LODWORD(v1073) = *(unsigned __int8 *)(v1074 + v1075 + 32);
        }
        swift_bridgeObjectRelease();
        ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
        id v1053 = [v779 bgColor];
        id v1050 = [v779 bgColorVariant];
        uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1074) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        v1072 = (void (**)(void, void, void, void))static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1071 = v925;
        uint64_t v1060 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1059 = v926;
        v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1057 = v927;
        uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1055 = v928;
        uint64_t v1054 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1052 = v929;
        uint64_t v1051 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1049 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1048 = v930;
        uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1046 = v931;
        uint64_t v1045 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
        LODWORD(v1044) = v932 & 1;
        v1042 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1041 = v933;
        uint64_t v1039 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1038 = v934;
        LODWORD(v1040) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        LODWORD(v1037) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        uint64_t v1036 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1035 = v935;
        uint64_t v936 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
        uint64_t v937 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v939 = v938;
        uint64_t v940 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        uint64_t v1043 = swift_allocObject();
        v941 = v1076;
        swift_retain();
        unint64_t v54 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1067, (uint64_t)v1066, (uint64_t)v941, v1070, 0, 0, 0, (void *)v1064, (char)v1063, 0, v1075, v1033, v1032, (uint64_t)v1062, v1061, v1074 & 1, (uint64_t)v1072, v1071, v1060,
                v1059,
                (uint64_t)v1058,
                (uint64_t)v1057,
                0,
                0,
                v1056,
                v1055,
                v1054,
                v1052,
                v1051,
                (uint64_t)v1069,
                (uint64_t)v1068,
                (uint64_t)v1065,
                *((uint64_t *)&v1064 + 1),
                (uint64_t)v1049,
                (uint64_t)v1048,
                (uint64_t)v1078,
                v1047,
                v1046,
                v1045,
                v1044,
                (uint64_t)v1042,
                v1041,
                v1039,
                v1038,
                v1040 & 1,
                (uint64_t)&v1083,
                (uint64_t)&v1083,
                (uint64_t)&v1083,
                (char)v1073,
                0,
                0,
                0,
                0,
                0,
                1,
                v1037 & 1,
                0,
                v1036,
                v1035,
                v936,
                v937,
                v939,
                v940);
        goto LABEL_362;
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return 0;
    }
    id v785 = MOSuggestionAssetsTypeStateOfMindAsset;
    char v786 = specialized == infix<A>(_:_:)();

    if ((v786 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
      uint64_t v1075 = (uint64_t)@nonobjc UIImage.__allocating_init(named:)();
      id v818 = [v1073 identifier];
      uint64_t v1074 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v1073 = v819;

      uint64_t v820 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v820 - 8) + 56))(v1077, 1, 1, v820);
      uint64_t v821 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v821 - 8) + 56))(v1078, 1, 1, v821);
      long long v1083 = 0u;
      long long v1084 = 0u;
      char v1085 = 1;
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v1079, 1, 1, v1071);
      v1072 = (void (**)(void, void, void, void))variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1071 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      LODWORD(v1070) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      v1069 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1068 = v822;
      uint64_t v1067 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1066 = v823;
      v1065 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      *((void *)&v1064 + 1) = v824;
      *(void *)&long long v1064 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1063 = v825;
      v1062 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1061 = v826;
      uint64_t v1060 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      uint64_t v1059 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      v1058 = (char *)v827;
      v1057 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1056 = v828;
      uint64_t v1055 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
      LODWORD(v1054) = v829 & 1;
      id v1053 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1052 = v830;
      v1048 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1047 = v831;
      LODWORD(v1051) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      LODWORD(v1049) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
      uint64_t v1046 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v1045 = v832;
      uint64_t v1044 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
      uint64_t v833 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      uint64_t v835 = v834;
      uint64_t v836 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
      variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      id v1050 = (id)swift_allocObject();
      v837 = v1076;
      swift_retain();
      return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1074, (uint64_t)v1073, (uint64_t)v837, (void *)v1075, 0, 0, 0, 0, 26, 0, (uint64_t)v1072, 0, 0, (uint64_t)v1077, v1071, v1070 & 1, (uint64_t)v1069, (uint64_t)v1068, v1067,
               (uint64_t)v1066,
               (uint64_t)v1065,
               *((uint64_t *)&v1064 + 1),
               0,
               0,
               v1064,
               (uint64_t)v1063,
               (uint64_t)v1062,
               v1061,
               v1060,
               0,
               0,
               0,
               0,
               v1059,
               (uint64_t)v1058,
               (uint64_t)v1078,
               (uint64_t)v1057,
               v1056,
               v1055,
               v1054,
               (uint64_t)v1053,
               v1052,
               (uint64_t)v1048,
               v1047,
               v1051 & 1,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               (uint64_t)&v1083,
               11,
               0,
               0,
               0,
               0,
               0,
               1,
               v1049 & 1,
               0,
               v1046,
               v1045,
               v1044,
               v833,
               v835,
               v836);
    }
    id v787 = [v1073 content];
    self;
    unint64_t v54 = (void *)swift_dynamicCastObjCClass();
    if (!v54) {
      goto LABEL_312;
    }
    id v788 = [v1073 metadata];
    uint64_t v789 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v790 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsLight;
    specialized _convertToAnyHashable<A>(_:)(v790);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v789, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    if (!*((void *)&v1091 + 1))
    {
      swift_unknownObjectRelease();
      goto LABEL_112;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [UIColor]);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_313:
      swift_unknownObjectRelease();
      goto LABEL_114;
    }
    v1070 = (char *)v1086;
    id v791 = [v1073 metadata];
    uint64_t v792 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v793 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsDark;
    specialized _convertToAnyHashable<A>(_:)(v793);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v792, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    if (!*((void *)&v1091 + 1))
    {
      swift_unknownObjectRelease();
      goto LABEL_111;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_unknownObjectRelease();
LABEL_113:
      swift_bridgeObjectRelease();
      goto LABEL_114;
    }
    v1069 = (char *)v1086;
    id v794 = [v1073 metadata];
    uint64_t v795 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v796 = MOSuggestionAssetMetadataKeyStateOfMindStartDate;
    specialized _convertToAnyHashable<A>(_:)(v796);

    specialized Dictionary.subscript.getter((uint64_t)&v1083, v795, &v1090);
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)&v1083);
    if (*((void *)&v1091 + 1))
    {
      uint64_t v797 = v1071;
      int v798 = swift_dynamicCast();
      v799 = v1072;
      v800 = (void (*)(char *, void, uint64_t, uint64_t))v1072[7];
      v800(v17, v798 ^ 1u, 1, v797);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v799[6])(v17, 1, v797) != 1)
      {
        ((void (*)(uint64_t, char *, uint64_t))v1072[4])(v1061, v17, v1071);
        id v801 = [v1073 metadata];
        uint64_t v802 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v803 = MOSuggestionAssetMetadataKeyStateOfMindValenceClassificationAndReflectiveIntervalLocalized;
        specialized _convertToAnyHashable<A>(_:)(v803);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v802, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          if (swift_dynamicCast())
          {
            unint64_t v804 = *((void *)&v1086 + 1);
            v1068 = (char *)v1086;
            goto LABEL_381;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
        v1068 = 0;
        unint64_t v804 = 0xE000000000000000;
LABEL_381:
        uint64_t v1067 = v804;
        id v942 = [v1073 metadata];
        uint64_t v943 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v944 = MOSuggestionAssetMetadataKeyStateOfMindReflectiveInterval;
        specialized _convertToAnyHashable<A>(_:)(v944);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v943, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v945 = v1086;
            goto LABEL_386;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
        uint64_t v945 = 1;
LABEL_386:
        v1066 = (char *)v945;
        id v946 = [v1073 metadata];
        uint64_t v947 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v948 = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalized;
        specialized _convertToAnyHashable<A>(_:)(v948);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v947, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          if (swift_dynamicCast())
          {
            unint64_t v949 = *((void *)&v1086 + 1);
            v1065 = (char *)v1086;
            goto LABEL_391;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
        v1065 = 0;
        unint64_t v949 = 0xE000000000000000;
LABEL_391:
        *((void *)&v1064 + 1) = v949;
        id v950 = [v1073 metadata];
        uint64_t v951 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v952 = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalizedShortened;
        specialized _convertToAnyHashable<A>(_:)(v952);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v951, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          if (swift_dynamicCast())
          {
            v953 = (char *)*((void *)&v1086 + 1);
            *(void *)&long long v1064 = v1086;
            goto LABEL_396;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
        *(void *)&long long v1064 = 0;
        v953 = (char *)0xE000000000000000;
LABEL_396:
        v1063 = v953;
        id v954 = [v1073 metadata];
        uint64_t v955 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v956 = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalized;
        specialized _convertToAnyHashable<A>(_:)(v956);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v955, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          if (swift_dynamicCast())
          {
            unint64_t v957 = *((void *)&v1086 + 1);
            v1062 = (char *)v1086;
            goto LABEL_401;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
        v1062 = 0;
        unint64_t v957 = 0xE000000000000000;
LABEL_401:
        uint64_t v1060 = v957;
        id v958 = [v1073 metadata];
        uint64_t v959 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v960 = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalizedShortened;
        specialized _convertToAnyHashable<A>(_:)(v960);

        specialized Dictionary.subscript.getter((uint64_t)&v1083, v959, &v1090);
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v1083);
        if (*((void *)&v1091 + 1))
        {
          if (swift_dynamicCast())
          {
            unint64_t v961 = *((void *)&v1086 + 1);
            uint64_t v1056 = v1086;
            goto LABEL_406;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
        }
        uint64_t v1056 = 0;
        unint64_t v961 = 0xE000000000000000;
LABEL_406:
        uint64_t v1055 = v961;
        v962 = v1073;
        id v963 = [v1073 identifier];
        uint64_t v1059 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v1058 = (char *)v964;

        swift_retain();
        swift_unknownObjectRetain();
        v1057 = (char *)[v962 assetType];
        uint64_t v965 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v965 - 8) + 56))(v1077, 1, 1, v965);
        uint64_t v966 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v966 - 8) + 56))(v1078, 1, 1, v966);
        long long v1083 = 0u;
        long long v1084 = 0u;
        char v1085 = 1;
        LODWORD(v1073) = 11;
        if ((v1075 & 0x8000000000000000) == 0 && *(void *)(v1074 + 16) > v1075) {
          LODWORD(v1073) = *(unsigned __int8 *)(v1074 + v1075 + 32);
        }
        swift_bridgeObjectRelease();
        v967 = v1079;
        uint64_t v968 = v1071;
        ((void (*)(char *, uint64_t, uint64_t))v1072[2])(v1079, v1061, v1071);
        v800(v967, 0, 1, v968);
        uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        LODWORD(v1054) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        id v1053 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1052 = v969;
        uint64_t v1051 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        id v1050 = v970;
        v1049 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        v1048 = v971;
        uint64_t v1047 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1046 = v972;
        uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1044 = v973;
        uint64_t v1043 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        v1042 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1041 = v974;
        uint64_t v1040 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v1039 = v975;
        uint64_t v1038 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
        LODWORD(v1037) = v976 & 1;
        uint64_t v977 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v979 = v978;
        uint64_t v980 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
        uint64_t v982 = v981;
        char v983 = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        char v984 = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
        variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
        type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        swift_allocObject();
        unint64_t v54 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(v1059, (uint64_t)v1058, (uint64_t)v1076, v54, 0, 0, 0, v1057, 25, 0, v1075, 0, 0, (uint64_t)v1077, v1074, v1054 & 1, (uint64_t)v1053, v1052, v1051,
                (uint64_t)v1050,
                (uint64_t)v1049,
                (uint64_t)v1048,
                0,
                0,
                v1047,
                v1046,
                v1045,
                v1044,
                v1043,
                0,
                0,
                0,
                0,
                (uint64_t)v1042,
                v1041,
                (uint64_t)v1078,
                v1040,
                v1039,
                v1038,
                v1037,
                v977,
                v979,
                v980,
                v982,
                v983 & 1,
                (uint64_t)&v1083,
                (uint64_t)&v1083,
                (uint64_t)&v1083,
                (char)v1073,
                0,
                0,
                0,
                0,
                0,
                1,
                v984 & 1,
                0,
                (uint64_t)v1068,
                v1067,
                (uint64_t)v1066,
                (uint64_t)v1065,
                *((uint64_t *)&v1064 + 1),
                v1064);
        swift_unknownObjectRelease();
        ((void (*)(uint64_t, uint64_t))v1072[1])(v1061, v1071);
        return v54;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
      ((void (**)(char *, uint64_t, uint64_t, uint64_t))v1072)[7](v17, 1, 1, v1071);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    outlined destroy of Any?((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for Date?);
    return 0;
  }

  v292 = v1073;
  id v293 = [v1073 content];
  self;
  v294 = (char *)swift_dynamicCastObjCClass();
  if (!v294)
  {
    swift_bridgeObjectRelease();
    goto LABEL_144;
  }
  v1077 = v294;
  id v295 = [v292 metadata];
  uint64_t v296 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v297 = MOSuggestionAssetMetadataKeyContactName;
  specialized _convertToAnyHashable<A>(_:)(v297);

  specialized Dictionary.subscript.getter((uint64_t)&v1083, v296, &v1090);
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)&v1083);
  id v298 = [v292 metadata];
  uint64_t v299 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v300 = MOSuggestionAssetMetadataKeyContactFirstName;
  specialized _convertToAnyHashable<A>(_:)(v300);

  specialized Dictionary.subscript.getter((uint64_t)&v1083, v299, &v1086);
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)&v1083);
  id v301 = [v292 identifier];
  v1070 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  v1069 = v302;

  id v1073 = [v292 assetType];
  uint64_t v303 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v303 - 8) + 56))(v42, 1, 1, v303);
  outlined init with copy of Date?((uint64_t)&v1090, (uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
  if (*((void *)&v1084 + 1))
  {
    int v304 = swift_dynamicCast();
    v305 = (char *)v1081;
    if (!v304) {
      v305 = 0;
    }
    v1068 = v305;
    if (v304) {
      uint64_t v306 = *((void *)&v1081 + 1);
    }
    else {
      uint64_t v306 = 0;
    }
    uint64_t v1067 = v306;
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
    v1068 = 0;
    uint64_t v1067 = 0;
  }
  v395 = v1072;
  outlined init with copy of Date?((uint64_t)&v1086, (uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
  uint64_t v396 = v1074;
  if (*((void *)&v1084 + 1))
  {
    int v397 = swift_dynamicCast();
    v398 = (void (**)(void, void, void, void))v1081;
    if (!v397) {
      v398 = 0;
    }
    v1072 = v398;
    if (v397) {
      v399 = (char *)*((void *)&v1081 + 1);
    }
    else {
      v399 = 0;
    }
    v1066 = v399;
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v1083, &demangling cache variable for type metadata for Any?);
    v1072 = 0;
    v1066 = 0;
  }
  uint64_t v400 = v1071;
  uint64_t v401 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v401 - 8) + 56))(v1078, 1, 1, v401);
  long long v1083 = 0u;
  long long v1084 = 0u;
  char v1085 = 1;
  if (v1075 < 0)
  {
    int v402 = 11;
  }
  else
  {
    int v402 = 11;
    if (*(void *)(v396 + 16) > v1075) {
      int v402 = *(unsigned __int8 *)(v396 + v1075 + 32);
    }
  }
  LODWORD(v1062) = v402;
  swift_bridgeObjectRelease();
  ((void (**)(char *, uint64_t, uint64_t, uint64_t))v395)[7](v1079, 1, 1, v400);
  uint64_t v1075 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
  uint64_t v1074 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
  LODWORD(v1071) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
  v1065 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  *((void *)&v1064 + 1) = v463;
  *(void *)&long long v1064 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1063 = v464;
  uint64_t v1061 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  uint64_t v1060 = v465;
  uint64_t v1059 = variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
  v1058 = (char *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1057 = v466;
  uint64_t v1056 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  uint64_t v1055 = v467;
  uint64_t v1054 = default argument 27 of MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)();
  LODWORD(v1053) = v468 & 1;
  id v1050 = (id)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  v1049 = v469;
  v1048 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  uint64_t v1046 = v470;
  LODWORD(v1052) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
  LODWORD(v1047) = default argument 1 of UIView.alignCenterHorizontallyToSuper(margin:equivalency:)();
  uint64_t v1045 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  uint64_t v1044 = v471;
  uint64_t v1043 = default argument 1 of static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)();
  v1042 = (void *)static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  uint64_t v473 = v472;
  uint64_t v474 = static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  static MOSuggestionSheetInterstitialView.EMPTY_TEXT.getter();
  variable initialization expression of MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor();
  type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  uint64_t v1051 = swift_allocObject();
  v475 = v1076;
  swift_retain();
  unint64_t v54 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)((uint64_t)v1070, (uint64_t)v1069, (uint64_t)v475, v1077, 0, 0, 0, v1073, 11, 0, v1075, 0, 0, (uint64_t)v42, v1074, v1071 & 1, (uint64_t)v1068, v1067, (uint64_t)v1072,
          (uint64_t)v1066,
          (uint64_t)v1065,
          *((uint64_t *)&v1064 + 1),
          0,
          0,
          v1064,
          (uint64_t)v1063,
          v1061,
          v1060,
          v1059,
          0,
          0,
          0,
          0,
          (uint64_t)v1058,
          (uint64_t)v1057,
          (uint64_t)v1078,
          v1056,
          v1055,
          v1054,
          (char)v1053,
          (uint64_t)v1050,
          (uint64_t)v1049,
          (uint64_t)v1048,
          v1046,
          v1052 & 1,
          (uint64_t)&v1083,
          (uint64_t)&v1083,
          (uint64_t)&v1083,
          (char)v1062,
          0,
          0,
          0,
          0,
          0,
          1,
          v1047 & 1,
          0,
          v1045,
          v1044,
          v1043,
          (uint64_t)v1042,
          v473,
          v474);
  outlined destroy of Any?((uint64_t)&v1086, &demangling cache variable for type metadata for Any?);
  outlined destroy of Any?((uint64_t)&v1090, &demangling cache variable for type metadata for Any?);
  return v54;
}

uint64_t MOSuggestionCollectionViewCellViewModel.getTitle(title:album:artist:mediaType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7 != 4)
  {
    if (a7 == 5) {
      return 0;
    }
    if (a7 != 7) {
      a3 = a1;
    }
  }
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t MOSuggestionCollectionViewCellViewModel.getSubTitle(titleForDisplay:album:artist:mediaType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if ((a7 & 0xFFFFFFFFFFFFFFFELL) == 6)
  {
    if (!a5 && a6 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      if (a3 == a1 && a4 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 0;
      }
    }
    else
    {
      if (a5 == a1 && a6 == a2) {
        return 0;
      }
      a3 = a5;
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        return 0;
      }
    }
  }
  else
  {
    a3 = a5;
  }
  swift_bridgeObjectRetain();
  return a3;
}

void *MOSuggestionCollectionViewCellViewModel.createAssetViewModels(for:cellStyle:bundleInterfaceType:)(unint64_t a1, unsigned int a2, uint64_t a3)
{
  Swift::String result = _swiftEmptyArrayStorage;
  unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
  if (!a1) {
    return result;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v10;
    if (v10 <= 0) {
      return _swiftEmptyArrayStorage;
    }
    char v16 = 0;
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    uint64_t v5 = v11;
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      return result;
    }
    char v16 = 0;
    swift_bridgeObjectRetain();
    uint64_t v12 = v5;
  }
  unint64_t v6 = *(uint64_t (**)(id, void, uint64_t, uint64_t, char *, uint64_t))(*(void *)v15 + 496);
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_22;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(a1 + 8 * i + 32);
    }
    unint64_t v9 = v8;
    if (v6(v8, a2, v12, i, &v16, a3))
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      swift_release();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  return (void *)v17;
}

uint64_t MOSuggestionCollectionViewCellViewModel.handleSuggestionCollectionViewCellSelect(at:modifiedTitle:isPromptElligibleForTransfer:controller:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = v5[2];
  char v11 = (*(uint64_t (**)(void))(*v5 + 272))();
  if (v11) {
    uint64_t v12 = 0x746E65636552;
  }
  else {
    uint64_t v12 = 0x6E656D6D6F636552;
  }
  if (v11) {
    unint64_t v13 = 0xE600000000000000;
  }
  else {
    unint64_t v13 = 0xEB00000000646564;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))((swift_isaMask & *a5) + 0x168))(v10, a2, a3, a4, v12, v13);

  return swift_bridgeObjectRelease();
}

uint64_t MOSuggestionCollectionViewCellViewModel.handleSuggestionCollectionViewCellFeedback(at:controller:)(uint64_t a1, void *a2)
{
  uint64_t v4 = v2[2];
  char v5 = (*(uint64_t (**)(void))(*v2 + 272))();
  unint64_t v6 = (objc_class *)[self mainBundle];
  if (v5)
  {
    unint64_t v15 = 0xE600000000000000;
    uint64_t v7 = 0x746E65636552;
    unint64_t v8 = 0xE600000000000000;
    v9.super.Class isa = v6;
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    uint64_t v12 = 0x746E65636552;
  }
  else
  {
    unint64_t v15 = 0xEB00000000646564;
    uint64_t v7 = 0x6E656D6D6F636552;
    unint64_t v8 = 0xEB00000000646564;
    v9.super.Class isa = v6;
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    uint64_t v12 = 0x6E656D6D6F636552;
  }
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, v9, *(Swift::String *)&v10, *(Swift::String *)&v12);

  (*(void (**)(uint64_t, uint64_t, void *))((swift_isaMask & *a2) + 0x190))(v4, v13._countAndFlagsBits, v13._object);

  return swift_bridgeObjectRelease();
}

uint64_t MOSuggestionCollectionViewCellViewModel.handleSuggestionCollectionViewCellRemove(at:controller:)(uint64_t a1, void *a2)
{
  uint64_t v4 = v2[2];
  char v5 = (*(uint64_t (**)(void))(*v2 + 272))();
  if (v5) {
    uint64_t v6 = 0x746E65636552;
  }
  else {
    uint64_t v6 = 0x6E656D6D6F636552;
  }
  if (v5) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xEB00000000646564;
  }
  (*(void (**)(uint64_t, uint64_t, unint64_t))((swift_isaMask & *a2) + 0x180))(v4, v6, v7);

  return swift_bridgeObjectRelease();
}

uint64_t MOSuggestionCollectionViewCellViewModel.handleSuggestionCollectionViewQuickAdd(at:modifiedTitle:isPromptElligibleForTransfer:controller:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = v5[2];
  char v11 = (*(uint64_t (**)(void))(*v5 + 272))();
  if (v11) {
    uint64_t v12 = 0x746E65636552;
  }
  else {
    uint64_t v12 = 0x6E656D6D6F636552;
  }
  if (v11) {
    unint64_t v13 = 0xE600000000000000;
  }
  else {
    unint64_t v13 = 0xEB00000000646564;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))((swift_isaMask & *a5) + 0x170))(v10, a2, a3, a4, v12, v13);

  return swift_bridgeObjectRelease();
}

unint64_t MOSuggestionCollectionViewCellViewModel.resetAssetViewModel(uuid:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  uint64_t v31 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v6 - 8);
  uint64_t v30 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v29 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 296))(v9);
  if (result)
  {
    unint64_t v12 = result;
    if (result >> 62) {
      goto LABEL_23;
    }
    uint64_t v13 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
      while (1)
      {
        if (v13 < 1)
        {
          __break(1u);
          return result;
        }
        unint64_t v14 = 0;
        unint64_t v15 = v12 & 0xC000000000000001;
        uint64_t v26 = a1;
        uint64_t v27 = v13;
        unint64_t v28 = v12;
        unint64_t v32 = v12 & 0xC000000000000001;
        while (1)
        {
          if (v15) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_retain();
          }
          if ((static UUID.== infix(_:_:)() & 1) == 0) {
            goto LABEL_8;
          }
          char v16 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v2 + 312))(v34);
          if (*v17) {
            break;
          }
          v16(v34, 0);
LABEL_7:
          unint64_t v15 = v32;
LABEL_8:
          ++v14;
          swift_release();
          if (v13 == v14) {
            return swift_bridgeObjectRelease();
          }
        }
        uint64_t v18 = v17;
        uint64_t v33 = v16;
        uint64_t v19 = type metadata accessor for URL();
        uint64_t v20 = (uint64_t)v29;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v29, 1, 1, v19);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
        uint64_t v22 = (uint64_t)v30;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v30, 1, 1, v21);
        memset(v35, 0, sizeof(v35));
        char v36 = 1;
        uint64_t v23 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v31, 1, 1, v23);
        type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        swift_allocObject();
        swift_retain();
        uint64_t v24 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v2, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, v20, 0, 0, 0, 0xE000000000000000, 0,
                0xE000000000000000,
                0,
                0xE000000000000000,
                0,
                0,
                0,
                0xE000000000000000,
                0,
                0xE000000000000000,
                0,
                0,
                0,
                0,
                0,
                0,
                0xE000000000000000,
                v22,
                0,
                0xE000000000000000,
                0,
                0,
                0,
                0xE000000000000000,
                0,
                0xE000000000000000,
                0,
                (uint64_t)v35,
                (uint64_t)v35,
                (uint64_t)v35,
                11,
                0,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                0,
                0xE000000000000000,
                1,
                0,
                0xE000000000000000,
                0);
        a1 = *v18;
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v18 = a1;
        if (!isUniquelyReferenced_nonNull_bridgeObject || a1 < 0 || (a1 & 0x4000000000000000) != 0)
        {
          a1 = specialized _ArrayBuffer._consumeAndCreateNew()(a1);
          *uint64_t v18 = a1;
        }
        uint64_t v13 = v27;
        unint64_t v12 = v28;
        if (v14 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          break;
        }
        __break(1u);
LABEL_23:
        unint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v13 = result;
        if (!result) {
          goto LABEL_24;
        }
      }
      *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v14 + 0x20) = v24;
      swift_release();
      specialized Array._endMutation()();
      v33(v34, 0);
      goto LABEL_7;
    }
LABEL_24:
    return swift_bridgeObjectRelease();
  }
  return result;
}

_UNKNOWN **static SuggestionCellStyle.allCases.getter()
{
  return &outlined read-only object #0 of static SuggestionCellStyle.allCases.getter;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance SuggestionCellStyle@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized SuggestionCellStyle.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SuggestionCellStyle(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SuggestionCellStyle.allCases.getter;
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.assetViewModels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MOEventBundleStore.ResourceValidationResult.failedIndices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.getter(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult, a1);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.setter(a1, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult);
}

void (__swiftcall *MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.init(assetViewModels:updateIndex:uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.init(assetViewModels:updateIndex:uuid:)(a1, a2, a3, a4, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult, a5);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.getter(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult, a1);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.getter@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  return outlined init with copy of Date?(v2 + *(int *)(v4 + 24), a2, &demangling cache variable for type metadata for UUID?);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.uuid.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.setter(a1, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.uuid.setter(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = a2(0);
  return outlined assign with take of Date?(a1, v2 + *(int *)(v4 + 24), &demangling cache variable for type metadata for UUID?);
}

void (__swiftcall *MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.uuid.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v1 = a1
     + *(int *)(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0)
              + 24);
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult.init(assetViewModel:updateIndex:uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.init(assetViewModels:updateIndex:uuid:)(a1, a2, a3, a4, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult, a5);
}

uint64_t MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult.init(assetViewModels:updateIndex:uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3 & 1;
  uint64_t v8 = a5(0);
  return outlined init with take of Date?(a4, a6 + *(int *)(v8 + 24), &demangling cache variable for type metadata for UUID?);
}

Swift::OpaquePointer_optional __swiftcall MOSuggestionCollectionViewCellViewModel.targetReferences(previewOnly:previewMax:style:typeSorted:)(Swift::Bool previewOnly, Swift::Int previewMax, MomentsUIService::SuggestionCellStyle style, Swift::Bool typeSorted)
{
  if (previewOnly) {
    return MOEventBundle.orderedAssetReferencesForPreview(max:)(previewMax);
  }
  Swift::OpaquePointer_optional result = MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  unint64_t rawValue = result.value._rawValue;
  if (typeSorted && result.value._rawValue)
  {
    if ((unint64_t)result.value._rawValue >> 62)
    {
      unint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v6 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = (uint64_t)result.value._rawValue & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    uint64_t v8 = (void *)v6;
    specialized MutableCollection<>.sort(by:)((uint64_t *)&v8);
    swift_bridgeObjectRelease();
    unint64_t rawValue = v8;
  }
  result.value._unint64_t rawValue = rawValue;
  return result;
}

uint64_t MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(char a1, Swift::Int a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v66 = a5;
  uint64_t v67 = a6;
  uint64_t v69 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v6;
  if (a1)
  {
    unint64_t v19 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(a2);
  }
  else
  {
    unint64_t v20 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
    unint64_t v19 = v20;
    if (a4)
    {
      if (v20)
      {
        if (v20 >> 62) {
          goto LABEL_37;
        }
        uint64_t v21 = v20 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      }
      return 0;
    }
  }
  unint64_t v70 = v19;
  if (!v19) {
    return 0;
  }
  while (1)
  {
    unint64_t v22 = v70 >> 62;
    if (v70 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v24 = (char *)specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(v69, v23);
    if (!v24)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v25 = v24;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 1, 1, v27);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 1, 1, v28);
    memset(v74, 0, sizeof(v74));
    char v75 = 1;
    uint64_t v29 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 1, 1, v29);
    type metadata accessor for MOSuggestionSheetAssetViewModel(0);
    swift_allocObject();
    uint64_t v30 = v68;
    swift_retain();
    uint64_t v31 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v30, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, v18, 0, 0, 0, 0xE000000000000000, 0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0,
            0,
            0,
            0xE000000000000000,
            (uint64_t)v15,
            0,
            0xE000000000000000,
            0,
            0,
            0,
            0xE000000000000000,
            0,
            0xE000000000000000,
            0,
            (uint64_t)v74,
            (uint64_t)v74,
            (uint64_t)v74,
            11,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0xE000000000000000,
            1,
            0,
            0xE000000000000000,
            0);
    uint64_t v32 = specialized Array.init(repeating:count:)((uint64_t)v31, v23);
    uint64_t v65 = v26;
    *(void *)(v26 + 16) = v32;
    uint64_t v64 = swift_allocObject();
    *(unsigned char *)(v64 + 16) = 0;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain_n();
    uint64_t v18 = v70;
    swift_bridgeObjectRetain();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.debug.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v59 = v25;
    uint64_t v58 = v23;
    if (v36)
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      unint64_t v15 = v25;
      *(_DWORD *)uint64_t v37 = 134218498;
      uint64_t v72 = v69;
      uint64_t v73 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2048;
      uint64_t v72 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v39 = Array.debugDescription.getter();
      uint64_t v72 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v18 = v70;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[MOSuggestionCollectionViewCellViewModel] style: %ld, assetReferencesCount: %ld, assetSizes: %s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v41 = v18 & 0xFFFFFFFFFFFFFF8;
      if (v22) {
        goto LABEL_16;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v41 = v18 & 0xFFFFFFFFFFFFFF8;
      if (v22)
      {
LABEL_16:
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        if (!v42) {
          goto LABEL_33;
        }
        goto LABEL_22;
      }
    }
    uint64_t v42 = *(void *)(v41 + 16);
    swift_bridgeObjectRetain();
    if (!v42) {
      goto LABEL_33;
    }
LABEL_22:
    if (v42 >= 1) {
      break;
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    unint64_t v57 = swift_bridgeObjectRetain();
    uint64_t v21 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v57);
    swift_bridgeObjectRelease();
LABEL_7:
    *(void *)&v74[0] = v21;
    specialized MutableCollection<>.sort(by:)((uint64_t *)v74);
    swift_bridgeObjectRelease();
    unint64_t v70 = *(void *)&v74[0];
  }
  if ((unint64_t)(v42 - 1) >= *((void *)v59 + 2)) {
    goto LABEL_36;
  }
  uint64_t v44 = 0;
  uint64_t v61 = v59 + 32;
  unint64_t v62 = v18 & 0xC000000000000001;
  long long v60 = xmmword_1001DA250;
  uint64_t v63 = v42;
  do
  {
    if (v62)
    {
      uint64_t v45 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v45 = *(void *)(v18 + 8 * v44 + 32);
      swift_retain();
    }
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v46 = static MOSuggestionAssetCacheManager.shared;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = v60;
    *(void *)(v47 + 32) = v45;
    uint64_t v73 = v47;
    specialized Array._endMutation()();
    uint64_t v48 = v73;
    unsigned int v71 = v61[v44];
    uint64_t v49 = swift_allocObject();
    swift_weakInit();
    uint64_t v50 = swift_allocObject();
    uint64_t v52 = v65;
    uint64_t v51 = v66;
    *(void *)(v50 + 16) = v49;
    *(void *)(v50 + 24) = v52;
    uint64_t v53 = v67;
    *(void *)(v50 + 32) = v51;
    *(void *)(v50 + 40) = v53;
    *(unsigned char *)(v50 + 48) = v69;
    *(void *)(v50 + 56) = v18;
    *(void *)(v50 + 64) = v44;
    *(void *)(v50 + 72) = v64;
    uint64_t v54 = one-time initialization token for defaultQueue;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v54 != -1) {
      swift_once();
    }
    ++v44;
    char v55 = *(void (**)(uint64_t, void, id, void, void (*)(unint64_t), uint64_t))(*(void *)v46 + 232);
    id v56 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
    v55(v48, 0, v56, v71, partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:), v50);
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v18 = v70;
  }
  while (v63 != v44);
LABEL_33:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release();
  return v58;
}

void closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(unint64_t a1, uint64_t a2, unint64_t a3, NSObject *a4, uint64_t a5, int a6, unint64_t a7, unint64_t a8, uint64_t a9)
{
  unint64_t v58 = a8;
  LODWORD(v57) = a6;
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v60 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v59 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v44 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = a3;
    void v45[3] = a4;
    v45[4] = a5;
    uint64_t v67 = partial apply for closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:);
    uint64_t v68 = v45;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v64 = 1107296256;
    uint64_t v65 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v66 = &block_descriptor_130;
    uint64_t v46 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = _swiftEmptyArrayStorage;
    lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v46);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v14);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v19, v17);
    return;
  }
  uint64_t v21 = (id *)Strong;
  uint64_t v56 = a5;
  uint64_t v61 = a1;
  if (!a1) {
    goto LABEL_22;
  }
  uint64_t v55 = v17;
  unint64_t v22 = a1;
  uint64_t v23 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!(v22 >> 62))
  {
    uint64_t v24 = *(void *)(v23 + 16);
    swift_bridgeObjectRetain();
    uint64_t v25 = v14;
    if (v24) {
      goto LABEL_5;
    }
LABEL_21:
    a1 = v61;
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v25 = v14;
  if (!v24) {
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v26 = v16;
  uint64_t v54 = v19;
  if ((v61 & 0xC000000000000001) != 0)
  {
    uint64_t v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v23 + 16))
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v27 = (char *)*(id *)(v61 + 32);
  }
  unint64_t v19 = v27;
  uint64_t v24 = a9 + 16;
  swift_bridgeObjectRelease();
  if (a7 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v28 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
  id v29 = [v21[2] interfaceType:v54];
  swift_beginAccess();
  uint64_t v30 = (*((uint64_t (**)(char *, void, uint64_t, unint64_t, uint64_t, id))*v21 + 62))(v19, v57, v28, v58, v24, v29);
  swift_endAccess();
  if (v30)
  {
    uint64_t v61 = v25;
    uint64_t v31 = a4;
    a1 = a3;
    uint64_t v32 = (uint64_t *)(a3 + 16);
    swift_beginAccess();
    uint64_t v33 = *(void *)(a3 + 16);
    uint64_t v34 = (uint8_t *)v30;
    swift_retain();
    char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v32 = v33;
    if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0 || v33 < 0 || (v33 & 0x4000000000000000) != 0)
    {
      uint64_t v33 = specialized _ArrayBuffer._consumeAndCreateNew()(v33);
      *uint64_t v32 = v33;
    }
    uint64_t v36 = v56;
    unint64_t v37 = v58;
    if ((v58 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v57 = v19;
      if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) > v58)
      {
        *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 8 * v58 + 0x20) = v30;
        unint64_t v38 = v37;
        swift_release();
        specialized Array._endMutation()();
        swift_endAccess();
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        uint64_t v39 = (void *)static OS_dispatch_queue.main.getter();
        unint64_t v40 = (void *)swift_allocObject();
        void v40[2] = a1;
        v40[3] = v38;
        v40[4] = v21;
        v40[5] = v31;
        v40[6] = v36;
        uint64_t v67 = partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:);
        uint64_t v68 = v40;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v64 = 1107296256;
        uint64_t v65 = thunk for @escaping @callee_guaranteed () -> ();
        uint64_t v66 = &block_descriptor_136;
        uint64_t v41 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        uint64_t v42 = v54;
        static DispatchQoS.unspecified.getter();
        long long aBlock = _swiftEmptyArrayStorage;
        lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        uint64_t v43 = v61;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();

        _Block_release(v41);
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v60 + 8))(v26, v43);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v55);
        return;
      }
    }
    __break(1u);
    goto LABEL_39;
  }

  a1 = v61;
LABEL_22:
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v47 = type metadata accessor for Logger();
  __swift_project_value_buffer(v47, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n();
  uint64_t v31 = Logger.logObject.getter();
  LOBYTE(v26) = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v31, (os_log_type_t)v26))
  {

    swift_bridgeObjectRelease_n();
    swift_release();
    return;
  }
  uint64_t v34 = (uint8_t *)swift_slowAlloc();
  long long aBlock = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v34 = 136315138;
  if (!a1)
  {
    unint64_t v51 = 0xE300000000000000;
    uint64_t v52 = 7104878;
LABEL_42:
    uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v51, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v26, "[MOSuggestionCollectionViewCellViewModel] failed to generate view model, asset=%s", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    return;
  }
  uint64_t v36 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_40;
    }
    goto LABEL_28;
  }
  uint64_t v48 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v48)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    uint64_t v50 = 0;
    goto LABEL_41;
  }
LABEL_28:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_31;
  }
  if (*(void *)(v36 + 16))
  {
    id v49 = *(id *)(a1 + 32);
LABEL_31:
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
LABEL_41:
    uint64_t v62 = (uint64_t)v50;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset?);
    uint64_t v52 = Optional.debugDescription.getter();
    unint64_t v51 = v53;

    goto LABEL_42;
  }
  __break(1u);
}

uint64_t closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = &v7[*(int *)(v5 + 32)];
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)unint64_t v7 = v8;
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  swift_bridgeObjectRetain();
  a2(v7);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult((uint64_t)v7, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult);
}

uint64_t closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v8 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = &v11[*(int *)(v9 + 32)];
  uint64_t v14 = *(void (**)(uint64_t))(*(void *)a3 + 344);
  uint64_t v15 = swift_bridgeObjectRetain();
  v14(v15);
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 0, 1, v16);
  *(void *)uint64_t v11 = v12;
  *((void *)v11 + 1) = a2;
  v11[16] = 0;
  a4(v11);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult((uint64_t)v11, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult);
}

unint64_t specialized MutableCollection.swapAt(_:_:)(unint64_t result, unint64_t a2)
{
  if (result == a2) {
    return result;
  }
  unint64_t v4 = result;
  uint64_t v5 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      unint64_t v6 = *(void *)(v5 + 8 * result + 32);
      Swift::OpaquePointer_optional result = swift_retain();
      if ((v5 & 0xC000000000000001) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v5 = *v2;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_26;
  }
  Swift::OpaquePointer_optional result = specialized _ArrayBuffer._getElementSlowPath(_:)();
  unint64_t v6 = result;
  uint64_t v5 = *v2;
  if ((*v2 & 0xC000000000000001) != 0) {
    goto LABEL_23;
  }
LABEL_6:
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v7 = *(void *)(v5 + 8 * a2 + 32);
  swift_retain();
LABEL_9:
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew()(v5);
    uint64_t *v2 = v5;
  }
  *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v7;
  swift_release();
  specialized Array._endMutation()();
  unint64_t v9 = *v2;
  Swift::OpaquePointer_optional result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v9;
  if (!result || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
  {
    Swift::OpaquePointer_optional result = specialized _ArrayBuffer._consumeAndCreateNew()(v9);
    unint64_t v9 = result;
    uint64_t *v2 = result;
  }
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_28;
  }
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = v6;
  swift_release();

  return specialized Array._endMutation()();
}

void closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7, uint64_t a8)
{
  uint64_t v15 = a8 + 16;
  closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(a2, a3, a4, a5, a1, a6, a7, v15);
}

uint64_t closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6, unint64_t a7, uint64_t a8)
{
  uint64_t v61 = a8;
  unint64_t v59 = a7;
  LODWORD(v60) = a6;
  unint64_t v71 = a5;
  uint64_t v72 = a4;
  uint64_t v80 = a3;
  uint64_t v9 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v67 = v9;
  uint64_t v68 = v10;
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v69 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v70 = (char *)&v59 - v13;
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v73 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    unint64_t v71 = static OS_dispatch_queue.main.getter();
    uint64_t v42 = (void *)swift_allocObject();
    uint64_t v43 = v80;
    v42[2] = a2;
    v42[3] = v43;
    v42[4] = v72;
    id v78 = partial apply for closure #1 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:);
    uint64_t v79 = v42;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v75 = 1107296256;
    uint64_t v76 = thunk for @escaping @callee_guaranteed () -> ();
    char v77 = &block_descriptor_149;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v45 = (void *)v71;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v73 + 8))(v16, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  unint64_t v22 = (id *)Strong;
  uint64_t v64 = v20;
  uint64_t v65 = v18;
  uint64_t v66 = v17;
  uint64_t v63 = v14;
  uint64_t v62 = v16;
  uint64_t v23 = v80;
  unint64_t v24 = v71;
  if (v71)
  {
    uint64_t v25 = (id *)v71;
    if (v71 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_5:
        if ((v24 & 0xC000000000000001) != 0)
        {
          id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_21;
          }
          id v27 = v25[4];
        }
        unint64_t v24 = (unint64_t)v27;
        swift_bridgeObjectRelease();
        if (!(v59 >> 62))
        {
          uint64_t v28 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
          id v29 = [v22[2] interfaceType:v59];
          uint64_t v30 = v61;
          swift_beginAccess();
          uint64_t v31 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id))*((void *)*v22 + 62);
          uint64_t v32 = v60;
          id v60 = (id)v24;
          uint64_t v33 = v31(v24, v32, v28, a2, v30, v29);
          swift_endAccess();
          if (v33)
          {
            type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
            uint64_t v34 = v23;
            os_log_type_t v35 = (void *)static OS_dispatch_queue.main.getter();
            uint64_t v36 = (void *)swift_allocObject();
            v36[2] = v33;
            v36[3] = a2;
            v36[4] = v22;
            uint64_t v36[5] = v34;
            v36[6] = v72;
            id v78 = partial apply for closure #2 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:);
            uint64_t v79 = v36;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v75 = 1107296256;
            uint64_t v76 = thunk for @escaping @callee_guaranteed () -> ();
            char v77 = &block_descriptor_161;
            unint64_t v37 = _Block_copy(&aBlock);
            swift_retain();
            swift_retain();
            swift_retain();
            swift_release();
            unint64_t v38 = v64;
            static DispatchQoS.unspecified.getter();
            long long aBlock = (void **)_swiftEmptyArrayStorage;
            lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
            lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
            uint64_t v39 = v62;
            uint64_t v40 = v63;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();

            _Block_release(v37);
            swift_release();
            swift_release();

            (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v40);
            return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v38, v66);
          }

          goto LABEL_16;
        }
LABEL_21:
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v26) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
LABEL_16:
    unint64_t v24 = (unint64_t)v25;
  }
  uint64_t v46 = specialized static MOSuggestionSheetAssetViewModel.PLACEHOLDER_VIEW_MODEL(parent:)((uint64_t)v22);
  uint64_t v47 = (uint64_t)v70;
  uint64_t v48 = &v70[*(int *)(v67 + 24)];
  (*((void (**)(void))*v22 + 43))();
  uint64_t v49 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
  *(void *)uint64_t v47 = v46;
  *(void *)(v47 + 8) = a2;
  *(unsigned char *)(v47 + 16) = 0;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  unint64_t v71 = static OS_dispatch_queue.main.getter();
  uint64_t v50 = v23;
  uint64_t v51 = v69;
  outlined init with copy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(v47, v69);
  unint64_t v52 = (*(unsigned __int8 *)(v68 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  unint64_t v53 = (void *)swift_allocObject();
  v53[2] = v24;
  v53[3] = v50;
  v53[4] = v72;
  outlined init with take of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(v51, (uint64_t)v53 + v52);
  id v78 = partial apply for closure #3 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:);
  uint64_t v79 = v53;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v75 = 1107296256;
  uint64_t v76 = thunk for @escaping @callee_guaranteed () -> ();
  char v77 = &block_descriptor_155;
  uint64_t v54 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v55 = v64;
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v56 = v62;
  uint64_t v57 = v63;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v58 = (void *)v71;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v54);
  swift_release();

  (*(void (**)(char *, uint64_t))(v73 + 8))(v56, v57);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v55, v66);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(v47, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t closure #1 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v7[*(int *)(v5 + 32)];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = a1;
  v7[16] = 0;
  a2(v7);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult((uint64_t)v7, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t closure #2 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v8 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v11[*(int *)(v9 + 32)];
  (*(void (**)(void))(*(void *)a3 + 344))();
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  v11[16] = 0;
  swift_retain();
  a4(v11);
  return outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult((uint64_t)v11, type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t closure #3 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(unint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v8, v9))
  {

    swift_bridgeObjectRelease_n();
    return a2(a4);
  }
  uint64_t v10 = (uint8_t *)swift_slowAlloc();
  uint64_t v19 = swift_slowAlloc();
  *(_DWORD *)uint64_t v10 = 136315138;
  uint64_t v18 = a2;
  if (!a1)
  {
    unint64_t v15 = 0xE300000000000000;
    uint64_t v16 = 7104878;
LABEL_16:
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionCollectionViewCellViewModel] failed to generate view model, asset=%s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v18;
    return a2(a4);
  }
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_7;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_14;
  }
LABEL_7:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v13 = *(id *)(a1 + 32);
LABEL_10:
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset?);
    uint64_t v16 = Optional.debugDescription.getter();
    unint64_t v15 = v17;

    goto LABEL_16;
  }
  __break(1u);
  return result;
}

unint64_t MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(char a1, Swift::Int a2, char a3, uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) == 0) {
    a2 = 13;
  }
  unint64_t result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(a2);
  if (result)
  {
    unint64_t v8 = result;
    unint64_t v9 = result >> 62;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      size_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      size_t v10 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v11 = specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(a3, v10);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = 0;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = _swiftEmptyArrayStorage;
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      __swift_project_value_buffer(v13, (uint64_t)static MOAngelLogger.assets);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 134218498;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v16 + 12) = 2048;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 22) = 2080;
        uint64_t v17 = Array.debugDescription.getter();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "[MOSuggestionCollectionViewCellViewModel] style: %ld, assetReferencesCount: %ld, assetSizes: %s", (uint8_t *)v16, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v19 = v8 & 0xFFFFFFFFFFFFFF8;
        if (v9) {
          goto LABEL_12;
        }
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v19 = v8 & 0xFFFFFFFFFFFFFF8;
        if (v9)
        {
LABEL_12:
          swift_bridgeObjectRetain();
          unint64_t result = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v20 = result;
          if (!result) {
            goto LABEL_30;
          }
          goto LABEL_19;
        }
      }
      uint64_t v20 = *(void *)(v19 + 16);
      unint64_t result = swift_bridgeObjectRetain();
      if (!v20)
      {
LABEL_30:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease_n();
      }
LABEL_19:
      if (v20 < 1)
      {
        __break(1u);
      }
      else if (v20 - 1 < (unint64_t)v12[2])
      {
        uint64_t v21 = 0;
        unint64_t v31 = v8 & 0xC000000000000001;
        uint64_t v32 = v12;
        unint64_t v33 = v8;
        do
        {
          if (v31)
          {
            uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v22 = *(void *)(v8 + 8 * v21 + 32);
            swift_retain();
          }
          if (one-time initialization token for shared != -1) {
            swift_once();
          }
          uint64_t v23 = static MOSuggestionAssetCacheManager.shared;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = xmmword_1001DA250;
          *(void *)(v24 + 32) = v22;
          uint64_t v39 = v24;
          specialized Array._endMutation()();
          uint64_t v25 = v39;
          unsigned int v38 = *((unsigned __int8 *)v12 + v21 + 32);
          uint64_t v26 = swift_allocObject();
          swift_weakInit();
          id v27 = (void *)swift_allocObject();
          v27[2] = v26;
          v27[3] = a4;
          v27[4] = a5;
          v27[5] = v34;
          v27[6] = v21;
          v27[7] = v35;
          v27[8] = v8;
          uint64_t v28 = one-time initialization token for defaultQueue;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          if (v28 != -1) {
            swift_once();
          }
          ++v21;
          id v29 = *(void (**)(uint64_t, void, id, void, uint64_t (*)(unint64_t), void *))(*(void *)v23 + 232);
          id v30 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
          v29(v25, 0, v30, v38, partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:), v27);
          swift_release();
          swift_release();

          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v12 = v32;
          unint64_t v8 = v33;
        }
        while (v20 != v21);
        goto LABEL_30;
      }
      __break(1u);
      return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(unint64_t a1, uint64_t a2, void (*a3)(void, char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v48 = a7;
  uint64_t v41 = a6;
  uint64_t v44 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v47 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v43 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v46 = v14;
  __chkstk_darwin(v14);
  uint64_t v42 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    UUID.init()();
    a3(0, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t v21 = Strong;
  uint64_t v22 = (void **)(a5 + 16);
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = (void *)_CocoaArrayWrapper.endIndex.getter();
      if (v23)
      {
LABEL_5:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_25;
          }
          id v24 = *(id *)(a1 + 32);
        }
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v23 = *v22;
        a1 = v25;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v22 = v23;
        if (isUniquelyReferenced_nonNull_native)
        {
LABEL_9:
          unint64_t v28 = v23[2];
          unint64_t v27 = v23[3];
          if (v28 >= v27 >> 1)
          {
            uint64_t v23 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v27 > 1), v28 + 1, 1, v23);
            *uint64_t v22 = v23;
          }
          v23[2] = v28 + 1;
          id v29 = &v23[2 * v28];
          uint64_t v30 = v41;
          v29[4] = a1;
          v29[5] = v30;
          swift_endAccess();

          goto LABEL_15;
        }
LABEL_25:
        uint64_t v23 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v23[2] + 1, 1, v23);
        *uint64_t v22 = v23;
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v23 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v23) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_15:
  uint64_t v32 = (uint64_t *)(v48 + 16);
  swift_beginAccess();
  uint64_t v33 = *v32 + 1;
  if (__OFADD__(*v32, 1))
  {
    __break(1u);
  }
  else
  {
    *uint64_t v32 = v33;
    if (!(a8 >> 62))
    {
      uint64_t v34 = *(void *)((a8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_18:
  if (v33 != v34) {
    return swift_release();
  }
  swift_beginAccess();
  specialized MutableCollection<>.sort(by:)((void **)(a5 + 16));
  swift_endAccess();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v35 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = a3;
  v36[3] = a4;
  v36[4] = a5;
  uint64_t v36[5] = v21;
  aBlock[4] = partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:);
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_19;
  unint64_t v37 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  unsigned int v38 = v42;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type UUID and conformance UUID((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v40 = v43;
  uint64_t v39 = v44;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v37);
  swift_release();

  (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v38, v46);
}

uint64_t closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(void (*a1)(void, void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    uint64_t v19 = a2;
    uint64_t v20 = a1;
    uint64_t v21 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v15 = 32;
    do
    {
      id v16 = *(id *)(v12 + v15);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v15 += 16;
      --v13;
    }
    while (v13);
    uint64_t v14 = v21;
    swift_bridgeObjectRelease();
    a1 = v20;
  }
  id v17 = [*(id *)(a4 + 16) bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  a1(v14, v11);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder.asset.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t MOAssetAndMediaType.mediaType.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *MOAssetAndMediaType.consolidatedMediaType.getter(void *a1)
{
  id v2 = a1;
  return a1;
}

uint64_t static MOAssetAndMediaType.consolidatedSuggestionAssetMediaItemType(_:)(uint64_t result, char a2)
{
  int v2 = a2 & 1;
  if (result == 7 && v2 == 0) {
    return 7;
  }
  return result;
}

void MOAssetAndMediaType.hash(into:)(uint64_t a1, void *a2, Swift::UInt a3, char a4)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = a2;
  String.hash(into:)();

  swift_bridgeObjectRelease();
  if (a4)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(a3);
  }
}

uint64_t static MOAssetAndMediaType.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return specialized static MOAssetAndMediaType.== infix(_:_:)(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

Swift::Int MOAssetAndMediaType.hashValue.getter(void *a1, Swift::UInt a2, char a3)
{
  Hasher.init(_seed:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a1;
  String.hash(into:)();

  swift_bridgeObjectRelease();
  if (a3)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(a2);
  }
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOAssetAndMediaType()
{
  int v2 = *(void **)v0;
  Swift::UInt v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = v2;
  String.hash(into:)();

  swift_bridgeObjectRelease();
  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance MOAssetAndMediaType()
{
  int v2 = *(void **)v0;
  Swift::UInt v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = v2;
  String.hash(into:)();

  swift_bridgeObjectRelease();
  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOAssetAndMediaType()
{
  int v2 = *(void **)v0;
  Swift::UInt v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = v2;
  String.hash(into:)();

  swift_bridgeObjectRelease();
  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MOAssetAndMediaType(uint64_t a1, uint64_t a2)
{
  return specialized static MOAssetAndMediaType.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t _StringGuts._slowEnsureMatchingEncoding(_:)(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_188;
    }
    if (v3) {
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_196;
  }
  Swift::Int v133 = v4;
  unint64_t v130 = a1;
  if (v3 < 2)
  {
    int64_t v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v145 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v139 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_154:
      if (v11 >= 2)
      {
        uint64_t v123 = *v130;
        do
        {
          unint64_t v124 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_183;
          }
          if (!v123) {
            goto LABEL_195;
          }
          uint64_t v125 = *(void *)&v8[16 * v124 + 32];
          uint64_t v126 = *(void *)&v8[16 * v11 + 24];
          specialized _merge<A>(low:mid:high:buffer:by:)((void **)(v123 + 8 * v125), (id *)(v123 + 8 * *(void *)&v8[16 * v11 + 16]), v123 + 8 * v126, v139);
          if (v1) {
            break;
          }
          if (v126 < v125) {
            goto LABEL_184;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v8);
          }
          if (v124 >= *((void *)v8 + 2)) {
            goto LABEL_185;
          }
          uint64_t v127 = &v8[16 * v124 + 32];
          *(void *)uint64_t v127 = v125;
          *((void *)v127 + 1) = v126;
          unint64_t v128 = *((void *)v8 + 2);
          if (v11 > v128) {
            goto LABEL_186;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v128 - v11));
          *((void *)v8 + 2) = v128 - 1;
          unint64_t v11 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_165:
      swift_bridgeObjectRelease();
      *(void *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v139 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v145 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v132 = *a1 + 16;
  int64_t v8 = (char *)_swiftEmptyArrayStorage;
  uint64_t v131 = *a1 - 8;
  uint64_t v140 = *a1;
  Swift::Int v135 = v3;
  while (2)
  {
    Swift::Int v12 = v9;
    Swift::Int v13 = v9 + 1;
    if (v9 + 1 >= v3) {
      goto LABEL_69;
    }
    uint64_t v14 = *(void **)(v10 + 8 * v9);
    id v15 = *(id *)(v10 + 8 * v13);
    id v16 = v14;
    id v17 = [v15 rankingDictionary];
    double v18 = 0.0;
    if (v17)
    {
      uint64_t v19 = v17;
      uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      strcpy((char *)v141, "rankingScore");
      BYTE5(v141[1]) = 0;
      HIWORD(v141[1]) = -5120;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v20 + 16)
        && (unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v142), (v22 & 1) != 0))
      {
        outlined init with copy of Any(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v143);
      }
      else
      {
        long long v143 = 0u;
        long long v144 = 0u;
      }
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)v142);
      if (*((void *)&v144 + 1))
      {
        if (swift_dynamicCast()) {
          double v18 = *(double *)v141;
        }
      }
      else
      {
        outlined destroy of Any?((uint64_t)&v143, &demangling cache variable for type metadata for Any?);
      }
    }
    id v23 = [v16 rankingDictionary];
    if (!v23) {
      goto LABEL_34;
    }
    id v24 = v23;
    uint64_t v25 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    strcpy((char *)v141, "rankingScore");
    BYTE5(v141[1]) = 0;
    HIWORD(v141[1]) = -5120;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v25 + 16) && (unint64_t v26 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v142), (v27 & 1) != 0))
    {
      outlined init with copy of Any(*(void *)(v25 + 56) + 32 * v26, (uint64_t)&v143);
    }
    else
    {
      long long v143 = 0u;
      long long v144 = 0u;
    }
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)v142);
    if (!*((void *)&v144 + 1))
    {
      outlined destroy of Any?((uint64_t)&v143, &demangling cache variable for type metadata for Any?);
      goto LABEL_34;
    }
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_34:

      double v28 = 0.0;
      goto LABEL_35;
    }
    double v28 = *(double *)v141;

LABEL_35:
    Swift::Int v13 = v12 + 2;
    uint64_t v10 = v140;
    if (v12 + 2 >= v3) {
      goto LABEL_61;
    }
    Swift::Int v136 = v12;
    id v29 = (id *)(v132 + 8 * v12);
    while (1)
    {
      uint64_t v30 = *(v29 - 1);
      id v31 = *v29;
      id v32 = v30;
      id v33 = [v31 rankingDictionary];
      double v34 = 0.0;
      if (v33)
      {
        uint64_t v35 = v33;
        uint64_t v36 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        strcpy((char *)v141, "rankingScore");
        BYTE5(v141[1]) = 0;
        HIWORD(v141[1]) = -5120;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v36 + 16)
          && (unint64_t v37 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v142), (v38 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v36 + 56) + 32 * v37, (uint64_t)&v143);
        }
        else
        {
          long long v143 = 0u;
          long long v144 = 0u;
        }
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)v142);
        if (*((void *)&v144 + 1))
        {
          if (swift_dynamicCast()) {
            double v34 = *(double *)v141;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v143, &demangling cache variable for type metadata for Any?);
        }
      }
      id v39 = [v32 rankingDictionary];
      if (v39)
      {
        uint64_t v40 = v39;
        uint64_t v41 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        strcpy((char *)v141, "rankingScore");
        BYTE5(v141[1]) = 0;
        HIWORD(v141[1]) = -5120;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v41 + 16)
          && (unint64_t v42 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v142), (v43 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v41 + 56) + 32 * v42, (uint64_t)&v143);
        }
        else
        {
          long long v143 = 0u;
          long long v144 = 0u;
        }
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)v142);
        if (*((void *)&v144 + 1))
        {
          if (swift_dynamicCast())
          {
            double v44 = *(double *)v141;

            goto LABEL_56;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v143, &demangling cache variable for type metadata for Any?);
        }
      }

      double v44 = 0.0;
LABEL_56:
      uint64_t v10 = v140;
      if (v28 < v18 == v44 >= v34) {
        break;
      }
      ++v13;
      ++v29;
      Swift::Int v3 = v135;
      if (v135 == v13)
      {
        Swift::Int v13 = v135;
        goto LABEL_60;
      }
    }
    Swift::Int v3 = v135;
LABEL_60:
    Swift::Int v12 = v136;
LABEL_61:
    if (v28 < v18)
    {
      if (v13 < v12) {
        goto LABEL_189;
      }
      if (v12 < v13)
      {
        uint64_t v45 = (uint64_t *)(v131 + 8 * v13);
        Swift::Int v46 = v13;
        Swift::Int v47 = v12;
        uint64_t v48 = (uint64_t *)(v10 + 8 * v12);
        do
        {
          if (v47 != --v46)
          {
            if (!v10) {
              goto LABEL_194;
            }
            uint64_t v49 = *v48;
            *uint64_t v48 = *v45;
            *uint64_t v45 = v49;
          }
          ++v47;
          --v45;
          ++v48;
        }
        while (v47 < v46);
      }
    }
LABEL_69:
    if (v13 >= v3) {
      goto LABEL_105;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_187;
    }
    if (v13 - v12 >= v133) {
      goto LABEL_105;
    }
    if (__OFADD__(v12, v133)) {
      goto LABEL_190;
    }
    if (v12 + v133 >= v3) {
      Swift::Int v50 = v3;
    }
    else {
      Swift::Int v50 = v12 + v133;
    }
    if (v50 >= v12)
    {
      if (v13 == v50) {
        goto LABEL_105;
      }
      Swift::Int v137 = v12;
      id v129 = v8;
      uint64_t v51 = v131 + 8 * v13;
      Swift::Int v134 = v50;
      while (2)
      {
        unint64_t v52 = *(void **)(v10 + 8 * v13);
        Swift::Int v53 = v137;
        uint64_t v54 = v51;
        while (2)
        {
          uint64_t v55 = *(void **)v54;
          id v56 = v52;
          id v57 = v55;
          id v58 = [v56 rankingDictionary];
          double v59 = 0.0;
          if (v58)
          {
            id v60 = v58;
            uint64_t v61 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            strcpy((char *)v141, "rankingScore");
            BYTE5(v141[1]) = 0;
            HIWORD(v141[1]) = -5120;
            AnyHashable.init<A>(_:)();
            if (*(void *)(v61 + 16)
              && (unint64_t v62 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v142), (v63 & 1) != 0))
            {
              outlined init with copy of Any(*(void *)(v61 + 56) + 32 * v62, (uint64_t)&v143);
            }
            else
            {
              long long v143 = 0u;
              long long v144 = 0u;
            }
            swift_bridgeObjectRelease();
            outlined destroy of AnyHashable((uint64_t)v142);
            if (*((void *)&v144 + 1))
            {
              if (swift_dynamicCast()) {
                double v59 = *(double *)v141;
              }
            }
            else
            {
              outlined destroy of Any?((uint64_t)&v143, &demangling cache variable for type metadata for Any?);
            }
          }
          id v64 = [v57 rankingDictionary];
          if (v64)
          {
            uint64_t v65 = v64;
            uint64_t v66 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            strcpy((char *)v141, "rankingScore");
            BYTE5(v141[1]) = 0;
            HIWORD(v141[1]) = -5120;
            AnyHashable.init<A>(_:)();
            if (*(void *)(v66 + 16)
              && (unint64_t v67 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v142), (v68 & 1) != 0))
            {
              outlined init with copy of Any(*(void *)(v66 + 56) + 32 * v67, (uint64_t)&v143);
            }
            else
            {
              long long v143 = 0u;
              long long v144 = 0u;
            }
            swift_bridgeObjectRelease();
            outlined destroy of AnyHashable((uint64_t)v142);
            if (*((void *)&v144 + 1))
            {
              if (swift_dynamicCast())
              {
                double v69 = *(double *)v141;

                goto LABEL_100;
              }
            }
            else
            {
              outlined destroy of Any?((uint64_t)&v143, &demangling cache variable for type metadata for Any?);
            }
          }

          double v69 = 0.0;
LABEL_100:
          uint64_t v10 = v140;
          if (v69 >= v59) {
            break;
          }
          if (!v140) {
            goto LABEL_192;
          }
          unint64_t v70 = *(void **)v54;
          unint64_t v52 = *(void **)(v54 + 8);
          *(void *)uint64_t v54 = v52;
          *(void *)(v54 + 8) = v70;
          v54 -= 8;
          if (v13 != ++v53) {
            continue;
          }
          break;
        }
        ++v13;
        v51 += 8;
        if (v13 != v134) {
          continue;
        }
        break;
      }
      Swift::Int v13 = v134;
      int64_t v8 = v129;
      Swift::Int v3 = v135;
      Swift::Int v12 = v137;
LABEL_105:
      if (v13 < v12) {
        goto LABEL_182;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v72 = *((void *)v8 + 2);
      unint64_t v71 = *((void *)v8 + 3);
      unint64_t v11 = v72 + 1;
      uint64_t v10 = v140;
      if (v72 >= v71 >> 1)
      {
        uint64_t v122 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v71 > 1), v72 + 1, 1, v8);
        uint64_t v10 = v140;
        int64_t v8 = v122;
      }
      *((void *)v8 + 2) = v11;
      uint64_t v73 = v8 + 32;
      unint64_t v74 = &v8[16 * v72 + 32];
      *(void *)unint64_t v74 = v12;
      *((void *)v74 + 1) = v13;
      Swift::Int v138 = v13;
      if (v72)
      {
        while (2)
        {
          unint64_t v75 = v11 - 1;
          if (v11 >= 4)
          {
            uint64_t v80 = &v73[16 * v11];
            uint64_t v81 = *((void *)v80 - 8);
            uint64_t v82 = *((void *)v80 - 7);
            BOOL v86 = __OFSUB__(v82, v81);
            uint64_t v83 = v82 - v81;
            if (v86) {
              goto LABEL_171;
            }
            uint64_t v85 = *((void *)v80 - 6);
            uint64_t v84 = *((void *)v80 - 5);
            BOOL v86 = __OFSUB__(v84, v85);
            uint64_t v78 = v84 - v85;
            char v79 = v86;
            if (v86) {
              goto LABEL_172;
            }
            unint64_t v87 = v11 - 2;
            uint64_t v88 = &v73[16 * v11 - 32];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v86 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v86) {
              goto LABEL_174;
            }
            BOOL v86 = __OFADD__(v78, v91);
            uint64_t v92 = v78 + v91;
            if (v86) {
              goto LABEL_177;
            }
            if (v92 >= v83)
            {
              uint64_t v110 = &v73[16 * v75];
              uint64_t v112 = *(void *)v110;
              uint64_t v111 = *((void *)v110 + 1);
              BOOL v86 = __OFSUB__(v111, v112);
              uint64_t v113 = v111 - v112;
              if (v86) {
                goto LABEL_181;
              }
              BOOL v103 = v78 < v113;
            }
            else
            {
LABEL_124:
              if (v79) {
                goto LABEL_173;
              }
              unint64_t v87 = v11 - 2;
              unint64_t v93 = &v73[16 * v11 - 32];
              uint64_t v95 = *(void *)v93;
              uint64_t v94 = *((void *)v93 + 1);
              BOOL v96 = __OFSUB__(v94, v95);
              uint64_t v97 = v94 - v95;
              char v98 = v96;
              if (v96) {
                goto LABEL_176;
              }
              uint64_t v99 = &v73[16 * v75];
              uint64_t v101 = *(void *)v99;
              uint64_t v100 = *((void *)v99 + 1);
              BOOL v86 = __OFSUB__(v100, v101);
              uint64_t v102 = v100 - v101;
              if (v86) {
                goto LABEL_179;
              }
              if (__OFADD__(v97, v102)) {
                goto LABEL_180;
              }
              if (v97 + v102 < v78) {
                goto LABEL_136;
              }
              BOOL v103 = v78 < v102;
            }
            if (v103) {
              unint64_t v75 = v87;
            }
          }
          else
          {
            if (v11 == 3)
            {
              uint64_t v77 = *((void *)v8 + 4);
              uint64_t v76 = *((void *)v8 + 5);
              BOOL v86 = __OFSUB__(v76, v77);
              uint64_t v78 = v76 - v77;
              char v79 = v86;
              goto LABEL_124;
            }
            uint64_t v104 = *((void *)v8 + 4);
            uint64_t v105 = *((void *)v8 + 5);
            BOOL v86 = __OFSUB__(v105, v104);
            uint64_t v97 = v105 - v104;
            char v98 = v86;
LABEL_136:
            if (v98) {
              goto LABEL_175;
            }
            uint64_t v106 = &v73[16 * v75];
            uint64_t v108 = *(void *)v106;
            uint64_t v107 = *((void *)v106 + 1);
            BOOL v86 = __OFSUB__(v107, v108);
            uint64_t v109 = v107 - v108;
            if (v86) {
              goto LABEL_178;
            }
            if (v109 < v97) {
              goto LABEL_14;
            }
          }
          unint64_t v114 = v75 - 1;
          if (v75 - 1 >= v11)
          {
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
            goto LABEL_191;
          }
          if (!v10) {
            goto LABEL_193;
          }
          Swift::Int v115 = v3;
          int v116 = v8;
          id v117 = &v73[16 * v114];
          uint64_t v118 = *(void *)v117;
          uint64_t v119 = &v73[16 * v75];
          uint64_t v120 = *((void *)v119 + 1);
          specialized _merge<A>(low:mid:high:buffer:by:)((void **)(v10 + 8 * *(void *)v117), (id *)(v10 + 8 * *(void *)v119), v10 + 8 * v120, v139);
          if (v1) {
            goto LABEL_165;
          }
          if (v120 < v118) {
            goto LABEL_168;
          }
          if (v75 > *((void *)v116 + 2)) {
            goto LABEL_169;
          }
          *(void *)id v117 = v118;
          *(void *)&v73[16 * v114 + 8] = v120;
          unint64_t v121 = *((void *)v116 + 2);
          if (v75 >= v121) {
            goto LABEL_170;
          }
          int64_t v8 = v116;
          unint64_t v11 = v121 - 1;
          memmove(&v73[16 * v75], v119 + 16, 16 * (v121 - 1 - v75));
          *((void *)v116 + 2) = v121 - 1;
          Swift::Int v3 = v115;
          uint64_t v10 = v140;
          if (v121 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v11 = 1;
LABEL_14:
      Swift::Int v9 = v138;
      if (v138 >= v3) {
        goto LABEL_154;
      }
      continue;
    }
    break;
  }
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  id *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  Swift::Int v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  Swift::Int v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  id v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  void *v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  id v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  Swift::Int v126;
  Swift::Int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void **v131;
  uint64_t v132;
  void (**v133)(char *, uint64_t);
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;

  Swift::Int v136 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v136 - 8);
  Swift::Int v3 = __chkstk_darwin(v136);
  Swift::Int v135 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::Int v134 = (char *)&v121 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = _minimumMergeRunLength(_:)(v6);
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    int64_t v8 = v6;
  }
  else {
    int64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  uint64_t v126 = v7;
  if (v6 < 2)
  {
    unint64_t v11 = (char *)_swiftEmptyArrayStorage;
    uint64_t v139 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v131 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      uint64_t v14 = _swiftEmptyArrayStorage[2];
LABEL_100:
      uint64_t v112 = v132;
      if (v14 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v113) {
            goto LABEL_141;
          }
          Swift::Int v115 = v11;
          int v116 = v11 + 32;
          id v117 = *(void *)&v11[16 * v114 + 32];
          uint64_t v118 = *(void *)&v11[16 * v14 + 24];
          specialized _merge<A>(low:mid:high:buffer:by:)(v113 + 8 * v117, (id *)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
          if (v112) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::Int v115 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_131;
          }
          uint64_t v119 = &v115[16 * v114 + 32];
          *(void *)uint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          uint64_t v120 = *((void *)v115 + 2);
          if (v14 > v120) {
            goto LABEL_132;
          }
          unint64_t v11 = v115;
          memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
          *((void *)v115 + 2) = v120 - 1;
          uint64_t v14 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    Swift::Int v9 = v8 >> 1;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle);
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
  }
  Swift::Int v12 = 0;
  Swift::Int v13 = *a1;
  Swift::Int v133 = (void (**)(char *, uint64_t))(v2 + 8);
  unint64_t v124 = v13 + 16;
  uint64_t v122 = a1;
  uint64_t v123 = v13 - 8;
  unint64_t v11 = (char *)_swiftEmptyArrayStorage;
  id v129 = v6;
  Swift::Int v137 = v13;
  while (1)
  {
    id v15 = v12;
    id v16 = v12 + 1;
    unint64_t v128 = v12;
    if (v12 + 1 < v6)
    {
      id v17 = *(void **)(v13 + 8 * v12);
      double v18 = *(id *)(v13 + 8 * v16);
      uint64_t v19 = v17;
      uint64_t v20 = [v18 startDate];
      unint64_t v21 = v134;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      char v22 = [v19 startDate];
      id v23 = v135;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LODWORD(v138) = static Date.> infix(_:_:)();
      id v24 = *v133;
      uint64_t v25 = v23;
      unint64_t v26 = v136;
      (*v133)(v25, v136);
      v24(v21, v26);

      uint64_t v6 = v129;
      id v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        uint64_t v125 = v11;
        char v27 = (id *)(v124 + 8 * v15);
        while (1)
        {
          double v28 = *(v27 - 1);
          id v29 = *v27;
          uint64_t v30 = v28;
          id v31 = [v29 startDate];
          id v32 = v134;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          id v33 = [v30 startDate];
          double v34 = v135;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LODWORD(v33) = static Date.> infix(_:_:)();
          uint64_t v35 = v34;
          uint64_t v36 = v136;
          v24(v35, v136);
          v24(v32, v36);

          if ((v138 ^ v33)) {
            break;
          }
          ++v27;
          uint64_t v6 = v129;
          if (v129 == ++v16)
          {
            id v16 = v129;
            unint64_t v11 = v125;
            goto LABEL_22;
          }
        }
        unint64_t v11 = v125;
        uint64_t v6 = v129;
LABEL_22:
        id v15 = v128;
      }
      Swift::Int v13 = v137;
      if (v138)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          unint64_t v37 = (uint64_t *)(v123 + 8 * v16);
          char v38 = v16;
          id v39 = v15;
          uint64_t v40 = (uint64_t *)(v137 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v41 = *v40;
              *uint64_t v40 = *v37;
              *unint64_t v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v126) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v126)) {
      goto LABEL_136;
    }
    unint64_t v42 = v15 + v126 >= v6 ? v6 : v15 + v126;
    if (v42 < v15) {
      break;
    }
    if (v16 != v42)
    {
      uint64_t v125 = v11;
      char v43 = v123 + 8 * v16;
      uint64_t v127 = v42;
      do
      {
        double v44 = *(void **)(v13 + 8 * v16);
        uint64_t v45 = v15;
        unint64_t v130 = v43;
        while (1)
        {
          Swift::Int v46 = v16;
          Swift::Int v47 = *(void **)v43;
          uint64_t v48 = v44;
          Swift::Int v138 = v48;
          uint64_t v49 = v47;
          Swift::Int v50 = [v48 startDate];
          uint64_t v51 = v134;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v52 = [v49 startDate];
          Swift::Int v53 = v135;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v52) = static Date.> infix(_:_:)();
          uint64_t v54 = *v133;
          uint64_t v55 = v53;
          id v56 = v136;
          (*v133)(v55, v136);
          v54(v51, v56);

          if ((v52 & 1) == 0) {
            break;
          }
          Swift::Int v13 = v137;
          if (!v137) {
            goto LABEL_138;
          }
          id v16 = v46;
          id v57 = *(void **)v43;
          double v44 = *(void **)(v43 + 8);
          *(void *)char v43 = v44;
          *(void *)(v43 + 8) = v57;
          v43 -= 8;
          if (v46 == ++v45) {
            goto LABEL_43;
          }
        }
        Swift::Int v13 = v137;
        id v16 = v46;
LABEL_43:
        ++v16;
        char v43 = v130 + 8;
        id v15 = v128;
      }
      while (v16 != v127);
      id v16 = v127;
      unint64_t v11 = v125;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v138 = (id)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    id v60 = *((void *)v11 + 2);
    double v59 = *((void *)v11 + 3);
    uint64_t v14 = v60 + 1;
    Swift::Int v13 = v137;
    if (v60 >= v59 >> 1)
    {
      uint64_t v111 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v59 > 1), v60 + 1, 1, v11);
      Swift::Int v13 = v137;
      unint64_t v11 = v111;
    }
    *((void *)v11 + 2) = v14;
    uint64_t v61 = v11 + 32;
    unint64_t v62 = &v11[16 * v60 + 32];
    char v63 = v138;
    *(void *)unint64_t v62 = v15;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        id v64 = v14 - 1;
        if (v14 >= 4)
        {
          double v69 = &v61[16 * v14];
          unint64_t v70 = *((void *)v69 - 8);
          unint64_t v71 = *((void *)v69 - 7);
          unint64_t v75 = __OFSUB__(v71, v70);
          unint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_117;
          }
          unint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          unint64_t v75 = __OFSUB__(v73, v74);
          unint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_118;
          }
          uint64_t v76 = v14 - 2;
          uint64_t v77 = &v61[16 * v14 - 32];
          char v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          unint64_t v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_120;
          }
          unint64_t v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_123;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            unint64_t v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_127;
            }
            uint64_t v92 = v67 < v102;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            unint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            unint64_t v75 = __OFSUB__(v94, v93);
            BOOL v86 = v94 - v93;
            unint64_t v87 = v75;
            goto LABEL_81;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          unint64_t v75 = __OFSUB__(v65, v66);
          unint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_119;
        }
        uint64_t v76 = v14 - 2;
        uint64_t v82 = &v61[16 * v14 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        uint64_t v85 = __OFSUB__(v83, v84);
        BOOL v86 = v83 - v84;
        unint64_t v87 = v85;
        if (v85) {
          goto LABEL_122;
        }
        uint64_t v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        unint64_t v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_125;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_126;
        }
        if (v86 + v91 >= v67)
        {
          uint64_t v92 = v67 < v91;
LABEL_87:
          if (v92) {
            id v64 = v76;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v87) {
          goto LABEL_121;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        BOOL v96 = *((void *)v95 + 1);
        unint64_t v75 = __OFSUB__(v96, v97);
        char v98 = v96 - v97;
        if (v75) {
          goto LABEL_124;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_89:
        BOOL v103 = v64 - 1;
        if (v64 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        uint64_t v104 = v11;
        uint64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = v132;
        specialized _merge<A>(low:mid:high:buffer:by:)(v13 + 8 * *(void *)v105, (id *)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
        uint64_t v132 = v109;
        if (v109) {
          goto LABEL_111;
        }
        if (v108 < v106) {
          goto LABEL_114;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        uint64_t v110 = *((void *)v104 + 2);
        if (v64 >= v110) {
          goto LABEL_116;
        }
        unint64_t v11 = v104;
        uint64_t v14 = v110 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
        *((void *)v104 + 2) = v110 - 1;
        Swift::Int v13 = v137;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    uint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = v129;
    Swift::Int v12 = (uint64_t)v138;
    if ((uint64_t)v138 >= v129)
    {
      a1 = v122;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id *v22;
  void *v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t *v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t *v33;
  uint64_t v34;
  Swift::Int v35;
  uint64_t v36;
  void *v37;
  Swift::Int v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  void *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  Swift::Int v114;
  Swift::Int v115;
  Swift::Int v116;
  Swift::Int v117;
  void **v118;
  uint64_t v119;

  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  uint64_t v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_132;
    }
    if (v4) {
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_140;
  }
  uint64_t v7 = v5;
  uint64_t v110 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    uint64_t v119 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v118 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      Swift::Int v13 = _swiftEmptyArrayStorage[2];
LABEL_98:
      uint64_t v102 = v10;
      if (v13 >= 2)
      {
        BOOL v103 = *v110;
        do
        {
          uint64_t v104 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_127;
          }
          if (!v103) {
            goto LABEL_139;
          }
          uint64_t v105 = v102;
          uint64_t v106 = *(void *)&v102[16 * v104 + 32];
          uint64_t v107 = *(void *)&v102[16 * v13 + 24];
          specialized _merge<A>(low:mid:high:buffer:by:)((void **)(v103 + 8 * v106), (id *)(v103 + 8 * *(void *)&v102[16 * v13 + 16]), v103 + 8 * v107, v118);
          if (v2) {
            break;
          }
          if (v107 < v106) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v105 = specialized _ArrayBuffer._consumeAndCreateNew()((uint64_t)v105);
          }
          if (v104 >= *((void *)v105 + 2)) {
            goto LABEL_129;
          }
          uint64_t v108 = &v105[16 * v104 + 32];
          *(void *)uint64_t v108 = v106;
          *((void *)v108 + 1) = v107;
          uint64_t v109 = *((void *)v105 + 2);
          if (v13 > v109) {
            goto LABEL_130;
          }
          memmove(&v105[16 * v13 + 16], &v105[16 * v13 + 32], 16 * (v109 - v13));
          uint64_t v102 = v105;
          *((void *)v105 + 2) = v109 - 1;
          Swift::Int v13 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    int64_t v8 = v6 >> 1;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource);
    Swift::Int v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    uint64_t v118 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v119 = v9;
  }
  unint64_t v114 = v7;
  unint64_t v11 = 0;
  Swift::Int v12 = *a1;
  uint64_t v111 = *a1 - 8;
  uint64_t v112 = *a1 + 16;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v115 = v4;
  while (1)
  {
    uint64_t v14 = v11++;
    int v116 = v14;
    if (v11 < v4)
    {
      id v15 = *(void **)(v12 + 8 * v14);
      id v16 = *(id *)(v12 + 8 * v11);
      id v17 = v15;
      [v16 priorityScore];
      uint64_t v19 = v18;
      [v17 priorityScore];
      unint64_t v21 = v20;

      unint64_t v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        char v22 = (id *)(v112 + 8 * v14);
        while (1)
        {
          id v23 = *(v22 - 1);
          id v24 = *v22;
          uint64_t v25 = v23;
          [v24 priorityScore];
          char v27 = v26;
          [v25 priorityScore];
          id v29 = v28;

          if (v19 < v21 == v27 >= v29) {
            break;
          }
          ++v11;
          ++v22;
          if (v4 == v11)
          {
            unint64_t v11 = v4;
            break;
          }
        }
        uint64_t v14 = v116;
      }
      if (v19 < v21)
      {
        if (v11 < v14) {
          goto LABEL_133;
        }
        if (v14 < v11)
        {
          uint64_t v30 = (uint64_t *)(v111 + 8 * v11);
          id v31 = v11;
          id v32 = v14;
          id v33 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v32 != --v31)
            {
              if (!v12) {
                goto LABEL_138;
              }
              double v34 = *v33;
              *id v33 = *v30;
              *uint64_t v30 = v34;
            }
            ++v32;
            --v30;
            ++v33;
          }
          while (v32 < v31);
        }
      }
    }
    if (v11 >= v4) {
      goto LABEL_47;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_131;
    }
    if (v11 - v14 >= v114) {
      goto LABEL_47;
    }
    if (__OFADD__(v14, v114)) {
      goto LABEL_134;
    }
    uint64_t v35 = v14 + v114 >= v4 ? v4 : v14 + v114;
    if (v35 < v14) {
      break;
    }
    if (v11 != v35)
    {
      uint64_t v113 = v10;
      uint64_t v36 = v111 + 8 * v11;
      do
      {
        unint64_t v37 = *(void **)(v12 + 8 * v11);
        char v38 = v14;
        id v39 = v36;
        do
        {
          uint64_t v40 = *(void **)v39;
          uint64_t v41 = v37;
          unint64_t v42 = v40;
          [v41 priorityScore];
          double v44 = v43;
          [v42 priorityScore];
          Swift::Int v46 = v45;

          if (v44 >= v46) {
            break;
          }
          if (!v12) {
            goto LABEL_136;
          }
          Swift::Int v47 = *(void **)v39;
          unint64_t v37 = *(void **)(v39 + 8);
          *(void *)id v39 = v37;
          *(void *)(v39 + 8) = v47;
          v39 -= 8;
          ++v38;
        }
        while (v11 != v38);
        ++v11;
        v36 += 8;
        uint64_t v14 = v116;
      }
      while (v11 != v35);
      unint64_t v11 = v35;
      uint64_t v10 = v113;
    }
LABEL_47:
    if (v11 < v14) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    uint64_t v49 = *((void *)v10 + 2);
    uint64_t v48 = *((void *)v10 + 3);
    Swift::Int v13 = v49 + 1;
    if (v49 >= v48 >> 1) {
      uint64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v48 > 1), v49 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v13;
    Swift::Int v50 = v10 + 32;
    uint64_t v51 = &v10[16 * v49 + 32];
    *(void *)uint64_t v51 = v14;
    *((void *)v51 + 1) = v11;
    if (v49)
    {
      id v117 = v11;
      while (1)
      {
        unint64_t v52 = v13 - 1;
        if (v13 >= 4)
        {
          id v57 = &v50[16 * v13];
          id v58 = *((void *)v57 - 8);
          double v59 = *((void *)v57 - 7);
          char v63 = __OFSUB__(v59, v58);
          id v60 = v59 - v58;
          if (v63) {
            goto LABEL_115;
          }
          unint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          char v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          id v56 = v63;
          if (v63) {
            goto LABEL_116;
          }
          id v64 = v13 - 2;
          uint64_t v65 = &v50[16 * v13 - 32];
          unint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          char v63 = __OFSUB__(v66, v67);
          char v68 = v66 - v67;
          if (v63) {
            goto LABEL_118;
          }
          char v63 = __OFADD__(v55, v68);
          double v69 = v55 + v68;
          if (v63) {
            goto LABEL_121;
          }
          if (v69 >= v60)
          {
            unint64_t v87 = &v50[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            char v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_125;
            }
            uint64_t v80 = v55 < v90;
            goto LABEL_85;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v81 = *((void *)v10 + 4);
            uint64_t v82 = *((void *)v10 + 5);
            char v63 = __OFSUB__(v82, v81);
            unint64_t v74 = v82 - v81;
            unint64_t v75 = v63;
            goto LABEL_79;
          }
          uint64_t v54 = *((void *)v10 + 4);
          Swift::Int v53 = *((void *)v10 + 5);
          char v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          id v56 = v63;
        }
        if (v56) {
          goto LABEL_117;
        }
        id v64 = v13 - 2;
        unint64_t v70 = &v50[16 * v13 - 32];
        unint64_t v72 = *(void *)v70;
        unint64_t v71 = *((void *)v70 + 1);
        uint64_t v73 = __OFSUB__(v71, v72);
        unint64_t v74 = v71 - v72;
        unint64_t v75 = v73;
        if (v73) {
          goto LABEL_120;
        }
        uint64_t v76 = &v50[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        char v63 = __OFSUB__(v77, v78);
        char v79 = v77 - v78;
        if (v63) {
          goto LABEL_123;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_124;
        }
        if (v74 + v79 >= v55)
        {
          uint64_t v80 = v55 < v79;
LABEL_85:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v75) {
          goto LABEL_119;
        }
        uint64_t v83 = &v50[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        char v63 = __OFSUB__(v84, v85);
        BOOL v86 = v84 - v85;
        if (v63) {
          goto LABEL_122;
        }
        if (v86 < v74) {
          goto LABEL_14;
        }
LABEL_87:
        uint64_t v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v92 = v12;
        if (!v12) {
          goto LABEL_137;
        }
        unint64_t v93 = v10;
        uint64_t v94 = &v50[16 * v91];
        uint64_t v95 = *(void *)v94;
        BOOL v96 = v50;
        uint64_t v97 = v52;
        char v98 = &v50[16 * v52];
        uint64_t v99 = *((void *)v98 + 1);
        uint64_t v100 = v92;
        specialized _merge<A>(low:mid:high:buffer:by:)((void **)(v92 + 8 * *(void *)v94), (id *)(v92 + 8 * *(void *)v98), v92 + 8 * v99, v118);
        if (v1) {
          goto LABEL_95;
        }
        if (v99 < v95) {
          goto LABEL_112;
        }
        if (v97 > *((void *)v93 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v94 = v95;
        *(void *)&v96[16 * v91 + 8] = v99;
        uint64_t v101 = *((void *)v93 + 2);
        if (v97 >= v101) {
          goto LABEL_114;
        }
        uint64_t v10 = v93;
        Swift::Int v13 = v101 - 1;
        memmove(v98, v98 + 16, 16 * (v101 - 1 - v97));
        Swift::Int v50 = v96;
        *((void *)v93 + 2) = v101 - 1;
        Swift::Int v12 = v100;
        unint64_t v11 = v117;
        if (v101 <= 2) {
          goto LABEL_14;
        }
      }
    }
    Swift::Int v13 = 1;
LABEL_14:
    Swift::Int v4 = v115;
    if (v11 >= v115)
    {
      uint64_t v2 = v1;
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
    id v31 = (char *)&type metadata for Any + 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v26 = v6;
    while (1)
    {
      Swift::Int v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      id v12 = [v10 rankingDictionary];
      double v13 = 0.0;
      if (v12)
      {
        uint64_t v14 = v12;
        uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        strcpy((char *)v27, "rankingScore");
        BYTE5(v27[1]) = 0;
        HIWORD(v27[1]) = -5120;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v15 + 16)
          && (unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v28), (v17 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v29);
        }
        else
        {
          long long v29 = 0u;
          long long v30 = 0u;
        }
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)v28);
        if (*((void *)&v30 + 1))
        {
          if (swift_dynamicCast()) {
            double v13 = v27[0];
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v29, &demangling cache variable for type metadata for Any?);
        }
      }
      id v18 = [v11 rankingDictionary];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        strcpy((char *)v27, "rankingScore");
        BYTE5(v27[1]) = 0;
        HIWORD(v27[1]) = -5120;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v20 + 16)
          && (unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v28), (v22 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v29);
        }
        else
        {
          long long v29 = 0u;
          long long v30 = 0u;
        }
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)v28);
        if (*((void *)&v30 + 1))
        {
          if (swift_dynamicCast())
          {

            if (v27[0] >= v13) {
              goto LABEL_4;
            }
            goto LABEL_26;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v29, &demangling cache variable for type metadata for Any?);
        }
      }

      if (v13 <= 0.0) {
        goto LABEL_4;
      }
LABEL_26:
      if (!v5)
      {
        __break(1u);
        return;
      }
      id v23 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v23;
      v6 -= 8;
      if (v4 == ++v8)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v26 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
    }
  }
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(char *, uint64_t);
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  long long v30 = a1;
  uint64_t v35 = type metadata accessor for Date();
  uint64_t v7 = __chkstk_darwin(v35);
  double v34 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v33 = (char *)&v28 - v10;
  long long v29 = a2;
  if (a3 != a2)
  {
    id v11 = *a4;
    id v32 = v9 + 8;
    uint64_t v36 = v11;
    id v12 = v11 + 8 * a3 - 8;
    double v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    uint64_t v14 = *(void **)(v36 + 8 * a3);
    uint64_t v15 = v30;
    id v31 = v12;
    while (1)
    {
      unint64_t v16 = *(void **)v12;
      char v17 = v14;
      unint64_t v37 = v17;
      id v18 = v16;
      uint64_t v19 = [v17 startDate];
      uint64_t v20 = v33;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v21 = [v18 startDate];
      char v22 = v34;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v21) = static Date.> infix(_:_:)();
      id v23 = a3;
      id v24 = *v13;
      uint64_t v25 = v22;
      uint64_t v26 = v35;
      (*v13)(v25, v35);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        id v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      char v27 = *(void **)v12;
      uint64_t v14 = *(void **)(v12 + 8);
      *(void *)id v12 = v14;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;

  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v8 = *(void **)(v6 + 8 * v4);
    Swift::Int v9 = a1;
    id v10 = v7;
    while (1)
    {
      id v11 = *(void **)v10;
      id v12 = v8;
      double v13 = v11;
      [v12 priorityScore];
      uint64_t v15 = v14;
      [v13 priorityScore];
      char v17 = v16;

      if (v15 >= v17)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      id v18 = *(void **)v10;
      uint64_t v8 = *(void **)(v10 + 8);
      *(void *)id v10 = v8;
      *(void *)(v10 + 8) = v18;
      v10 -= 8;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void **__src, id *a2, unint64_t a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v61 = __src;
  id v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_83;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    id v31 = &v4[v13];
    double v59 = v31;
    uint64_t v61 = v6;
    if (v11 < 8 || v7 >= v6)
    {
LABEL_82:
      specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v61, &v60, &v59);
      return 1;
    }
    id v32 = (id *)(a3 - 8);
    Swift::Int v53 = v4;
    id v33 = v6;
    while (1)
    {
      unint64_t v54 = (unint64_t)v31;
      double v34 = v31 - 1;
      uint64_t v35 = *--v33;
      id v36 = *(v31 - 1);
      id v37 = v35;
      id v38 = [v36 rankingDictionary];
      double v39 = 0.0;
      if (v38)
      {
        uint64_t v40 = v38;
        uint64_t v41 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        strcpy((char *)v55, "rankingScore");
        BYTE5(v55[1]) = 0;
        HIWORD(v55[1]) = -5120;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v41 + 16)
          && (unint64_t v42 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v56), (v43 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v41 + 56) + 32 * v42, (uint64_t)&v57);
        }
        else
        {
          long long v57 = 0u;
          long long v58 = 0u;
        }
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)v56);
        if (*((void *)&v58 + 1))
        {
          if (swift_dynamicCast()) {
            double v39 = v55[0];
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v57, &demangling cache variable for type metadata for Any?);
        }
      }
      id v44 = [v37 rankingDictionary];
      if (v44)
      {
        uint64_t v45 = v44;
        uint64_t v46 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        strcpy((char *)v55, "rankingScore");
        BYTE5(v55[1]) = 0;
        HIWORD(v55[1]) = -5120;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v46 + 16)
          && (unint64_t v47 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v56), (v48 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v46 + 56) + 32 * v47, (uint64_t)&v57);
        }
        else
        {
          long long v57 = 0u;
          long long v58 = 0u;
        }
        unint64_t v49 = (unint64_t)v53;
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)v56);
        if (*((void *)&v58 + 1))
        {
          if (swift_dynamicCast())
          {
            double v50 = v55[0];

            goto LABEL_70;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v57, &demangling cache variable for type metadata for Any?);
        }

        double v50 = 0.0;
      }
      else
      {

        double v50 = 0.0;
        unint64_t v49 = (unint64_t)v53;
      }
LABEL_70:
      uint64_t v51 = v32 + 1;
      id v31 = (void **)v54;
      if (v50 >= v39)
      {
        double v59 = v34;
        if ((unint64_t)v51 < v54 || (unint64_t)v32 >= v54 || v51 != (id *)v54) {
          *id v32 = *v34;
        }
        id v33 = v6;
        id v31 = v34;
        if ((unint64_t)v34 <= v49) {
          goto LABEL_82;
        }
      }
      else
      {
        if (v51 != v6 || v32 >= v6) {
          *id v32 = *v33;
        }
        uint64_t v61 = v33;
        if (v54 <= v49) {
          goto LABEL_82;
        }
      }
      --v32;
      uint64_t v6 = v33;
      if (v33 <= v7) {
        goto LABEL_82;
      }
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[v10];
    double v59 = v14;
    if (v8 >= 8 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        uint64_t v15 = v4;
        unint64_t v16 = *v4;
        id v17 = *v6;
        id v18 = v16;
        id v19 = [v17 rankingDictionary];
        double v20 = 0.0;
        if (v19)
        {
          unint64_t v21 = v19;
          uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          strcpy((char *)v55, "rankingScore");
          BYTE5(v55[1]) = 0;
          HIWORD(v55[1]) = -5120;
          AnyHashable.init<A>(_:)();
          if (*(void *)(v22 + 16)
            && (unint64_t v23 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v56), (v24 & 1) != 0))
          {
            outlined init with copy of Any(*(void *)(v22 + 56) + 32 * v23, (uint64_t)&v57);
          }
          else
          {
            long long v57 = 0u;
            long long v58 = 0u;
          }
          swift_bridgeObjectRelease();
          outlined destroy of AnyHashable((uint64_t)v56);
          if (*((void *)&v58 + 1))
          {
            if (swift_dynamicCast()) {
              double v20 = v55[0];
            }
          }
          else
          {
            outlined destroy of Any?((uint64_t)&v57, &demangling cache variable for type metadata for Any?);
          }
        }
        id v25 = [v18 rankingDictionary];
        if (v25)
        {
          uint64_t v26 = v25;
          uint64_t v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          strcpy((char *)v55, "rankingScore");
          BYTE5(v55[1]) = 0;
          HIWORD(v55[1]) = -5120;
          AnyHashable.init<A>(_:)();
          if (*(void *)(v27 + 16)
            && (unint64_t v28 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v56), (v29 & 1) != 0))
          {
            outlined init with copy of Any(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v57);
          }
          else
          {
            long long v57 = 0u;
            long long v58 = 0u;
          }
          uint64_t v4 = v15;
          swift_bridgeObjectRelease();
          outlined destroy of AnyHashable((uint64_t)v56);
          if (*((void *)&v58 + 1))
          {
            if (swift_dynamicCast())
            {

              if (v55[0] >= v20) {
                goto LABEL_31;
              }
              goto LABEL_36;
            }
          }
          else
          {
            outlined destroy of Any?((uint64_t)&v57, &demangling cache variable for type metadata for Any?);
          }

          if (v20 <= 0.0)
          {
LABEL_31:
            if (v7 != v4) {
              *uint64_t v7 = *v4;
            }
            id v60 = ++v4;
            long long v30 = v6;
            goto LABEL_40;
          }
        }
        else
        {

          uint64_t v4 = v15;
          if (v20 <= 0.0) {
            goto LABEL_31;
          }
        }
LABEL_36:
        long long v30 = v6 + 1;
        if (v7 < v6 || v7 >= v30 || v7 != v6) {
          *uint64_t v7 = *v6;
        }
LABEL_40:
        uint64_t v61 = ++v7;
        if (v4 < v14)
        {
          uint64_t v6 = v30;
          if ((unint64_t)v30 < a3) {
            continue;
          }
        }
        goto LABEL_82;
      }
    }
    goto LABEL_82;
  }
LABEL_83:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(uint64_t a1, id *a2, id *a3, void **a4)
{
  uint64_t v57 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = __chkstk_darwin(v57);
  id v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v54 = a3;
  uint64_t v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  uint64_t v61 = v11;
  id v60 = a4;
  long long v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_41;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    id v31 = &a4[v17];
    double v59 = v31;
    uint64_t v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_40;
    }
    unint64_t v49 = (void (**)(char *, uint64_t))(v8 + 8);
    double v50 = a4;
    id v32 = v54 - 1;
    id v33 = v15;
    while (1)
    {
      unint64_t v54 = v15;
      unint64_t v52 = v31;
      Swift::Int v53 = v32 + 1;
      uint64_t v35 = v31 - 1;
      id v36 = *--v33;
      id v37 = *(v31 - 1);
      id v51 = v37;
      id v38 = v36;
      id v39 = [v37 startDate];
      uint64_t v40 = v55;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v41 = [v38 startDate];
      unint64_t v42 = v56;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v41) = static Date.> infix(_:_:)();
      char v43 = *v49;
      id v44 = v42;
      uint64_t v45 = v57;
      (*v49)(v44, v57);
      v43(v40, v45);

      if (v41) {
        break;
      }
      double v59 = v35;
      if (v53 < v52 || v32 >= v52)
      {
        *id v32 = *v35;
        id v33 = v54;
        id v31 = v35;
        goto LABEL_28;
      }
      unint64_t v46 = (unint64_t)v50;
      double v34 = v58;
      id v33 = v54;
      if (v53 != v52) {
        *id v32 = *v35;
      }
      id v31 = v35;
      if ((unint64_t)v35 <= v46) {
        goto LABEL_40;
      }
LABEL_29:
      --v32;
      uint64_t v15 = v33;
      if (v33 <= v34) {
        goto LABEL_40;
      }
    }
    id v31 = v52;
    if (v53 != v54 || v32 >= v54) {
      *id v32 = *v33;
    }
    uint64_t v61 = v33;
LABEL_28:
    double v34 = v58;
    if (v31 <= v50) {
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    Swift::Int v53 = &a4[v14];
    double v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      unint64_t v52 = (void **)(v8 + 8);
      id v18 = v55;
      do
      {
        long long v58 = v11;
        id v19 = *a4;
        id v20 = *v15;
        id v21 = v19;
        uint64_t v22 = a4;
        id v23 = [v20 startDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        id v24 = [v21 startDate];
        id v25 = v56;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v24) = static Date.> infix(_:_:)();
        uint64_t v26 = (void (*)(char *, uint64_t))*v52;
        uint64_t v27 = v25;
        uint64_t v28 = v57;
        ((void (*)(char *, uint64_t))*v52)(v27, v57);
        v26(v18, v28);

        if (v24)
        {
          a4 = v22;
          unint64_t v29 = (unint64_t)(v15 + 1);
          long long v30 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v29 || v58 != v15) {
            id *v58 = *v15;
          }
        }
        else
        {
          long long v30 = v58;
          if (v58 != v22) {
            id *v58 = *v22;
          }
          a4 = v22 + 1;
          id v60 = v22 + 1;
          unint64_t v29 = (unint64_t)v15;
        }
        uint64_t v11 = v30 + 1;
        uint64_t v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (id *)v29;
      }
      while (v29 < (unint64_t)v54);
    }
LABEL_40:
    specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v61, &v60, &v59);
    return 1;
  }
LABEL_41:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v57 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = __chkstk_darwin(v57);
  id v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v54 = a3;
  uint64_t v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  uint64_t v61 = v11;
  id v60 = a4;
  long long v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_42;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    long long v30 = &a4[v17];
    double v59 = v30;
    uint64_t v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_41;
    }
    unint64_t v49 = (void (**)(char *, uint64_t))(v8 + 8);
    double v50 = a4;
    id v31 = v54 - 1;
    id v32 = v15;
    while (1)
    {
      unint64_t v54 = v15;
      unint64_t v52 = v30;
      Swift::Int v53 = v31 + 1;
      uint64_t v33 = *--v30;
      uint64_t v34 = *(v32 - 1);
      id v51 = v32 - 1;
      uint64_t v35 = *(void **)(v33 + 16);
      swift_retain();
      swift_retain();
      id v36 = [v35 displayStartDate];
      id v37 = v55;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v38 = [*(id *)(v34 + 16) displayStartDate];
      id v39 = v56;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v38) = static Date.< infix(_:_:)();
      uint64_t v40 = *v49;
      id v41 = v39;
      uint64_t v42 = v57;
      (*v49)(v41, v57);
      v40(v37, v42);
      swift_release();
      swift_release();
      if (v38) {
        break;
      }
      double v59 = v30;
      char v43 = v30;
      if (v53 < v52 || v31 >= v52)
      {
        *id v31 = *v30;
        id v32 = v54;
        goto LABEL_39;
      }
      unint64_t v44 = (unint64_t)v50;
      uint64_t v45 = v58;
      unint64_t v46 = v54;
      if (v53 != v52) {
        *id v31 = *v43;
      }
      id v32 = v46;
      long long v30 = v43;
      if ((unint64_t)v43 <= v44) {
        goto LABEL_41;
      }
LABEL_40:
      --v31;
      uint64_t v15 = v32;
      if (v32 <= v45) {
        goto LABEL_41;
      }
    }
    long long v30 = v52;
    id v32 = v51;
    if (v53 != v54 || v31 >= v54) {
      *id v31 = *v51;
    }
    uint64_t v61 = v32;
LABEL_39:
    uint64_t v45 = v58;
    if (v30 <= v50) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    Swift::Int v53 = &a4[v14];
    double v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      unint64_t v52 = (void *)(v8 + 8);
      id v18 = v55;
      do
      {
        long long v58 = v11;
        uint64_t v19 = *a4;
        id v20 = *(void **)(*v15 + 16);
        swift_retain();
        swift_retain();
        id v21 = a4;
        id v22 = [v20 displayStartDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        id v23 = [*(id *)(v19 + 16) displayStartDate];
        id v24 = v56;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v23) = static Date.< infix(_:_:)();
        id v25 = (void (*)(char *, uint64_t))*v52;
        uint64_t v26 = v24;
        uint64_t v27 = v57;
        ((void (*)(char *, uint64_t))*v52)(v26, v57);
        v25(v18, v27);
        swift_release();
        swift_release();
        if (v23)
        {
          a4 = v21;
          unint64_t v28 = (unint64_t)(v15 + 1);
          unint64_t v29 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v28 || v58 != v15) {
            void *v58 = *v15;
          }
        }
        else
        {
          unint64_t v29 = v58;
          if (v58 != v21) {
            void *v58 = *v21;
          }
          a4 = v21 + 1;
          id v60 = v21 + 1;
          unint64_t v28 = (unint64_t)v15;
        }
        uint64_t v11 = v29 + 1;
        uint64_t v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (void *)v28;
      }
      while (v28 < (unint64_t)v54);
    }
LABEL_41:
    specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v61, &v60, &v59);
    return 1;
  }
LABEL_42:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  double v59 = __src;
  long long v58 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_83;
    }
    if (__dst != a2 || &a2[8 * v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    long long v30 = &v4[8 * v13];
    uint64_t v57 = v30;
    double v59 = v6;
    if (v11 < 8 || v7 >= v6)
    {
LABEL_82:
      specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v59, &v58, &v57);
      return 1;
    }
    id v31 = (char *)(a3 - 8);
    unint64_t v52 = v4;
    id v32 = v6;
    while (1)
    {
      unint64_t v53 = (unint64_t)v30;
      uint64_t v33 = v30 - 8;
      uint64_t v35 = *((void *)v32 - 1);
      v32 -= 8;
      uint64_t v34 = v35;
      id v36 = *(void **)(*((void *)v30 - 1) + 16);
      swift_retain();
      swift_retain();
      id v37 = [v36 rankingDictionary];
      double v38 = 0.0;
      if (v37)
      {
        id v39 = v37;
        uint64_t v40 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        AnyHashable.init<A>(_:)();
        if (*(void *)(v40 + 16)
          && (unint64_t v41 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v54), (v42 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v40 + 56) + 32 * v41, (uint64_t)&v55);
        }
        else
        {
          long long v55 = 0u;
          long long v56 = 0u;
        }
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)v54);
        if (*((void *)&v56 + 1))
        {
          if (swift_dynamicCast()) {
            double v38 = 1.67436463e243;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v55, &demangling cache variable for type metadata for Any?);
        }
      }
      id v43 = [*(id *)(v34 + 16) rankingDictionary];
      if (v43)
      {
        unint64_t v44 = v43;
        uint64_t v45 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        AnyHashable.init<A>(_:)();
        if (*(void *)(v45 + 16)
          && (unint64_t v46 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v54), (v47 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v45 + 56) + 32 * v46, (uint64_t)&v55);
        }
        else
        {
          long long v55 = 0u;
          long long v56 = 0u;
        }
        unint64_t v48 = (unint64_t)v52;
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)v54);
        if (*((void *)&v56 + 1))
        {
          if (swift_dynamicCast())
          {
            double v49 = 1.67436463e243;
            swift_release();
            swift_release();
            goto LABEL_70;
          }
        }
        else
        {
          outlined destroy of Any?((uint64_t)&v55, &demangling cache variable for type metadata for Any?);
        }
        swift_release();
        swift_release();
        double v49 = 0.0;
      }
      else
      {
        swift_release();
        swift_release();
        double v49 = 0.0;
        unint64_t v48 = (unint64_t)v52;
      }
LABEL_70:
      double v50 = v31 + 8;
      long long v30 = (char *)v53;
      if (v49 >= v38)
      {
        uint64_t v57 = v33;
        if ((unint64_t)v50 < v53 || (unint64_t)v31 >= v53 || v50 != (char *)v53) {
          *(void *)id v31 = *(void *)v33;
        }
        id v32 = v6;
        long long v30 = v33;
        if ((unint64_t)v33 <= v48) {
          goto LABEL_82;
        }
      }
      else
      {
        if (v50 != v6 || v31 >= v6) {
          *(void *)id v31 = *(void *)v32;
        }
        double v59 = v32;
        if (v53 <= v48) {
          goto LABEL_82;
        }
      }
      v31 -= 8;
      uint64_t v6 = v32;
      if (v32 <= v7) {
        goto LABEL_82;
      }
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v57 = v14;
    if (v8 >= 8 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        uint64_t v15 = v4;
        uint64_t v16 = *(void *)v4;
        uint64_t v17 = *(void **)(*(void *)v6 + 16);
        swift_retain();
        swift_retain();
        id v18 = [v17 rankingDictionary];
        double v19 = 0.0;
        if (v18)
        {
          id v20 = v18;
          uint64_t v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          AnyHashable.init<A>(_:)();
          if (*(void *)(v21 + 16)
            && (unint64_t v22 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v54), (v23 & 1) != 0))
          {
            outlined init with copy of Any(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v55);
          }
          else
          {
            long long v55 = 0u;
            long long v56 = 0u;
          }
          swift_bridgeObjectRelease();
          outlined destroy of AnyHashable((uint64_t)v54);
          if (*((void *)&v56 + 1))
          {
            if (swift_dynamicCast()) {
              double v19 = 1.67436463e243;
            }
          }
          else
          {
            outlined destroy of Any?((uint64_t)&v55, &demangling cache variable for type metadata for Any?);
          }
        }
        id v24 = [*(id *)(v16 + 16) rankingDictionary];
        if (v24)
        {
          id v25 = v24;
          uint64_t v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          AnyHashable.init<A>(_:)();
          if (*(void *)(v26 + 16)
            && (unint64_t v27 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v54), (v28 & 1) != 0))
          {
            outlined init with copy of Any(*(void *)(v26 + 56) + 32 * v27, (uint64_t)&v55);
          }
          else
          {
            long long v55 = 0u;
            long long v56 = 0u;
          }
          uint64_t v4 = v15;
          swift_bridgeObjectRelease();
          outlined destroy of AnyHashable((uint64_t)v54);
          if (*((void *)&v56 + 1))
          {
            if (swift_dynamicCast())
            {
              swift_release();
              swift_release();
              if (v19 <= 1.67436463e243) {
                goto LABEL_31;
              }
              goto LABEL_36;
            }
          }
          else
          {
            outlined destroy of Any?((uint64_t)&v55, &demangling cache variable for type metadata for Any?);
          }
          swift_release();
          swift_release();
          if (v19 <= 0.0)
          {
LABEL_31:
            if (v7 != v4) {
              *(void *)uint64_t v7 = *(void *)v4;
            }
            v4 += 8;
            long long v58 = v4;
            unint64_t v29 = v6;
            goto LABEL_40;
          }
        }
        else
        {
          swift_release();
          swift_release();
          uint64_t v4 = v15;
          if (v19 <= 0.0) {
            goto LABEL_31;
          }
        }
LABEL_36:
        unint64_t v29 = v6 + 8;
        if (v7 < v6 || v7 >= v29 || v7 != v6) {
          *(void *)uint64_t v7 = *(void *)v6;
        }
LABEL_40:
        v7 += 8;
        double v59 = v7;
        if (v4 < v14)
        {
          uint64_t v6 = v29;
          if ((unint64_t)v29 < a3) {
            continue;
          }
        }
        goto LABEL_82;
      }
    }
    goto LABEL_82;
  }
LABEL_83:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  char *v23;
  char *v24;
  char *v25;

  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  id v25 = __src;
  id v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      id v18 = &v4[16 * v13];
      char v23 = v18;
      id v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        double v19 = (char *)(a3 - 16);
        do
        {
          id v20 = v19 + 16;
          if (*((void *)v18 - 1) >= *((void *)v6 - 1))
          {
            char v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)double v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)double v19 = *(_OWORD *)v21;
            }
            id v25 = v6 - 16;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 16;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    char v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      uint64_t v15 = v4;
      while (1)
      {
        if (*((void *)v6 + 1) >= *((void *)v15 + 1))
        {
          uint64_t v4 = v15 + 16;
          uint64_t v17 = v15;
          uint64_t v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          uint64_t v16 = v6 + 16;
          uint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        id v24 = v4;
        id v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  char *v23;
  const void *v24;
  char *v25;

  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  id v25 = __src;
  id v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      id v18 = &v4[16 * v13];
      char v23 = v18;
      id v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        double v19 = (char *)(a3 - 16);
        do
        {
          id v20 = v19 + 16;
          if (*((void *)v18 - 1) >= *((void *)v6 - 1))
          {
            char v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)double v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)double v19 = *(_OWORD *)v21;
            }
            id v25 = v6 - 16;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 16;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)((void **)&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    char v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      uint64_t v15 = v4;
      while (1)
      {
        if (*((void *)v6 + 1) >= *((void *)v15 + 1))
        {
          uint64_t v4 = v15 + 16;
          uint64_t v17 = v15;
          uint64_t v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          uint64_t v16 = v6 + 16;
          uint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        id v24 = v4;
        id v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized Array._copyContents(initializing:)(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(void))type metadata accessor for MOSuggestionInterstitialListAssetViewModel, (unint64_t *)&lazy protocol witness table cache variable for type [MOSuggestionInterstitialListAssetViewModel] and conformance [A], &demangling cache variable for type metadata for [MOSuggestionInterstitialListAssetViewModel], (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  uint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  int64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [MOResource] and conformance [A], &demangling cache variable for type metadata for [MOResource]);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOResource]);
          uint64_t v12 = specialized protocol witness for Collection.subscript.read in conformance [A](v16, i, a3);
          uint64_t v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  int64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  return specialized Array._copyContents(initializing:)(a1, a2, a3, (void (*)(void))type metadata accessor for MOSuggestionAssetReference, &lazy protocol witness table cache variable for type [MOSuggestionAssetReference] and conformance [A], &demangling cache variable for type metadata for [MOSuggestionAssetReference], (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))specialized protocol witness for Collection.subscript.read in conformance [A]);
}

{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  uint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  int64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [MOSuggestionAsset<Swift.AnyObject>] and conformance [A], &demangling cache variable for type metadata for [MOSuggestionAsset]);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOSuggestionAsset]);
          uint64_t v12 = specialized protocol witness for Collection.subscript.read in conformance [A](v16, i, a3);
          uint64_t v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  int64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  uint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  int64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [MOSuggestionCollectionViewCellViewModel] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [MOSuggestionCollectionViewCellViewModel]);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [MOSuggestionCollectionViewCellViewModel]);
          uint64_t v12 = specialized protocol witness for Collection.subscript.read in conformance [A](v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  int64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for MOSuggestionCollectionViewCellViewModel();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  uint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  int64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [CLLocation] and conformance [A], &demangling cache variable for type metadata for [CLLocation]);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CLLocation]);
          uint64_t v12 = specialized protocol witness for Collection.subscript.read in conformance [A](v16, i, a3);
          uint64_t v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  int64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized Array._copyContents(initializing:)(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = lazy protocol witness table accessor for type [String] and conformance [A](a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          unint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized FlattenSequence<>.startIndex.getter(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return v1;
  }
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(result + 32);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      return 0;
    }
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return 0;
  }
  uint64_t v5 = v1 - 1;
  if (v1 == 1) {
    return v1;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 40;
  while (v5 != v6)
  {
    unint64_t v8 = *(void *)(v7 + 8 * v6);
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v9) {
      return v6 + 1;
    }
    if (v5 == ++v6) {
      return v1;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized FlattenSequence<>.distance(from:to:)(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a4 != result)
  {
    uint64_t v8 = result;
    if (a4 < result)
    {
      uint64_t v7 = a3 & 1;
      uint64_t v11 = result;
      unint64_t v10 = a4;
      uint64_t v9 = a5;
      a5 = a2;
      if (a6) {
        goto LABEL_20;
      }
      goto LABEL_7;
    }
LABEL_19:
    uint64_t v7 = a6 & 1;
    uint64_t v11 = a4;
    unint64_t v10 = v8;
    uint64_t v9 = a2;
    if (a3)
    {
LABEL_20:
      uint64_t v17 = 0;
      uint64_t v14 = 0;
      if ((uint64_t)v10 < v11) {
        goto LABEL_21;
      }
LABEL_33:
      if ((v7 & 1) == 0)
      {
        if ((v10 & 0x8000000000000000) != 0)
        {
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        if (v10 >= *(void *)(a7 + 16))
        {
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        BOOL v20 = __OFADD__(v14, a5);
        v14 += a5;
        if (v20)
        {
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
      }
      if (a4 >= v8) {
        return v14;
      }
      BOOL v20 = __OFSUB__(0, v14);
      uint64_t v14 = -v14;
      if (!v20) {
        return v14;
      }
      goto LABEL_51;
    }
LABEL_7:
    if ((v10 & 0x8000000000000000) != 0) {
      goto LABEL_42;
    }
    if (v10 >= *(void *)(a7 + 16)) {
      goto LABEL_44;
    }
    unint64_t v15 = *(void *)(a7 + 8 * v10 + 32);
    if (v15 >> 62) {
      goto LABEL_46;
    }
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v17 = v16 - v9;
    if (!__OFSUB__(v16, v9)) {
      goto LABEL_11;
    }
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (a6)
  {
    if (a3) {
      return 0;
    }
    while (1)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      uint64_t v21 = a5;
      uint64_t v22 = v7;
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v7 = v22;
      a5 = v21;
      uint64_t v17 = v23 - v9;
      if (__OFSUB__(v23, v9)) {
        goto LABEL_48;
      }
LABEL_11:
      ++v10;
      uint64_t v14 = v17;
      if ((uint64_t)v10 >= v11) {
        goto LABEL_33;
      }
LABEL_21:
      if (v10 <= *(void *)(a7 + 16)) {
        unint64_t v18 = *(void *)(a7 + 16);
      }
      else {
        unint64_t v18 = v10;
      }
      uint64_t v14 = v17;
      while (v18 != v10)
      {
        unint64_t v19 = *(void *)(a7 + 32 + 8 * v10);
        if (v19 >> 62)
        {
          uint64_t v25 = a5;
          unsigned int v24 = v7;
          swift_bridgeObjectRetain();
          uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v7 = v24;
          a5 = v25;
          BOOL v20 = __OFADD__(v14, v9);
          v14 += v9;
          if (v20)
          {
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v9 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          BOOL v20 = __OFADD__(v14, v9);
          v14 += v9;
          if (v20) {
            goto LABEL_32;
          }
        }
        if ((uint64_t)++v10 >= v11) {
          goto LABEL_33;
        }
      }
      __break(1u);
    }
  }
  if ((a3 & 1) == 0)
  {
    if (a4 < 0) {
      goto LABEL_43;
    }
    if (*(void *)(a7 + 16) <= (unint64_t)a4) {
      goto LABEL_45;
    }
    uint64_t v14 = a5 - a2;
    if (!__OFSUB__(a5, a2)) {
      return v14;
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t specialized static MOAssetAndMediaType.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    if (a3)
    {
      char v14 = a6 & 1;
      return v14 & 1;
    }
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = v15 & a6;
    if (v15 & 1) == 0 || (a3) {
      return v14 & 1;
    }
  }
  char v14 = (a6 & 1) == 0 && a2 == a5;
  return v14 & 1;
}

_UNKNOWN **specialized MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:)(char a1, size_t a2)
{
  uint64_t v2 = &outlined read-only object #0 of MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:);
  switch(a1)
  {
    case 1:
      if (one-time initialization token for tileSizesByCount != -1) {
        swift_once();
      }
      uint64_t v4 = static MOSuggestionLayoutEngine.HalfWidth.tileSizesByCount;
      if (*(void *)(static MOSuggestionLayoutEngine.HalfWidth.tileSizesByCount + 16))
      {
        unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)(a2);
        if (v10) {
          goto LABEL_15;
        }
      }
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      __swift_project_value_buffer(v13, (uint64_t)static MOAngelLogger.assets);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9)) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      if ((a2 & 0x8000000000000000) != 0) {
        goto LABEL_30;
      }
      if (!a2) {
        return (_UNKNOWN **)_swiftEmptyArrayStorage;
      }
      uint64_t v2 = (_UNKNOWN **)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v2[2] = (_UNKNOWN *)a2;
      uint64_t v11 = v2 + 4;
      int v12 = 3;
      goto LABEL_22;
    case 3:
      return v2;
    case 4:
      return &outlined read-only object #1 of MOSuggestionCollectionViewCellViewModel.assetSizes(style:assetCount:);
    case 5:
      if ((a2 & 0x8000000000000000) != 0)
      {
LABEL_30:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1000E9C5CLL);
      }
      if (!a2) {
        return (_UNKNOWN **)_swiftEmptyArrayStorage;
      }
      uint64_t v2 = (_UNKNOWN **)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v2[2] = (_UNKNOWN *)a2;
      uint64_t v11 = v2 + 4;
      int v12 = 8;
LABEL_22:
      memset(v11, v12, a2);
      return v2;
    default:
      if (one-time initialization token for tileSizesByCount != -1) {
        swift_once();
      }
      uint64_t v4 = static MOSuggestionLayoutEngine.FullWidth.tileSizesByCount;
      if (*(void *)(static MOSuggestionLayoutEngine.FullWidth.tileSizesByCount + 16)
        && (unint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)(a2), (v6 & 1) != 0))
      {
LABEL_15:
        uint64_t v2 = *(_UNKNOWN ***)(*(void *)(v4 + 56) + 8 * v5);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v7 = type metadata accessor for Logger();
        __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
        uint64_t v8 = Logger.logObject.getter();
        os_log_type_t v9 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v8, v9))
        {
LABEL_27:
          uint64_t v14 = swift_slowAlloc();
          *(_DWORD *)uint64_t v14 = 134218240;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v14 + 12) = 2048;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionCollectionViewCellViewModel] Cannot resolve asset sizes for %ld and count: %ld", (uint8_t *)v14, 0x16u);
          swift_slowDealloc();
        }
LABEL_28:

        return 0;
      }
      return v2;
  }
}

uint64_t sub_1000E9C74()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000E9C84()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(unint64_t a1)
{
  closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t type metadata accessor for MOSuggestionCollectionViewModel()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellViewModel()
{
  return self;
}

uint64_t sub_1000E9D30()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionViewModel.refreshAndFetchBundles(completionHandler:)(uint64_t a1, unsigned char *a2)
{
  return closure #1 in MOSuggestionCollectionViewModel.refreshAndFetchBundles(completionHandler:)(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24));
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionViewModel.fetchBundles()(char a1)
{
  return closure #1 in MOSuggestionCollectionViewModel.fetchBundles()(a1);
}

uint64_t partial apply for closure #2 in MOSuggestionCollectionViewModel.fetchBundles()(uint64_t a1, unsigned char *a2)
{
  return closure #2 in MOSuggestionCollectionViewModel.fetchBundles()(a1, a2);
}

unint64_t specialized SuggestionCellStyle.init(rawValue:)(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult);
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult);
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E9E10()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E9E48()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(unint64_t a1)
{
  closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1000E9ED8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E9EE8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(unint64_t a1)
{
  return closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(a1, *(void *)(v1 + 16), *(void (**)(void, char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

unint64_t lazy protocol witness table accessor for type MOSuggestionCollectionViewInteractionState and conformance MOSuggestionCollectionViewInteractionState()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionCollectionViewInteractionState and conformance MOSuggestionCollectionViewInteractionState;
  if (!lazy protocol witness table cache variable for type MOSuggestionCollectionViewInteractionState and conformance MOSuggestionCollectionViewInteractionState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionCollectionViewInteractionState and conformance MOSuggestionCollectionViewInteractionState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SuggestionCellStyle and conformance SuggestionCellStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type SuggestionCellStyle and conformance SuggestionCellStyle;
  if (!lazy protocol witness table cache variable for type SuggestionCellStyle and conformance SuggestionCellStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SuggestionCellStyle and conformance SuggestionCellStyle);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SuggestionCellStyle()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [SuggestionCellStyle] and conformance [A], &demangling cache variable for type metadata for [SuggestionCellStyle]);
}

unint64_t lazy protocol witness table accessor for type MOAssetAndMediaType and conformance MOAssetAndMediaType()
{
  unint64_t result = lazy protocol witness table cache variable for type MOAssetAndMediaType and conformance MOAssetAndMediaType;
  if (!lazy protocol witness table cache variable for type MOAssetAndMediaType and conformance MOAssetAndMediaType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOAssetAndMediaType and conformance MOAssetAndMediaType);
  }
  return result;
}

uint64_t sub_1000EA0B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 400))();
}

uint64_t sub_1000EA0FC(uint64_t a1, uint64_t a2)
{
  outlined init with copy of Date?(a1, (uint64_t)v4, &demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 408))(v4);
}

uint64_t sub_1000EA174@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 424))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA1CC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 432))(*a1);
}

uint64_t sub_1000EA21C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 448))();
  *a2 = result;
  return result;
}

uint64_t sub_1000EA270(id *a1, uint64_t a2)
{
  id v2 = *a1;
  unint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 456);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000EA2D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 472))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA328(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 480))(*a1);
}

uint64_t sub_1000EA378@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 496))();
  *a2 = result;
  return result;
}

uint64_t sub_1000EA3CC(uint64_t a1, uint64_t a2)
{
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 504);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1000EA428@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 520))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA480(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 528))(*a1);
}

uint64_t sub_1000EA4D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 576))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA528(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 584))(*a1);
}

uint64_t sub_1000EA578@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 632))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA5D0(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 640))(*a1);
}

uint64_t sub_1000EA620@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 152))();
  *a2 = result;
  return result;
}

uint64_t sub_1000EA66C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 160))(*a1);
}

uint64_t sub_1000EA6B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 176))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000EA700(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 184);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1000EA768@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 200))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000EA7B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 208);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1000EA81C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 224))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA86C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 232))(*a1);
}

uint64_t sub_1000EA8B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 248))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA904(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 256))(*a1);
}

uint64_t sub_1000EA954@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 272))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000EA9AC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 280))(*a1);
}

uint64_t sub_1000EA9FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 296))();
  *a2 = result;
  return result;
}

uint64_t sub_1000EAA50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 304);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionCollectionViewInteractionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EAB78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionCollectionViewInteractionState()
{
  return &type metadata for MOSuggestionCollectionViewInteractionState;
}

unsigned char *storeEnumTagSinglePayload for SuggestionCellStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EAC7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionCellStyle()
{
  return &type metadata for SuggestionCellStyle;
}

uint64_t initializeBufferWithCopyOfBuffer for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UUID();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(void *a1, uint64_t a2)
{
  return destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, a2, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t initializeWithCopy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t assignWithTake for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EB2C8);
}

uint64_t sub_1000EB2C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EB390);
}

void *sub_1000EB390(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult()
{
}

{
  unint64_t v0;

  type metadata accessor for UUID?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(void *a1, uint64_t a2)
{
  return destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, a2, (void (*)(void))&_swift_release);
}

uint64_t destroy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(void *a1, uint64_t a2, void (*a3)(void))
{
  a3(*a1);
  uint64_t v5 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t assignWithCopy for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t assignWithTake for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EB884);
}

uint64_t sub_1000EB884(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    int v12 = (char *)a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EB958);
}

void *sub_1000EB958(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult()
{
}

uint64_t initializeBufferWithCopyOfBuffer for MOAssetAndMediaType(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for MOAssetAndMediaType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MOAssetAndMediaType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOAssetAndMediaType(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOAssetAndMediaType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOAssetAndMediaType()
{
  return &type metadata for MOAssetAndMediaType;
}

uint64_t sub_1000EBC28()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed IndexPath) -> (@out ())()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Bool, @in_guaranteed Bool) -> (@out ())(char a1, char a2)
{
  int v3 = *(uint64_t (**)(char *, char *))(v2 + 16);
  char v6 = a1;
  char v5 = a2;
  return v3(&v6, &v5);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool, @unowned Bool) -> ()(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_1000EBCF8()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)()
{
  return closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(*(void (**)(void, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  return closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  return partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)((uint64_t (*)(void, void, void, void, void))closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:));
}

void (*partial apply for closure #1 in MOSuggestionCollectionViewModel.showLatestBundles(bundles:additionalBundleIds:)())(uint64_t, void)
{
  return closure #1 in MOSuggestionCollectionViewModel.showLatestBundles(bundles:additionalBundleIds:)(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t objectdestroy_138Tm()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000EBE6C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  return closure #1 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t outlined init with copy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000EBF14()
{
  uint64_t v1 = (int *)(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0)
             - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[8];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t outlined init with take of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0)
                 - 8);
  unint64_t v2 = v0[2];
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return closure #3 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(v2, v3, v4, v5);
}

uint64_t outlined destroy of MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)()
{
  return partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)((uint64_t (*)(void, void, void, void, void))closure #2 in closure #1 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:));
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolder(previewOnly:previewMax:style:typeSorted:completionHandler:)(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

id MOSuggestionInterstitialCarouselView.__allocating_init(controller:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MOSuggestionInterstitialCarouselView.init(controller:)(a1);
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.updateLayout()()
{
  MOSuggestionInterstitialCarouselView.setPageControlVisibility()();
  BOOL v1 = specialized static MOAngelRootViewController.isLandscape.getter();
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC8))();
  id v3 = (void *)v2;
  if (v1)
  {
    if (v2)
    {
      Class isa = MOSuggestionInterstitialCarouselView.generateLandscapeLayout()().super.isa;
      [v3 setCollectionViewLayout:isa animated:0];
    }
    id v5 = *(id *)((char *)v0
               + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint);
    if (v5)
    {
      double v6 = 0.0;
LABEL_10:
      id v5 = [v5 setConstant:v6];
    }
  }
  else
  {
    if (v2)
    {
      Class v7 = MOSuggestionInterstitialCarouselView.generateLayout()().super.isa;
      [v3 setCollectionViewLayout:v7 animated:0];
    }
    id v5 = *(id *)((char *)v0
               + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint);
    if (v5)
    {
      double v6 = 100.0;
      goto LABEL_10;
    }
  }
  uint64_t v8 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC8);
  uint64_t v9 = (void *)((uint64_t (*)(id))v8)(v5);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = [v9 collectionViewLayout];

    [v11 invalidateLayout];
  }
  int v12 = (void *)v8();
  if (v12)
  {
    id v13 = v12;
    [v12 layoutIfNeeded];
  }
}

uint64_t MOSuggestionInterstitialCarouselView.assetTypeSummary.getter()
{
  id v32 = [objc_allocWithZone((Class)NSCountedSet) init];
  uint64_t v35 = v0;
  unint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
LABEL_30:
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    if (one-time initialization token for COMMA_SEPARATOR != -1) {
      swift_once();
    }
    uint64_t v30 = specialized static MOSuggestionInterstitialListAssetViewModel.assetVisualSubTypesToCountString(_:includeCount:separator:)(v32, 1, static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR, *((uint64_t *)&static MOSuggestionInterstitialListAssetViewModel.COMMA_SEPARATOR + 1));

    return v30;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_31;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v5 = v2 & 0xC000000000000001;
    unint64_t v36 = v2 + 32;
    unint64_t v33 = v2 & 0xC000000000000001;
    uint64_t v34 = v3;
    while (1)
    {
      if (v5)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v6 = *(void *)(v36 + 8 * v4);
        swift_retain();
      }
      uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v6 + 632))();
      if (!v7) {
        goto LABEL_6;
      }
      uint64_t v8 = (void *)v7;
      char v9 = (*(uint64_t (**)(void))(*(void *)v6 + 656))();
      if (v9 == 26) {
        break;
      }
      char v10 = v9;
      uint64_t v11 = (*(uint64_t (**)(void))((swift_isaMask & *v35) + 0x110))();
      v37[0] = (*(uint64_t (**)(void))(*(void *)v6 + 512))();
      v37[1] = v12;
      v37[4] = 35;
      v37[5] = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      id v13 = (void *)StringProtocol.components<A>(separatedBy:)();
      if (!v13[2])
      {
        __break(1u);
        goto LABEL_30;
      }
      unint64_t v14 = v2;
      uint64_t v16 = v13[4];
      uint64_t v15 = v13[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v17 = specialized Set.contains(_:)(v16, v15, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        goto LABEL_26;
      }
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;
      if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
      {
        uint64_t v22 = swift_bridgeObjectRelease_n();
      }
      else
      {
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v22 = swift_bridgeObjectRelease();
        if ((v23 & 1) == 0) {
          goto LABEL_25;
        }
      }
      uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 1400))(v22);
      if (v25)
      {
LABEL_25:
        LOBYTE(v37[0]) = v10;
        [v32 addObject:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
        swift_unknownObjectRelease();
LABEL_26:
        swift_release();

        unint64_t v2 = v14;
        unint64_t v5 = v33;
        uint64_t v3 = v34;
        goto LABEL_7;
      }
      uint64_t v26 = v24;
      v37[3] = &type metadata for MOSuggestionAssetVisualSubType;
      LOBYTE(v37[0]) = v10;
      if (v24 < 0) {
        goto LABEL_35;
      }
      unint64_t v2 = v14;
      if (v24)
      {
        uint64_t v27 = static Array._allocateBufferUninitialized(minimumCapacity:)();
        *(void *)(v27 + 16) = v26;
        uint64_t v28 = v27 + 32;
        unint64_t v5 = v33;
        uint64_t v3 = v34;
        do
        {
          outlined init with copy of Any((uint64_t)v37, v28);
          v28 += 32;
          --v26;
        }
        while (v26);
      }
      else
      {
        unint64_t v5 = v33;
        uint64_t v3 = v34;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v32 addObjectsFromArray:isa];

      swift_release();
LABEL_7:
      if (++v4 == v3) {
        goto LABEL_31;
      }
    }

LABEL_6:
    swift_release();
    goto LABEL_7;
  }
  __break(1u);
LABEL_35:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void MOSuggestionInterstitialCarouselView.reloadCell(_:index:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = *(void *)((swift_isaMask & *v2) + 0xE0);
  unint64_t v7 = ((uint64_t (*)(void))v6)();
  if (v7 >> 62) {
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8 <= a2)
  {
    if (serverManager._clientConnections == (NSMutableDictionary *)-1) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
  char v9 = *(uint64_t (**)(void *))((swift_isaMask & *v2) + 0xF0);
  swift_retain();
  char v10 = (uint64_t (*)(void *, void))v9(v33);
  uint64_t v12 = v11;
  unint64_t v6 = (unint64_t)*v11;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v12 = (uint64_t (*)(void))v6;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v6 & 0x8000000000000000) != 0
    || (v6 & 0x4000000000000000) != 0)
  {
    unint64_t v6 = specialized _ArrayBuffer._consumeAndCreateNew()(v6);
    *uint64_t v12 = (uint64_t (*)(void))v6;
  }
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a2)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    swift_once();
LABEL_14:
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.shared);
    id v31 = v3;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134218240;
      v33[0] = a2;
      uint64_t v21 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2048;
      unint64_t v22 = ((uint64_t (*)(uint64_t))v6)(v21);
      if (v22 >> 62) {
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      }
      else {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }

      swift_bridgeObjectRelease();
      v33[0] = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[MOSuggestionInterstitialCarouselView] reloadCell index out of bounds=%ld, size=%ld", (uint8_t *)v20, 0x16u);
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a1;
  swift_release();
  specialized Array._endMutation()();
  uint64_t v14 = v10(v33, 0);
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 512);
  if (v15(v14) == 0x6C6F686563616C70 && v16 == 0xEB00000000726564)
  {
    swift_bridgeObjectRelease();
LABEL_24:
    MOSuggestionInterstitialCarouselView.reloadAll()();
    return;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t v25 = swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_24;
  }
  v33[0] = v15(v25);
  v33[1] = v26;
  v32[0] = 35;
  v32[1] = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v27 = (void *)StringProtocol.components<A>(separatedBy:)();
  if (v27[2])
  {
    Swift::Int v28 = v27[4];
    Swift::Int v29 = v27[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = (void (*)(void *, void))(*(uint64_t (**)(void *))((swift_isaMask & *v3) + 0x120))(v33);
    specialized Set._Variant.insert(_:)(v32, v28, v29);
    swift_bridgeObjectRelease();
    v30(v33, 0);
    goto LABEL_24;
  }
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.reloadAll()()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MOSuggestionInterstitialCarouselView.configurePageControl()();
  MOSuggestionInterstitialCarouselView.refreshCheckmarksState()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  unint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.reloadAll();
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_20;
  char v9 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
}

uint64_t MOSuggestionInterstitialCarouselView.updateSelectedAssets(_:)()
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x118);
  uint64_t v1 = swift_bridgeObjectRetain();

  return v3(v1);
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.refreshCheckmarksState()()
{
  uint64_t v35 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v35 - 8);
  uint64_t v2 = __chkstk_darwin(v35);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0xE0);
  unint64_t v36 = v0;
  unint64_t v6 = v5(v2);
  unint64_t v7 = v6;
  if (v6 >> 62) {
    goto LABEL_18;
  }
  uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      uint64_t v9 = (swift_isaMask & *v36) + 200;
      unint64_t v33 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v36) + 0xC8);
      if (v8 < 1) {
        break;
      }
      uint64_t v10 = 0;
      uint64_t v31 = v9 + 72;
      uint64_t v32 = v9;
      uint64_t v11 = *(uint64_t (**)(uint64_t))(v9 + 72);
      unint64_t v34 = v7 & 0xC000000000000001;
      Swift::Int v29 = (void (**)(char *, uint64_t))(v1 + 8);
      uint64_t v30 = v11;
      v28[1] = 0x80000001001E5DC0;
      while (1)
      {
        if (v34)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v12 = *(void *)(v7 + 8 * v10 + 32);
          swift_retain();
        }
        uint64_t v39 = (*(uint64_t (**)(void))(*(void *)v12 + 512))();
        uint64_t v40 = v13;
        uint64_t v37 = 35;
        unint64_t v38 = 0xE100000000000000;
        lazy protocol witness table accessor for type String and conformance String();
        uint64_t v14 = (void *)StringProtocol.components<A>(separatedBy:)();
        if (!v14[2]) {
          break;
        }
        uint64_t v1 = v8;
        unint64_t v15 = v7;
        uint64_t v17 = v14[4];
        uint64_t v16 = v14[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = IndexPath.init(row:section:)();
        uint64_t v19 = v30(v18);
        char v20 = specialized Set.contains(_:)(v17, v16, v19);
        swift_bridgeObjectRelease();
        uint64_t v21 = swift_bridgeObjectRelease();
        uint64_t v22 = v33(v21);
        if (v22
          && (uint64_t v23 = (void *)v22,
              NSString v24 = String._bridgeToObjectiveC()(),
              Class isa = IndexPath._bridgeToObjectiveC()().super.isa,
              id v26 = [v23 supplementaryViewForElementKind:v24 atIndexPath:isa],
              v23,
              v24,
              isa,
              v26))
        {
          type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
          uint64_t v27 = swift_dynamicCastClass();
          unint64_t v7 = v15;
          if (v27) {
            (*(void (**)(void))((swift_isaMask & **(void **)(v27
          }
                                                                          + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                           + 0xA0))(v20 & 1);
          swift_release();
        }
        else
        {
          swift_release();
          unint64_t v7 = v15;
        }
        uint64_t v8 = v1;
        ++v10;
        (*v29)(v4, v35);
        if (v1 == v10) {
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_18:
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (!v8) {
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_19:
LABEL_21:
    swift_bridgeObjectRelease();
  }
}

void *MOSuggestionInterstitialCarouselViewConstants.CAROUSEL_CELL_CORNER_RADIUS.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.CAROUSEL_CELL_CORNER_RADIUS;
}

void *MOSuggestionInterstitialCarouselViewConstants.INTERITEM_SPACING.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.INTERITEM_SPACING;
}

double static MOSuggestionInterstitialAlertContentViewController.Constants.MARGIN.getter()
{
  return 10.0;
}

void *MOSuggestionInterstitialCarouselViewConstants.SIDE_VIEW_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SIDE_VIEW_MARGIN;
}

double static MOSuggestionInterstitialCarouselViewConstants.PAGE_CONTROL_HEIGHT.getter()
{
  return 50.0;
}

void *MOSuggestionInterstitialCarouselViewConstants.SECTION_INSET.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SECTION_INSET;
}

double static MOSuggestionInterstitialCarouselViewConstants.SECTION_INSET.getter()
{
  return 60.0;
}

void *MOSuggestionInterstitialCarouselViewConstants.TRAILING_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.TRAILING_MARGIN;
}

void *MOSuggestionInterstitialCarouselViewConstants.PAGE_CONTROL_HEIGHT.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.PAGE_CONTROL_HEIGHT;
}

void *MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_UPPERBOUND.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_UPPERBOUND;
}

double static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_UPPERBOUND.getter()
{
  return 0.15;
}

void *MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_LOWERBOUND.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_LOWERBOUND;
}

double static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_LOWERBOUND.getter()
{
  return 0.01;
}

void *MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_RANGE.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_RANGE;
}

double static MOSuggestionInterstitialCarouselViewConstants.SCROLL_VELOCITY_RANGE.getter()
{
  return 0.14;
}

void *MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_MARGIN;
}

__n128 one-time initialization function for CHECK_PLATTER_VIEW_SIZE()
{
  __asm { FMOV            V0.2D, #23.0 }
  static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE = (__int128)result;
  return result;
}

long long *MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.unsafeMutableAddressor()
{
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE != -1) {
    swift_once();
  }
  return &static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE;
}

double static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter()
{
  return static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE, (uint64_t)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE);
}

float64x2_t one-time initialization function for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN()
{
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE != -1) {
    swift_once();
  }
  __asm { FMOV            V1.2D, #16.0 }
  float64x2_t result = vaddq_f64((float64x2_t)static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE, _Q1);
  static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN = (__int128)result;
  return result;
}

long long *MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN.unsafeMutableAddressor()
{
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN != -1) {
    swift_once();
  }
  return &static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN;
}

double static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN.getter()
{
  return static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(&one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN, (uint64_t)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN);
}

double static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

void *MOSuggestionInterstitialCarouselView.dataSource.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionInterstitialCarouselView.dataSource.setter(void *a1)
{
}

uint64_t (*MOSuggestionInterstitialCarouselView.dataSource.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionInterstitialCarouselView.collectionView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionInterstitialCarouselView.collectionView.setter(void *a1)
{
}

uint64_t (*MOSuggestionInterstitialCarouselView.collectionView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.assetViewModels.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionInterstitialCarouselView.assetViewModels.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_assetViewModels);
}

uint64_t (*MOSuggestionInterstitialCarouselView.assetViewModels.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.denySelectionList.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionInterstitialCarouselView.denySelectionList.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_denySelectionList);
}

uint64_t (*MOSuggestionInterstitialCarouselView.denySelectionList.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.setter(uint64_t a1)
{
  id v3 = (void *)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers);
  swift_beginAccess();
  void *v3 = a1;
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x190))(v4);
  if (result)
  {
    uint64_t v7 = v6;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.selectedAssetIdentifiers.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(a1 + 24)) + 0x190))(result);
    if (result)
    {
      uint64_t v6 = v5;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t MOSuggestionInterstitialCarouselView.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t MOSuggestionInterstitialCarouselView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*MOSuggestionInterstitialCarouselView.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetAssetGridView.delegate.modify;
}

uint64_t MOSuggestionInterstitialCarouselView.controller.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void MOSuggestionInterstitialCarouselView.controller.setter(void *a1)
{
}

void (*MOSuggestionInterstitialCarouselView.controller.modify(void *a1))(id **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_controller;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return MOSuggestionSheetInterstitialView.controller.modify;
}

id MOSuggestionInterstitialCarouselView.init(controller:)(void *a1)
{
  uint64_t v19 = a1;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v17 = *(void *)(v2 - 8);
  uint64_t v18 = v2;
  __chkstk_darwin(v2);
  uint64_t v16 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_assetViewModels] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_denySelectionList] = &_swiftEmptySetSingleton;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView;
  id v7 = objc_allocWithZone((Class)UIView);
  uint64_t v8 = v1;
  *(void *)&v1[v6] = [v7 init];
  *(void *)&v8[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint] = 0;
  *(void *)&v8[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints] = _swiftEmptyArrayStorage;
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UIPageControl) init];
  *(void *)&v8[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_queue;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  uint64_t v21 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v16, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v18);
  *(void *)&v8[v10] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  swift_beginAccess();
  uint64_t v11 = v19;
  swift_unknownObjectWeakAssign();

  uint64_t v12 = (objc_class *)type metadata accessor for MOSuggestionInterstitialCarouselView();
  v20.receiver = v8;
  v20.super_class = v12;
  id v13 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  MOSuggestionInterstitialCarouselView.configureViewsAndLayouts()();
  MOSuggestionInterstitialCarouselView.configureDataSource()();

  return v13;
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.configureViewsAndLayouts()()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView;
  [v0 addSubview:*(void *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView)];
  [*(id *)((char *)v0 + v2) setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(id *)((char *)v0 + v2);
  id v4 = [v3 superview];
  if (v4)
  {
    uint64_t v5 = v4;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v3 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:0.0];
    if (v8)
    {
      id v8 = v8;
      [v8 setActive:1];

      id v3 = v8;
    }
  }
  else
  {
    id v8 = 0;
    uint64_t v5 = v3;
  }

  id v9 = *(id *)((char *)v1 + v2);
  id v10 = [v9 superview];
  if (v10)
  {
    uint64_t v11 = v10;
    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v9 trailingAnchor];
    id v13 = [v11 trailingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:0.0];
    if (v14)
    {
      id v14 = v14;
      [v14 setActive:1];

      id v9 = v14;
    }
  }
  else
  {
    id v14 = 0;
    uint64_t v11 = v9;
  }

  id v15 = *(id *)((char *)v1 + v2);
  id v16 = [v15 superview];
  if (v16)
  {
    uint64_t v17 = v16;
    [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v15 topAnchor];
    id v19 = [v17 topAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:0.0];
    if (v20)
    {
      id v20 = v20;
      [v20 setActive:1];

      id v15 = v20;
    }
  }
  else
  {
    id v20 = 0;
    uint64_t v17 = v15;
  }

  if (specialized static MOAngelRootViewController.isLandscape.getter()) {
    double v21 = 0.0;
  }
  else {
    double v21 = 100.0;
  }
  id v22 = *(id *)((char *)v1 + v2);
  id v23 = [v22 superview];
  if (v23)
  {
    NSString v24 = v23;
    [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v25 = [v22 bottomAnchor];
    id v26 = [v24 bottomAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    if (v27)
    {
      [v27 setConstant:-v21];
      id v28 = v27;
      [v28 setActive:1];

      id v22 = v28;
    }
    Swift::Int v29 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v27 = 0;
    NSString v24 = v22;
    Swift::Int v29 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }

  uint64_t v30 = *(void **)((char *)v1
                 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint);
  *(void *)((char *)v1
            + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstrauint64_t (*v88)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t (*)(char *, uint64_t, uint64_t), void, void, void, uint64_t, uint64_t, uint64_t, int) = v27;

  if (specialized static MOAngelRootViewController.isLandscape.getter()) {
    v31.super.Class isa = MOSuggestionInterstitialCarouselView.generateLandscapeLayout()().super.isa;
  }
  else {
    v31.super.Class isa = MOSuggestionInterstitialCarouselView.generateLayout()().super.isa;
  }
  Class isa = v31.super.isa;
  [*(id *)((char *)v1 + v2) bounds];
  id v37 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:isa collectionViewLayout:v33 v34 v35 v36];
  [*(id *)((char *)v1 + v2) v29[164] v37];
  unint64_t v38 = *(void (**)(id))((swift_isaMask & *v1) + 0xD0);
  id v39 = v37;
  v38(v37);
  [v39 setClipsToBounds:0];
  [v39 setAutoresizingMask:18];
  [v39 setDelegate:v1];
  [v39 setAllowsSelection:1];
  [v39 setAllowsMultipleSelection:1];
  [v39 setShowsHorizontalScrollIndicator:0];
  [v39 setDecelerationRate:UIScrollViewDecelerationRateFast];
  [v39 setPagingEnabled:0];
  [v39 setBouncesHorizontally:1];
  [v39 setContentInset:0.0, 50.0, 0.0, 10.0];
  type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v41 = String._bridgeToObjectiveC()();
  NSString v42 = String._bridgeToObjectiveC()();
  [v39 registerClass:ObjCClassFromMetadata forSupplementaryViewOfKind:v41 withReuseIdentifier:v42];

  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v43 = type metadata accessor for Logger();
  __swift_project_value_buffer(v43, (uint64_t)static MOAngelLogger.shared);
  id v44 = v39;
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v45, v46))
  {
    char v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)char v47 = 136315138;
    [v44 contentOffset];
    uint64_t v48 = CGPoint.debugDescription.getter();
    uint64_t v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v48, v49, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "[MOSuggestionInterstitialCarouselView] currentOffset=%s", v47, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  [*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl) setTranslatesAutoresizingMaskIntoConstraints:0 v50];
  [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
  MOSuggestionInterstitialCarouselView.setPageControlVisibility()();
  MOSuggestionInterstitialCarouselView.configurePageControl()();
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<MOSuggestionInterstitialSupplementaryCheckmarkView>);
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v34 = v3;
  double v35 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v34 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialCarouselViewCell, MOSuggestionSheetAssetViewModel>);
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v36 + 64);
  uint64_t v8 = __chkstk_darwin(v6);
  id v9 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v34 - v10;
  *(void *)(swift_allocObject() + 16) = v0;
  type metadata accessor for MOSuggestionInterstitialCarouselViewCell();
  type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  id v12 = v0;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  id v37 = v5;
  uint64_t v13 = v6;
  uint64_t v14 = v36;
  uint64_t v15 = UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  uint64_t v16 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v12) + 0xC8))(v15);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v11, v13);
    unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, v9, v13);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = partial apply for closure #3 in MOSuggestionInterstitialCarouselView.configureDataSource();
    *(void *)(v20 + 24) = v19;
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionViewDiffableDataSource<InterstitialSection, MOSuggestionSheetAssetViewModel>));
    id v21 = v17;
    uint64_t v22 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    uint64_t v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v12) + 0xB8))(v22);
    uint64_t v24 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v12) + 0xB0))(v23);
    if (v24)
    {
      id v25 = (void *)v24;
      uint64_t v26 = v38;
      uint64_t v27 = v14;
      id v28 = v11;
      Swift::Int v29 = v35;
      uint64_t v30 = v39;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v37, v39);
      unint64_t v31 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v32 = swift_allocObject();
      double v33 = v29;
      uint64_t v11 = v28;
      uint64_t v14 = v27;
      (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v32 + v31, v33, v30);
      dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();

      id v21 = v25;
    }
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
}

void MOSuggestionInterstitialCarouselView.init(frame:)()
{
}

id MOSuggestionInterstitialCarouselView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialCarouselView();
  return [super dealloc];
}

UICollectionViewLayout __swiftcall MOSuggestionInterstitialCarouselView.generateLayout()()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v1 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
  [v1 setInterSectionSpacing:10.0];
  [v1 setScrollDirection:1];
  id v2 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v6[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.generateLayout();
  v6[5] = v0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v6[3] = &block_descriptor_17;
  uint64_t v3 = _Block_copy(v6);
  id v4 = [v2 initWithSectionProvider:v3 configuration:v1];

  _Block_release(v3);
  swift_release();
  return (UICollectionViewLayout)v4;
}

id closure #1 in MOSuggestionInterstitialCarouselView.generateLayout()(char *a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v5 = Strong;
  unint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xE0))();
  uint64_t v7 = (void *)v6;
  if (v6 >> 62) {
    uint64_t v8 = (char *)_CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v8 = *(char **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v39 = a2;
  NSString v42 = v8 - 1;
  if (v8 - 1 == a1) {
    double v9 = -40.0;
  }
  else {
    double v9 = 0.0;
  }
  uint64_t v8 = (char *)[self layoutAnchorWithEdges:12 absoluteOffset:v9];
  uint64_t v7 = self;
  NSString v41 = a1;
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN != -1) {
    goto LABEL_16;
  }
LABEL_9:
  id v10 = [v7 absoluteDimension:*(double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN];
  id v11 = [v7 absoluteDimension:*((double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN + 1)];
  id v12 = self;
  id v13 = [v12 sizeWithWidthDimension:v10 heightDimension:v11];

  id v14 = v13;
  uint64_t v15 = v8;
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [self supplementaryItemWithLayoutSize:v14 elementKind:v16 containerAnchor:v15];

  uint64_t v40 = v14;
  [v17 setPinToVisibleBounds:1];
  id v18 = [v7 fractionalWidthDimension:1.0];
  id v19 = [v7 fractionalWidthDimension:1.0];
  id v20 = [v12 sizeWithWidthDimension:v18 heightDimension:v19];

  uint64_t v38 = v20;
  id v21 = [self itemWithLayoutSize:v20];
  objc_msgSend(objc_msgSend(v39, "container"), "contentSize");
  double v23 = v22;
  swift_unknownObjectRelease();
  double v24 = v23 + -100.0;
  id v25 = [v7 absoluteDimension:v24];
  id v26 = [v7 absoluteDimension:v24];
  id v27 = [v12 sizeWithWidthDimension:v25 heightDimension:v26];

  id v28 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1001DA250;
  *(void *)(v29 + 32) = v21;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSCollectionLayoutItem);
  id v30 = v21;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v32 = [v28 horizontalGroupWithLayoutSize:v27 subitems:isa];

  id v33 = [self sectionWithGroup:v32];
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1001DA250;
  *(void *)(v34 + 32) = v17;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem);
  id v35 = v17;
  Class v36 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v33 setBoundarySupplementaryItems:v36];

  if (v42 == v41) {
    [v33 setContentInsets:0.0, 0.0, 0.0, 40.0];
  }

  return v33;
}

UICollectionViewLayout __swiftcall MOSuggestionInterstitialCarouselView.generateLandscapeLayout()()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v1 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
  [v1 setInterSectionSpacing:10.0];
  [v1 setScrollDirection:1];
  id v2 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v6[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.generateLandscapeLayout();
  v6[5] = v0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v6[3] = &block_descriptor_21_0;
  uint64_t v3 = _Block_copy(v6);
  id v4 = [v2 initWithSectionProvider:v3 configuration:v1];

  _Block_release(v3);
  swift_release();
  return (UICollectionViewLayout)v4;
}

uint64_t closure #1 in MOSuggestionInterstitialCarouselView.generateLandscapeLayout()(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v5 = Strong;
  unint64_t v6 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xE0);
  unint64_t v7 = v6();
  if (v7 >> 62) {
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = swift_bridgeObjectRelease();
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    if (a1) {
      BOOL v10 = v8 - 1 == a1;
    }
    else {
      BOOL v10 = 0;
    }
    LODWORD(v8) = v10;
    unint64_t v11 = ((uint64_t (*)(uint64_t))v6)(v9);
    if (!(v11 >> 62))
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_13;
    }
  }
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
LABEL_13:
  uint64_t v55 = v12;
  uint64_t v51 = a1;
  swift_bridgeObjectRelease();
  int v54 = v8;
  if ((v8 & (v12 > 3)) != 0) {
    double v13 = -40.0;
  }
  else {
    double v13 = 0.0;
  }
  id v14 = [self layoutAnchorWithEdges:12, v13, 0.0];
  uint64_t v15 = self;
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN != -1) {
    swift_once();
  }
  id v16 = [v15 absoluteDimension:*(double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN];
  id v17 = [v15 absoluteDimension:*((double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE_WITH_MARGIN + 1)];
  id v18 = self;
  id v19 = [v18 sizeWithWidthDimension:v16 heightDimension:v17];

  id v20 = v19;
  id v21 = v14;
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [self supplementaryItemWithLayoutSize:v20 elementKind:v22 containerAnchor:v21];

  id v53 = v20;
  [v23 setPinToVisibleBounds:1];
  id v24 = [v15 fractionalWidthDimension:1.0];
  id v25 = [v15 fractionalWidthDimension:1.0];
  id v26 = [v18 sizeWithWidthDimension:v24 heightDimension:v25];

  id v27 = [self itemWithLayoutSize:v26];
  id v50 = a2;
  objc_msgSend(objc_msgSend(a2, "container"), "contentSize");
  double v29 = v28;
  swift_unknownObjectRelease();
  id v30 = [v15 absoluteDimension:v29];
  id v31 = [v15 absoluteDimension:v29];
  id v32 = [v18 sizeWithWidthDimension:v30 heightDimension:v31];

  id v33 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1001DA250;
  *(void *)(v34 + 32) = v27;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSCollectionLayoutItem);
  id v35 = v27;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v52 = v32;
  id v37 = [v33 horizontalGroupWithLayoutSize:v32 subitems:isa];

  id v38 = [self sectionWithGroup:v37];
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1001DA250;
  *(void *)(v39 + 32) = v23;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSCollectionLayoutBoundarySupplementaryItem);
  id v40 = v23;
  Class v41 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v38 setBoundarySupplementaryItems:v41];

  if (v55 > 3 || v51) {
    goto LABEL_22;
  }
  objc_msgSend(objc_msgSend(v50, "container"), "contentSize");
  double v43 = v42;
  uint64_t result = swift_unknownObjectRelease();
  if (!__OFSUB__(v55, 1))
  {
    [v38 setContentInsets:0.0, (v43 - ((double)(v55 - 1) * 10.0 + v29 * (double)v55)) * 0.5 + -50.0, 0.0, 0.0];
LABEL_22:
    if (v54 && v55 >= 4)
    {
      [v38 setContentInsets:0.0, 0.0, 0.0, 40.0];
      uint64_t v45 = v5;
      char v47 = v52;
      os_log_type_t v46 = v53;
      uint64_t v48 = v40;
      unint64_t v49 = v37;
    }
    else
    {
      char v47 = v21;
      uint64_t v48 = v26;
      unint64_t v49 = v35;
      id v35 = v37;
      id v26 = v40;
      id v21 = v5;
      os_log_type_t v46 = v52;
      uint64_t v45 = v53;
    }

    return (uint64_t)v38;
  }
  __break(1u);
  return result;
}

void MOSuggestionInterstitialCarouselView.setPageControlVisibility()()
{
  id v1 = v0;
  if (specialized static MOAngelRootViewController.isLandscape.getter())
  {
    id v2 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 deactivateConstraints:isa];

    id v4 = *(void **)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl];
    [v4 removeFromSuperview];
  }
  else
  {
    uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl;
    [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl]];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1001DA110;
    id v7 = [*(id *)&v1[v5] topAnchor];
    id v8 = [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView] bottomAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    *(void *)(v6 + 32) = v9;
    id v10 = [*(id *)&v1[v5] trailingAnchor];
    id v11 = [v1 trailingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    *(void *)(v6 + 40) = v12;
    id v13 = [*(id *)&v1[v5] leadingAnchor];
    id v14 = [v1 leadingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v6 + 48) = v15;
    id v16 = [*(id *)&v1[v5] bottomAnchor];
    id v17 = [v1 bottomAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    *(void *)(v6 + 56) = v18;
    specialized Array._endMutation()();
    *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints] = v6;
    swift_bridgeObjectRelease();
    id v19 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class v20 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v19 activateConstraints:v20];
  }
}

id MOSuggestionInterstitialCarouselView.configurePageControl()()
{
  id v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0);
  unint64_t v2 = v1();
  if (v2 >> 62) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl;
  uint64_t v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl);
  uint64_t v6 = "setHidden:";
  if (v3 < 2)
  {
    uint64_t v19 = 1;
  }
  else
  {
    [v5 setHidden:0];
    id v7 = *(id *)((char *)v0 + v4);
    unint64_t v8 = v1();
    if (v8 >> 62) {
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    [v7 setNumberOfPages:v9];

    id v10 = *(void **)((char *)v0 + v4);
    id v11 = self;
    id v12 = v10;
    id v13 = [v11 labelColor];
    [v12 setCurrentPageIndicatorTintColor:v13];

    id v14 = *(id *)((char *)v0 + v4);
    id v15 = [v11 grayColor];
    id v16 = [v15 colorWithAlphaComponent:0.5];

    [v14 setPageIndicatorTintColor:v16];
    [*(id *)((char *)v0 + v4) setAccessibilityContainerType:4];
    id v17 = *(id *)((char *)v0 + v4);
    id v18 = [v11 clearColor];
    [v17 setBackgroundColor:v18];

    [*(id *)((char *)v0 + v4) setUserInteractionEnabled:0];
    uint64_t v5 = *(void **)((char *)v0 + v4);
    uint64_t v6 = "setDirection:";
    uint64_t v19 = 0;
  }
  return [v5 v6:v19];
}

uint64_t closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a2;
  uint64_t v22 = a4;
  uint64_t v23 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v23 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v23);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(uint64_t))((swift_isaMask & *a1) + 0xA8);
  uint64_t v10 = swift_retain();
  v9(v10);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  Class v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v12 = v23;
  v20(v8, a2, v23);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v11;
  id v15 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v15(v14 + v13, v8, v12);
  (*(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *a1) + 0x78))(partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource(), v14);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = v23;
  v20(v8, v21, v23);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  v15(v18 + v13, v8, v17);
  return (*(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *a1) + 0x90))(partial apply for closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource(), v18);
}

void closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = IndexPath.section.getter();
    uint64_t v3 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))((swift_isaMask & *v1) + 0x108))(v4);
    specialized Set._Variant.insert(_:)(&v5, v2);
    v3(v4, 0);
  }
}

uint64_t closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  uint64_t v37 = v3;
  __chkstk_darwin(v2);
  id v40 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v38 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v18 = (void *)result;
    uint64_t v32 = *(void *)(result + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_queue);
    static DispatchTime.now()();
    id v31 = v16;
    + infix(_:_:)();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v10;
    uint64_t v34 = v19;
    v19(v14, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v7);
    uint64_t v20 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v35 = v5;
    uint64_t v22 = v36;
    uint64_t v21 = v37;
    uint64_t v23 = (v20 + 24) & ~v20;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    aBlock[4] = partial apply for closure #1 in closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource();
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_64;
    id v25 = _Block_copy(aBlock);
    id v26 = v18;
    id v27 = v38;
    static DispatchQoS.unspecified.getter();
    Class v41 = _swiftEmptyArrayStorage;
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    double v28 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    double v29 = v31;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v22);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v35);
    v34(v29, v33);

    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(void *a1)
{
  uint64_t v2 = IndexPath.section.getter();
  uint64_t v3 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))((swift_isaMask & *a1) + 0x108))(v5);
  specialized Set._Variant.remove(_:)(v2);
  return v3(v5, 0);
}

void closure #2 in MOSuggestionInterstitialCarouselView.configureDataSource()(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1A8))();
    if (v4)
    {
      uint64_t v5 = v4;
      char v6 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x1B0))();
      uint64_t v7 = self;
      uint64_t v8 = &selRef_systemBlueColor;
      if ((v6 & 1) == 0) {
        uint64_t v8 = &selRef_systemIndigoColor;
      }
      id v9 = [v7 *v8];
      (*(void (**)(id))((swift_isaMask & *a1) + 0x68))(v9);

      uint64_t v3 = v5;
    }
  }
}

uint64_t closure #3 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  type metadata accessor for MOSuggestionInterstitialCarouselViewCell();
  type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  swift_retain();
  uint64_t v0 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  swift_release();
  return v0;
}

unint64_t MOSuggestionInterstitialCarouselView.updatedSnapshot(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionSheetAssetViewModel>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionSheetAssetViewModel and conformance MOSuggestionSheetAssetViewModel, (void (*)(uint64_t))type metadata accessor for MOSuggestionSheetAssetViewModel);
  uint64_t v9 = NSDiffableDataSourceSectionSnapshot.init()();
  unint64_t v10 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xE0))(v9);
  unint64_t v11 = v10;
  if (v10 >> 62)
  {
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_12:
      uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t result = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((a1 & 0x8000000000000000) != 0 || result <= a1) {
    goto LABEL_9;
  }
  if ((v11 & 0xC000000000000001) != 0) {
    goto LABEL_12;
  }
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    uint64_t v13 = *(void *)(v11 + 8 * a1 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1001DA250;
    *(void *)(v14 + 32) = v13;
    v15[1] = v14;
    specialized Array._endMutation()();
    v15[0] = 0;
    swift_beginAccess();
    swift_retain();
    NSDiffableDataSourceSectionSnapshot.append(_:to:)();
    swift_endAccess();
    swift_release();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
  }
  __break(1u);
  return result;
}

void closure #1 in MOSuggestionInterstitialCarouselView.reloadAll()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionSheetAssetViewModel>);
  id v1 = *(uint64_t (***)(char *, uint64_t))(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xE0);
    uint64_t v24 = (swift_isaMask & *Strong) + 224;
    id v25 = v9;
    unint64_t v10 = v9();
    if (v10 >> 62) {
      goto LABEL_25;
    }
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v12 = swift_bridgeObjectRelease();
    while (1)
    {
      if (!v11)
      {
LABEL_21:
        MOSuggestionInterstitialCarouselView.printViewModels()();

        return;
      }
      unint64_t v13 = 0;
      uint64_t v23 = (void (**)(char *, char *, uint64_t))(v1 + 4);
      ++v1;
      long long v21 = xmmword_1001DA250;
      uint64_t v22 = v1;
      while (1)
      {
        if (v13 >= 0xD) {
          goto LABEL_8;
        }
        uint64_t v12 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v8) + 0xB0))(v12);
        if (!v12) {
          goto LABEL_8;
        }
        uint64_t v14 = (void *)v12;
        type metadata accessor for MOSuggestionSheetAssetViewModel(0);
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionSheetAssetViewModel and conformance MOSuggestionSheetAssetViewModel, (void (*)(uint64_t))type metadata accessor for MOSuggestionSheetAssetViewModel);
        uint64_t v15 = NSDiffableDataSourceSectionSnapshot.init()();
        unint64_t v16 = ((uint64_t (*)(uint64_t))v25)(v15);
        unint64_t v17 = v16;
        if (v16 >> 62) {
          break;
        }
        unint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
        if (v13 >= v18)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v17 & 0xC000000000000001) != 0)
          {
            uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v13 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_24;
            }
            uint64_t v19 = *(void *)(v17 + 8 * v13 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = v21;
          *(void *)(v20 + 32) = v19;
          uint64_t v26 = v20;
          specialized Array._endMutation()();
          uint64_t v27 = 0;
          swift_beginAccess();
          swift_retain();
          NSDiffableDataSourceSectionSnapshot.append(_:to:)();
          swift_endAccess();
          swift_release();
          swift_bridgeObjectRelease();
          id v1 = v22;
        }
        swift_beginAccess();
        (*v23)(v6, v4, v0);
        LOBYTE(v26) = v13;
        UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();

        uint64_t v12 = (*v1)(v6, v0);
LABEL_8:
        if (v11 == ++v13) {
          goto LABEL_21;
        }
      }
      unint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      if ((v18 & 0x8000000000000000) == 0) {
        goto LABEL_13;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v12 = swift_bridgeObjectRelease();
      if (v11 < 0)
      {
        __break(1u);
        return;
      }
    }
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.printViewModels()()
{
  unint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_15;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = 0;
  unint64_t v5 = v2 & 0xC000000000000001;
  p_weak_ivar_lyt = &MOSuggestionSheetNewEntryButton.weak_ivar_lyt;
  uint64_t v16 = v3;
  unint64_t v17 = v2;
  do
  {
    if (v5)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v7 = *(void *)(v2 + 8 * v4 + 32);
      swift_retain();
    }
    if (p_weak_ivar_lyt[452] != (void *)-1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.assets);
    swift_retain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v7 + 512))();
      *(void *)(v11 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v18);
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      type metadata accessor for UUID();
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v11 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v18);
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "assetViewModel id=%s, uuid=%s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      uint64_t v3 = v16;
      unint64_t v2 = v17;
      swift_slowDealloc();
      p_weak_ivar_lyt = (void **)(&MOSuggestionSheetNewEntryButton + 56);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release_n();
    }
    ++v4;
  }
  while (v3 != v4);
LABEL_15:

  swift_bridgeObjectRelease();
}

uint64_t MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:)(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xC8))(v10);
  if (!v13) {
    goto LABEL_20;
  }
  uint64_t v14 = (void *)v13;
  if (a1 < 0
    || ((unint64_t v15 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xE0))(), v15 >> 62)
      ? (uint64_t v16 = _CocoaArrayWrapper.endIndex.getter())
      : (uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)),
        swift_bridgeObjectRelease(),
        v16 <= a1))
  {

LABEL_20:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.shared);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 134217984;
      aBlock[0] = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[MOSuggestionInterstitialCarouselView] index out of bounds=%ld", v36, 0xCu);
      swift_slowDealloc();
    }
    goto LABEL_24;
  }
  IndexPath.init(row:section:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  id v18 = [v14 layoutAttributesForItemAtIndexPath:isa];

  if (!v18)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    __swift_project_value_buffer(v37, (uint64_t)static MOAngelLogger.shared);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v34, v38))
    {

      return 0;
    }
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 134217984;
    aBlock[0] = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v34, v38, "[MOSuggestionInterstitialCarouselView] layout nil for index=%ld", v39, 0xCu);
    swift_slowDealloc();

LABEL_24:
    return 0;
  }
  [v18 center];
  double v20 = v19;
  [v14 frame];
  double v21 = v20 + CGRectGetWidth(v41) * -0.5;
  if (v21 > 0.0) {
    double v22 = v21;
  }
  else {
    double v22 = 0.0;
  }
  if (a1) {
    BOOL v23 = v21 > 0.0;
  }
  else {
    BOOL v23 = 0;
  }
  if (v23) {
    double v24 = v22;
  }
  else {
    double v24 = -50.0;
  }
  [v14 contentOffset];
  uint64_t v26 = v25;
  if (a2)
  {
    uint64_t v27 = self;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v14;
    *(double *)(v28 + 24) = v24;
    *(void *)(v28 + 32) = v26;
    aBlock[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:);
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_27;
    double v29 = _Block_copy(aBlock);
    id v30 = v14;
    swift_release();
    [v27 animateWithDuration:v29 animations:a3];
    _Block_release(v29);
  }
  id v31 = objc_retain(*(id *)((char *)v4
                          + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl));
  [v31 setCurrentPage:a1];

  return *(void *)&v24;
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  unint64_t v1 = (void *)UIView.userInteractionEnabled(_:)();
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselView.scrollViewDidEndDragging(_:willDecelerate:)(UIScrollView _, Swift::Bool willDecelerate)
{
  unint64_t v2 = (void *)UIView.userInteractionEnabled(_:)();
}

void MOSuggestionInterstitialCarouselView.scrollViewWillEndDragging(_:withVelocity:targetContentOffset:)(void *a1, double *a2, double a3)
{
  uint64_t v4 = v3;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.shared);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134218240;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MOSuggestionInterstitialCarouselView] velocity=%f, userTarget=%f", (uint8_t *)v11, 0x16u);
    swift_slowDealloc();
  }

  if (((*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x128))() & 1) == 0)
  {
    [a1 frame];
    double v12 = CGRectGetWidth(v39) + -100.0;
    [a1 contentOffset];
    double v14 = v13;
    double v15 = v12 * 1.5;
    if (v13 >= v15 + v15)
    {
      [a1 contentSize];
      if (v17 - v15 >= v14) {
        goto LABEL_11;
      }
      double v16 = -50.0;
    }
    else
    {
      double v16 = 50.0;
    }
    double v14 = v14 + v16;
LABEL_11:
    double v18 = v14 / v12;
    double v19 = round(v14 / v12);
    if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
    {
      if (v19 > -9.22337204e18)
      {
        if (v19 < 9.22337204e18)
        {
          double v20 = *a2;
          [a1 setDecelerationRate:UIScrollViewDecelerationRateFast];
          if (fabs(a3) < 0.7)
          {
            double v21 = Logger.logObject.getter();
            os_log_type_t v22 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v21, v22))
            {
              BOOL v23 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)BOOL v23 = 134217984;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v21, v22, "[MOSuggestionInterstitialCarouselView] Rejecting scroll due to small velocity =%f", v23, 0xCu);
              swift_slowDealloc();
            }

            [a1 setDecelerationRate:10.0];
          }
          if (v20 >= v14)
          {
            if (a3 < 0.0)
            {
              double v24 = Logger.logObject.getter();
              os_log_type_t v25 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v24, v25))
              {
                uint64_t v26 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)uint64_t v26 = 134217984;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                uint64_t v27 = "[MOSuggestionInterstitialCarouselView] Rejecting scroll due to invalid velocity (+) direction =%f";
                goto LABEL_25;
              }
LABEL_26:

              [a1 setDecelerationRate:2.0];
              return;
            }
            goto LABEL_31;
          }
          if (a3 > 0.0)
          {
            double v24 = Logger.logObject.getter();
            os_log_type_t v25 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v24, v25))
            {
              uint64_t v26 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v26 = 134217984;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              uint64_t v27 = "[MOSuggestionInterstitialCarouselView] Rejecting scroll due to invalid velocity (-) direction =%f";
LABEL_25:
              _os_log_impl((void *)&_mh_execute_header, v24, v25, v27, v26, 0xCu);
              swift_slowDealloc();
              goto LABEL_26;
            }
            goto LABEL_26;
          }
          float v28 = v18;
          float v29 = floorf(v28);
          if ((~LODWORD(v29) & 0x7F800000) != 0)
          {
            if (v29 > -9.2234e18)
            {
              if (v29 < 9.2234e18) {
                goto LABEL_34;
              }
              __break(1u);
LABEL_31:
              float v30 = v18;
              float v29 = ceilf(v30);
              if ((~LODWORD(v29) & 0x7F800000) != 0)
              {
                if (v29 > -9.2234e18)
                {
                  if (v29 < 9.2234e18)
                  {
LABEL_34:
                    uint64_t v31 = MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:)((uint64_t)v29, 0, 0.2);
                    if (v32)
                    {
                      uint64_t v36 = Logger.logObject.getter();
                      os_log_type_t v37 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v36, v37))
                      {
                        os_log_type_t v38 = (uint8_t *)swift_slowAlloc();
                        *(_DWORD *)os_log_type_t v38 = 134217984;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        _os_log_impl((void *)&_mh_execute_header, v36, v37, "[MOSuggestionInterstitialCarouselView] fall back to currentTargetOffset=%f", v38, 0xCu);
                        swift_slowDealloc();
                      }

                      *a2 = v20;
                    }
                    else
                    {
                      *(void *)a2 = v31;
                      uint64_t v33 = Logger.logObject.getter();
                      os_log_type_t v34 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v33, v34))
                      {
                        uint64_t v35 = swift_slowAlloc();
                        *(_DWORD *)uint64_t v35 = 134218496;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        *(_WORD *)(v35 + 12) = 2048;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        *(_WORD *)(v35 + 22) = 2048;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MOSuggestionInterstitialCarouselView] scrolling to index=%ld, currentTargetOffset=%f, newPoint=%f", (uint8_t *)v35, 0x20u);
                        swift_slowDealloc();
                      }
                    }
                    return;
                  }
LABEL_49:
                  __break(1u);
                  return;
                }
LABEL_48:
                __break(1u);
                goto LABEL_49;
              }
LABEL_47:
              __break(1u);
              goto LABEL_48;
            }
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_44;
  }
}

void *MOSuggestionInterstitialCarouselView.toggleSelectionState(_:view:indexPath:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = (uint64_t (**)(void))(*a1 + 512);
  uint64_t v6 = *v5;
  if ((*v5)() == 0x6C6F686563616C70 && v7 == 0xEB00000000726564)
  {
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    unint64_t result = (void *)swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      uint64_t v11 = (*(uint64_t (**)(void *))((swift_isaMask & *v2) + 0x110))(result);
      uint64_t v26 = v6();
      uint64_t v27 = v12;
      Swift::Int v28 = 35;
      unint64_t v29 = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      unint64_t result = (void *)StringProtocol.components<A>(separatedBy:)();
      if (!result[2])
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v25 = a2;
      uint64_t v13 = result[4];
      uint64_t v14 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v15 = specialized Set.contains(_:)(v13, v14, v11);
      swift_bridgeObjectRelease();
      uint64_t v16 = swift_bridgeObjectRelease();
      if (v15)
      {
        uint64_t v26 = ((uint64_t (*)(uint64_t))v6)(v16);
        uint64_t v27 = v17;
        Swift::Int v28 = 35;
        unint64_t v29 = 0xE100000000000000;
        unint64_t result = (void *)StringProtocol.components<A>(separatedBy:)();
        if (result[2])
        {
          uint64_t v18 = result[4];
          uint64_t v19 = result[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          double v20 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))((swift_isaMask & *v3)
                                                                                             + 0x120))(&v26);
          specialized Set._Variant.remove(_:)(v18, v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20(&v26, 0);
          return (void *)(*(uint64_t (**)(void))((swift_isaMask & **(void **)(v25
                                                                                            + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                                             + 0xA0))(0);
        }
        goto LABEL_17;
      }
      uint64_t v26 = ((uint64_t (*)(uint64_t))v6)(v16);
      uint64_t v27 = v21;
      Swift::Int v28 = 35;
      unint64_t v29 = 0xE100000000000000;
      unint64_t result = (void *)StringProtocol.components<A>(separatedBy:)();
      if (!result[2])
      {
LABEL_18:
        __break(1u);
        return result;
      }
      Swift::Int v22 = result[4];
      Swift::Int v23 = result[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v24 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))((swift_isaMask & *v3)
                                                                                         + 0x120))(&v26);
      specialized Set._Variant.insert(_:)(&v28, v22, v23);
      swift_bridgeObjectRelease();
      v24(&v26, 0);
      return (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v25
                                                                                         + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                                          + 0xA0))(1);
    }
  }
  return result;
}

void MOSuggestionInterstitialCarouselView.toggleSelectionState(indexPath:)(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8))();
  if (v4)
  {
    unint64_t v5 = (void *)v4;
    NSString v6 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v15 = [v5 supplementaryViewForElementKind:v6 atIndexPath:isa];

    if (v15)
    {
      type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8)
      {
        uint64_t v9 = v8;
        unint64_t v10 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xE0))();
        uint64_t v11 = a1;
        unint64_t v12 = IndexPath.section.getter();
        if (v10 >> 62)
        {
          a1 = v12;
          swift_bridgeObjectRetain();
          uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if ((v11 & 0x8000000000000000) == 0) {
            goto LABEL_21;
          }
          __break(1u);
LABEL_19:
          uint64_t v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_10:
          swift_bridgeObjectRelease();
          MOSuggestionInterstitialCarouselView.toggleSelectionState(_:view:indexPath:)(v14, v9);

          swift_release();
        }
        else
        {
          unint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if ((v12 & 0x8000000000000000) == 0)
          {
            while (v12 < v13)
            {
              if ((v10 & 0xC000000000000001) != 0) {
                goto LABEL_19;
              }
              if (v12 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                uint64_t v14 = *(void **)(v10 + 8 * v12 + 32);
                swift_retain();
                goto LABEL_10;
              }
              __break(1u);
LABEL_21:
              unint64_t v13 = v11;
              unint64_t v12 = a1;
              if ((a1 & 0x8000000000000000) != 0) {
                break;
              }
            }
          }

          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
    }
  }
}

void MOSuggestionInterstitialCarouselView.forceCheckmark(indexPath:selected:)(uint64_t a1, char a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xC8))();
  if (v4)
  {
    unint64_t v5 = (void *)v4;
    NSString v6 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v9 = [v5 supplementaryViewForElementKind:v6 atIndexPath:isa];

    if (v9)
    {
      type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8) {
        (*(void (**)(void))((swift_isaMask & **(void **)(v8
      }
                                                                      + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                       + 0xA0))(a2 & 1);
    }
  }
}

void MOSuggestionInterstitialCarouselView.updateCheckmarkVisibity(indexPath:hidden:)(uint64_t a1, char a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xC8))();
  if (v4)
  {
    unint64_t v5 = (void *)v4;
    NSString v6 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v9 = [v5 supplementaryViewForElementKind:v6 atIndexPath:isa];

    if (v9)
    {
      type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8) {
        [*(id *)(v8+ OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView) setHidden:a2 & 1];
      }
    }
  }
}

void MOSuggestionInterstitialCarouselView.collectionView(_:didSelectItemAt:)(uint64_t a1, unint64_t a2)
{
}

uint64_t @objc MOSuggestionInterstitialCarouselView.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  MOSuggestionInterstitialCarouselView.toggleSelectionState(indexPath:)((unint64_t)v8);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL MOSuggestionInterstitialCarouselView.collectionView(_:shouldSelectItemAt:)()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))();
  uint64_t v2 = IndexPath.section.getter();
  BOOL v3 = specialized Set.contains(_:)(v2, v1);
  swift_bridgeObjectRelease();
  return !v3;
}

BOOL @objc MOSuggestionInterstitialCarouselView.collectionView(_:shouldSelectItemAt:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xF8);
  id v10 = a3;
  uint64_t v11 = a1;
  uint64_t v12 = v9();
  uint64_t v13 = IndexPath.section.getter();
  BOOL v14 = specialized Set.contains(_:)(v13, v12);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return !v14;
}

void MOSuggestionInterstitialCarouselView.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

id thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_1000F34D8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionInterstitialCarouselView.reloadAll()()
{
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t type metadata accessor for MOSuggestionInterstitialCarouselView()
{
  return self;
}

uint64_t sub_1000F3554()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(void *a1, uint64_t a2, uint64_t a3)
{
  return closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(a1, a2, a3, *(void *)(v3 + 16));
}

void partial apply for closure #2 in MOSuggestionInterstitialCarouselView.configureDataSource()(void *a1)
{
}

uint64_t sub_1000F359C()
{
  return objectdestroy_6Tm(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialCarouselViewCell, MOSuggestionSheetAssetViewModel>);
}

uint64_t partial apply for closure #3 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialCarouselViewCell, MOSuggestionSheetAssetViewModel>);

  return closure #3 in MOSuggestionInterstitialCarouselView.configureDataSource()();
}

uint64_t sub_1000F3634()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed UICollectionView, @in_guaranteed IndexPath, @guaranteed MOSuggestionSheetAssetViewModel) -> (@owned MOSuggestionInterstitialCarouselViewCell?)(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16))(a1, a2, *a3);
}

uint64_t sub_1000F3698()
{
  return objectdestroy_6Tm(&demangling cache variable for type metadata for UICollectionView.SupplementaryRegistration<MOSuggestionInterstitialSupplementaryCheckmarkView>);
}

uint64_t objectdestroy_6Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t partial apply for closure #4 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

void specialized MOSuggestionInterstitialCarouselView.init(coder:)()
{
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v9 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v4 - 8);
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_dataSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_collectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_assetViewModels] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_denySelectionList] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_containerViewBottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControlConstraints] = _swiftEmptyArrayStorage;
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_pageControl;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UIPageControl) init];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionInterstitialCarouselView_queue;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  uint64_t v11 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v10);
  *(void *)&v0[v7] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id partial apply for closure #1 in MOSuggestionInterstitialCarouselView.generateLayout()(char *a1, void *a2)
{
  return closure #1 in MOSuggestionInterstitialCarouselView.generateLayout()(a1, a2);
}

uint64_t partial apply for closure #1 in MOSuggestionInterstitialCarouselView.generateLandscapeLayout()(uint64_t a1, void *a2)
{
  return closure #1 in MOSuggestionInterstitialCarouselView.generateLandscapeLayout()(a1, a2);
}

uint64_t sub_1000F3B30()
{
  return _swift_deallocObject(v0, 40, 7);
}

id partial apply for closure #1 in MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:)()
{
  return [*(id *)(v0 + 16) setContentOffset:0 animated:*(double *)(v0 + 24)];
}

void specialized MOSuggestionInterstitialCarouselView.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 0xD000000000000032 && a3 == 0x80000001001E5DC0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
    uint64_t v14 = swift_dynamicCastClass();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = *(uint64_t (**)(void))((swift_isaMask & *v5) + 0xE0);
      id v17 = a1;
      unint64_t v18 = v16();
      unint64_t v19 = IndexPath.section.getter();
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if ((v20 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if ((v19 & 0x8000000000000000) == 0 && v19 < v20)
      {
        if ((v18 & 0xC000000000000001) == 0)
        {
          if (v19 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_25;
          }
          uint64_t v21 = *(void *)(v18 + 8 * v19 + 32);
          swift_retain();
LABEL_12:
          uint64_t v44 = v11;
          id v45 = v17;
          uint64_t v22 = swift_bridgeObjectRelease();
          uint64_t v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x110))(v22);
          uint64_t v24 = *(void *)v21;
          double v42 = *(uint64_t (**)(void))(*(void *)v21 + 512);
          uint64_t v43 = v24 + 512;
          uint64_t v25 = v42();
          LODWORD(v5) = v26;
          v48[0] = v25;
          v48[1] = v26;
          uint64_t v46 = 35;
          unint64_t v47 = 0xE100000000000000;
          lazy protocol witness table accessor for type String and conformance String();
          uint64_t v27 = (void *)StringProtocol.components<A>(separatedBy:)();
          if (v27[2])
          {
            uint64_t v29 = v27[4];
            uint64_t v28 = v27[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LODWORD(v5) = specialized Set.contains(_:)(v29, v28, v23);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(void))((swift_isaMask & **(void **)(v15
                                                                          + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                           + 0xA0))(v5 & 1);
            if (serverManager._clientConnections == (NSMutableDictionary *)-1) {
              goto LABEL_14;
            }
            goto LABEL_26;
          }
LABEL_25:
          __break(1u);
LABEL_26:
          swift_once();
LABEL_14:
          uint64_t v30 = type metadata accessor for Logger();
          __swift_project_value_buffer(v30, (uint64_t)static MOAngelLogger.shared);
          uint64_t v31 = v44;
          (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v13, a4, v10);
          swift_retain_n();
          char v32 = Logger.logObject.getter();
          os_log_type_t v33 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v32, v33))
          {
            uint64_t v34 = swift_slowAlloc();
            uint64_t v41 = swift_slowAlloc();
            v48[0] = v41;
            *(_DWORD *)uint64_t v34 = 136315650;
            _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))&type metadata accessor for IndexPath);
            uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, v48);
            HIDWORD(v40) = v5;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v37 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v13, v10);
            *(_WORD *)(v34 + 12) = 2080;
            uint64_t v38 = ((uint64_t (*)(uint64_t))v42)(v37);
            uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, v48);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v34 + 22) = 1024;
            LODWORD(v46) = BYTE4(v40) & 1;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v32, v33, "[MOSuggestionInterstitialCarouselView] will display supplementary view at %s, id=%s, shouldBeSelected=%{BOOL}d", (uint8_t *)v34, 0x1Cu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_release();
          }
          else
          {
            swift_release();

            (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v10);
            swift_release_n();
          }
          return;
        }
LABEL_23:
        uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_12;
      }

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1000F41C0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F421C(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB8);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000F4284@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F42E0(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD0);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1000F4348@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F43A4(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xE8);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1000F4408@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F4464(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x100);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1000F44D0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x110))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F4534(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x118);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1000F45A0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x190))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000F4604(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x198);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1000F4680@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x1A8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F46E4(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x1B0);
  id v4 = *a1;
  return v3(v2);
}

ValueMetadata *type metadata accessor for MOSuggestionInterstitialCarouselViewConstants()
{
  return &type metadata for MOSuggestionInterstitialCarouselViewConstants;
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  return partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()((uint64_t (*)(uint64_t, uint64_t))closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource());
}

uint64_t objectdestroy_53Tm()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  return partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource());
}

uint64_t sub_1000F48B0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()()
{
  return partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()((uint64_t (*)(uint64_t, uint64_t))closure #1 in closure #2 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource());
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionInterstitialCarouselView.configureDataSource()(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

void *MOSuggestionStateOfMindAssetView.__allocating_init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, long long a13, long long a14, long long a15, uint64_t a16, uint64_t a17)
{
  id v29 = objc_allocWithZone(v17);
  uint64_t v30 = specialized MOSuggestionStateOfMindAssetView.init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, *((uint64_t *)&a13 + 1), a14, *((uint64_t *)&a14 + 1), a15, *((uint64_t *)&a15 + 1), a16,
          a17);

  return v30;
}

id closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.primaryLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  [v0 setFont:isa];
  [v0 setOverrideUserInterfaceStyle:1];
  id v3 = [self labelColor];
  id v4 = [v3 colorWithAlphaComponent:0.6];

  [v0 setTextColor:v4];
  [v0 setPreferredVibrancy:1];
  [v0 setTextAlignment:4];
  [v0 setLineBreakMode:4];
  [v0 setAdjustsFontForContentSizeCategory:1];
  [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [v0 setNumberOfLines:2];
  return v0;
}

id MOSuggestionStateOfMindAssetView.primaryLabel.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionStateOfMindAssetView.primaryLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionStateOfMindAssetView.primaryLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_secondaryLabelColor);
}

id MOSuggestionStateOfMindAssetView.secondaryLabel.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionStateOfMindAssetView.secondaryLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionStateOfMindAssetView.secondaryLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.typeLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_tertiaryLabelColor);
}

id closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel(SEL *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  id v3 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v2 setFont:v3];

  [v2 setOverrideUserInterfaceStyle:1];
  id v4 = [self *a1];
  [v2 setTextColor:v4];

  [v2 setLineBreakMode:4];
  [v2 setTextAlignment:4];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setNumberOfLines:2];
  [v2 setPreferredVibrancy:1];
  [v2 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  return v2;
}

id MOSuggestionStateOfMindAssetView.typeLabel.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionStateOfMindAssetView.typeLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionStateOfMindAssetView.typeLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionStateOfMindAssetView.labelStack.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionStateOfMindAssetView.labelStack.setter(void *a1)
{
}

uint64_t (*MOSuggestionStateOfMindAssetView.labelStack.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

void *MOSuggestionStateOfMindAssetView.init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v21 = specialized MOSuggestionStateOfMindAssetView.init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20);

  return v21;
}

Swift::Void __swiftcall MOSuggestionStateOfMindAssetView.handleTraitChange()()
{
  id v1 = [(id)v0 traitCollection];
  id v2 = [v1 userInterfaceStyle];

  if (v2 == (id)1)
  {
    *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors) = *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColorsLight);
    swift_bridgeObjectRetain();
    uint64_t v3 = swift_bridgeObjectRelease();
    id v4 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v0) + 0x128))(v3);
    uint64_t v5 = self;
    id v6 = [v5 labelColor];
    id v7 = [v6 colorWithAlphaComponent:0.6];

    [v4 setTextColor:v7];
    uint64_t v8 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(void *)v0) + 0x140))();
    id v9 = [v5 secondaryLabelColor];
    [v8 setTextColor:v9];

    uint64_t v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(void *)v0) + 0x158))();
    id v11 = [v5 tertiaryLabelColor];
  }
  else
  {
    *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors) = *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColorsDark);
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_bridgeObjectRelease();
    uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v0) + 0x128))(v12);
    uint64_t v14 = self;
    id v15 = [v14 whiteColor];
    id v16 = [v15 colorWithAlphaComponent:0.6];

    [v13 setTextColor:v16];
    id v17 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(void *)v0) + 0x140))();
    id v18 = [v14 whiteColor];
    id v19 = [v18 colorWithAlphaComponent:0.6];

    [v17 setTextColor:v19];
    uint64_t v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(void *)v0) + 0x158))();
    id v20 = [v14 whiteColor];
    id v11 = [v20 colorWithAlphaComponent:0.6];
  }
  [v10 setTextColor:v11];

  uint64_t v21 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient);
  if (!v21) {
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1001DA390;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CGColorRef?);
  uint64_t v24 = v23;
  *(void *)(v22 + 56) = v23;
  uint64_t v25 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors;
  unint64_t v26 = *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors);
  if (!v26)
  {
    *(void *)(v22 + 32) = 0;
    *(void *)(v22 + 88) = v23;
    id v32 = v21;
LABEL_29:
    unint64_t v0 = 0;
    goto LABEL_30;
  }
  if (v26 >> 62)
  {
    id v33 = v21;
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    id v31 = 0;
    goto LABEL_16;
  }
  uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v28 = v21;
  swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_15;
  }
LABEL_8:
  if ((v26 & 0xC000000000000001) != 0)
  {
    id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v29 = *(id *)(v26 + 32);
  }
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  id v31 = [v30 CGColor];

LABEL_16:
  unint64_t v0 = *(void *)(v0 + v25);
  *(void *)(v22 + 32) = v31;
  *(void *)(v22 + 88) = v24;
  if (v0)
  {
    unint64_t v26 = v0 & 0xFFFFFFFFFFFFFF8;
    if (!(v0 >> 62))
    {
      uint64_t v34 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v34) {
        goto LABEL_19;
      }
LABEL_28:
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    if (v34)
    {
LABEL_19:
      unint64_t v35 = v34 - 1;
      if (__OFSUB__(v34, 1))
      {
        __break(1u);
      }
      else if ((v0 & 0xC000000000000001) == 0)
      {
        if ((v35 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v35 < *(void *)(v26 + 16))
        {
          id v36 = *(id *)(v0 + 8 * v35 + 32);
LABEL_24:
          uint64_t v37 = v36;
          swift_bridgeObjectRelease();
          unint64_t v0 = (unint64_t)[v37 CGColor];

          goto LABEL_30;
        }
        __break(1u);
        return;
      }
      id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_24;
    }
    goto LABEL_28;
  }
LABEL_30:
  *(void *)(v22 + 64) = v0;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 setColors:isa];
}

Swift::Void __swiftcall MOSuggestionStateOfMindAssetView.layoutSubviews()()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MOSuggestionStateOfMindAssetView();
  [super layoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient];
  if (v1)
  {
    id v2 = v1;
    [v0 frame];
    [v2 setFrame:];
  }
}

Swift::Void __swiftcall MOSuggestionStateOfMindAssetView.makeUIView(image:)(UIImage image)
{
  id v2 = v1;
  id v4 = [self clearColor];
  [v2 setBackgroundColor:v4];

  type metadata accessor for MOSuggestionRoundView();
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v6 = [objc_allocWithZone((Class)UIImageView) initWithImage:image.super.isa];
  id v275 = [objc_allocWithZone((Class)UIView) init];
  id v7 = [objc_allocWithZone((Class)CAGradientLayer) init];
  id v8 = [v275 layer];
  [v8 addSublayer:v7];

  id v9 = *(void **)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient);
  *(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient) = v7;
  id v270 = v7;

  [v2 addSubview:v275];
  [v6 setContentMode:1];
  [v5 addSubview:v6];
  [v2 addSubview:v5];
  id v10 = [v6 heightAnchor];
  id v11 = [v5 heightAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11 multiplier:0.99];

  [v12 setActive:1];
  id v13 = [v6 widthAnchor];
  id v272 = v5;
  id v14 = [v5 widthAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14 multiplier:0.99];

  [v15 setActive:1];
  id v16 = [v6 superview];
  if (v16)
  {
    id v17 = v16;
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v6 centerYAnchor];
    id v19 = [v17 centerYAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:0.0];
    id v21 = v20;
    [v21 setActive:1];
  }
  id v22 = [v6 superview];
  if (!v22)
  {
LABEL_8:
    uint64_t v27 = v6;
    int v29 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_assignedTileSize);
    if (v29 == 8) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  uint64_t v23 = v22;
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v24 = [v6 centerXAnchor];
  id v25 = [v23 centerXAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  [v26 setConstant:0.0];
  if (!v26)
  {

    goto LABEL_8;
  }
  uint64_t v27 = v6;
  id v28 = v26;
  [v28 setActive:1];

  int v29 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_assignedTileSize);
  if (v29 == 8) {
    goto LABEL_13;
  }
LABEL_9:
  NSString v30 = *(NSString *)((char *)v2
                    + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelTextShortened
                    + 8);
  if (v30
    && (!*(void *)((char *)v2
                   + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelTextShortened)
     && v30 == (NSString)0xE000000000000000
     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_13:
    id v31 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x128))();
    if (*(void *)((char *)v2
                   + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelText
                   + 8))
      NSString v32 = String._bridgeToObjectiveC()();
    else {
      NSString v32 = 0;
    }
    [v31 setText:v32];

    if (v29 == 8) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  id v33 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x128))();
  if (v30) {
    NSString v30 = String._bridgeToObjectiveC()();
  }
  [v33 setText:v30];

LABEL_21:
  NSString v34 = *(NSString *)((char *)v2
                    + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelTextShortened
                    + 8);
  if (!v34
    || (*(void *)((char *)v2
                  + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelTextShortened)
     || v34 != (NSString)0xE000000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    unint64_t v35 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140))();
    if (!v34) {
      goto LABEL_30;
    }
    goto LABEL_28;
  }
LABEL_25:
  unint64_t v35 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140))();
  if (*(void *)((char *)v2
                 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelText
                 + 8))
  {
LABEL_28:
    NSString v34 = String._bridgeToObjectiveC()();
    goto LABEL_30;
  }
  NSString v34 = 0;
LABEL_30:
  [v35 setText:v34];

  id v36 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x158);
  uint64_t v37 = (void *)v36();
  uint64_t v38 = *(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabelText + 8);
  uint64_t v268 = *(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabelText);
  if (v38) {
    NSString v39 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v39 = 0;
  }
  [v37 setText:v39];

  uint64_t v40 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x128);
  uint64_t v41 = (void *)v40();
  UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(0, 0.0, 0.95, 0.0);

  uint64_t v273 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140);
  double v42 = (void *)v273();
  UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(0, 0.0, 0.95, 0.0);

  uint64_t v271 = v40;
  switch(v29)
  {
    case 2:
    case 3:
      UIView.fillSuper(margin:)(8.0);

      swift_bridgeObjectRelease();
      return;
    case 4:
      id v74 = [v272 superview];
      if (v74)
      {
        unint64_t v75 = v74;
        [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v76 = [v272 leadingAnchor];
        id v77 = [v75 leadingAnchor];
        id v78 = [v76 constraintEqualToAnchor:v77];

        [v78 setConstant:8.0];
        id v79 = v78;
        [v79 setActive:1];
      }
      id v80 = [v272 superview];
      if (v80)
      {
        uint64_t v81 = v80;
        [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v82 = [v272 topAnchor];
        id v83 = [v81 topAnchor];
        id v84 = [v82 constraintEqualToAnchor:v83];

        [v84 setConstant:8.0];
        id v85 = v84;
        [v85 setActive:1];
      }
      id v86 = [v272 widthAnchor];
      id v87 = [v272 heightAnchor];
      id v88 = [v86 constraintEqualToAnchor:v87];

      [v88 setActive:1];
      [v2 frame];
      double v90 = v89 + -16.0;
      [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v91 = [v272 widthAnchor];
      id v92 = [v91 constraintEqualToConstant:v90];

      [v92 setActive:1];
      id v93 = [v272 superview];
      if (v93)
      {
        uint64_t v94 = v93;
        [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v95 = [v272 bottomAnchor];
        id v96 = [v94 bottomAnchor];
        id v97 = [v95 constraintEqualToAnchor:v96];

        if (v97)
        {
          [v97 setConstant:-8.0];
          id v98 = v97;
          [v98 setActive:1];
        }
      }
      uint64_t v99 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x170);
      uint64_t v100 = (void *)v99();
      uint64_t v101 = (void *)v40();
      [v100 addArrangedSubview:v101];

      uint64_t v102 = (void *)v99();
      BOOL v103 = (void *)v273();
      [v102 addArrangedSubview:v103];

      uint64_t v104 = (void *)v99();
      [v104 setTranslatesAutoresizingMaskIntoConstraints:0];

      uint64_t v105 = (void *)v99();
      [v2 addSubview:v105];

      uint64_t v106 = (void *)v99();
      [v106 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v107 = [v106 leadingAnchor];
      id v108 = [v272 trailingAnchor];
      id v109 = [v107 constraintEqualToAnchor:v108];

      [v109 setConstant:8.0];
      [v109 setActive:1];

      uint64_t v110 = (void *)v99();
      id v111 = [v110 superview];
      if (v111)
      {
        uint64_t v112 = v111;
        [v110 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v113 = [v110 centerYAnchor];
        id v114 = [v112 centerYAnchor];
        id v115 = [v113 constraintEqualToAnchor:v114];

        [v115 setConstant:0.0];
        if (v115)
        {
          id v115 = v115;
          [v115 setActive:1];

          uint64_t v110 = v115;
        }
        uint64_t v168 = v27;

        id v167 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      else
      {
        id v115 = 0;
        uint64_t v112 = v110;
        id v167 = &selRef_collectionView_didSelectItemAtIndexPath_;
        uint64_t v168 = v27;
      }

      v248 = (void *)v99();
      id v249 = [v248 superview];
      if (v249)
      {
        id v274 = v249;
        [v248 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v250 = [v248 trailingAnchor];
        id v251 = [v274 trailingAnchor];
        id v252 = [v250 v167[147] v251];

        [v252 setConstant:-5.0];
        id v166 = v252;
        [v166 setActive:1];

        goto LABEL_143;
      }

      goto LABEL_152;
    case 5:
      char v269 = v27;
      int v116 = (void *)v40();
      [v2 addSubview:v116];

      id v117 = (void *)v273();
      [v2 addSubview:v117];

      uint64_t v118 = (void *)v40();
      id v119 = [v118 superview];
      if (v119)
      {
        uint64_t v120 = v119;
        [v118 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v121 = [v118 topAnchor];
        id v122 = [v120 topAnchor];
        id v123 = [v121 constraintEqualToAnchor:v122];

        [v123 setConstant:12.0];
        if (v123)
        {
          id v123 = v123;
          [v123 setActive:1];

          uint64_t v118 = v123;
        }

        unint64_t v124 = &selRef_collectionView_didSelectItemAtIndexPath_;
        uint64_t v40 = v271;
      }
      else
      {
        id v123 = 0;
        uint64_t v120 = v118;
        unint64_t v124 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }

      id v169 = (void *)v40();
      id v170 = [v169 superview];
      if (v170)
      {
        id v171 = v170;
        [v169 v124[92]];
        id v172 = [v169 leadingAnchor];
        id v173 = [v171 leadingAnchor];
        id v174 = [v172 constraintEqualToAnchor:v173];

        [v174 setConstant:12.0];
        if (v174)
        {
          id v174 = v174;
          [v174 setActive:1];

          id v169 = v174;
        }

        unint64_t v124 = &selRef_collectionView_didSelectItemAtIndexPath_;
        uint64_t v40 = v271;
      }
      else
      {
        id v174 = 0;
        id v171 = v169;
      }

      id v175 = (void *)v40();
      id v176 = [v175 superview];
      if (v176)
      {
        uint64_t v177 = v176;
        [v175 v124[92]];
        id v178 = [v175 trailingAnchor];
        id v179 = [v177 trailingAnchor];
        id v180 = [v178 constraintEqualToAnchor:v179];

        [v180 setConstant:-12.0];
        if (v180)
        {
          id v180 = v180;
          [v180 setActive:1];

          id v175 = v180;
        }

        unint64_t v124 = &selRef_collectionView_didSelectItemAtIndexPath_;
        uint64_t v40 = v271;
      }
      else
      {
        id v180 = 0;
        uint64_t v177 = v175;
      }

      uint64_t v181 = (void *)v40();
      [v181 setTextAlignment:1];

      id v182 = (void *)v273();
      id v183 = [v182 superview];
      if (v183)
      {
        double v184 = v183;
        [v182 v124[92]];
        id v185 = [v182 bottomAnchor];
        id v186 = [v184 bottomAnchor];
        id v187 = [v185 constraintEqualToAnchor:v186];

        if (v187)
        {
          [v187 setConstant:-12.0];
          id v187 = v187;
          [v187 setActive:1];

          id v182 = v187;
        }

        unint64_t v124 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      else
      {
        id v187 = 0;
        double v184 = v182;
      }

      Swift::String v188 = (void *)v273();
      id v189 = [v188 superview];
      if (v189)
      {
        uint64_t v190 = v189;
        [v188 v124[92]];
        id v191 = [v188 leadingAnchor];
        id v192 = [v190 leadingAnchor];
        id v193 = [v191 constraintEqualToAnchor:v192];

        [v193 setConstant:12.0];
        if (v193)
        {
          id v193 = v193;
          [v193 setActive:1];

          Swift::String v188 = v193;
        }

        unint64_t v124 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      else
      {
        id v193 = 0;
        uint64_t v190 = v188;
      }

      id v194 = (void *)v273();
      id v195 = [v194 superview];
      if (v195)
      {
        uint64_t v196 = v195;
        [v194 v124[92]];
        id v197 = [v194 trailingAnchor];
        id v198 = [v196 trailingAnchor];
        id v199 = [v197 constraintEqualToAnchor:v198];

        [v199 setConstant:-12.0];
        if (v199)
        {
          id v199 = v199;
          uint64_t v200 = &selRef_collectionView_didSelectItemAtIndexPath_;
          [v199 setActive:1];

          id v194 = v199;
          int v201 = v272;
        }
        else
        {
          int v201 = v272;
          uint64_t v200 = &selRef_collectionView_didSelectItemAtIndexPath_;
        }
      }
      else
      {
        id v199 = 0;
        uint64_t v196 = v194;
        int v201 = v272;
        uint64_t v200 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }

      char v254 = (void *)v273();
      [v254 setTextAlignment:1];

      id v255 = [v201 superview];
      if (v255)
      {
        id v256 = v255;
        [v201 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v257 = [v201 centerXAnchor];
        id v258 = [v256 centerXAnchor];
        id v259 = [v257 constraintEqualToAnchor:v258];

        [v259 setConstant:0.0];
        id v260 = v259;
        [v260 v200[139] 1];
      }
      uint64_t v261 = (void *)v271();
      [v201 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v262 = [v201 topAnchor];
      id v263 = [v261 bottomAnchor];
      id v264 = [v262 constraintEqualToAnchor:v263];

      [v264 setConstant:5.0];
      [v264 v200[139]:1];

      uint64_t v244 = (void *)v273();
      [v201 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v265 = [v201 bottomAnchor];
      id v266 = [v244 topAnchor];
      id v267 = [v265 constraintEqualToAnchor:v266];

      [v267 setConstant:-5.0];
      [v267 v200[139] 1];

      goto LABEL_150;
    case 6:
    case 7:
      char v269 = v27;
      uint64_t v43 = v272;
      id v44 = [v272 superview];
      if (v44)
      {
        id v45 = v44;
        [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v46 = [v272 leadingAnchor];
        id v47 = [v45 leadingAnchor];
        id v48 = [v46 constraintEqualToAnchor:v47];

        [v48 setConstant:8.0];
        id v49 = v48;
        [v49 setActive:1];
      }
      id v50 = [v272 superview];
      if (v50)
      {
        uint64_t v51 = v50;
        [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v52 = [v272 topAnchor];
        id v53 = [v51 topAnchor];
        id v54 = [v52 constraintEqualToAnchor:v53];

        [v54 setConstant:8.0];
        id v55 = v54;
        [v55 setActive:1];
      }
      id v56 = [v272 widthAnchor];
      id v57 = [v272 heightAnchor];
      id v58 = [v56 constraintEqualToAnchor:v57];

      [v58 setActive:1];
      [v2 frame];
      double v60 = v59 + -16.0;
      [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v61 = [v272 widthAnchor];
      id v62 = [v61 constraintEqualToConstant:v60];

      [v62 setActive:1];
      id v63 = [v272 superview];
      if (v63)
      {
        id v64 = v63;
        [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v65 = [v272 bottomAnchor];
        id v66 = [v64 bottomAnchor];
        id v67 = [v65 constraintEqualToAnchor:v66];

        if (v67)
        {
          [v67 setConstant:-8.0];
          id v68 = v67;
          [v68 setActive:1];
        }
      }
      double v69 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x170);
      unint64_t v70 = (void *)v69();
      unint64_t v71 = (void *)v271();
      [v70 addArrangedSubview:v71];

      uint64_t v73 = *(void *)((char *)v2
                      + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelText
                      + 8);
      if (!v38)
      {
        if (!v73) {
          goto LABEL_77;
        }
        goto LABEL_76;
      }
      uint64_t v72 = v268;
      if (!v73
        || (v268 != *(void *)((char *)v2
                              + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelText)
         || v38 != v73)
        && (uint64_t v72 = _stringCompareWithSmolCheck(_:_:expecting:)(), (v72 & 1) == 0))
      {
LABEL_76:
        uint64_t v145 = (void *)((uint64_t (*)(uint64_t))v69)(v72);
        uint64_t v146 = (void *)v273();
        [v145 addArrangedSubview:v146];
      }
LABEL_77:
      uint64_t v147 = (void *)v69();
      uint64_t v148 = (void *)v36();
      [v147 addArrangedSubview:v148];

      long long v149 = (void *)v69();
      [v149 setTranslatesAutoresizingMaskIntoConstraints:0];

      char v150 = (void *)v69();
      [v2 addSubview:v150];

      uint64_t v151 = (void *)v69();
      [v151 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v152 = [v151 leadingAnchor];
      id v153 = [v272 trailingAnchor];
      id v154 = [v152 constraintEqualToAnchor:v153];

      [v154 setConstant:8.0];
      [v154 setActive:1];

      uint64_t v155 = (void *)v69();
      id v156 = [v155 superview];
      if (v156)
      {
        uint64_t v157 = v156;
        [v155 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v158 = [v155 centerYAnchor];
        id v159 = [v157 centerYAnchor];
        id v160 = [v158 constraintEqualToAnchor:v159];

        [v160 setConstant:0.0];
        if (v160)
        {
          id v160 = v160;
          [v160 setActive:1];

          uint64_t v155 = v160;
        }

        uint64_t v43 = v272;
      }
      else
      {
        id v160 = 0;
        uint64_t v157 = v155;
      }

      char v161 = (void *)v69();
      id v162 = [v161 superview];
      if (v162)
      {
        id v274 = v162;
        [v161 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v163 = [v161 trailingAnchor];
        id v164 = [v274 trailingAnchor];
        id v165 = [v163 constraintEqualToAnchor:v164];

        [v165 setConstant:-8.0];
        id v166 = v165;
        [v166 setActive:1];

LABEL_143:
        id v253 = v274;
        goto LABEL_153;
      }

LABEL_151:
LABEL_152:
      id v253 = v275;
LABEL_153:

      return;
    case 8:
      uint64_t v125 = (void *)v40();
      [v2 addSubview:v125];

      uint64_t v126 = (void *)v273();
      [v2 addSubview:v126];

      char v269 = v27;
      if (!specialized static MOSuggestionAssetTileSize.__derived_enum_equals(_:_:)(8u, 8u)) {
        goto LABEL_71;
      }
      uint64_t v127 = (void *)v40();
      unint64_t v128 = self;
      id v129 = [v128 preferredFontForTextStyle:UIFontTextStyleBody];
      id v130 = [v129 fontDescriptor];
      id v131 = [v130 fontDescriptorWithSymbolicTraits:2];

      if (v131)
      {
        id v132 = [v128 fontWithDescriptor:v131 size:0.0];

        [v127 setFont:v132];
        Swift::Int v133 = (void *)v273();
        id v134 = [v128 preferredFontForTextStyle:UIFontTextStyleBody];
        id v135 = [v134 fontDescriptor];
        id v136 = [v135 fontDescriptorWithSymbolicTraits:2];

        if (v136)
        {
          id v137 = [v128 fontWithDescriptor:v136 size:0.0];

          [v133 setFont:v137];
          uint64_t v40 = v271;
LABEL_71:
          Swift::Int v138 = (void *)v40();
          id v139 = [v138 superview];
          uint64_t v140 = &selRef_collectionView_didSelectItemAtIndexPath_;
          if (v139)
          {
            uint64_t v141 = v139;
            [v138 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v142 = [v138 topAnchor];
            id v143 = [v141 topAnchor];
            id v144 = [v142 constraintEqualToAnchor:v143];

            [v144 setConstant:12.0];
            if (v144)
            {
              id v144 = v144;
              [v144 setActive:1];

              Swift::Int v138 = v144;
            }

            uint64_t v140 = &selRef_collectionView_didSelectItemAtIndexPath_;
            uint64_t v40 = v271;
          }
          else
          {
            id v144 = 0;
            uint64_t v141 = v138;
          }

          v202 = (void *)v40();
          id v203 = [v202 superview];
          if (v203)
          {
            id v204 = v203;
            [v202 v140[92]];
            id v205 = [v202 leadingAnchor];
            id v206 = [v204 leadingAnchor];
            id v207 = [v205 constraintEqualToAnchor:v206];

            [v207 setConstant:12.0];
            if (v207)
            {
              id v207 = v207;
              [v207 setActive:1];

              v202 = v207;
            }

            uint64_t v140 = &selRef_collectionView_didSelectItemAtIndexPath_;
            uint64_t v40 = v271;
          }
          else
          {
            id v207 = 0;
            id v204 = v202;
          }

          v208 = (void *)v40();
          id v209 = [v208 superview];
          if (v209)
          {
            uint64_t v210 = v209;
            [v208 v140[92]];
            id v211 = [v208 trailingAnchor];
            id v212 = [v210 trailingAnchor];
            id v213 = [v211 constraintEqualToAnchor:v212];

            [v213 setConstant:-12.0];
            if (v213)
            {
              id v213 = v213;
              [v213 setActive:1];

              v208 = v213;
            }

            uint64_t v140 = &selRef_collectionView_didSelectItemAtIndexPath_;
            uint64_t v40 = v271;
          }
          else
          {
            id v213 = 0;
            uint64_t v210 = v208;
          }

          uint64_t v214 = (void *)v40();
          [v214 setTextAlignment:1];

          uint64_t v215 = (void *)v273();
          id v216 = [v215 superview];
          if (v216)
          {
            uint64_t v217 = v216;
            [v215 v140[92]];
            id v218 = [v215 bottomAnchor];
            id v219 = [v217 bottomAnchor];
            id v220 = [v218 constraintEqualToAnchor:v219];

            if (v220)
            {
              [v220 setConstant:-12.0];
              id v220 = v220;
              [v220 setActive:1];

              uint64_t v215 = v220;
            }

            uint64_t v140 = &selRef_collectionView_didSelectItemAtIndexPath_;
          }
          else
          {
            id v220 = 0;
            uint64_t v217 = v215;
          }

          uint64_t v221 = (void *)v273();
          id v222 = [v221 superview];
          if (v222)
          {
            v223 = v222;
            [v221 v140[92]];
            id v224 = [v221 leadingAnchor];
            id v225 = [v223 leadingAnchor];
            id v226 = [v224 constraintEqualToAnchor:v225];

            [v226 setConstant:12.0];
            if (v226)
            {
              id v226 = v226;
              [v226 setActive:1];

              uint64_t v221 = v226;
            }

            uint64_t v140 = &selRef_collectionView_didSelectItemAtIndexPath_;
          }
          else
          {
            id v226 = 0;
            v223 = v221;
          }

          uint64_t v227 = (void *)v273();
          id v228 = [v227 superview];
          if (v228)
          {
            uint64_t v229 = v228;
            [v227 v140[92]];
            id v230 = [v227 trailingAnchor];
            id v231 = [v229 trailingAnchor];
            id v232 = [v230 constraintEqualToAnchor:v231];

            [v232 setConstant:-12.0];
            if (v232)
            {
              id v232 = v232;
              [v232 setActive:1];

              uint64_t v227 = v232;
            }
          }
          else
          {
            id v232 = 0;
            uint64_t v229 = v227;
          }

          v233 = (void *)v273();
          [v233 setTextAlignment:1];

          id v234 = [v272 superview];
          if (v234)
          {
            v235 = v234;
            [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v236 = [v272 centerXAnchor];
            id v237 = [v235 centerXAnchor];
            id v238 = [v236 constraintEqualToAnchor:v237];

            [v238 setConstant:0.0];
            id v239 = v238;
            [v239 setActive:1];
          }
          uint64_t v240 = (void *)v271();
          [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v241 = [v272 topAnchor];
          id v242 = [v240 bottomAnchor];
          id v243 = [v241 constraintEqualToAnchor:v242];

          [v243 setConstant:5.0];
          [v243 setActive:1];

          uint64_t v244 = (void *)v273();
          [v272 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v245 = [v272 bottomAnchor];
          id v246 = [v244 topAnchor];
          id v247 = [v245 constraintEqualToAnchor:v246];

          [v247 setConstant:-5.0];
          [v247 setActive:1];

LABEL_150:
          goto LABEL_151;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x1000F83ACLL);
    default:

      goto LABEL_152;
  }
}

void MOSuggestionStateOfMindAssetView.init(frame:)()
{
}

id MOSuggestionStateOfMindAssetView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionStateOfMindAssetView();
  return [super dealloc];
}

void *specialized MOSuggestionStateOfMindAssetView.init(image:assignedTileSize:frame:valenceClassificationAndReflectiveInterval:reflectiveInterval:labels:labelsShortened:domains:domainsShortened:associatedColorsLight:associatedColorsDark:startDate:)(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)&v20[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors] = 0;
  *(void *)&v20[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient] = 0;
  uint64_t v29 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel;
  NSString v30 = v20;
  *(void *)&v20[v29] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.primaryLabel();
  uint64_t v31 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel;
  *(void *)&v30[v31] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_secondaryLabelColor);
  uint64_t v32 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel;
  *(void *)&v30[v32] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_tertiaryLabelColor);
  uint64_t v33 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack;
  id v34 = [objc_allocWithZone((Class)UIStackView) init];
  [v34 setAxis:1];
  [v34 setSpacing:1.0];
  [v34 setAlignment:1];
  *(void *)&v30[v33] = v34;
  v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_assignedTileSize] = a2;
  unint64_t v35 = &v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_valenceClassificationAndReflectiveInterval];
  uint64_t v75 = a3;
  *(void *)unint64_t v35 = a3;
  *((void *)v35 + 1) = a4;
  *(void *)&v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColorsLight] = a18;
  *(void *)&v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColorsDark] = a19;
  id v36 = self;
  swift_bridgeObjectRetain();
  id v78 = v36;
  id v37 = [v36 mainBundle];
  v81._uint64_t countAndFlagsBits = 0xD000000000000046;
  v81._object = (void *)0x80000001001E62C0;
  v38._object = (void *)0x80000001001E62A0;
  v38._uint64_t countAndFlagsBits = 0x1000000000000011;
  v39._uint64_t countAndFlagsBits = 0x206E6F69746F6D45;
  v39._object = (void *)0xAD0000402520B7C2;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v81);

  if (one-time initialization token for shortTimeFormatter != -1) {
    swift_once();
  }
  uint64_t v40 = (void *)static MODateFormatter.shortTimeFormatter;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v42 = [v40 stringForObjectValue:isa];

  if (v42)
  {
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    unint64_t v45 = 0xE000000000000000;
  }
  unint64_t v46 = a15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1001DA0F0;
  *(void *)(v48 + 56) = &type metadata for String;
  *(void *)(v48 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(void *)(v48 + 32) = v43;
  *(void *)(v48 + 40) = v45;
  uint64_t v49 = static String.localizedStringWithFormat(_:_:)();
  unint64_t v51 = v50;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a5 == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v49 = 0;
    unint64_t v51 = 0xE000000000000000;
  }
  id v53 = (uint64_t *)&v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabelText];
  *id v53 = v49;
  v53[1] = v51;
  if (a7)
  {
    uint64_t v54 = HIBYTE(a7) & 0xF;
    if ((a7 & 0x2000000000000000) == 0) {
      uint64_t v54 = a6 & 0xFFFFFFFFFFFFLL;
    }
    if (v54)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v55 = a6;
      uint64_t v56 = a8;
      goto LABEL_16;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v56 = 0;
  a13 = 0xE000000000000000;
  a7 = a4;
  uint64_t v55 = v75;
LABEL_16:
  id v57 = &v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelText];
  *(void *)id v57 = v55;
  *((void *)v57 + 1) = a7;
  id v58 = &v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabelTextShortened];
  *(void *)id v58 = v56;
  *((void *)v58 + 1) = a13;
  if (!a15)
  {
LABEL_22:
    a16 = 0;
    unint64_t v46 = v51;
    a17 = 0xE000000000000000;
    goto LABEL_23;
  }
  uint64_t v59 = HIBYTE(a15) & 0xF;
  if ((a15 & 0x2000000000000000) == 0) {
    uint64_t v59 = a14 & 0xFFFFFFFFFFFFLL;
  }
  if (!v59)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v49 = a14;
LABEL_23:
  swift_bridgeObjectRelease();
  id v61 = (uint64_t *)&v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelText];
  *id v61 = v49;
  v61[1] = v46;
  id v62 = &v30[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabelTextShortened];
  *(void *)id v62 = a16;
  *((void *)v62 + 1) = a17;

  v80.receiver = v30;
  v80.super_class = (Class)type metadata accessor for MOSuggestionStateOfMindAssetView();
  id v63 = [super initWithFrame:a9, a10, a11, a12];
  [v63 setContentMode:1];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1001DA0F0;
  *(void *)(v64 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v64 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  id v65 = v63;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v66 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v65) + 0x198))(a1);
  (*(void (**)(uint64_t))((swift_isaMask & *v65) + 0x190))(v66);
  [v65 setIsAccessibilityElement:1];
  id v67 = v65;
  id v68 = [v78 mainBundle];
  v82._object = (void *)0x80000001001E6310;
  v69._uint64_t countAndFlagsBits = 0x666F206574617453;
  v69._object = (void *)0xED0000646E696D20;
  v70._uint64_t countAndFlagsBits = 0;
  v70._object = (void *)0xE000000000000000;
  v82._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, (NSBundle)v68, v70, v82);

  NSString v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v67 setAccessibilityLabel:v71];

  uint64_t v72 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(a20, v72);
  return v67;
}

void specialized MOSuggestionStateOfMindAssetView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_associatedColors] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_gradient] = 0;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_primaryLabel;
  *(void *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.primaryLabel();
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_secondaryLabel;
  *(void *)&v0[v2] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_secondaryLabelColor);
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_typeLabel;
  *(void *)&v0[v3] = closure #1 in variable initialization expression of MOSuggestionStateOfMindAssetView.secondaryLabel((SEL *)&selRef_tertiaryLabelColor);
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionStateOfMindAssetView_labelStack;
  id v5 = [objc_allocWithZone((Class)UIStackView) init];
  [v5 setAxis:1];
  [v5 setSpacing:1.0];
  [v5 setAlignment:1];
  *(void *)&v0[v4] = v5;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionStateOfMindAssetView()
{
  return self;
}

uint64_t sub_1000F8D58@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x128))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F8DBC(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x130))(*a1);
}

uint64_t sub_1000F8E28@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x140))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F8E8C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x148))(*a1);
}

uint64_t sub_1000F8EF8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x158))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F8F5C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x160))(*a1);
}

uint64_t sub_1000F8FC8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x170))();
  *a2 = result;
  return result;
}

uint64_t sub_1000F902C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x178))(*a1);
}

uint64_t MOSuggestionAssetPhotoMomentMetadata.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t MOSuggestionAssetPhotoMomentMetadata.date.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

id MOSuggestionAssetPhotoMomentMetadata.location.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for MOSuggestionAssetPhotoMomentMetadata() + 20));

  return v1;
}

uint64_t type metadata accessor for MOSuggestionAssetPhotoMomentMetadata()
{
  uint64_t result = type metadata singleton initialization cache for MOSuggestionAssetPhotoMomentMetadata;
  if (!type metadata singleton initialization cache for MOSuggestionAssetPhotoMomentMetadata) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void MOSuggestionAssetPhotoMomentMetadata.location.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for MOSuggestionAssetPhotoMomentMetadata() + 20);

  *(void *)(v1 + v3) = a1;
}

void (__swiftcall *MOSuggestionAssetPhotoMomentMetadata.location.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

double MOSuggestionAssetPhotoMomentMetadata.resolution.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for MOSuggestionAssetPhotoMomentMetadata() + 24));
}

uint64_t MOSuggestionAssetPhotoMomentMetadata.resolution.setter(double a1, double a2)
{
  uint64_t result = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
  id v6 = (double *)(v2 + *(int *)(result + 24));
  *id v6 = a1;
  v6[1] = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetPhotoMomentMetadata.resolution.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

unint64_t MOSuggestionAssetPhotoMomentMetadata.packedDictionary()()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DA740;
  uint64_t v2 = (void *)MOSuggestionAssetMetadataKeyPhotoMomentDate;
  *(void *)(inited + 32) = MOSuggestionAssetMetadataKeyPhotoMomentDate;
  uint64_t v3 = type metadata accessor for Date();
  *(void *)(inited + 64) = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 40));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v0, v3);
  id v5 = (void *)MOSuggestionAssetMetadataKeyPhotoMomentLocation;
  *(void *)(inited + 72) = MOSuggestionAssetMetadataKeyPhotoMomentLocation;
  uint64_t v6 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
  id v7 = *(void **)(v0 + *(int *)(v6 + 20));
  uint64_t v8 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation);
  *(void *)(inited + 80) = v7;
  id v9 = (void *)MOSuggestionAssetMetadataKeyPhotoMomentResolution;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = v9;
  uint64_t v10 = *(void *)(v0 + *(int *)(v6 + 24) + 8);
  *(void *)(inited + 144) = &type metadata for Double;
  *(void *)(inited + 120) = v10;
  id v11 = v2;
  id v12 = v5;
  id v13 = v7;
  id v14 = v9;
  return specialized Dictionary.init(dictionaryLiteral:)(inited);
}

uint64_t MOSuggestionAssetPhotoMomentMetadata.init(date:location:resolution:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a3, a1, v10);
  uint64_t result = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  id v12 = (double *)(a3 + *(int *)(result + 24));
  *id v12 = a4;
  v12[1] = a5;
  return result;
}

id one-time initialization function for shared()
{
  type metadata accessor for MOAssetPhotoMomentProvider();
  uint64_t v0 = swift_allocObject();
  id result = [self defaultManager];
  *(void *)(v0 + 16) = result;
  static MOAssetPhotoMomentProvider.shared = v0;
  return result;
}

{
  uint64_t v0;
  id v1;
  double v2;
  double v3;
  id result;

  type metadata accessor for MOSuggestionAssetAppIconProvider();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = [self mainScreen];
  [v1 scale];
  uint64_t v3 = v2;

  id result = [objc_allocWithZone((Class)ISImageDescriptor) initWithSize:350.0 scale:350.0 v3];
  *(void *)(v0 + 16) = result;
  static MOSuggestionAssetAppIconProvider.shared = v0;
  return result;
}

{
  void *v0;
  id v1;
  id result;

  type metadata accessor for MOSuggestionAssetCacheManager();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = [objc_allocWithZone((Class)NSCache) init];
  v0[2] = v1;
  v0[3] = &_swiftEmptySetSingleton;
  v0[4] = &_swiftEmptyDictionarySingleton;
  v0[5] = 0;
  type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider();
  swift_allocObject();
  v0[6] = MOSuggestionAssetPhotoLivePhotoVideosProvider.init()();
  [v1 setCountLimit:30];
  id result = [v1 setTotalCostLimit:80];
  static MOSuggestionAssetCacheManager.shared = (uint64_t)v0;
  return result;
}

uint64_t MOAssetPhotoMomentProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = [self defaultManager];
  return v0;
}

uint64_t *MOAssetPhotoMomentProvider.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static MOAssetPhotoMomentProvider.shared;
}

uint64_t static MOAssetPhotoMomentProvider.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }

  return swift_retain();
}

int64x2_t one-time initialization function for defaultImageSize()
{
  int64x2_t result = vdupq_n_s64(0x4072C00000000000uLL);
  static MOAssetPhotoMomentProvider.defaultImageSize = (__int128)result;
  return result;
}

long long *MOAssetPhotoMomentProvider.defaultImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultImageSize != -1) {
    swift_once();
  }
  return &static MOAssetPhotoMomentProvider.defaultImageSize;
}

double static MOAssetPhotoMomentProvider.defaultImageSize.getter()
{
  return static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(&one-time initialization token for defaultImageSize, (uint64_t)&static MOAssetPhotoMomentProvider.defaultImageSize);
}

long long *MOAssetPhotoMomentProvider.highQualityImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for highQualityImageSize != -1) {
    swift_once();
  }
  return &static MOAssetPhotoMomentProvider.highQualityImageSize;
}

double static MOAssetPhotoMomentProvider.highQualityImageSize.getter()
{
  return static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE.getter(&one-time initialization token for highQualityImageSize, (uint64_t)&static MOAssetPhotoMomentProvider.highQualityImageSize);
}

Swift::OpaquePointer_optional __swiftcall MOAssetPhotoMomentProvider.fetchAssetsByIdentifiers(for:)(Swift::OpaquePointer a1)
{
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v3, v4))
  {

    swift_bridgeObjectRelease();
    if (*((void *)a1._rawValue + 2)) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v18, "[Assets] No localIdentifier", v19, 2u);
      swift_slowDealloc();
    }
    goto LABEL_13;
  }
  id v5 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)id v5 = 134217984;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v3, v4, "[Assets] fetching photos identifierCount=%ld", v5, 0xCu);
  swift_slowDealloc();

  if (!*((void *)a1._rawValue + 2)) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v6 = [objc_allocWithZone((Class)PHFetchOptions) init];
  [v6 setIncludeGuestAssets:1];
  id v7 = self;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v9 = [v7 fetchAssetsWithLocalIdentifiers:isa options:v6];

  if ((uint64_t)[v9 count] < 1
    || (id v10 = [v9 fetchedObjects]) == 0)
  {

LABEL_13:
    uint64_t v12 = 0;
    goto LABEL_16;
  }
  id v11 = v10;
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHAsset);
  uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v13 = v9;
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v16 = 134217984;
    [v13 count];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[Assets] Fetched PHAsset count=%ld", v16, 0xCu);
    swift_slowDealloc();
    id v17 = v6;
  }
  else
  {

    id v17 = v13;
    id v14 = v6;
  }

LABEL_16:
  id v21 = (void *)v12;
  result.value._unint64_t rawValue = v21;
  result.is_nil = v20;
  return result;
}

uint64_t MOAssetPhotoMomentProvider.getMetadata(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v23 - v12;
  id v14 = [a1 creationDate];
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_8;
  }
  os_log_type_t v15 = v14;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_8:
    outlined destroy of Any?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Date?);
LABEL_9:
    uint64_t v22 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  v16(v13, v6, v7);
  id v17 = [a1 location];
  if (!v17)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    goto LABEL_9;
  }
  id v18 = v17;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (one-time initialization token for defaultImageSize != -1) {
    swift_once();
  }
  long long v19 = static MOAssetPhotoMomentProvider.defaultImageSize;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v16(a2, v11, v7);
  uint64_t v20 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
  *(void *)&a2[*(int *)(v20 + 20)] = v18;
  *(_OWORD *)&a2[*(int *)(v20 + 24)] = v19;
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

uint64_t MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:)(unint64_t a1, uint64_t a2, void (*a3)(void *, void *), uint64_t a4)
{
  uint64_t v70 = a4;
  NSString v71 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAssetPhotoMomentMetadata?);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
  uint64_t v61 = *(void *)(v68 - 8);
  uint64_t v8 = __chkstk_darwin(v68);
  uint64_t v67 = (uint64_t)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v66 = (uint64_t)v58 - v10;
  if (one-time initialization token for defaultImageSize != -1) {
LABEL_33:
  }
    swift_once();
  long long v11 = static MOAssetPhotoMomentProvider.defaultImageSize;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = _swiftEmptyArrayStorage;
  uint64_t v12 = swift_allocObject();
  uint64_t v72 = v12;
  *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
  double v60 = (unint64_t *)(v12 + 16);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v56 >= 1)
    {
      uint64_t v57 = swift_allocObject();
      uint64_t v69 = v57;
      *(void *)(v57 + 16) = v56;
      os_log_type_t v15 = (void *)(v57 + 16);
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v16 = result;
      if (result) {
        goto LABEL_5;
      }
LABEL_36:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return 1;
    }
LABEL_37:
    v71(_swiftEmptyArrayStorage, _swiftEmptyArrayStorage);
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13) {
    goto LABEL_37;
  }
  uint64_t v14 = swift_allocObject();
  uint64_t v69 = v14;
  *(void *)(v14 + 16) = v13;
  os_log_type_t v15 = (void *)(v14 + 16);
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_36;
  }
LABEL_5:
  if (v16 >= 1)
  {
    unint64_t v75 = a1 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v18 = 0;
    id v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    id v62 = v78;
    *(void *)&long long v19 = 136315138;
    long long v59 = v19;
    v58[1] = (char *)&type metadata for Any + 8;
    id v65 = v7;
    uint64_t v74 = v16;
    uint64_t v64 = v15;
    while (1)
    {
      if (v75) {
        uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v32 = *(id *)(a1 + 8 * v18 + 32);
      }
      uint64_t v33 = v32;
      if (([v32 mediaSubtypes] & 4) != 0)
      {
        if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v34 = type metadata accessor for Logger();
        __swift_project_value_buffer(v34, (uint64_t)static MOAngelLogger.shared);
        unint64_t v35 = Logger.logObject.getter();
        os_log_type_t v36 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v35, v36))
        {
          id v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v37 = 0;
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "[Assets] Skipping screenshot", v37, 2u);
          uint64_t v16 = v74;
          swift_slowDealloc();
          Swift::String v38 = v33;
        }
        else
        {
          Swift::String v38 = v35;
          unint64_t v35 = v33;
        }

        if (__OFSUB__(*v15, 1))
        {
          __break(1u);
          goto LABEL_33;
        }
        --*v15;
      }
      else
      {
        (*(void (**))(*v76 + 96))(v33);
        if ((*v63)(v7, 1, v68) == 1)
        {
          outlined destroy of Any?((uint64_t)v7, &demangling cache variable for type metadata for MOSuggestionAssetPhotoMomentMetadata?);
        }
        else
        {
          uint64_t v39 = v66;
          outlined init with take of MOSuggestionAssetPhotoMomentMetadata((uint64_t)v7, v66);
          outlined init with copy of MOSuggestionAssetPhotoMomentMetadata(v39, v67);
          uint64_t v40 = v60;
          swift_beginAccess();
          unint64_t v41 = *v40;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v40 = v41;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v41 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v41 + 16) + 1, 1, v41);
            unint64_t *v60 = v41;
          }
          unint64_t v44 = *(void *)(v41 + 16);
          unint64_t v43 = *(void *)(v41 + 24);
          if (v44 >= v43 >> 1)
          {
            unint64_t v41 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1, v41);
            unint64_t *v60 = v41;
          }
          *(void *)(v41 + 16) = v44 + 1;
          outlined init with take of MOSuggestionAssetPhotoMomentMetadata(v67, v41+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v44);
          swift_endAccess();
          outlined destroy of MOSuggestionAssetPhotoMomentMetadata(v66);
        }
        if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v45 = type metadata accessor for Logger();
        __swift_project_value_buffer(v45, (uint64_t)static MOAngelLogger.shared);
        unint64_t v46 = v33;
        id v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = v59;
          id v50 = [v46 localIdentifier];
          unint64_t v51 = a1;
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v54 = v53;

          uint64_t v55 = v52;
          a1 = v51;
          *(void *)(v49 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v54, aBlock);

          uint64_t v20 = v46;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "[Assets] imageRequested=%s", (uint8_t *)v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v20 = v46;
        }
        id v21 = (void *)swift_allocObject();
        uint64_t v22 = v72;
        uint64_t v24 = v69;
        uint64_t v23 = v70;
        v21[2] = v73;
        v21[3] = v24;
        v21[4] = v71;
        v21[5] = v23;
        v21[6] = v22;
        id v25 = objc_allocWithZone((Class)PHImageRequestOptions);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        id v26 = [v25 init];
        [v26 setDeliveryMode:1];
        uint64_t v27 = (void *)v76[2];
        id v28 = (void *)swift_allocObject();
        void v28[2] = v20;
        v28[3] = partial apply for closure #1 in MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:);
        v28[4] = v21;
        v78[2] = partial apply for closure #1 in MOAssetPhotoMomentProvider.fetchImage(for:targetSize:contentMode:onComplete:);
        uint64_t v78[3] = v28;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v78[0] = thunk for @escaping @callee_guaranteed (@guaranteed UIImage?, @guaranteed [AnyHashable : Any]?) -> ();
        v78[1] = &block_descriptor_21;
        uint64_t v29 = _Block_copy(aBlock);
        NSString v30 = v20;
        id v31 = v26;
        swift_retain();
        swift_release();
        [v27 requestImageForAsset:v30 targetSize:1 contentMode:v31 options:v29 resultHandler:v11];
        _Block_release(v29);

        swift_release();
        uint64_t v7 = v65;
        os_log_type_t v15 = v64;
        uint64_t v16 = v74;
      }
      if (v16 == ++v18) {
        goto LABEL_36;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  long long v11 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  id v12 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v13 = (uint64_t *)(a3 + 16);
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_beginAccess();
  if ((unint64_t)*v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_beginAccess();
  if (v14 >= *v13)
  {
    swift_beginAccess();
    uint64_t v16 = *v11;
    swift_beginAccess();
    uint64_t v17 = *(void *)(a6 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(v16, v17);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void closure #1 in MOAssetPhotoMomentProvider.fetchImage(for:targetSize:contentMode:onComplete:)(void *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  if (a1)
  {
    clientConnections = serverManager._clientConnections;
    id v7 = a1;
    if (clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.shared);
    id v9 = a3;
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)id v12 = 136315138;
      id v13 = [v9 localIdentifier];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;

      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Assets] imageFetched=%s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    a4(v7);
  }
}

uint64_t MOAssetPhotoMomentProvider.init()()
{
  *(void *)(v0 + 16) = [self defaultManager];
  return v0;
}

uint64_t sub_1000FAB64()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FAB9C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FABAC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:)(void *a1)
{
  return closure #1 in MOAssetPhotoMomentProvider.getImages(from:previewOnly:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1000FAC0C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOAssetPhotoMomentProvider.fetchImage(for:targetSize:contentMode:onComplete:)(void *a1, uint64_t a2)
{
  closure #1 in MOAssetPhotoMomentProvider.fetchImage(for:targetSize:contentMode:onComplete:)(a1, a2, *(void **)(v2 + 16), *(void (**)(id))(v2 + 24));
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t outlined init with take of MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of MOSuggestionAssetPhotoMomentMetadata(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MOSuggestionAssetPhotoMomentMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for MOSuggestionAssetPhotoMomentMetadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    id v11 = v10;
  }
  return a1;
}

void destroy for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t initializeWithCopy for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  id v10 = v9;
  return a1;
}

uint64_t assignWithCopy for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  return a1;
}

uint64_t initializeWithTake for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB134);
}

uint64_t sub_1000FB134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetPhotoMomentMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FB208);
}

uint64_t sub_1000FB208(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for MOSuggestionAssetPhotoMomentMetadata()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MOAssetPhotoMomentProvider()
{
  return self;
}

void *MOSuggestionAssetMediaAnalytics.Events.mediaSuggestion.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAnalytics.Events.mediaSuggestion;
}

unint64_t static MOSuggestionAssetMediaAnalytics.Events.mediaSuggestion.getter()
{
  return 0xD000000000000021;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x4449656C646E7562;
  }
  if (a1 == 1) {
    return 0xD000000000000012;
  }
  return 0xD000000000000016;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields(unsigned char *a1, unsigned char *a2)
{
  unint64_t v2 = 0xD000000000000012;
  int v3 = *a1;
  unint64_t v4 = 0x80000001001E1220;
  if (v3 == 1) {
    unint64_t v5 = 0xD000000000000012;
  }
  else {
    unint64_t v5 = 0xD000000000000016;
  }
  if (v3 == 1) {
    unint64_t v6 = 0x80000001001E1220;
  }
  else {
    unint64_t v6 = 0x80000001001E1240;
  }
  if (*a1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x4449656C646E7562;
  }
  if (v3) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = 0xE800000000000000;
  }
  if (*a2 != 1)
  {
    unint64_t v2 = 0xD000000000000016;
    unint64_t v4 = 0x80000001001E1240;
  }
  if (*a2) {
    uint64_t v9 = v2;
  }
  else {
    uint64_t v9 = 0x4449656C646E7562;
  }
  if (*a2) {
    unint64_t v10 = v4;
  }
  else {
    unint64_t v10 = 0xE800000000000000;
  }
  if (v7 == v9 && v8 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields()
{
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0x80000001001E1220;
  unint64_t v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000016;
    unint64_t v4 = 0x80000001001E1240;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x4449656C646E7562;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isAppIconUnchanged.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isAppIconUnchanged.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isPredefinedPopularApp.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isPredefinedPopularApp.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

void (__swiftcall *MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.isPredefinedPopularApp.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

MomentsUIService::MOSuggestionAssetMediaAnalytics::MediaEngagementEvent __swiftcall MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.init(bundleId:isAppIconUnchanged:isPredefinedPopularApp:)(Swift::String_optional bundleId, Swift::Bool isAppIconUnchanged, Swift::Bool isPredefinedPopularApp)
{
  if (isPredefinedPopularApp) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  __int16 v4 = v3 & 0xFFFE | isAppIconUnchanged;
  result.bundleId = bundleId;
  result.isAppIconUnchanged = v4;
  result.isPredefinedPopularApp = HIBYTE(v4);
  return result;
}

Swift::Void __swiftcall MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()()
{
  char v1 = v0;
  uint64_t v2 = (v0 >> 8) & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, NSObject)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DA740;
  *(void *)(inited + 32) = 0x4449656C646E7562;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v4 = swift_allocObject();
  id v5 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithString:v6];

  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = 0xD000000000000012;
  *(void *)(inited + 64) = 0x80000001001E1220;
  *(void *)(inited + 72) = [objc_allocWithZone((Class)NSNumber) initWithBool:v1 & 1];
  *(void *)(inited + 80) = 0xD000000000000016;
  *(void *)(inited + 88) = 0x80000001001E1240;
  *(void *)(inited + 96) = [objc_allocWithZone((Class)NSNumber) initWithBool:v2];
  *(void *)(v4 + 16) = specialized Dictionary.init(dictionaryLiteral:)(inited);
  NSString v8 = String._bridgeToObjectiveC()();
  aBlock[4] = partial apply for closure #1 in MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send();
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> (@owned [String : NSObject]?);
  aBlock[3] = &block_descriptor_22;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v9);
  swift_release();
}

unint64_t specialized MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000FBA40()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()()
{
  specialized closure #1 in MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()(v0);

  return swift_bridgeObjectRetain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields and conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields and conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields and conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields and conformance MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionAssetMediaAnalytics()
{
  return self;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaAnalytics.Events()
{
  return &type metadata for MOSuggestionAssetMediaAnalytics.Events;
}

uint64_t initializeBufferWithCopyOfBuffer for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent()
{
  return &type metadata for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent;
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FBDCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields()
{
  return &type metadata for MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.EventFields;
}

uint64_t specialized closure #1 in MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()(uint64_t a1)
{
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
  swift_retain_n();
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_beginAccess();
    type metadata accessor for NSObject();
    swift_bridgeObjectRetain();
    uint64_t v6 = Dictionary.debugDescription.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[Media Suggestion Analytics] result=%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  return *(void *)(a1 + 16);
}

void *MOSuggestionActivityRingsAssetView.__allocating_init(activitySummary:currentSizeType:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v13 = objc_allocWithZone(v6);
  return MOSuggestionActivityRingsAssetView.init(activitySummary:currentSizeType:frame:)(a1, a2, a3, a4, a5, a6);
}

void closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel()
{
}

id MOSuggestionActivityRingsAssetView.energyLabel.getter()
{
  char v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionActivityRingsAssetView.energyLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionActivityRingsAssetView.energyLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.exerciseMinuteLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  char v1 = self;
  id v2 = [v1 preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v3 = [v2 fontDescriptor];
  id v4 = [v3 fontDescriptorWithSymbolicTraits:2];

  if (v4)
  {
    id v5 = [v1 fontWithDescriptor:v4 size:0.0];

    [v0 setFont:v5];
    if (one-time initialization token for exerciseGreen != -1) {
      swift_once();
    }
    [v0 setTextColor:static MOSuggestionTheme.Colors.exerciseGreen];
    [v0 setTextAlignment:0];
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionActivityRingsAssetView.exerciseMinuteLabel.getter()
{
  char v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionActivityRingsAssetView.exerciseMinuteLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionActivityRingsAssetView.exerciseMinuteLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.standLabel()
{
}

void closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [objc_allocWithZone((Class)UILabel) init];
  id v5 = self;
  id v6 = [v5 preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v7 = [v6 fontDescriptor];
  id v8 = [v7 fontDescriptorWithSymbolicTraits:2];

  if (v8)
  {
    id v9 = [v5 fontWithDescriptor:v8 size:0.0];

    [v4 setFont:v9];
    NSString v10 = String._bridgeToObjectiveC()();
    char v11 = self;
    id v12 = [v11 colorNamed:v10];

    if (!v12) {
      id v12 = [v11 *a3];
    }
    [v4 setTextColor:v12];

    [v4 setTextAlignment:0];
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionActivityRingsAssetView.standLabel.getter()
{
  char v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionActivityRingsAssetView.standLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionActivityRingsAssetView.standLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionActivityRingsAssetView.labelStackView.getter()
{
  char v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionActivityRingsAssetView.labelStackView.setter(void *a1)
{
}

uint64_t (*MOSuggestionActivityRingsAssetView.labelStackView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

void *MOSuggestionActivityRingsAssetView.init(activitySummary:currentSizeType:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel;
  uint64_t v14 = v6;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x6B6E695065766F6DLL, 0xE800000000000000, (SEL *)&selRef_systemPinkColor);
  *(void *)&v6[v13] = v15;
  uint64_t v16 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.exerciseMinuteLabel();
  *(void *)&v14[v16] = v17;
  uint64_t v18 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x65636E6174736964, 0xEC00000065756C42, (SEL *)&selRef_systemBlueColor);
  *(void *)&v14[v18] = v19;
  uint64_t v20 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView;
  id v21 = [objc_allocWithZone((Class)UIStackView) init];
  [v21 setAxis:1];
  [v21 setSpacing:2.0];
  [v21 setAlignment:1];
  [v21 setDistribution:3];
  *(void *)&v14[v20] = v21;
  *(void *)&v14[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_activitySummary] = a1;
  v14[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_currentSizeType] = a2;
  id v22 = a1;

  v26.receiver = v14;
  v26.super_class = (Class)type metadata accessor for MOSuggestionActivityRingsAssetView();
  uint64_t v23 = [super initWithFrame:a3 a4:a4 a5:a5 a6:a6];
  id v24 = [v23 setContentMode:1];
  (*(void (**)(id))((swift_isaMask & *v23) + 0xE8))(v24);

  return v23;
}

uint64_t type metadata accessor for MOSuggestionActivityRingsAssetView()
{
  return self;
}

Swift::Void __swiftcall MOSuggestionActivityRingsAssetView.makeUIView()()
{
  char v1 = v0;
  id v2 = [self blackColor];
  [v0 setBackgroundColor:v2];

  id v3 = [objc_allocWithZone((Class)HKActivityRingView) init];
  id v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_activitySummary);
  [v3 setActivitySummary:v4 animated:1];
  [v0 addSubview:v3];
  id v5 = [v3 superview];
  if (v5)
  {
    id v6 = v5;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v7 = [v3 leadingAnchor];
    id v8 = [v6 leadingAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    [v9 setConstant:8.0];
    id v10 = v9;
    [v10 setActive:1];
  }
  id v11 = [v3 superview];
  if (v11)
  {
    id v12 = v11;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v3 topAnchor];
    id v14 = [v12 topAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    [v15 setConstant:8.0];
    id v16 = v15;
    [v16 setActive:1];
  }
  uint64_t v17 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x80);
  uint64_t v18 = (void *)v17();
  id v19 = [v4 activeEnergyBurned];
  uint64_t v20 = self;
  id v21 = [v20 largeCalorieUnit];
  [v19 doubleValueForUnit:v21];
  double v23 = v22;

  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_73;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v154._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  v154._object = v24;
  v25._uint64_t countAndFlagsBits = 47;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  id v26 = [v4 activeEnergyBurnedGoal];
  id v27 = [v20 largeCalorieUnit];
  [v26 doubleValueForUnit:v27];
  double v29 = v28;

  double v30 = round(v29);
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  id v153 = v17;
  v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = 4997443;
  v32._object = (void *)0xE300000000000000;
  String.append(_:)(v32);
  uint64_t v33 = self;
  id v34 = [v33 mainBundle];
  v157._object = (void *)0x80000001001E63F0;
  v35._uint64_t countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v157._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v154, (Swift::String_optional)0, (NSBundle)v34, v35, v157);
  swift_bridgeObjectRelease();

  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setText:v36];

  id v37 = [v4 exerciseTimeGoal];
  if (!v37) {
    goto LABEL_19;
  }
  Swift::String v38 = v37;
  [v37 _value];
  double v40 = v39;

  unint64_t v41 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x98))();
  id v42 = [v4 appleExerciseTime];
  [v42 _value];
  double v44 = v43;

  if ((~*(void *)&v44 & 0x7FF0000000000000) == 0) {
    goto LABEL_78;
  }
  if (v44 <= -9.22337204e18)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (v44 >= 9.22337204e18)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v155._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  v155._object = v45;
  v46._uint64_t countAndFlagsBits = 47;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  if ((~*(void *)&v40 & 0x7FF0000000000000) == 0)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (v40 <= -9.22337204e18)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (v40 >= 9.22337204e18)
  {
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v47._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v48._uint64_t countAndFlagsBits = 5130573;
  v48._object = (void *)0xE300000000000000;
  String.append(_:)(v48);
  id v49 = [v33 mainBundle];
  v158._object = (void *)0x80000001001E6410;
  v50._uint64_t countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  v158._uint64_t countAndFlagsBits = 0xD000000000000018;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v155, (Swift::String_optional)0, (NSBundle)v49, v50, v158);
  swift_bridgeObjectRelease();

  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v41 setText:v51];

LABEL_19:
  id v52 = [v4 standHoursGoal];
  if (!v52) {
    goto LABEL_27;
  }
  unint64_t v53 = v52;
  [v52 _value];
  double v55 = v54;

  uint64_t v56 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB0))();
  id v57 = [v4 appleStandHours];
  [v57 _value];
  double v59 = v58;

  if ((~*(void *)&v59 & 0x7FF0000000000000) == 0) {
    goto LABEL_84;
  }
  if (v59 <= -9.22337204e18)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (v59 >= 9.22337204e18)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  v156._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  v156._object = v60;
  v61._uint64_t countAndFlagsBits = 47;
  v61._object = (void *)0xE100000000000000;
  String.append(_:)(v61);
  if ((~*(void *)&v55 & 0x7FF0000000000000) == 0)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  if (v55 <= -9.22337204e18)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v55 < 9.22337204e18)
  {
    v62._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v62);
    swift_bridgeObjectRelease();
    v63._uint64_t countAndFlagsBits = 1397901344;
    v63._object = (void *)0xE400000000000000;
    String.append(_:)(v63);
    id v64 = [v33 mainBundle];
    v159._uint64_t countAndFlagsBits = 0xD000000000000013;
    v159._object = (void *)0x80000001001E6430;
    v65._uint64_t countAndFlagsBits = 0;
    v65._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v156, (Swift::String_optional)0, (NSBundle)v64, v65, v159);
    swift_bridgeObjectRelease();

    NSString v66 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v56 setText:v66];

LABEL_27:
    int v67 = *((unsigned __int8 *)v1
          + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_currentSizeType);
    if (((1 << v67) & 6) != 0)
    {
      Swift::String v81 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8);
      Swift::String v82 = (void *)v81();
      id v83 = (void *)v153();
      [v82 addArrangedSubview:v83];

      id v84 = (void *)v81();
      id v85 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB0))();
      [v84 addArrangedSubview:v85];

      id v86 = (void *)v81();
      id v87 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x98))();
      [v86 addArrangedSubview:v87];

      id v88 = (void *)v81();
      [v1 addSubview:v88];

      id v89 = [v3 superview];
      if (v89)
      {
        double v90 = v89;
        [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v91 = [v3 bottomAnchor];
        id v92 = [v90 bottomAnchor];
        id v93 = [v91 constraintEqualToAnchor:v92];

        if (v93)
        {
          [v93 setConstant:-8.0];
          id v94 = v93;
          [v94 setActive:1];
        }
      }
      id v95 = (void *)v81();
      [v95 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v96 = [v95 leadingAnchor];
      id v97 = [v3 trailingAnchor];
      id v98 = [v96 constraintEqualToAnchor:v97];

      [v98 setConstant:8.0];
      [v98 setActive:1];

      uint64_t v99 = (void *)v81();
      id v100 = [v99 superview];
      if (v100)
      {
        uint64_t v101 = v100;
        [v99 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v102 = [v99 topAnchor];
        id v103 = [v101 topAnchor];
        id v104 = [v102 constraintEqualToAnchor:v103];

        [v104 setConstant:8.0];
        if (v104)
        {
          id v104 = v104;
          [v104 setActive:1];

          uint64_t v99 = v104;
        }
      }
      else
      {
        id v104 = 0;
        uint64_t v101 = v99;
      }

      id v131 = (void *)v81();
      id v132 = [v131 superview];
      if (v132)
      {
        Swift::Int v133 = v132;
        [v131 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v134 = [v131 bottomAnchor];
        id v135 = [v133 bottomAnchor];
        id v136 = [v134 constraintEqualToAnchor:v135];

        if (v136)
        {
          [v136 setConstant:-8.0];
          id v137 = v136;
          [v137 setActive:1];
        }
        else
        {
        }
      }
      else
      {
        Swift::Int v133 = v131;
      }

      if (v67 == 2)
      {
        char v148 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v149 = swift_bridgeObjectRelease();
        char v150 = &selRef_collectionView_didSelectItemAtIndexPath_;
        if ((v148 & 1) == 0) {
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v149 = swift_bridgeObjectRelease();
        char v150 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      id v80 = (id)((uint64_t (*)(uint64_t))v81)(v149);
      [v80 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v151 = [v80 leadingAnchor];
      id v152 = [v3 trailingAnchor];
      id v79 = [v151 v150[147] v152];

      [v79 setConstant:12.0];
      [v79 setActive:1];
    }
    else
    {
      if (((1 << v67) & 0x18) != 0)
      {
        id v68 = [v3 superview];
        if (v68)
        {
          uint64_t v69 = v68;
          [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v70 = [v3 bottomAnchor];
          id v71 = [v69 bottomAnchor];
          id v72 = [v70 constraintEqualToAnchor:v71];

          if (v72)
          {
            [v72 setConstant:-8.0];
            id v73 = v72;
            [v73 setActive:1];
          }
        }
        id v74 = [v3 superview];
        if (!v74) {
          goto LABEL_71;
        }
        unint64_t v75 = v74;
        [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v76 = [v3 trailingAnchor];
        id v77 = [v75 trailingAnchor];
        id v78 = [v76 constraintEqualToAnchor:v77];

        [v78 setConstant:-8.0];
        id v79 = v78;
        [v79 setActive:1];

        id v80 = v79;
      }
      else
      {
        uint64_t v105 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8);
        uint64_t v106 = (void *)v105();
        id v107 = (void *)v153();
        [v106 addArrangedSubview:v107];

        id v108 = (void *)v105();
        id v109 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x98))();
        [v108 addArrangedSubview:v109];

        uint64_t v110 = (void *)v105();
        id v111 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB0))();
        [v110 addArrangedSubview:v111];

        uint64_t v112 = (void *)v105();
        [v1 addSubview:v112];

        [v1 frame];
        double v114 = v113 * 0.5;
        [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v115 = [v3 widthAnchor];
        id v116 = [v115 constraintEqualToConstant:v114];

        [v116 setActive:1];
        [v1 frame];
        double v118 = v117 * 0.5;
        [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v119 = [v3 heightAnchor];
        id v120 = [v119 constraintEqualToConstant:v118];

        [v120 setActive:1];
        id v121 = (void *)v105();
        [v121 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v122 = [v121 topAnchor];
        id v123 = [v3 bottomAnchor];
        id v124 = [v122 constraintEqualToAnchor:v123];

        [v124 setConstant:8.0];
        [v124 setActive:1];

        uint64_t v125 = (void *)v105();
        id v126 = [v125 superview];
        if (v126)
        {
          uint64_t v127 = v126;
          [v125 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v128 = [v125 leadingAnchor];
          id v129 = [v127 leadingAnchor];
          id v130 = [v128 constraintEqualToAnchor:v129];

          [v130 setConstant:12.0];
          if (v130)
          {
            id v130 = v130;
            [v130 setActive:1];

            uint64_t v125 = v130;
          }
        }
        else
        {
          id v130 = 0;
          uint64_t v127 = v125;
        }

        Swift::Int v138 = (void *)v105();
        id v139 = [v138 superview];
        if (v139)
        {
          uint64_t v140 = v139;
          [v138 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v141 = [v138 trailingAnchor];
          id v142 = [v140 trailingAnchor];
          id v143 = [v141 constraintEqualToAnchor:v142];

          [v143 setConstant:-12.0];
          if (v143)
          {
            id v143 = v143;
            [v143 setActive:1];

            Swift::Int v138 = v143;
          }
        }
        else
        {
          id v143 = 0;
          uint64_t v140 = v138;
        }

        id v79 = (id)v105();
        id v144 = [v79 superview];
        if (!v144) {
          goto LABEL_70;
        }
        unint64_t v75 = v144;
        [v79 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v145 = [v79 bottomAnchor];
        id v146 = [v75 bottomAnchor];
        id v147 = [v145 constraintEqualToAnchor:v146];

        if (v147)
        {
          [v147 setConstant:-12.0];
          id v80 = v147;
          [v80 setActive:1];

          id v79 = v80;
        }
        else
        {
          id v80 = v3;
        }
      }
      id v3 = v75;
    }

    id v79 = v80;
LABEL_70:

LABEL_71:
    return;
  }
LABEL_89:
  __break(1u);
}

void MOSuggestionActivityRingsAssetView.init(frame:)()
{
}

id MOSuggestionActivityRingsAssetView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionActivityRingsAssetView();
  [super dealloc];
}

void specialized MOSuggestionActivityRingsAssetView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_energyLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x6B6E695065766F6DLL, 0xE800000000000000, (SEL *)&selRef_systemPinkColor);
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_exerciseMinuteLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.exerciseMinuteLabel();
  *(void *)&v0[v3] = v4;
  uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_standLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityRingsAssetView.energyLabel(0x65636E6174736964, 0xEC00000065756C42, (SEL *)&selRef_systemBlueColor);
  *(void *)&v0[v5] = v6;
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionActivityRingsAssetView_labelStackView;
  id v8 = [objc_allocWithZone((Class)UIStackView) init];
  [v8 setAxis:1];
  [v8 setSpacing:2.0];
  [v8 setAlignment:1];
  [v8 setDistribution:3];
  *(void *)&v0[v7] = v8;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000FE218@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_1000FE274(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88))(*a1);
}

uint64_t sub_1000FE2D8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x98))();
  *a2 = result;
  return result;
}

uint64_t sub_1000FE334(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xA0))(*a1);
}

uint64_t sub_1000FE398@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_1000FE3F4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB8))(*a1);
}

uint64_t sub_1000FE458@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_1000FE4B4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD0))(*a1);
}

BOOL static MOAngelRootViewController.getPreferredContentSizeUsing(_:)()
{
  return specialized static MOAngelRootViewController.isLandscape.getter();
}

void MOAngelRootViewController.init(coder:)()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

char *MOAngelRootViewController.__allocating_init(_:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MOAngelRootViewController.init(_:)(a1);
}

char *MOAngelRootViewController.init(_:)(void *a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions] = 0;
  swift_unknownObjectWeakAssign();
  id v3 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1D0);
  uint64_t v4 = v1;
  uint64_t v5 = v3();
  if (v6) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v6) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0xE000000000000000;
  }
  id v9 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetPrivacyOverlayView());
  *(void *)&v4[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur] = MOSuggestionSheetPrivacyOverlayView.init(frame:clientIdentifier:)(v7, v8, 0.0, 0.0, 0.0, 0.0);

  id v10 = (objc_class *)type metadata accessor for MOAngelRootViewController();
  v43.receiver = v4;
  v43.super_class = v10;
  id v11 = [super initWithNibName:0 bundle:0];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = Strong;
    v42[3] = v10;
    v42[4] = &protocol witness table for MOAngelRootViewController;
    v42[0] = v11;
    id v14 = *(void (**)(void *))((swift_isaMask & *Strong) + 0xE0);
    id v15 = v11;
    v14(v42);
  }
  else
  {
    id v16 = v11;
  }
  uint64_t result = (char *)[v11 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v18 = result;
  [result frame];
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v44.origin.CGFloat x = v20;
  v44.origin.CGFloat y = v22;
  v44.size.CGFloat width = v24;
  v44.size.CGFloat height = v26;
  double Width = CGRectGetWidth(v44);
  uint64_t result = (char *)[v11 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v28 = result;
  [result frame];
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;

  v45.origin.CGFloat x = v30;
  v45.origin.CGFloat y = v32;
  v45.size.CGFloat width = v34;
  v45.size.CGFloat height = v36;
  double Height = CGRectGetHeight(v45);
  if (Width > Height) {
    double Height = Width;
  }
  *(double *)&static MOAngelRootViewController.LANDSCAPE_WIDTH = Height * 0.5;
  uint64_t result = (char *)[v11 view];
  if (result)
  {
    Swift::String v38 = result;
    uint64_t v39 = OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur;
    [result addSubview:*(void *)&v11[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur]];

    double v40 = *(void **)&v11[v39];
    [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = v40;
    UIView.fillSuper(margin:)(0.0);

    swift_bridgeObjectRelease();
    return v11;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t static MOAngelRootViewController.currentInterfaceOrientation()()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 connectedScenes];

  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIScene);
  lazy protocol witness table accessor for type UIScene and conformance NSObject();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = (void *)specialized Collection.first.getter(v2);
  swift_bridgeObjectRelease();
  if (!v3) {
    return 1;
  }
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4) {
    uint64_t v5 = (uint64_t)[v4 interfaceOrientation];
  }
  else {
    uint64_t v5 = 1;
  }

  return v5;
}

void MOAngelRootViewController.init(nibName:bundle:)()
{
}

{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MOAngelRootViewController.__deallocating_deinit()
{
  return MOAngelRootViewController.__deallocating_deinit(type metadata accessor for MOAngelRootViewController);
}

Swift::Void __swiftcall MOAngelRootViewController.shouldClearPresentedOptions()()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions);
  *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions) = 0;
}

id one-time initialization function for full()
{
  id result = [self largeDetent];
  static SuggestionSheetDetents.full = (uint64_t)result;
  return result;
}

Swift::Void __swiftcall MOAngelRootViewController.sheetPresentationControllerDidChangeSelectedDetentIdentifier(_:)(UISheetPresentationController a1)
{
  uint64_t v2 = v1;
  id v14 = [(objc_class *)a1.super.super.isa selectedDetentIdentifier];
  if (!v14) {
    return;
  }
  if (one-time initialization token for full != -1) {
    swift_once();
  }
  id v3 = [(id)static SuggestionSheetDetents.full identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_12:
    (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v2
                                                                   + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur))
                                    + 0xA8))(1);
    uint64_t v10 = 2;
    goto LABEL_13;
  }
  uint64_t v10 = 1;
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v2
                                                                 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur))
                                  + 0xA0))(1);
LABEL_13:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v12 = (char *)Strong;
    uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
    if (v10 != *(void *)(Strong + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState))
    {
      [*(id *)(Strong + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) sendSuggestionSheetStateUpdate:v10 sender:Strong];
      *(void *)&v12[v13] = v10;
    }
  }
}

Swift::Void __swiftcall MOAngelRootViewController.refreshData()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController);
  if (v1)
  {
    uint64_t v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x180);
    id v3 = v1;
    v2();
  }
}

void MOAngelRootViewController.present(with:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v1 presentedViewController];

  if (!v8)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v14 = (id)Strong;
      os_log_t v57 = (os_log_t)OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions;
      id v15 = *(void **)&v1[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions];
      if (!v15 || ([v15 isEqual:a1] & 1) == 0)
      {
        id v16 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetViewController());
        uint64_t v17 = v14;
        id v18 = v14;
        id v19 = a1;
        CGFloat v20 = MOSuggestionSheetViewController.init(controller:options:)(v17, v19);
        [v20 setModalInPresentation:1];
        double v21 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController];
        *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController] = v20;
        CGFloat v22 = v20;

        double v23 = *(Class *)((char *)&v57->isa + (void)v2);
        *(Class *)((char *)&v57->isa + (void)v2) = (Class)v19;
        id v24 = v19;
        id v14 = v18;
      }
      uint64_t v25 = OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController;
      CGFloat v26 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController];
      if (v26)
      {
        id v27 = [v26 sheetPresentationController];
        double v28 = v27;
        id v56 = v14;
        if (v27)
        {
          aBlock[0] = _swiftEmptyArrayStorage;
          uint64_t v29 = one-time initialization token for full;
          id v30 = v27;
          if (v29 != -1) {
            swift_once();
          }
          id v31 = [(id)static SuggestionSheetDetents.full identifier];
          [v30 setSelectedDetentIdentifier:v31];

          [v30 _setShouldScaleDownBehindDescendantSheets:0];
          [a1 peekDetentRatio];
          if (v32 >= 0.2 && v32 <= 0.8)
          {
            uint64_t v55 = v25;
            UUID.init()();
            UUID.uuidString.getter();
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
            NSString v33 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [a1 peekDetentRatio];
            uint64_t v35 = v34;
            type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UISheetPresentationControllerDetent);
            *(void *)(swift_allocObject() + 16) = v35;
            CGFloat v36 = (void *)static UISheetPresentationControllerDetent.custom(identifier:resolver:)();

            swift_release();
            if (([a1 presentFullScreen] & 1) == 0)
            {
              id v37 = [v36 identifier];
              [v30 setSelectedDetentIdentifier:v37];
            }
            id v38 = v36;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            [v30 setPrefersGrabberVisible:1];
            id v39 = [v38 identifier];
            [v30 setLargestUndimmedDetentIdentifier:v39];

            uint64_t v25 = v55;
          }
          [v30 setPrefersEdgeAttachedInCompactHeight:1];
          [v30 setWidthFollowsPreferredContentSizeWhenEdgeAttached:1];
          [v30 setPrefersPageSizing:0];
          id v40 = (id)static SuggestionSheetDetents.full;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UISheetPresentationControllerDetent);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v30 setDetents:isa];

          [v30 setDelegate:v2];
          id v14 = v56;
        }
        id v42 = *(void **)&v2[v25];
        if (v42)
        {
          objc_super v43 = *(Class *)((char *)&v57->isa + (void)v2);
          if (v43)
          {
            CGRect v44 = *(void (**)(char *, _UNKNOWN **))((swift_isaMask & *v42) + 0x150);
            CGRect v45 = v42;
            id v46 = v43;
            Swift::String v47 = v2;
            v44(v2, &protocol witness table for MOAngelRootViewController);
            id v48 = [a1 presentationIsAnimated];
            uint64_t v49 = swift_allocObject();
            swift_unknownObjectWeakInit();
            Swift::String v50 = (void *)swift_allocObject();
            v50[2] = v45;
            v50[3] = v49;
            v50[4] = v46;
            aBlock[4] = partial apply for closure #1 in MOAngelRootViewController.present(with:);
            aBlock[5] = v50;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
            aBlock[3] = &block_descriptor_23;
            NSString v51 = _Block_copy(aBlock);
            id v52 = v45;
            id v53 = v46;
            swift_release();
            [v47 presentViewController:v52 animated:v48 completion:v51];
            _Block_release(v51);
            if ([v53 presentFullScreen]) {
              (*(void (**)(uint64_t))((swift_isaMask & **(void **)&v47[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur])
            }
                                              + 0xA8))(1);

            return;
          }
        }
      }
      else
      {
        double v28 = 0;
      }

      return;
    }
  }
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static MOAngelLogger.shared);
  os_log_t v57 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v57, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v10, "MOAngelRootViewController - Received an update request something is already presented. Ignoring.", v11, 2u);
    swift_slowDealloc();
  }
  os_log_t v12 = v57;
}

char *MOSuggestionSheetViewController.__allocating_init(controller:options:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return MOSuggestionSheetViewController.init(controller:options:)(a1, a2);
}

void closure #1 in MOAngelRootViewController.present(with:)(void *a1, uint64_t a2, void *a3)
{
  id v5 = [a1 sheetPresentationController];
  if (!v5)
  {
    long long v24 = 0u;
    long long v25 = 0u;
LABEL_17:
    outlined destroy of Any?((uint64_t)&v24, &demangling cache variable for type metadata for Any?);
    goto LABEL_18;
  }
  uint64_t v6 = v5;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 valueForKey:v7];

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v22, (uint64_t)&v24);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_17;
  }
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v9 = (void *)v22;
  id v10 = [a1 sheetPresentationController];
  if (!v10)
  {
    long long v24 = 0u;
    long long v25 = 0u;
LABEL_16:

    goto LABEL_17;
  }
  id v11 = v10;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 valueForKey:v12];

  if (v13)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v22, (uint64_t)&v24);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    id v14 = (void *)v22;
    id v15 = [v9 layer];
    [v15 setHitTestsAsOpaque:0];

    id v16 = [v14 layer];
    [v16 setHitTestsAsOpaque:0];
  }
  else
  {
  }
LABEL_18:
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v18 = (void *)Strong;
    id v19 = (char *)swift_unknownObjectWeakLoadStrong();

    if (v19)
    {
      if ([a3 presentFullScreen]) {
        uint64_t v20 = 2;
      }
      else {
        uint64_t v20 = 1;
      }
      uint64_t v21 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (v20 != *(void *)&v19[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState])
      {
        [*(id *)&v19[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager] sendSuggestionSheetStateUpdate:v20 sender:v19];
        *(void *)&v19[v21] = v20;
      }
    }
  }
}

void MOAngelRootViewController.update(with:animated:)(id a1, char a2)
{
  id v3 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController];
  if (!v3) {
    goto LABEL_24;
  }
  uint64_t v4 = v2;
  LOBYTE(v5) = a2;
  os_log_t v57 = v3;
  id v7 = [v57 sheetPresentationController];
  if (!v7)
  {

LABEL_24:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.shared);
    os_log_t v57 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v23))
    {
      long long v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v23, "MOAngelRootViewController - Received an update request while no sheet is currently presented. Rejecting!", v24, 2u);
      swift_slowDealloc();
    }
LABEL_33:

    return;
  }
  id v8 = v7;
  if (!a1)
  {
    (*(void (**)(uint64_t))((swift_isaMask & **(void **)&v2[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur])
                                    + 0xA0))(v5 & 1);
    id v25 = [v2 view];
    if (!v25)
    {
LABEL_65:
      __break(1u);
      return;
    }
    CGFloat v26 = v25;
    id v27 = [v25 window];

    if (v27)
    {
      id v28 = [v27 rootViewController];

      if (v28)
      {
        uint64_t v29 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v29;
        *(void *)(v30 + 24) = 0;
        Swift::String v62 = partial apply for closure #1 in MOAngelRootViewController.update(with:animated:);
        uint64_t v63 = v30;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v59 = 1107296256;
        double v60 = thunk for @escaping @callee_guaranteed () -> ();
        Swift::String v61 = &block_descriptor_29_0;
        id v31 = _Block_copy(&aBlock);
        swift_release();
        [v28 dismissViewControllerAnimated:v5 & 1 completion:v31];

        _Block_release(v31);
        return;
      }
    }

    goto LABEL_33;
  }
  if (one-time initialization token for full != -1) {
LABEL_40:
  }
    swift_once();
  id v9 = [(id)static SuggestionSheetDetents.full identifier];
  id v64 = v9;
  if (a1 != (id)2)
  {
    id v10 = [v8 detents];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UISheetPresentationControllerDetent);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12)
      {
LABEL_8:
        id v56 = v8;
        if ((v11 & 0xC000000000000001) != 0) {
          goto LABEL_62;
        }
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          for (id i = *(id *)(v11 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
          {
            id v14 = i;
            id v15 = (id)static SuggestionSheetDetents.full;
            char v16 = static NSObject.== infix(_:_:)();

            if ((v16 & 1) == 0)
            {
              id v8 = v56;
LABEL_38:
              swift_bridgeObjectRelease();
              id v32 = [v14 identifier];

              id v64 = v32;
              id v9 = v32;
              goto LABEL_43;
            }
            id v54 = a1;
            char v55 = v5;

            if (v12 == 1)
            {
LABEL_22:
              swift_bridgeObjectRelease();
              id v8 = v56;
              LOBYTE(v5) = v55;
              a1 = v54;
              goto LABEL_43;
            }
            uint64_t v5 = 5;
            a1 = v9;
            while (1)
            {
              id v8 = (void *)(v5 - 4);
              if ((v11 & 0xC000000000000001) != 0)
              {
                id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                goto LABEL_18;
              }
              if ((unint64_t)v8 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                break;
              }
              id v17 = *(id *)(v11 + 8 * v5);
LABEL_18:
              id v14 = v17;
              uint64_t v18 = v5 - 3;
              if (__OFADD__(v8, 1))
              {
                __break(1u);
                goto LABEL_40;
              }
              id v19 = (id)static SuggestionSheetDetents.full;
              char v20 = static NSObject.== infix(_:_:)();

              if ((v20 & 1) == 0)
              {
                id v8 = v56;
                LOBYTE(v5) = v55;
                id v9 = a1;
                a1 = v54;
                goto LABEL_38;
              }

              ++v5;
              BOOL v21 = v18 == v12;
              id v9 = a1;
              if (v21) {
                goto LABEL_22;
              }
            }
            __break(1u);
LABEL_62:
            ;
          }
        }
        __break(1u);
        goto LABEL_64;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_43:
  id v33 = [v8 selectedDetentIdentifier];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;
    if (v35 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v37 == v38)
    {
      id v39 = v9;

      swift_bridgeObjectRelease_n();
LABEL_48:

      return;
    }
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    id v41 = v9;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40) {
      goto LABEL_48;
    }
  }
  if (v5)
  {
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v8;
    *(void *)(v42 + 24) = &v64;
    uint64_t v43 = swift_allocObject();
    CGRect v44 = partial apply for closure #2 in MOAngelRootViewController.update(with:animated:);
    *(void *)(v43 + 16) = partial apply for closure #2 in MOAngelRootViewController.update(with:animated:);
    *(void *)(v43 + 24) = v42;
    Swift::String v62 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v63 = v43;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256;
    double v60 = thunk for @escaping @callee_guaranteed () -> ();
    Swift::String v61 = &block_descriptor_15_0;
    CGRect v45 = _Block_copy(&aBlock);
    id v46 = v8;
    swift_retain();
    swift_release();
    uint64_t v47 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v47;
    *(void *)(v48 + 24) = a1;
    Swift::String v62 = partial apply for closure #3 in MOAngelRootViewController.update(with:animated:);
    uint64_t v63 = v48;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256;
    double v60 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
    Swift::String v61 = &block_descriptor_22;
    uint64_t v49 = _Block_copy(&aBlock);
    swift_release();
    [v46 _animateChanges:v45 completion:v49];
    _Block_release(v49);
    _Block_release(v45);
    LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v49)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
  }
  else
  {
    [v8 setSelectedDetentIdentifier:v9];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      NSString v51 = (char *)Strong;
      char v52 = v5;
      uint64_t v53 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (*(id *)(Strong + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState) != a1)
      {
        [*(id *)(Strong + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) sendSuggestionSheetStateUpdate:a1 sender:Strong];
        *(void *)&v51[v53] = a1;
      }

      CGRect v44 = 0;
      LOBYTE(v5) = v52;
    }
    else
    {
      CGRect v44 = 0;
    }
  }
  if (a1 == (id)2) {
    (*(void (**)(uint64_t))((swift_isaMask & **(void **)&v4[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur])
  }
                                    + 0xA8))(v5 & 1);
  else {
    (*(void (**)(uint64_t))((swift_isaMask & **(void **)&v4[OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_privacyBlur])
  }
                                    + 0xA0))(v5 & 1);

  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v44);
}

void closure #1 in MOAngelRootViewController.update(with:animated:)(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = (char *)swift_unknownObjectWeakLoadStrong();

    if (v5)
    {
      uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (*(void *)&v5[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState] != a2)
      {
        [*(id *)&v5[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager] sendSuggestionSheetStateUpdate:a2 sender:v5];
        *(void *)&v5[v6] = a2;
      }
    }
  }
  swift_beginAccess();
  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v9)
    {
      if ((*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x1B0))())
      {
        swift_beginAccess();
        id v10 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v10)
        {
          unint64_t v11 = v10;
          id v12 = [v10 view];

          if (!v12)
          {
            __break(1u);
            return;
          }
          id v13 = [v12 window];

          if (v13)
          {
            id v14 = [v13 windowScene];

            if (v14)
            {
              id v15 = [v14 session];

              if (v15)
              {
                id v16 = [self sharedApplication];
                [v16 requestSceneSessionDestruction:v15 options:0 errorHandler:0];

                id v9 = v16;
              }
            }
          }
        }
      }
    }
  }
}

void closure #3 in MOAngelRootViewController.update(with:animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = (char *)swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
      if (*(void *)&v6[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState] != a3)
      {
        [*(id *)&v6[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager] sendSuggestionSheetStateUpdate:a3 sender:v6];
        *(void *)&v6[v7] = a3;
      }
    }
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ()(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void protocol witness for MOAngelControllerWrapperDelegate.refreshData() in conformance MOAngelRootViewController()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_presentedSheetController);
  if (v1)
  {
    uint64_t v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x180);
    id v3 = v1;
    v2();
  }
}

void protocol witness for MOAngelControllerWrapperDelegate.present(with:) in conformance MOAngelRootViewController(void *a1)
{
}

void protocol witness for MOAngelControllerWrapperDelegate.update(with:animated:) in conformance MOAngelRootViewController(void *a1, char a2)
{
}

void protocol witness for MOAngelControllerWrapperDelegate.shouldClearPresentedOptions() in conformance MOAngelRootViewController()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions);
  *(void *)(*v0 + OBJC_IVAR____TtC16MomentsUIService25MOAngelRootViewController_currentlyPresentedOptions) = 0;
}

Swift::Void __swiftcall MOSuggestionSheetViewController.updateSheetIfOnboardingRefreshComplete()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v39 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v37 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for DispatchTime();
  uint64_t v36 = *(void *)(v40 - 8);
  uint64_t v7 = __chkstk_darwin(v40);
  uint64_t v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v35 = (char *)&v32 - v9;
  id v10 = self;
  id v11 = [v10 sharedInstance];
  id v12 = (void (*)(char *, uint64_t))[v11 onboardingFlowCompletionStatus];

  id v13 = [v10 sharedInstance];
  id v41 = (void (*)(char *, uint64_t))[v13 onboardingFlowRefreshCompletionStatus];

  if (one-time initialization token for sheetController != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)static MOAngelLogger.sheetController);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 134218240;
    aBlock[0] = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2048;
    aBlock[0] = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "checking onboarding&refresh status onboardingFlowCompletionStatus=%lu onboardingFlowRefreshCompletionStatus=%lu", (uint8_t *)v17, 0x16u);
    swift_slowDealloc();
  }

  if (v12 == (void (*)(char *, uint64_t))1)
  {
    [v1 dismissViewControllerAnimated:1 completion:0];
  }
  else
  {
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    BOOL v20 = os_log_type_enabled(v18, v19);
    if (v12 == v41)
    {
      if (v20)
      {
        BOOL v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "dismissing and updating sheet", v21, 2u);
        swift_slowDealloc();
      }

      id v22 = [v1 dismissViewControllerAnimated:1 completion:0];
      (*(void (**)(id))((swift_isaMask & *v1) + 0x180))(v22);
    }
    else
    {
      if (v20)
      {
        os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "scheduling new onboarding&refresh status check", v23, 2u);
        swift_slowDealloc();
      }

      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      uint64_t v33 = static OS_dispatch_queue.main.getter();
      long long v24 = v34;
      static DispatchTime.now()();
      id v25 = v35;
      + infix(_:_:)();
      id v41 = *(void (**)(char *, uint64_t))(v36 + 8);
      v41(v24, v40);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v1;
      aBlock[4] = partial apply for closure #1 in MOSuggestionSheetViewController.updateSheetIfOnboardingRefreshComplete();
      aBlock[5] = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_35;
      id v27 = _Block_copy(aBlock);
      id v28 = v1;
      swift_release();
      uint64_t v29 = v37;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      lazy protocol witness table accessor for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
      uint64_t v30 = v39;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v31 = (void *)v33;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v27);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v30, v2);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v5);
      v41(v25, v40);
    }
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.shouldDismissOnboarding()()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 sharedInstance];
  [v3 onboardingFlowCompletionStatus];

  if (one-time initialization token for $showSuggestionsOnboarding != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
  __swift_project_value_buffer(v4, (uint64_t)static MOSuggestionOnboardingTip.$showSuggestionsOnboarding);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  id v5 = [v2 sharedInstance];
  [v5 isOnboarded];

  if (one-time initialization token for $showPrivacyOnboarding != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v4, (uint64_t)static MOSuggestionPrivacyTip.$showPrivacyOnboarding);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  id v6 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  id v7 = [v6 selectedSegmentIndex];

  if (v7)
  {
    if (v7 != (id)1) {
      goto LABEL_15;
    }
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView;
  id v10 = *(void **)((char *)v1
                   + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView);
  if (v10)
  {
    id v11 = *(uint64_t (**)(void))((swift_isaMask & *v10) + 0x100);
    id v12 = v10;
    uint64_t v13 = v11();

    if (v13)
    {
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)v13 + 752))(v8, 1, 0);
      swift_release();
    }
    uint64_t v14 = *(void **)((char *)v1 + v9);
    if (v14)
    {
      id v15 = *(uint64_t (**)(void))((swift_isaMask & *v14) + 0xE8);
      os_log_type_t v16 = v14;
      uint64_t v17 = (void *)v15();

      if (v17)
      {
        id v18 = [v17 collectionViewLayout];

        [v18 invalidateLayout];
      }
    }
  }
LABEL_15:
  (*(void (**)(void))((swift_isaMask & *v1) + 0x90))();
}

id MOSuggestionSheetViewController.suggestionSegmentedControl.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl);
  }
  else
  {
    id v4 = closure #1 in MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id closure #1 in MOSuggestionSheetViewController.suggestionSegmentedControl.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001DA390;
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v17._object = (void *)0xEB00000000646564;
  v3._uint64_t countAndFlagsBits = 0x6E656D6D6F636552;
  v3._object = (void *)0xEB00000000646564;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0x6E656D6D6F636552;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v17);

  *(void *)(v0 + 56) = &type metadata for String;
  *(Swift::String *)(v0 + 32) = v5;
  id v6 = [v1 mainBundle];
  v18._object = (void *)0xE600000000000000;
  v7._uint64_t countAndFlagsBits = 0x746E65636552;
  v7._object = (void *)0xE600000000000000;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0x746E65636552;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v18);

  *(void *)(v0 + 88) = &type metadata for String;
  *(Swift::String *)(v0 + 64) = v9;
  id v10 = objc_allocWithZone((Class)UISegmentedControl);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithItems:isa];

  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v13 = self;
  id v14 = v12;
  id v15 = [v13 secondarySystemBackgroundColor];
  [v14 setBackgroundColor:v15];

  [v14 setSelectedSegmentIndex:0];
  return v14;
}

void *MOSuggestionSheetViewController.suggestedSegmentIndex.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetViewController.suggestedSegmentIndex;
}

void *MOSuggestionSheetViewController.recentSegmentIndex.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetViewController.recentSegmentIndex;
}

uint64_t MOSuggestionSheetViewController.presentationDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter();
}

{
  swift_beginAccess();
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t MOSuggestionSheetViewController.presentationDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate);
}

uint64_t (*MOSuggestionSheetViewController.presentationDelegate.modify(void *a1))()
{
  Swift::String v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

uint64_t MOSuggestionSheetViewController.rootControllerDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter();
}

uint64_t MOSuggestionSheetViewController.rootControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate);
}

uint64_t MOSuggestionSheetViewController.presentationDelegate.setter(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3 + *a3;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*MOSuggestionSheetViewController.rootControllerDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

char *MOSuggestionSheetViewController.init(controller:options:)(void *a1, void *a2)
{
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedVisibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl] = 0;
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_options] = a2;
  v85.receiver = v2;
  v85.super_class = (Class)type metadata accessor for MOSuggestionSheetViewController();
  id v5 = a2;
  id v6 = (char *)objc_msgSendSuper2(&v85, "initWithNibName:bundle:", 0, 0);
  id result = (char *)[v6 view];
  if (!result)
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  Swift::String v8 = result;
  [result bounds];
  double v10 = v9;
  double v12 = v11;

  BOOL v13 = specialized static MOAngelRootViewController.isLandscape.getter();
  double v14 = *(double *)&static MOAngelRootViewController.LANDSCAPE_WIDTH;
  if (!v13) {
    double v14 = v10;
  }
  [v6 setPreferredContentSize:v14, v12];
  id v15 = [objc_allocWithZone((Class)UINavigationBar) init];
  os_log_type_t v16 = self;
  id v17 = [v16 systemBackgroundColor];
  [v15 setBarTintColor:v17];

  id v18 = v15;
  id v19 = [v16 systemBackgroundColor];
  [v18 setBackgroundColor:v19];

  [v18 setTranslucent:0];
  id v20 = [objc_allocWithZone((Class)UIImage) init];
  [v18 setShadowImage:v20];

  id v21 = [v6 navigationItem];
  id v22 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  [v21 setTitleView:v22];

  id v23 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  [v23 setHidden:[v5 showBlankEntryButton]];

  if (([v5 showBlankEntryButton] & 1) == 0
    && ([v5 presentFullScreen] & 1) == 0)
  {
    [v18 setTitleVerticalPositionAdjustment:0 forBarMetrics:8.0];
  }
  id v24 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  [v24 addTarget:v6 action:"pressedSegmentControl" forControlEvents:4096];

  id result = (char *)[v6 view];
  if (!result) {
    goto LABEL_32;
  }
  id v25 = result;
  [result addSubview:v18];

  id v26 = [self defaultCenter];
  [v26 addObserver:v6 selector:"handleContentSizeChanged" name:UIContentSizeCategoryDidChangeNotification object:0];

  id v27 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:0 action:"cancelSheet"];
  char v28 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1B0))();
  uint64_t v29 = &selRef_systemBlueColor;
  if ((v28 & 1) == 0) {
    uint64_t v29 = &selRef_systemIndigoColor;
  }
  id v30 = [v16 *v29];
  id v84 = v27;
  [v27 setTintColor:v30];

  if ([v5 showCancelButton])
  {
    id v31 = [v6 navigationItem];
    [v31 setLeftBarButtonItem:v27];
  }
  if (one-time initialization token for uiInternalOS != -1) {
    swift_once();
  }
  if (static MOAngelControllerWrapper.uiInternalOS == 1)
  {
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = [self systemImageNamed:v32];

    id v34 = [objc_allocWithZone((Class)UIBarButtonItem) initWithImage:v33 style:2 target:0 action:"showMomentsValidator"];
    id v35 = [v6 navigationItem];
    [v35 setRightBarButtonItem:v34];
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1001DA250;
  *(void *)(v36 + 32) = [v6 navigationItem];
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UINavigationItem);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setItems:isa animated:0];

  if (*(void *)&v6[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView])
  {

    return v6;
  }
  uint64_t v82 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView;
  uint64_t v38 = (char *)objc_allocWithZone((Class)type metadata accessor for MOSuggestionCollectionView());
  id v39 = v6;
  id v40 = v5;
  id v41 = v39;
  Swift::String v81 = a1;
  id v83 = v40;
  uint64_t v42 = specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(v81, v41, v41, v41, v40, v38);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  (*(void (**)(uint64_t))((swift_isaMask & *(void *)v42) + 0x120))(Strong);
  id result = (char *)[v41 view];
  if (!result) {
    goto LABEL_33;
  }
  CGRect v44 = result;
  [result insertSubview:v42 atIndex:0];

  [v42 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1001DA520;
  id v46 = [v42 topAnchor];
  id v47 = [v18 bottomAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  *(void *)(v45 + 32) = v48;
  id v49 = [v42 bottomAnchor];
  id result = (char *)[v41 view];
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  Swift::String v50 = result;
  id v51 = [result bottomAnchor];

  id v52 = [v49 constraintEqualToAnchor:v51];
  *(void *)(v45 + 40) = v52;
  id v53 = [v42 leadingAnchor];
  id result = (char *)[v41 view];
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  id v54 = result;
  id v55 = [result leadingAnchor];

  id v56 = [v53 constraintEqualToAnchor:v55];
  *(void *)(v45 + 48) = v56;
  id v57 = [v42 trailingAnchor];
  id result = (char *)[v41 view];
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  double v58 = result;
  id v59 = [result trailingAnchor];

  id v60 = [v57 constraintEqualToAnchor:v59];
  *(void *)(v45 + 56) = v60;
  id v61 = [v18 leadingAnchor];
  id result = (char *)[v41 view];
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  Swift::String v62 = result;
  id v63 = [result leadingAnchor];

  id v64 = [v61 constraintEqualToAnchor:v63];
  *(void *)(v45 + 64) = v64;
  id v65 = [v18 trailingAnchor];
  id result = (char *)[v41 view];
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  NSString v66 = result;
  id v67 = [result trailingAnchor];

  id v68 = [v65 constraintEqualToAnchor:v67];
  *(void *)(v45 + 72) = v68;
  id v69 = [v18 heightAnchor];
  unsigned int v70 = [v83 showBlankEntryButton];
  double v71 = 60.0;
  if (v70) {
    double v71 = 55.0;
  }
  id v72 = [v69 constraintEqualToConstant:v71];

  *(void *)(v45 + 80) = v72;
  id v73 = [v18 topAnchor];
  id result = (char *)[v41 view];
  if (result)
  {
    id v74 = result;
    unint64_t v75 = self;
    id v76 = [v74 topAnchor];

    id v77 = [v73 constraintEqualToAnchor:v76];
    *(void *)(v45 + 88) = v77;
    specialized Array._endMutation()();
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    Class v78 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v75 activateConstraints:v78];

    id v79 = *(void **)&v6[v82];
    *(void *)&v6[v82] = v42;

    id v80 = &protocol witness table for MOSuggestionCollectionView;
    if (!*(void *)&v6[v82]) {
      id v80 = 0;
    }
    *(void *)&v41[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate + 8] = v80;
    swift_unknownObjectWeakAssign();
    return v6;
  }
LABEL_39:
  __break(1u);
  return result;
}

void MOSuggestionSheetViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  BOOL v7 = specialized static MOAngelRootViewController.isLandscape.getter();
  double v8 = *(double *)&static MOAngelRootViewController.LANDSCAPE_WIDTH;
  if (!v7) {
    double v8 = a2;
  }
  [v3 setPreferredContentSize:v8 a3];
  [v3 preferredContentSize];
  double v10 = v9;
  double v12 = v11;
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for MOSuggestionSheetViewController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:v10 v12];
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v15[4] = partial apply for closure #1 in MOSuggestionSheetViewController.viewWillTransition(to:with:);
  v15[5] = v13;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  v15[3] = &block_descriptor_41;
  double v14 = _Block_copy(v15);
  swift_release();
  [a1 animateAlongsideTransition:0 completion:v14];
  _Block_release(v14);
}

void closure #1 in MOSuggestionSheetViewController.viewWillTransition(to:with:)()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(void **)(Strong
                    + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView);
    if (v2)
    {
      uint64_t v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0xE8);
      uint64_t v4 = v2;
      id v5 = (void *)v3();

      if (v5)
      {
        id v6 = [v5 collectionViewLayout];

        [v6 invalidateLayout];
      }
    }
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.handleContentSizeChanged()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 traitCollection];
    id v4 = [v3 preferredContentSizeCategory];

    (*(void (**)(id))((swift_isaMask & *v2) + 0x260))(v4);
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.cancelSheet()()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x158))();
  }
  if ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x148))())
  {
    uint64_t v5 = v4;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.updateSheet()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView);
  if (v1)
  {
    id v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x248);
    id v3 = v1;
    v2();
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.viewDidLoad()()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MOSuggestionSheetViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    id v3 = [self systemBackgroundColor];
    [v2 setBackgroundColor:v3];
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  id v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for MOSuggestionSheetViewController();
  [super viewDidAppear:a1];
  id v4 = [self sharedInstance];
  id v5 = [v4 onboardingFlowCompletionStatus];

  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.shared);
  BOOL v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    double v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)double v9 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Sheet view controller state, onboarding state = %lu", v9, 0xCu);
    swift_slowDealloc();
  }

  if (!v5) {
    MOSuggestionSheetViewController.presentOnboardingController()();
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.presentOnboardingController()()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for MOOnboardingNavigationController());
  id v2 = v0;
  id v4 = (void *)MOOnboardingNavigationController.init(onboardingDelegate:)();
  [v4 setModalInPresentation:1];
  id v3 = *(void (**)())((swift_isaMask & *v4) + 0x60);
  swift_unknownObjectRetain();
  v3();
  [v4 setModalPresentationStyle:2];
  [v2 presentViewController:v4 animated:1 completion:0];
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
}

Swift::Void __swiftcall MOSuggestionSheetViewController.pressedSegmentControl()()
{
  id v1 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  id v2 = [v1 selectedSegmentIndex];

  if ((unint64_t)v2 <= 1)
  {
    uint64_t v3 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = *(void *)(v3 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(id, void, id, uint64_t, uint64_t))(v4 + 8))(v2, [*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_options) showBlankEntryButton] ^ 1, objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_options), "showBlankEntryButton"), ObjectType, v4);
      swift_unknownObjectRelease();
    }
  }
}

void MOSuggestionSheetViewController.init(nibName:bundle:)()
{
}

void @objc MOAngelRootViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MOSuggestionSheetViewController.__deallocating_deinit()
{
  return MOAngelRootViewController.__deallocating_deinit(type metadata accessor for MOSuggestionSheetViewController);
}

id MOAngelRootViewController.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

Swift::Void __swiftcall MOSuggestionSheetViewController.prepareViewControllerForPresentation(_:)(UIViewController a1)
{
  [v1 preferredContentSize];
  -[objc_class setPreferredContentSize:](a1.super.super.isa, "setPreferredContentSize:");
  id v3 = [(objc_class *)a1.super.super.isa sheetPresentationController];
  if (v3)
  {
    id v4 = v3;
    [v3 setPrefersEdgeAttachedInCompactHeight:1];
    [v4 setWidthFollowsPreferredContentSizeWhenEdgeAttached:0];
    [v4 setPrefersPageSizing:0];
  }
}

void MOSuggestionSheetViewController.presentInterstitialView(interstitial:completion:)(void *a1, void *a2, uint64_t a3)
{
  [v3 preferredContentSize];
  [a1 setPreferredContentSize:];
  id v7 = [a1 sheetPresentationController];
  if (v7)
  {
    os_log_type_t v8 = v7;
    [v7 setPrefersEdgeAttachedInCompactHeight:1];
    [v8 setWidthFollowsPreferredContentSizeWhenEdgeAttached:0];
    [v8 setPrefersPageSizing:0];
  }
  if (a2)
  {
    v9[4] = a2;
    v9[5] = a3;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = thunk for @escaping @callee_guaranteed () -> ();
    v9[3] = &block_descriptor_44;
    a2 = _Block_copy(v9);
    swift_retain();
    swift_release();
  }
  [v3 presentViewController:a1 animated:1 completion:a2];
  _Block_release(a2);
}

Swift::Void __swiftcall MOSuggestionSheetViewController.dismissInterstitialView()()
{
  id v1 = [v0 navigationController];
  if (v1)
  {
    id v2 = v1;
    [v1 dismissViewControllerAnimated:1 completion:0];
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.presentPrivacyController()()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (void *)Strong;
    id v3 = objc_allocWithZone((Class)type metadata accessor for PrivacyViewController());
    id v4 = specialized PrivacyViewController.init(clientName:)();
    [v4 setModalInPresentation:1];
    [v0 presentViewController:v4 animated:1 completion:0];
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.shouldUpdateCancelButtonToClose()()
{
  id v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    id v4 = [self mainBundle];
    v18._object = (void *)0x80000001001E6630;
    v5._uint64_t countAndFlagsBits = 0x65736F6C63;
    v5._object = (void *)0xE500000000000000;
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v18._uint64_t countAndFlagsBits = 0xD000000000000021;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v18);

    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.localizedCapitalized.getter();
    swift_bridgeObjectRelease();
    long long v16 = 0u;
    long long v17 = 0u;
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone((Class)UIBarButtonItem);
    id v9 = [v8 initWithTitle:v7 style:2 target:0 action:@"cancelSheet" v16 v17];

    uint64_t v10 = swift_unknownObjectRelease();
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x1B0))(v10);
    double v11 = self;
    double v12 = &selRef_systemBlueColor;
    if ((v7 & 1) == 0) {
      double v12 = &selRef_systemIndigoColor;
    }
    id v13 = [v11 *v12];
    [v9 setTintColor:v13];

    if ([*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_options] showCancelButton])
    {
      id v14 = [v1 navigationItem];
      [v14 setLeftBarButtonItem:v9];

      id v15 = v9;
    }
    else
    {
      id v15 = v3;
      id v3 = v9;
    }
  }
}

Swift::Void __swiftcall MOSuggestionSheetViewController.presentDialogAlert(dialogAlert:)(UIAlertController dialogAlert)
{
  [v1 presentViewController:dialogAlert.super.super.super.isa animated:1 completion:0];
}

Swift::Void __swiftcall MOSuggestionSheetViewController.showSegmentedController()()
{
}

Swift::Void __swiftcall MOSuggestionSheetViewController.showSegmentedController(withSegment:)(MomentsUIService::SegmentType withSegment)
{
  id v2 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  [v2 setSelectedSegmentIndex:withSegment & 1];

  id v3 = self;
  id v4 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7[4] = partial apply for closure #1 in MOSuggestionSheetViewController.showSegmentedController();
  v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = thunk for @escaping @callee_guaranteed () -> ();
  v7[3] = &block_descriptor_53;
  Swift::String v6 = _Block_copy(v7);
  swift_release();
  [v3 transitionWithView:v4 duration:5242880 options:v6 animations:0 completion:0.5];
  _Block_release(v6);
}

Swift::Void __swiftcall MOSuggestionSheetViewController.hideSegmentedController()()
{
}

void MOSuggestionSheetViewController.showSegmentedController()(uint64_t a1, uint64_t a2)
{
  id v4 = self;
  id v5 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v8[4] = a1;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = thunk for @escaping @callee_guaranteed () -> ();
  v8[3] = a2;
  NSString v7 = _Block_copy(v8);
  swift_release();
  [v4 transitionWithView:v5 duration:5242880 options:v7 animations:0 completion:0.5];
  _Block_release(v7);
}

void closure #1 in MOSuggestionSheetViewController.showSegmentedController()(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    id v5 = MOSuggestionSheetViewController.suggestionSegmentedControl.getter();

    [v5 setHidden:a2 & 1];
  }
}

void protocol witness for MOSuggestionSegmentedControlVisibilityDelegate.showSegmentedController(withSegment:) in conformance MOSuggestionSheetViewController(char a1)
{
}

char *specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(void *a1, void *a2, void *a3, void *a4, void *a5, char *a6)
{
  *(void *)&a6[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView] = 0;
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_onboardingManager;
  id v9 = self;
  uint64_t v10 = a6;
  *(void *)&a6[v8] = [v9 sharedInstance];
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel] = 0;
  uint64_t v11 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_engagementWriter;
  *(void *)&v10[v11] = [self sharedInstance];
  swift_unknownObjectWeakInit();
  double v12 = &v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate];
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v13 = &v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate];
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v14 = &v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate];
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge;
  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  *(void *)&v10[v15] = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionPickerPrivacyBadge()) initWithFrame:CGRectZero.origin.x, y, width, height];
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight] = 0;
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset] = 0;
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint] = 0;
  uint64_t v19 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator;
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator] = 0;
  uint64_t v20 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_refresher;
  *(void *)&v10[v20] = [objc_allocWithZone((Class)UIRefreshControl) init];
  uint64_t v21 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  id v22 = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v10[v21] = v22;
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield] = 0;
  uint64_t v23 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  closure #1 in variable initialization expression of MOSuggestionCollectionView.supportingLoadingTextLabel();
  *(void *)&v10[v23] = v24;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *((void *)v12 + 1) = &protocol witness table for MOSuggestionSheetViewController;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *((void *)v13 + 1) = &protocol witness table for MOSuggestionSheetViewController;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *((void *)v14 + 1) = &protocol witness table for MOSuggestionSheetViewController;
  swift_unknownObjectWeakAssign();
  *(void *)&v10[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options] = a5;
  id v25 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1D0);
  id v73 = a5;
  uint64_t v26 = v25();
  uint64_t v28 = v27;
  uint64_t v29 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1C8))();
  uint64_t v31 = v30;
  LOBYTE(v21) = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1B0))();
  type metadata accessor for MOSuggestionTipCoordinator();
  swift_allocObject();
  *(void *)&v10[v19] = MOSuggestionTipCoordinator.init(clientId:clientName:isPublicUI:)(v26, v28, v29, v31, v21 & 1);

  swift_release();
  v77.receiver = v10;
  v77.super_class = (Class)type metadata accessor for MOSuggestionCollectionView();
  NSString v32 = [super initWithFrame:CGRectZero.origin.x, y, width, height];
  id v33 = v32;
  uint64_t v34 = *(void *)&v32[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator];
  if (v34)
  {
    id v35 = *(void (**)(char *, _UNKNOWN **))(*(void *)v34 + 128);
    uint64_t v36 = v32;
    swift_retain();
    v35(v33, &protocol witness table for MOSuggestionCollectionView);
    swift_release();
  }
  else
  {
    uint64_t v37 = v32;
  }
  uint64_t v38 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  id v39 = *(void **)&v33[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator];
  [v33 addSubview:v39];
  uint64_t v40 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  [v33 addSubview:*(void *)&v33[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel]];
  id v41 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1001DA110;
  id v43 = [v39 centerYAnchor];
  id v44 = [v33 centerYAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44];

  *(void *)(v42 + 32) = v45;
  id v46 = [*(id *)&v33[v38] centerXAnchor];
  id v47 = [v33 centerXAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  *(void *)(v42 + 40) = v48;
  id v49 = [*(id *)&v33[v38] heightAnchor];
  id v50 = [v49 constraintEqualToConstant:50.0];

  *(void *)(v42 + 48) = v50;
  id v51 = [*(id *)&v33[v38] widthAnchor];
  id v52 = [v51 constraintEqualToConstant:50.0];

  *(void *)(v42 + 56) = v52;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v41 activateConstraints:isa];

  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1001DA110;
  id v55 = [*(id *)&v33[v40] topAnchor];
  id v56 = [*(id *)&v33[v38] bottomAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56 constant:2.0];

  *(void *)(v54 + 32) = v57;
  id v58 = [*(id *)&v33[v40] centerXAnchor];
  id v59 = [v33 centerXAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59];

  *(void *)(v54 + 40) = v60;
  id v61 = [*(id *)&v33[v40] leadingAnchor];
  id v62 = [v33 leadingAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62 constant:20.0];

  *(void *)(v54 + 48) = v63;
  id v64 = [*(id *)&v33[v40] trailingAnchor];
  id v65 = [v33 trailingAnchor];
  id v66 = [v64 constraintEqualToAnchor:v65 constant:-20.0];

  *(void *)(v54 + 56) = v66;
  specialized Array._endMutation()();
  Class v67 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v41 activateConstraints:v67];

  id v68 = *(void **)&v33[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_refresher];
  id v69 = v33;
  id v70 = v68;
  [v70 addTarget:v69 action:"handlePullToRefreshTrigger" forControlEvents:4096];

  return v69;
}

BOOL specialized static MOAngelRootViewController.isLandscape.getter()
{
  uint64_t v0 = self;
  id v1 = [v0 sharedApplication];
  id v2 = [v1 connectedScenes];

  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIScene);
  lazy protocol witness table accessor for type UIScene and conformance NSObject();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v4 = (void *)specialized Collection.first.getter(v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      id v6 = [v5 interfaceOrientation];

      if (v6 == (id)4) {
        return 1;
      }
    }
    else
    {
    }
  }
  id v8 = [v0 sharedApplication];
  id v9 = [v8 connectedScenes];

  uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = (void *)specialized Collection.first.getter(v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    self;
    double v12 = (void *)swift_dynamicCastObjCClass();
    if (v12)
    {
      id v13 = [v12 interfaceOrientation];

      return v13 == (id)3;
    }
  }
  return 0;
}

uint64_t type metadata accessor for MOAngelRootViewController()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type UIScene and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type UIScene and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UIScene and conformance NSObject)
  {
    type metadata accessor for UIApplication(255, (unint64_t *)&lazy cache variable for type metadata for UIScene);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIScene and conformance NSObject);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionSheetViewController()
{
  return self;
}

uint64_t sub_100104604()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10010463C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOAngelRootViewController.present(with:)()
{
  closure #1 in MOAngelRootViewController.present(with:)(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t sub_1001046A8()
{
  return _swift_deallocObject(v0, 24, 7);
}

double partial apply for closure #1 in static SuggestionSheetDetents.peek(identifier:fraction:)(void *a1)
{
  double v2 = *(double *)(v1 + 16);
  [a1 maximumDetentValue];
  return v2 * v3;
}

uint64_t sub_1001046F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

id partial apply for closure #2 in MOAngelRootViewController.update(with:animated:)()
{
  return [*(id *)(v0 + 16) setSelectedDetentIdentifier:**(void **)(v0 + 24)];
}

uint64_t sub_10010473C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10010474C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #3 in MOAngelRootViewController.update(with:animated:)(uint64_t a1)
{
  closure #3 in MOAngelRootViewController.update(with:animated:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void partial apply for closure #1 in MOAngelRootViewController.update(with:animated:)()
{
  closure #1 in MOAngelRootViewController.update(with:animated:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100104794()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionSheetViewController.updateSheetIfOnboardingRefreshComplete()()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0x90))();
}

uint64_t lazy protocol witness table accessor for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void partial apply for closure #1 in MOSuggestionSheetViewController.viewWillTransition(to:with:)()
{
}

void specialized MOSuggestionSheetViewController.init(coder:)()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_segmentedVisibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_suggestionCollectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController____lazy_storage___suggestionSegmentedControl] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_presentationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetViewController_rootControllerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t specialized MOSuggestionSheetViewController.showMomentsValidator()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v0 - 8);
  double v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return outlined destroy of Any?((uint64_t)v2, &demangling cache variable for type metadata for URL?);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v9);
  uint64_t v11 = v10;
  specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for UIApplicationOpenExternalURLOptionsKey(0);
  lazy protocol witness table accessor for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 openURL:v11 options:isa completionHandler:0];

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void partial apply for closure #1 in MOSuggestionSheetViewController.showSegmentedController()()
{
  closure #1 in MOSuggestionSheetViewController.showSegmentedController()(v0, 0);
}

void partial apply for closure #1 in MOSuggestionSheetViewController.hideSegmentedController()()
{
  closure #1 in MOSuggestionSheetViewController.showSegmentedController()(v0, 1);
}

uint64_t sub_100104BFC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x130))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100104C60(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x138);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_100104CDC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x148))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100104D40(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x150);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t static MOReachability.isInternetAvailable()()
{
  uint64_t v1 = type metadata accessor for NWPath.Status();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  v0[6] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (NWPath.Status?, NWPath.Status?));
  v0[7] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for NWPath();
  v0[8] = v2;
  v0[9] = *(void *)(v2 - 8);
  v0[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NWPathMonitor.Iterator();
  v0[11] = v3;
  v0[12] = *(void *)(v3 - 8);
  v0[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NWPath?);
  v0[14] = swift_task_alloc();
  v0[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NWPath.Status?);
  v0[16] = swift_task_alloc();
  v0[17] = swift_task_alloc();
  v0[18] = swift_task_alloc();
  return _swift_task_switch(static MOReachability.isInternetAvailable(), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  type metadata accessor for NWPathMonitor();
  swift_allocObject();
  uint64_t v1 = NWPathMonitor.init()();
  v0[19] = v1;
  v0[2] = v1;
  lazy protocol witness table accessor for type NWPathMonitor and conformance NWPathMonitor(&lazy protocol witness table cache variable for type NWPathMonitor and conformance NWPathMonitor, (void (*)(uint64_t))&type metadata accessor for NWPathMonitor);
  swift_retain();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v2 = lazy protocol witness table accessor for type NWPathMonitor and conformance NWPathMonitor(&lazy protocol witness table cache variable for type NWPathMonitor.Iterator and conformance NWPathMonitor.Iterator, (void (*)(uint64_t))&type metadata accessor for NWPathMonitor.Iterator);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[20] = v3;
  void *v3 = v0;
  v3[1] = static MOReachability.isInternetAvailable();
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[11];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v2);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v7;

  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[13];
    uint64_t v4 = v2[11];
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2[12] + 8);
    return v5(v3, v4);
  }
  else
  {
    return _swift_task_switch(static MOReachability.isInternetAvailable(), 0, 0);
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t (*v46)(void);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  uint64_t v1 = v0[14];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v4(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    uint64_t v5 = 1;
  }
  else
  {
    id v6 = v0[12];
    id v48 = v0[13];
    id v49 = v0[15];
    id v8 = v0[10];
    NSString v7 = v0[11];
    id v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v9(v8, v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v48, v7);
    v9(v49, v8, v2);
    uint64_t v5 = 0;
  }
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[9] + 56))(v10, v5, 1, v11);
  swift_release();
  double v12 = v4(v10, 1, v11);
  uint64_t v13 = v0[18];
  id v14 = v0[15];
  if (v12 == 1)
  {
    uint64_t v15 = v0[3];
    long long v16 = v0[4];
    outlined destroy of Any?(v0[15], &demangling cache variable for type metadata for NWPath?);
    long long v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v17(v13, 1, 1, v15);
  }
  else
  {
    Swift::String v18 = v0[8];
    uint64_t v19 = v0[9];
    uint64_t v20 = v0[3];
    uint64_t v21 = v0[4];
    NWPath.status.getter();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v14, v18);
    long long v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v17(v13, 0, 1, v20);
  }
  uint64_t v23 = v0[17];
  id v22 = v0[18];
  id v25 = v0[6];
  uint64_t v24 = v0[7];
  uint64_t v26 = v0[3];
  uint64_t v27 = v0[4];
  (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v23, enum case for NWPath.Status.unsatisfied(_:), v26);
  v17(v23, 0, 1, v26);
  uint64_t v28 = v24 + *(int *)(v25 + 48);
  outlined init with copy of NWPath.Status?(v22, v24);
  outlined init with copy of NWPath.Status?(v23, v28);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v29(v24, 1, v26) == 1)
  {
    uint64_t v30 = v0[18];
    uint64_t v31 = v0[3];
    outlined destroy of Any?(v0[17], &demangling cache variable for type metadata for NWPath.Status?);
    outlined destroy of Any?(v30, &demangling cache variable for type metadata for NWPath.Status?);
    if (v29(v28, 1, v31) == 1)
    {
      outlined destroy of Any?(v0[7], &demangling cache variable for type metadata for NWPath.Status?);
      NSString v32 = 0;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  id v33 = v0[3];
  outlined init with copy of NWPath.Status?(v0[7], v0[16]);
  uint64_t v34 = v29(v28, 1, v33);
  uint64_t v36 = v0[17];
  id v35 = v0[18];
  uint64_t v37 = v0[16];
  if (v34 == 1)
  {
    uint64_t v38 = v0[3];
    id v39 = v0[4];
    outlined destroy of Any?(v0[17], &demangling cache variable for type metadata for NWPath.Status?);
    outlined destroy of Any?(v35, &demangling cache variable for type metadata for NWPath.Status?);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
LABEL_12:
    outlined destroy of Any?(v0[7], &demangling cache variable for type metadata for (NWPath.Status?, NWPath.Status?));
    NSString v32 = 1;
    goto LABEL_14;
  }
  uint64_t v40 = v0[7];
  uint64_t v42 = v0[4];
  id v41 = v0[5];
  id v43 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v41, v28, v43);
  lazy protocol witness table accessor for type NWPathMonitor and conformance NWPathMonitor(&lazy protocol witness table cache variable for type NWPath.Status and conformance NWPath.Status, (void (*)(uint64_t))&type metadata accessor for NWPath.Status);
  id v44 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v45(v41, v43);
  outlined destroy of Any?(v36, &demangling cache variable for type metadata for NWPath.Status?);
  outlined destroy of Any?(v35, &demangling cache variable for type metadata for NWPath.Status?);
  v45(v37, v43);
  outlined destroy of Any?(v40, &demangling cache variable for type metadata for NWPath.Status?);
  NSString v32 = v44 ^ 1;
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v46 = (uint64_t (*)(void))v0[1];
  return v46(v32 & 1);
}

uint64_t outlined init with copy of NWPath.Status?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NWPath.Status?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t lazy protocol witness table accessor for type NWPathMonitor and conformance NWPathMonitor(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

const __SCNetworkReachability *static MOReachability.isInternetAvailable()()
{
  *(void *)&address.sa_data[6] = 0;
  *(void *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  uint64_t result = SCNetworkReachabilityCreateWithAddress(0, &address);
  if (result)
  {
    uint64_t v1 = result;
    SCNetworkReachabilityFlags flags = 0;
    int v2 = SCNetworkReachabilityGetFlags(result, &flags);

    if (v2) {
      return (const __SCNetworkReachability *)((flags & 6) == 2);
    }
    else {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOReachability()
{
  return &type metadata for MOReachability;
}

uint64_t MOSuggestionSheetImage.__allocating_init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  char v15 = a8 & 1;
  uint64_t v16 = swift_allocObject();
  MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(a1, a2, a3, a4, a5, a6, a7, v15);
  return v16;
}

id MOSuggestionAssetReference.assetType.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 16);

  return v1;
}

void MOSuggestionAssetReference.assetType.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
}

void *MOSuggestionSheetImage.associatedTintColor.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void *MOSuggestionSheetAssetViewModel.image.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.image.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

void *MOSuggestionSheetAssetViewModel.activitySummary.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.activitySummary.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = a1;
}

uint64_t MOSuggestionSheetImage.shouldBeRounded.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t MOSuggestionSheetImage.shouldBeRounded.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = a1;
  return result;
}

__n128 MOSuggestionSheetImage.squareCrop.getter@<Q0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  char v3 = *(unsigned char *)(v1 + 88);
  __n128 result = *(__n128 *)(v1 + 56);
  long long v5 = *(_OWORD *)(v1 + 72);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = v3;
  return result;
}

uint64_t MOSuggestionSheetImage.squareCrop.setter(uint64_t a1)
{
  swift_beginAccess();
  return outlined init with take of CGRect?(a1, v1 + 56);
}

uint64_t (*MOSuggestionSheetImage.squareCrop.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionSheetImage.extraMargin.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 96);
}

uint64_t MOSuggestionSheetImage.extraMargin.setter(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 96) = a1;
  *(unsigned char *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v9 = v8;
  *(void *)(v8 + 40) = 0;
  id v14 = (void **)(v8 + 40);
  *(_OWORD *)(v8 + 72) = 0u;
  *(unsigned char *)(v8 + 88) = 1;
  *(unsigned char *)(v8 + 104) = 1;
  *(void *)(v8 + 32) = 0;
  char v15 = (void **)(v8 + 32);
  *(void *)(v9 + 24) = 0;
  *(_OWORD *)(v9 + 56) = 0u;
  *(void *)(v9 + 96) = 0;
  *(void *)(v9 + 16) = a1;
  swift_beginAccess();
  uint64_t v16 = *(void **)(v9 + 24);
  *(void *)(v9 + 24) = a2;

  swift_beginAccess();
  long long v17 = *v15;
  *char v15 = a3;

  swift_beginAccess();
  Swift::String v18 = *v14;
  *id v14 = a4;

  *(unsigned char *)(v9 + 48) = a5;
  swift_beginAccess();
  outlined init with take of CGRect?(a6, v9 + 56);
  swift_beginAccess();
  *(void *)(v9 + 96) = a7;
  *(unsigned char *)(v9 + 104) = a8 & 1;
  return v9;
}

id *MOSuggestionSheetImage.deinit()
{
  return v0;
}

uint64_t MOSuggestionSheetImage.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_100105F44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_100105F90(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 144))(*a1);
}

uint64_t sub_100105FE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t sub_100106030(id *a1, uint64_t a2)
{
  id v2 = *a1;
  char v3 = *(uint64_t (**)(id))(**(void **)a2 + 168);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100106088@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 184))();
  *a2 = result;
  return result;
}

uint64_t sub_1001060D4(id *a1, uint64_t a2)
{
  id v2 = *a1;
  char v3 = *(uint64_t (**)(id))(**(void **)a2 + 192);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10010612C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 208))();
  *a2 = result;
  return result;
}

uint64_t sub_100106178(id *a1, uint64_t a2)
{
  id v2 = *a1;
  char v3 = *(uint64_t (**)(id))(**(void **)a2 + 216);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1001061D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 232))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100106220(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 240))(*a1);
}

uint64_t sub_100106268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 256))(v4);
  return outlined init with take of CGRect?((uint64_t)v4, a2);
}

uint64_t sub_1001062D0(uint64_t a1, uint64_t a2)
{
  outlined init with take of CGRect?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 264))(v4);
}

uint64_t sub_100106334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 280))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100106390(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)a2 + 288))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t type metadata accessor for MOSuggestionSheetImage()
{
  return self;
}

void thunk for @escaping @callee_guaranteed (@guaranteed UIAlertAction) -> ()(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:));
}

void *MOSuggestionCollectionView.suggestionCollectionView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionCollectionView.suggestionCollectionView.setter(void *a1)
{
}

uint64_t (*MOSuggestionCollectionView.suggestionCollectionView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionCollectionView.onboardingManager.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_onboardingManager);
}

uint64_t MOSuggestionCollectionView.viewModel.getter()
{
  return swift_retain();
}

uint64_t MOSuggestionCollectionView.viewModel.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*MOSuggestionCollectionView.viewModel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionView.controller.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void MOSuggestionCollectionView.controller.setter(void *a1)
{
}

void (*MOSuggestionCollectionView.controller.modify(void *a1))(id **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_controller;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return MOSuggestionSheetInterstitialView.controller.modify;
}

uint64_t MOSuggestionCollectionView.presentationDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter();
}

uint64_t MOSuggestionCollectionView.presentationDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate);
}

uint64_t (*MOSuggestionCollectionView.presentationDelegate.modify(void *a1))()
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

uint64_t MOSuggestionCollectionView.dialogDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter();
}

uint64_t MOSuggestionCollectionView.dialogDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate);
}

uint64_t (*MOSuggestionCollectionView.dialogDelegate.modify(void *a1))()
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

uint64_t MOSuggestionCollectionView.segmentedVisibilityDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter();
}

uint64_t MOSuggestionCollectionView.segmentedVisibilityDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate);
}

uint64_t (*MOSuggestionCollectionView.segmentedVisibilityDelegate.modify(void *a1))()
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

uint64_t MOSuggestionCollectionView.newEntryHeaderDelegate.getter()
{
  return MOSuggestionSheetViewController.presentationDelegate.getter();
}

uint64_t MOSuggestionCollectionView.newEntryHeaderDelegate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionSheetViewController.presentationDelegate.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate);
}

uint64_t (*MOSuggestionCollectionView.newEntryHeaderDelegate.modify(void *a1))()
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetViewController.presentationDelegate.modify;
}

void *MOSuggestionCollectionView.protectedContentShield.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionCollectionView.protectedContentShield.setter(void *a1)
{
}

uint64_t (*MOSuggestionCollectionView.protectedContentShield.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void MOSuggestionCollectionView.newEntryHeaderHeight(isPublicUI:)()
{
  uint64_t v1 = v0;
  if (one-time initialization token for HEADER_LABEL != -1) {
    swift_once();
  }
  [v0 bounds];
  double Width = CGRectGetWidth(v36);
  NSString v3 = String._bridgeToObjectiveC()();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DA0F0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v5 = self;
  id v6 = NSFontAttributeName;
  id v7 = [v5 preferredFontForTextStyle:UIFontTextStyleTitle3];
  id v8 = [v7 fontDescriptor];
  id v9 = [v8 fontDescriptorWithSymbolicTraits:2];

  if (!v9) {
    goto LABEL_13;
  }
  id v10 = [v5 fontWithDescriptor:v9 size:0.0];

  *(void *)(inited + 64) = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  *(void *)(inited + 40) = v10;
  specialized Dictionary.init(dictionaryLiteral:)(inited);
  type metadata accessor for NSAttributedStringKey(0);
  _sSo21NSAttributedStringKeyaABSHSCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 boundingRectWithSize:1 options:isa context:Width + -30.0, 3.40282347e38];
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  v37.origin.CGFloat x = v13;
  v37.origin.double y = v15;
  v37.size.double width = v17;
  v37.size.double height = v19;
  double Height = CGRectGetHeight(v37);
  id v21 = [v5 preferredFontForTextStyle:UIFontTextStyleTitle3];
  id v22 = [v21 fontDescriptor];
  id v23 = [v22 fontDescriptorWithSymbolicTraits:2];

  if (!v23)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v24 = [v5 fontWithDescriptor:v23 size:0.0];

  [v24 lineHeight];
  double v26 = v25;

  double v27 = ceil(Height / v26);
  if ((~*(void *)&v27 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v27 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v28 = [objc_allocWithZone((Class)UILabel) init];
  [v1 frame];
  double v29 = CGRectGetWidth(v38);
  id v30 = [v5 preferredFontForTextStyle:UIFontTextStyleTitle3];
  id v31 = [v30 fontDescriptor];
  id v32 = [v31 fontDescriptorWithSymbolicTraits:2];

  if (v32)
  {
    id v33 = [v5 fontWithDescriptor:v32 size:0.0];

    [v33 pointSize];
    double v35 = v34;

    specialized UILabel.estimatedHeight(forWidth:text:ofSize:weight:)(0, 0xE000000000000000, v29, v35, UIFontWeightBold);
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:));
}

uint64_t MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = swift_getObjectType();
  uint64_t v18 = swift_getObjectType();
  return a9(a1, a2, a4, a6, a8, v21, v17, ObjectType, v18, a5, a3, a7);
}

void closure #1 in variable initialization expression of MOSuggestionCollectionView.supportingLoadingTextLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self mainBundle];
  v10._uint64_t countAndFlagsBits = 0xD000000000000037;
  v10._object = (void *)0x80000001001E6F80;
  v2._object = (void *)0x80000001001E6F50;
  v2._uint64_t countAndFlagsBits = 0xD000000000000028;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v10);

  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v4];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = self;
  id v6 = [v5 preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v7 = [v6 fontDescriptor];
  id v8 = [v7 fontDescriptorWithSymbolicTraits:2];

  if (v8)
  {
    id v9 = [v5 fontWithDescriptor:v8 size:0.0];

    [v0 setFont:v9];
    [v0 setHidden:1];
    [v0 setNumberOfLines:0];
    [v0 setLineBreakMode:0];
    [v0 setTextAlignment:1];
  }
  else
  {
    __break(1u);
  }
}

void MOSuggestionCollectionView.handlePullToRefreshTrigger()()
{
  id v6 = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:2];
  id v1 = [v6 impactOccurred];
  uint64_t v2 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x100))(v1);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = *(void (**)(uint64_t (*)(), uint64_t))(*(void *)v3 + 728);
    swift_retain();
    v5(partial apply for closure #1 in MOSuggestionCollectionView.handlePullToRefreshTrigger(), v4);
    swift_release();
    swift_release_n();
  }
}

void closure #1 in closure #1 in MOSuggestionCollectionView.handlePullToRefreshTrigger()()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_refresher);

    [v2 endRefreshing];
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.layoutSubviews()()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v123 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (objc_class *)type metadata accessor for MOSuggestionCollectionView();
  v128.receiver = v0;
  v128.super_class = v9;
  [super layoutSubviews];
  uint64_t v11 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE8);
  uint64_t v122 = (swift_isaMask & *v0) + 232;
  double v12 = (void *)((uint64_t (*)(id))v11)(v10);

  if (!v12)
  {
    uint64_t v13 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x118))();
    if (v13)
    {
      double v14 = (void *)v13;
      uint64_t v116 = v7;
      double v117 = v5;
      uint64_t v118 = v6;
      uint64_t v119 = v3;
      uint64_t v120 = v2;
      id v15 = [objc_allocWithZone((Class)UICollectionViewFlowLayout) init];
      [v15 setScrollDirection:0];
      [v15 setMinimumLineSpacing:6.0];
      [v15 setMinimumInteritemSpacing:4.0];
      [v1 safeAreaInsets];
      id v121 = v15;
      id v16 = [v15 setSectionInset:0.0, 13.0];
      LOBYTE(v15) = (*(uint64_t (**)(id))((swift_isaMask & *v14) + 0x1B8))(v16);
      uint64_t v18 = v17;
      CGFloat v19 = *(uint64_t (**)(void))((swift_isaMask & *v14) + 0x1D0);
      id v115 = v14;
      uint64_t v20 = v19();
      uint64_t v22 = v21;
      type metadata accessor for MOSuggestionCollectionViewModel();
      swift_allocObject();
      uint64_t v23 = MOSuggestionCollectionViewModel.init(clientDetails:clientId:)(v15 & 1, v18, v20, v22);
      uint64_t v24 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x108))(v23);
      double v25 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x100);
      uint64_t v26 = v25(v24);
      if (v26)
      {
        double v27 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options);
        id v28 = *(void (**)(void *))(*(void *)v26 + 456);
        id v29 = v27;
        v28(v27);
        uint64_t v26 = swift_release();
      }
      uint64_t v30 = v25(v26);
      if (v30)
      {
        uint64_t v125 = v9;
        id v126 = (uint64_t (*)())&protocol witness table for MOSuggestionCollectionView;
        aBlock[0] = v1;
        id v31 = *(void (**)(void *))(*(void *)v30 + 408);
        id v32 = v1;
        v31(aBlock);
        uint64_t v30 = swift_release();
      }
      uint64_t v33 = v25(v30);
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = swift_allocObject();
        swift_unknownObjectWeakInit();
        CGRect v36 = *(void (**)(uint64_t (*)(char, char), uint64_t))(*(void *)v34 + 336);
        swift_retain();
        v36(partial apply for closure #1 in MOSuggestionCollectionView.layoutSubviews(), v35);
        swift_release();
        uint64_t v33 = swift_release();
      }
      uint64_t v37 = v25(v33);
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v39 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v40 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v38 + 360);
        swift_retain();
        v40(partial apply for closure #2 in MOSuggestionCollectionView.layoutSubviews(), v39);
        swift_release();
        uint64_t v37 = swift_release();
      }
      double v113 = v11;
      uint64_t v41 = v25(v37);
      if (v41)
      {
        uint64_t v42 = v41;
        uint64_t v43 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v44 = *(void (**)(uint64_t (*)(), uint64_t))(*(void *)v42 + 384);
        swift_retain();
        v44(partial apply for closure #3 in MOSuggestionCollectionView.layoutSubviews(), v43);
        swift_release();
        swift_release();
      }
      double y = CGRectZero.origin.y;
      double width = CGRectZero.size.width;
      double height = CGRectZero.size.height;
      id v48 = objc_allocWithZone((Class)UICollectionView);
      id v49 = [v48 initWithFrame:CGRectZero.origin.x, y, width, height];
      [v49 setDelegate:v1];
      [v49 setDataSource:v1];
      [v49 setShowsVerticalScrollIndicator:0];
      [v1 addSubview:v49];
      [v49 setTranslatesAutoresizingMaskIntoConstraints:0];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1001DA110;
      id v51 = [v49 topAnchor];
      id v52 = [v1 topAnchor];
      if ([*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options) showBlankEntryButton])double v53 = 0.0; {
      else
      }
        double v53 = 10.0;
      uint64_t v54 = self;
      id v55 = [v51 constraintEqualToAnchor:v52 constant:v53];

      *(void *)(v50 + 32) = v55;
      id v56 = [v49 bottomAnchor];
      id v57 = [v1 bottomAnchor];
      id v58 = [v56 constraintEqualToAnchor:v57];

      *(void *)(v50 + 40) = v58;
      id v59 = [v49 leadingAnchor];
      id v60 = [v1 leadingAnchor];
      id v61 = [v59 constraintEqualToAnchor:v60];

      *(void *)(v50 + 48) = v61;
      id v62 = [v49 trailingAnchor];
      id v63 = [v1 trailingAnchor];
      id v64 = [v62 constraintEqualToAnchor:v63];

      *(void *)(v50 + 56) = v64;
      aBlock[0] = v50;
      specialized Array._endMutation()();
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v54 activateConstraints:isa];

      type metadata accessor for MOSuggestionCollectionViewCell();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      NSString v67 = String._bridgeToObjectiveC()();
      [v49 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v67];

      type metadata accessor for MOSuggestionCollectionViewSingleAssetCell();
      uint64_t v68 = swift_getObjCClassFromMetadata();
      NSString v69 = String._bridgeToObjectiveC()();
      [v49 registerClass:v68 forCellWithReuseIdentifier:v69];

      type metadata accessor for MOSuggestionCollectionViewListCell();
      uint64_t v70 = swift_getObjCClassFromMetadata();
      NSString v71 = String._bridgeToObjectiveC()();
      [v49 registerClass:v70 forCellWithReuseIdentifier:v71];

      type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
      uint64_t v72 = swift_getObjCClassFromMetadata();
      NSString v73 = String._bridgeToObjectiveC()();
      [v49 registerClass:v72 forCellWithReuseIdentifier:v73];

      type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView();
      uint64_t v74 = swift_getObjCClassFromMetadata();
      unint64_t v75 = UICollectionElementKindSectionHeader;
      NSString v76 = String._bridgeToObjectiveC()();
      [v49 registerClass:v74 forSupplementaryViewOfKind:v75 withReuseIdentifier:v76];

      type metadata accessor for MOSuggestionPrivacyTipCell();
      uint64_t v77 = swift_getObjCClassFromMetadata();
      Class v78 = v75;
      NSString v79 = String._bridgeToObjectiveC()();
      [v49 registerClass:v77 forSupplementaryViewOfKind:v78 withReuseIdentifier:v79];

      type metadata accessor for MOSuggestionSheetOnboardingTipCell();
      uint64_t v80 = swift_getObjCClassFromMetadata();
      Swift::String v81 = v78;
      NSString v82 = String._bridgeToObjectiveC()();
      [v49 registerClass:v80 forSupplementaryViewOfKind:v81 withReuseIdentifier:v82];

      type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
      uint64_t v83 = swift_getObjCClassFromMetadata();
      id v84 = v81;
      NSString v85 = String._bridgeToObjectiveC()();
      [v49 registerClass:v83 forSupplementaryViewOfKind:v84 withReuseIdentifier:v85];

      type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView();
      uint64_t v86 = swift_getObjCClassFromMetadata();
      id v87 = v84;
      NSString v88 = String._bridgeToObjectiveC()();
      [v49 registerClass:v86 forSupplementaryViewOfKind:v87 withReuseIdentifier:v88];

      type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView();
      uint64_t v89 = swift_getObjCClassFromMetadata();
      double v90 = v87;
      NSString v91 = String._bridgeToObjectiveC()();
      [v49 registerClass:v89 forSupplementaryViewOfKind:v90 withReuseIdentifier:v91];

      type metadata accessor for MOSuggestionShowMoreFooterView();
      uint64_t v92 = swift_getObjCClassFromMetadata();
      id v93 = UICollectionElementKindSectionFooter;
      NSString v94 = String._bridgeToObjectiveC()();
      [v49 registerClass:v92 forSupplementaryViewOfKind:v93 withReuseIdentifier:v94];

      id v95 = *(void (**)(id))((swift_isaMask & *v1) + 0xF0);
      id v114 = v49;
      v95(v49);
      MOSuggestionCollectionView.setupProtectedContentBanner()();
      id v96 = v113;
      id v97 = (void *)v113();
      if (v97)
      {
        id v98 = v97;
        [v97 setAlwaysBounceVertical:1];
      }
      uint64_t v99 = (void *)v96();
      uint64_t v100 = v119;
      if (v99)
      {
        uint64_t v101 = v99;
        [v99 setClipsToBounds:0];
      }
      uint64_t v102 = ((uint64_t (*)(id))v96)([v1 setClipsToBounds:0]);
      if (v102)
      {
        id v103 = (void *)v102;
        id v104 = [self clearColor];
        [v103 setBackgroundColor:v104];
      }
      id v105 = v121;
      [v121 invalidateLayout];
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      uint64_t v106 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v107 = swift_allocObject();
      *(void *)(v107 + 16) = v1;
      id v126 = partial apply for closure #4 in MOSuggestionCollectionView.layoutSubviews();
      uint64_t v127 = v107;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      uint64_t v125 = (objc_class *)&block_descriptor_24;
      id v108 = _Block_copy(aBlock);
      id v109 = v1;
      swift_release();
      uint64_t v110 = v123;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      _sSo21NSAttributedStringKeyaABSHSCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      id v111 = v117;
      uint64_t v112 = v120;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v108);

      (*(void (**)(char *, uint64_t))(v100 + 8))(v111, v112);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v110, v118);
    }
  }
}

uint64_t closure #1 in MOSuggestionCollectionView.layoutSubviews()(char a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  double v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(unsigned char *)(v14 + 24) = a1;
  *(unsigned char *)(v14 + 25) = a2;
  aBlock[4] = partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.layoutSubviews();
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_126;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  _sSo21NSAttributedStringKeyaABSHSCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

void closure #1 in closure #1 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1, char a2, char a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexPath?);
  __chkstk_darwin(v5 - 8);
  id v124 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v125 = v7;
  uint64_t v126 = v8;
  __chkstk_darwin(v7);
  uint64_t v122 = (uint64_t)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v10 - 8);
  double v12 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v128 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  id v123 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v117 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v117 - v20;
  __chkstk_darwin(v19);
  uint64_t v127 = (char *)&v117 - v22;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v24 = Strong;
  uint64_t v25 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x160))();
  uint64_t v119 = v26;

  uint64_t v121 = v25;
  if (!v25) {
    return;
  }
  uint64_t v120 = v13;
  swift_beginAccess();
  double v27 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v27)
  {
    id v28 = v27;
    id v29 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v27) + 0xE8))();

    [v29 reloadData];
  }
  swift_beginAccess();
  uint64_t v30 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v30)
  {
    id v31 = v30;
    uint64_t v32 = (*(uint64_t (**)(void))((swift_isaMask & *v30) + 0x100))();

    if (v32)
    {
      char v33 = (*(uint64_t (**)(void))(*(void *)v32 + 520))();
      swift_release();
      if ((v33 & 1) == 0)
      {
        id v34 = [self sharedInstance];
        unsigned int v35 = [v34 isOnboarded];

        if (v35)
        {
          swift_beginAccess();
          CGRect v36 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v36)
          {
            uint64_t v37 = v36;
            uint64_t v38 = (*(uint64_t (**)(void))((swift_isaMask & *v36) + 0x160))();
            uint64_t v40 = v39;

            if (v38)
            {
              uint64_t ObjectType = swift_getObjectType();
              (*(void (**)(uint64_t, uint64_t))(v40 + 16))(ObjectType, v40);
              swift_unknownObjectRelease();
            }
          }
          swift_beginAccess();
          uint64_t v42 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v42)
          {
            uint64_t v43 = v42;
            uint64_t v44 = (*(uint64_t (**)(void))((swift_isaMask & *v42) + 0x178))();
            uint64_t v46 = v45;

            if (v44)
            {
              uint64_t v47 = swift_getObjectType();
              (*(void (**)(void, uint64_t, uint64_t))(v46 + 8))(0, v47, v46);
              swift_unknownObjectRelease();
            }
          }
        }
      }
    }
  }
  if (a2)
  {
    swift_beginAccess();
    id v48 = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v49 = v120;
    uint64_t v50 = v18;
    if (v48)
    {
      id v51 = v48;
      id v52 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v48) + 0xE8))();

      if (v52)
      {
        [v52 setContentOffset:0, 0.0, 0.0];
LABEL_26:
      }
    }
  }
  else
  {
    uint64_t v49 = v120;
    uint64_t v50 = v18;
    if (a3)
    {
      swift_beginAccess();
      double v53 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v53)
      {
        uint64_t v54 = v53;
        id v52 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v53) + 0xE8))();

        if (v52)
        {
          swift_beginAccess();
          id v55 = (char *)swift_unknownObjectWeakLoadStrong();
          if (v55)
          {
            double v56 = *(double *)&v55[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight];
          }
          else
          {
            double v56 = 0.0;
          }
          [v52 setContentOffset:0, 0.0, v56];
          goto LABEL_26;
        }
      }
    }
  }
  swift_beginAccess();
  id v57 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v57)
  {
    id v58 = v57;
    (*(void (**)(void))((swift_isaMask & *v57) + 0x250))();
  }
  swift_beginAccess();
  uint64_t v59 = swift_unknownObjectWeakLoadStrong();
  if (!v59)
  {
    swift_unknownObjectRelease();
    return;
  }
  id v60 = (void *)v59;
  id v61 = *(id *)(v59 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options);

  id v62 = [v61 selectedSuggestionId];
  if (!v62)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v12, 1, 1, v49);
    goto LABEL_48;
  }
  id v63 = v62;
  uint64_t v118 = v50;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v64 = v128;
  id v65 = *(void (**)(char *, char *, uint64_t))(v128 + 32);
  v65(v12, v21, v49);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v12, 0, 1, v49);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v12, 1, v49) == 1)
  {
LABEL_48:
    swift_unknownObjectRelease();

    outlined destroy of Any?((uint64_t)v12, &demangling cache variable for type metadata for UUID?);
    return;
  }
  id v66 = v127;
  v65(v127, v12, v49);
  swift_beginAccess();
  uint64_t v67 = swift_unknownObjectWeakLoadStrong();
  if (v67)
  {
    uint64_t v68 = (char *)v67;
    id v69 = MOSuggestionSheetOptions.copyWithoutSuggestionID.getter();
    uint64_t v70 = *(void **)&v68[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options];
    *(void *)&v68[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options] = v69;
  }
  swift_beginAccess();
  NSString v71 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v73 = v125;
  uint64_t v72 = v126;
  uint64_t v74 = v118;
  id v117 = v61;
  if (!v71 || (unint64_t v75 = v71, v76 = (*(uint64_t (**)(void))((swift_isaMask & *v71) + 0x100))(), v75, !v76))
  {
    uint64_t v77 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v124, 1, 1, v73);
    uint64_t v79 = v128;
    goto LABEL_50;
  }
  uint64_t v77 = (uint64_t)v124;
  (*(void (**)(char *))(*(void *)v76 + 672))(v66);
  swift_release();
  int v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v77, 1, v73);
  uint64_t v79 = v128;
  if (v78 == 1)
  {
LABEL_50:
    outlined destroy of Any?(v77, &demangling cache variable for type metadata for IndexPath?);
    goto LABEL_51;
  }
  uint64_t v80 = v122;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v122, v77, v73);
  swift_beginAccess();
  Swift::String v81 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v81
    && (NSString v82 = v81, v83 = (*(uint64_t (**)(void))((swift_isaMask & *v81) + 0x100))(), v82, v83)
    && (uint64_t v84 = (*(uint64_t (**)(uint64_t))(*(void *)v83 + 688))(v80), swift_release(), v84))
  {
    swift_beginAccess();
    NSString v85 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v85)
    {
      uint64_t v86 = v85;
      uint64_t v87 = (*(uint64_t (**)(void))((swift_isaMask & *v85) + 0x100))();

      if (v87)
      {
        if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v88 = type metadata accessor for Logger();
        __swift_project_value_buffer(v88, (uint64_t)static MOAngelLogger.shared);
        uint64_t v89 = v120;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v74, v66, v120);
        double v90 = Logger.logObject.getter();
        os_log_type_t v91 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v92 = (uint8_t *)swift_slowAlloc();
          id v124 = (char *)swift_slowAlloc();
          uint64_t v130 = (uint64_t)v124;
          *(_DWORD *)uint64_t v92 = 136315138;
          id v123 = (char *)(v92 + 4);
          uint64_t v93 = UUID.uuidString.getter();
          uint64_t v129 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v93, v94, &v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          id v95 = *(void (**)(char *, uint64_t))(v128 + 8);
          v95(v74, v120);
          _os_log_impl((void *)&_mh_execute_header, v90, v91, "[HandleReviewSuggestion] Found suggestionID=%s, presenting Interstitial", v92, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v110 = v89;
          id v95 = *(void (**)(char *, uint64_t))(v79 + 8);
          v95(v74, v110);
        }

        swift_beginAccess();
        uint64_t v111 = swift_unknownObjectWeakLoadStrong();
        uint64_t v112 = v127;
        uint64_t v113 = v122;
        if (v111)
        {
          id v114 = (void *)v111;
          MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(v84, v122, 1);
        }
        uint64_t v115 = swift_getObjectType();
        char v116 = (*(uint64_t (**)(void))(*(void *)v87 + 424))();
        (*(void (**)(void, uint64_t))(v119 + 8))(v116 & 1, v115);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v113, v125);
        v95(v112, v120);
        return;
      }
    }
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v80, v73);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v80, v73);
  }
LABEL_51:
  id v96 = v123;
  uint64_t v97 = v120;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v98 = type metadata accessor for Logger();
  __swift_project_value_buffer(v98, (uint64_t)static MOAngelLogger.shared);
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v96, v66, v97);
  uint64_t v99 = Logger.logObject.getter();
  os_log_type_t v100 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v99, v100))
  {
    uint64_t v101 = v96;
    uint64_t v102 = (uint8_t *)swift_slowAlloc();
    uint64_t v130 = swift_slowAlloc();
    *(_DWORD *)uint64_t v102 = 136315138;
    uint64_t v103 = UUID.uuidString.getter();
    uint64_t v129 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v103, v104, &v130);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v105 = *(void (**)(char *, uint64_t))(v79 + 8);
    uint64_t v106 = v101;
    uint64_t v97 = v120;
    v105(v106, v120);
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "[HandleReviewSuggestion] Did not find suggestionID=%s, not presenting interstitial", v102, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v105 = *(void (**)(char *, uint64_t))(v79 + 8);
    v105(v96, v97);
  }

  uint64_t v107 = v127;
  uint64_t v108 = UUID.uuidString.getter();
  uint64_t v130 = 6;
  char v131 = 0;
  uint64_t v132 = 0;
  uint64_t v133 = v108;
  uint64_t v134 = v109;
  MONotificationAnalytics.NotificationEngagementEvent.send()();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  v105(v107, v97);
}

id MOSuggestionSheetOptions.copyWithoutSuggestionID.getter()
{
  id v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v1 showCancelButton];
  id v6 = [v1 showBlankEntryButton];
  [v1 peekDetentRatio];
  double v8 = v7;
  id v9 = [v1 presentFullScreen];
  id v10 = [v1 presentationIsAnimated];
  id v11 = [v1 selectedTabIsRecommended];
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v4, 1, 1, v12);
  id v14 = [v1 contentOptions];
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
  }
  id v16 = [objc_allocWithZone((Class)MOSuggestionSheetOptions) initWithShowCancelButton:v5 showBlankEntryButton:v6 peekDetentRatio:v9 presentFullScreen:v10 presentationIsAnimated:v11 selectedTabIsRecommended:isa selectedSuggestionId:v8 contentOptions:v14];

  return v16;
}

void MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x130))(v9);
  uint64_t v44 = v13;
  if (v12)
  {
    uint64_t v14 = v12;
    uint64_t v15 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x118))();
    if (v15)
    {
      int v43 = a3;
      uint64_t v16 = a1;
      uint64_t v17 = (void *)v15;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v3;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
      id v19 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetInterstitialView());
      swift_retain();
      uint64_t v20 = v3;
      uint64_t v42 = v17;
      uint64_t v21 = v17;
      uint64_t v22 = v16;
      uint64_t v23 = v21;
      swift_unknownObjectRetain();
      uint64_t v24 = v44;
      uint64_t v25 = specialized MOSuggestionSheetInterstitialView.init(controller:cellViewModel:presentationDelegate:selectedSuggestion:indexPath:fromNotification:)(v23, v16, v14, v44, (uint64_t)partial apply for implicit closure #2 in implicit closure #1 in MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:), v18, (uint64_t)v11, v43 & 1);

      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      uint64_t v26 = v25;
      id v27 = [v26 view];
      if (v27)
      {
        id v28 = v27;
        [v27 bounds];
        double v30 = v29;
        double v32 = v31;

        BOOL v33 = specialized static MOAngelRootViewController.isLandscape.getter();
        double v34 = *(double *)&static MOAngelRootViewController.LANDSCAPE_WIDTH;
        if (!v33) {
          double v34 = v30;
        }
        [v26 setPreferredContentSize:v34, v32];

        uint64_t v35 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v26) + 0x320))();
        uint64_t v36 = *(void *)(v22 + 16);
        uint64_t v46 = 0;
        unint64_t v47 = 0xE000000000000000;
        uint64_t v37 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v20) + 0x100))(v35);
        if (v37)
        {
          char v38 = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 424))(v37);
          swift_release();
          uint64_t v39 = v38 & 1;
        }
        else
        {
          uint64_t v39 = -1;
        }
        uint64_t v45 = v39;
        v40._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v40);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, unint64_t))((swift_isaMask & *v23) + 0x178))(v36, v46, v47);
        swift_bridgeObjectRelease();
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, void, void, uint64_t, uint64_t))(v24 + 8))(v26, 0, 0, ObjectType, v24);
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t closure #2 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = partial apply for closure #1 in closure #2 in MOSuggestionCollectionView.layoutSubviews();
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_120;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  _sSo21NSAttributedStringKeyaABSHSCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v19);
}

void closure #1 in closure #2 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    id v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xE8))();

    if (v5)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
      uint64_t v6 = type metadata accessor for IndexPath();
      uint64_t v7 = *(void *)(v6 - 8);
      unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001DA0F0;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a2, v6);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v5 reconfigureItemsAtIndexPaths:isa];
    }
  }
}

uint64_t closure #1 in MOSuggestionCollectionView.handlePullToRefreshTrigger()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  unint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = a2;
  aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = a3;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  _sSo21NSAttributedStringKeyaABSHSCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
}

void closure #1 in closure #3 in MOSuggestionCollectionView.layoutSubviews()()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (id v1 = Strong, v2 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x100))(), v1, v2)
    && (char v3 = (*(uint64_t (**)(void))(*(void *)v2 + 576))(), swift_release(), (v3 & 1) == 0))
  {
    swift_beginAccess();
    uint64_t v37 = swift_unknownObjectWeakLoadStrong();
    if (v37)
    {
      char v38 = (void *)v37;
      id v39 = *(id *)(v37 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator);

      [v39 stopAnimating];
    }
    swift_beginAccess();
    uint64_t v40 = swift_unknownObjectWeakLoadStrong();
    if (v40)
    {
      uint64_t v41 = (void *)v40;
      id v42 = *(id *)(v40 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator);

      [v42 setHidden:1];
    }
    swift_beginAccess();
    uint64_t v43 = swift_unknownObjectWeakLoadStrong();
    if (v43)
    {
      uint64_t v44 = (void *)v43;
      id v45 = objc_retain(*(id *)(v43
                              + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel));

      [v45 setHidden:1];
    }
    swift_beginAccess();
    uint64_t v46 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v46)
    {
      unint64_t v47 = v46;
      uint64_t v48 = (*(uint64_t (**)(void))((swift_isaMask & *v46) + 0x178))();
      uint64_t v50 = v49;

      if (v48)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void, uint64_t, uint64_t))(v50 + 8))(0, ObjectType, v50);
        swift_unknownObjectRelease();
      }
    }
    uint64_t v59 = &type metadata for MOMomentsFeatureFlags;
    unint64_t v60 = lazy protocol witness table accessor for type MOMomentsFeatureFlags and conformance MOMomentsFeatureFlags();
    v58[0] = 4;
    char v52 = isFeatureEnabled(_:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    if (v52)
    {
      swift_beginAccess();
      double v53 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v53)
      {
        uint64_t v54 = v53;
        id v55 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v53) + 0xE8))();

        if (v55)
        {
          swift_beginAccess();
          uint64_t v56 = swift_unknownObjectWeakLoadStrong();
          if (v56)
          {
            id v57 = (void *)v56;
            id v36 = *(id *)(v56 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_refresher);
          }
          else
          {
            id v36 = 0;
          }
          [v55 setRefreshControl:v36];

          goto LABEL_26;
        }
      }
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x160))();
      uint64_t v8 = v7;

      if (v6)
      {
        uint64_t v9 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v9, v8);
        swift_unknownObjectRelease();
      }
    }
    swift_beginAccess();
    uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v10) + 0xE8))();

      [v12 reloadData];
    }
    swift_beginAccess();
    uint64_t v13 = swift_unknownObjectWeakLoadStrong();
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      id v15 = *(id *)(v13 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator);

      [v15 startAnimating];
    }
    swift_beginAccess();
    uint64_t v16 = swift_unknownObjectWeakLoadStrong();
    if (v16)
    {
      uint64_t v17 = (void *)v16;
      id v18 = *(id *)(v16 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator);

      [v18 setHidden:0];
    }
    swift_beginAccess();
    uint64_t v19 = swift_unknownObjectWeakLoadStrong();
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      id v21 = objc_retain(*(id *)(v19
                              + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel));

      swift_beginAccess();
      uint64_t v22 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v22 && (v23 = v22, uint64_t v24 = (*(uint64_t (**)(void))((swift_isaMask & *v22) + 0x100))(), v23, v24))
      {
        char v25 = (*(uint64_t (**)(void))(*(void *)v24 + 632))();
        swift_release();
        char v26 = v25 ^ 1;
      }
      else
      {
        char v26 = 1;
      }
      [v21 setHidden:v26 & 1];
    }
    swift_beginAccess();
    id v27 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v27)
    {
      id v28 = v27;
      uint64_t v29 = (*(uint64_t (**)(void))((swift_isaMask & *v27) + 0x178))();
      uint64_t v31 = v30;

      if (v29)
      {
        uint64_t v32 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8))(1, v32, v31);
        swift_unknownObjectRelease();
      }
    }
    uint64_t v59 = &type metadata for MOMomentsFeatureFlags;
    unint64_t v60 = lazy protocol witness table accessor for type MOMomentsFeatureFlags and conformance MOMomentsFeatureFlags();
    v58[0] = 4;
    char v33 = isFeatureEnabled(_:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    if (v33)
    {
      swift_beginAccess();
      double v34 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v34)
      {
        uint64_t v35 = v34;
        id v36 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v34) + 0xE8))();

        if (v36)
        {
          [v36 setRefreshControl:0];
LABEL_26:
        }
      }
    }
  }
}

uint64_t closure #4 in MOSuggestionCollectionView.layoutSubviews()(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x100))();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 720))(result);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall MOSuggestionCollectionView.didChangeSegmentedControlValue(segmentType:scrollToTop:scrollToHeaderOffset:)(MomentsUIService::SegmentType segmentType, Swift::Bool scrollToTop, Swift::Bool scrollToHeaderOffset)
{
  uint64_t v4 = v3;
  uint64_t v7 = segmentType & 1;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.shared);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = (objc_class *)[self mainBundle];
    if (v7)
    {
      unint64_t v22 = 0xE600000000000000;
      uint64_t v13 = 0x746E65636552;
      unint64_t v14 = 0xE600000000000000;
      v15.super.Class isa = v12;
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      uint64_t v18 = 0x746E65636552;
    }
    else
    {
      unint64_t v22 = 0xEB00000000646564;
      uint64_t v13 = 0x6E656D6D6F636552;
      unint64_t v14 = 0xEB00000000646564;
      v15.super.Class isa = v12;
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      uint64_t v18 = 0x6E656D6D6F636552;
    }
    Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, (Swift::String_optional)0, v15, *(Swift::String *)&v16, *(Swift::String *)&v18);

    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19._countAndFlagsBits, (unint64_t)v19._object, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[Bundles] Tab Changed to:%s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v20 = (*(uint64_t (**)(void))(*(void *)static MOSuggestionAssetCacheManager.shared + 296))();
  uint64_t v21 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x100))(v20);
  if (v21)
  {
    (*(void (**)(uint64_t, Swift::Bool, Swift::Bool))(*(void *)v21 + 752))(v7, scrollToTop, scrollToHeaderOffset);
    swift_release();
  }
  if (v7) {
    [*(id *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge) setHidden:1];
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.didPressNewEntryButton()()
{
  id v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))();
  if (v1)
  {
    id v2 = v1;
    (*(void (**)(void))((swift_isaMask & *v1) + 0x160))();
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.refreshCollectionViewSheetBundles()()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x100))();
  if (v1)
  {
    (*(void (**)(uint64_t))(*(void *)v1 + 720))(v1);
    swift_release();
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.showPrivacyBadge()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x118))(v4);
  if (!v7) {
    return;
  }
  v38[0] = v7;
  uint64_t v8 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x100))();
  if (!v8)
  {
LABEL_19:
    id v24 = v38[0];

    return;
  }
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator);
  if (v10)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)v8 + 560);
    uint64_t v12 = swift_retain();
    if ((v11(v12) & 1) != 0 && ((*(uint64_t (**)(void))(*(void *)v9 + 424))() & 1) == 0)
    {
      if (((*(uint64_t (**)(uint64_t))(*(void *)v10 + 272))(1) & 1) == 0)
      {
        id v13 = [self sharedInstance];
        unsigned __int8 v14 = [v13 isOnboarded];

        if (v14)
        {
          NSBundle v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge);
          [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v15 removeFromSuperview];
          double v16 = 26.0;
          if ((*(uint64_t (**)(id))(*(void *)v9 + 552))([v1 addSubview:v15]))
          {
            char v17 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v38[0]) + 0x1B0))();
            double v16 = (*(double (**)(void))((swift_isaMask & *v1) + 0x220))(v17 & 1) + 16.0;
          }
          IndexPath.init(row:section:)();
          uint64_t v18 = (*(uint64_t (**)(char *))(*(void *)v9 + 680))(v6);
          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
          double v19 = 0.0;
          if (v18)
          {
            if ([*(id *)(v18 + 16) interfaceType] == (id)10)
            {
              id v20 = [objc_allocWithZone((Class)UILabel) init];
              id v21 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
              Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

              double v23 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, isa, 100.0);
              swift_release();

              double v19 = v23 + 12.0;
            }
            else
            {
              swift_release();
            }
          }
          char v25 = self;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_1001DA250;
          id v27 = [v15 leadingAnchor];
          id v28 = [v1 leadingAnchor];
          id v29 = [v27 constraintEqualToAnchor:v28 constant:30.0];

          *(void *)(v26 + 32) = v29;
          v38[1] = (id)v26;
          specialized Array._endMutation()();
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
          Class v30 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v25 activateConstraints:v30];

          uint64_t v31 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset;
          *(double *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset) = v16 + v19;
          id v32 = [v15 topAnchor];
          id v33 = [v1 topAnchor];
          id v34 = [v32 constraintEqualToAnchor:v33 constant:*(double *)((char *)v1 + v31)];

          uint64_t v35 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint;
          id v36 = *(void **)((char *)v1
                         + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint);
          *(void *)((char *)v1
                    + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstrauint64_t (*v88)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t (*)(char *, uint64_t, uint64_t), void, void, void, uint64_t, uint64_t, uint64_t, int) = v34;

          id v37 = *(id *)((char *)v1 + v35);
          if (v37) {
            id v37 = [v37 setActive:1];
          }
          (*(void (**)(id))((swift_isaMask & *v15) + 0x90))(v37);
          swift_release();
          swift_release();

          return;
        }
      }
      swift_release();
      swift_release();
      goto LABEL_19;
    }

    swift_release();
  }
  else
  {
  }

  swift_release();
}

Swift::Void __swiftcall MOSuggestionCollectionView.dismissPrivacyBadge()()
{
  [*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge) setHidden:1];
}

Swift::Void __swiftcall MOSuggestionCollectionView.handleContentSizeChanged(contentSize:)(UIContentSizeCategory contentSize)
{
  uint64_t v2 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE8);
  uint64_t v3 = (void *)((uint64_t (*)(UIContentSizeCategory))v2)(contentSize);
  [v3 reloadData];

  uint64_t v4 = (void *)v2();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 collectionViewLayout];

    [v6 invalidateLayout];
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.displayTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  uint64_t v2 = tipType;
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x178))();
  if (v3)
  {
    uint64_t v5 = v4;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, ObjectType, v5);
    uint64_t v3 = swift_unknownObjectRelease();
  }
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xE8))(v3);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [v7 collectionViewLayout];

    [v9 invalidateLayout];
  }
}

Swift::Void __swiftcall MOSuggestionCollectionView.removeTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  uint64_t v2 = tipType;
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x178))();
  if (v3)
  {
    uint64_t v5 = v4;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v2, ObjectType, v5);
    uint64_t v3 = swift_unknownObjectRelease();
  }
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xE8))(v3);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [v7 collectionViewLayout];

    [v9 invalidateLayout];
  }
}

void MOSuggestionCollectionView.init(frame:)()
{
}

id MOSuggestionCollectionView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCollectionView();
  return [super dealloc];
}

uint64_t protocol witness for MOSuggestionSheetSegmentedControlDelegate.didChangeSegmentedControlValue(segmentType:scrollToTop:scrollToHeaderOffset:) in conformance MOSuggestionCollectionView(char a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x238))(a1 & 1);
}

uint64_t protocol witness for MOSuggestionSheetNewEntryButtonDelegate.didPressNewEntryButton() in conformance MOSuggestionCollectionView()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x240))();
}

uint64_t protocol witness for MOSuggestionTipCoordinatorDelegate.displayTip(tipType:) in conformance MOSuggestionCollectionView()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x268))();
}

uint64_t protocol witness for MOSuggestionTipCoordinatorDelegate.removeTip(tipType:) in conformance MOSuggestionCollectionView()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x270))();
}

Swift::Int __swiftcall MOSuggestionCollectionView.collectionView(_:numberOfItemsInSection:)(UICollectionView _, Swift::Int numberOfItemsInSection)
{
  Swift::Int result = (*(uint64_t (**)(Class))((swift_isaMask & *v2) + 0x100))(_.super.super.super.super.isa);
  if (result)
  {
    Swift::Int v5 = (*(uint64_t (**)(Swift::Int))(*(void *)result + 600))(numberOfItemsInSection);
    swift_release();
    return v5;
  }
  return result;
}

id MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IndexPath();
  uint64_t v168 = *(char **)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v169 = v16;
  char v17 = (char *)&v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x100))(v15);
  if (v18)
  {
    uint64_t v170 = v18;
    uint64_t v167 = v14;
    uint64_t v19 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x118))();
    if (v19)
    {
      id v20 = (void *)v19;
      id v165 = v7;
      uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)v170 + 680))(a2);
      if (v21)
      {
        uint64_t v22 = v21;
        id v166 = v20;
        double v23 = *(uint64_t (**)(void))(*(void *)v21 + 152);
        uint64_t v162 = *(void *)v21 + 152;
        id v163 = v23;
        char v24 = v23();
        char v25 = v17;
        uint64_t v26 = v169;
        switch(v24)
        {
          case 1:
            id v164 = v10;
            char v161 = v13;
            NSString v74 = String._bridgeToObjectiveC()();
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
            id v30 = [a1 dequeueReusableCellWithReuseIdentifier:v74 forIndexPath:isa];

            type metadata accessor for MOSuggestionCollectionViewSingleAssetCell();
            uint64_t v76 = (void *)swift_dynamicCastClass();
            if (!v76) {
              goto LABEL_27;
            }
            id v42 = v76;
            id v160 = v30;
            uint64_t v77 = *(void (**)(uint64_t))((swift_isaMask & *v76) + 0xA8);
            uint64_t v78 = swift_retain();
            v77(v78);
            uint64_t v79 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v81 = v167;
            uint64_t v80 = v168;
            Swift::String v158 = (void (*)(char *, uint64_t, uint64_t))*((void *)v168 + 2);
            uint64_t v159 = a2;
            uint64_t v162 = (uint64_t)(v168 + 16);
            v158(v25, a2, v167);
            uint64_t v82 = v80[80];
            uint64_t v83 = (v82 + 32) & ~v82;
            unint64_t v84 = (v26 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v156 = v82;
            Swift::String v157 = (void (*)(char *, uint64_t, uint64_t))(v82 | 7);
            uint64_t v85 = swift_allocObject();
            *(void *)(v85 + 16) = v79;
            *(void *)(v85 + 24) = v22;
            uint64_t v86 = (void (*)(char *, char *, uint64_t))*((void *)v80 + 4);
            uint64_t v168 = v25;
            Swift::String v155 = v86;
            v86((char *)(v85 + v83), v25, v81);
            id v87 = v166;
            *(void *)(v85 + v84) = v166;
            uint64_t v88 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v42) + 0x90);
            id v163 = (uint64_t (*)(void))v22;
            swift_retain();
            id v89 = v87;
            swift_retain();
            v88(partial apply for closure #5 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), v85);
            uint64_t v90 = swift_release();
            if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v42) + 0xA0))(v90))
            {
              uint64_t v91 = v156;
              uint64_t v92 = v168;
              v158(v168, v159, v81);
              uint64_t v93 = (char *)swift_allocObject();
              *((void *)v93 + 2) = v42;
              *((void *)v93 + 3) = v89;
              *((void *)v93 + 4) = v170;
              v155(&v93[(v91 + 40) & ~v91], v92, v81);
              id v94 = v89;
              swift_retain();
              id v95 = v160;
              uint64_t v96 = MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(1, 4, MomentsUIService_SuggestionCellStyle_halfWidth, 0, (uint64_t)partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), (uint64_t)v93);
              swift_release();
              swift_release();
              uint64_t v97 = type metadata accessor for URL();
              uint64_t v98 = (uint64_t)v161;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v161, 1, 1, v97);
              uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
              uint64_t v100 = (uint64_t)v164;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v164, 1, 1, v99);
              long long v171 = 0u;
              long long v172 = 0u;
              char v173 = 1;
              uint64_t v101 = type metadata accessor for Date();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v165, 1, 1, v101);
              type metadata accessor for MOSuggestionSheetAssetViewModel(0);
              swift_allocObject();
              uint64_t v102 = (uint64_t)v163;
              swift_retain();
              uint64_t v103 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v102, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, v98, 0, 0, 0, 0xE000000000000000, 0,
                       0xE000000000000000,
                       0,
                       0xE000000000000000,
                       0,
                       0,
                       0,
                       0xE000000000000000,
                       0,
                       0xE000000000000000,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0xE000000000000000,
                       v100,
                       0,
                       0xE000000000000000,
                       0,
                       0,
                       0,
                       0xE000000000000000,
                       0,
                       0xE000000000000000,
                       0,
                       (uint64_t)&v171,
                       (uint64_t)&v171,
                       (uint64_t)&v171,
                       11,
                       0,
                       0,
                       0,
                       0,
                       0,
                       1,
                       1,
                       0,
                       0,
                       0xE000000000000000,
                       1,
                       0,
                       0xE000000000000000,
                       0);
              specialized Array.init(repeating:count:)((uint64_t)v103, v96);
              (*(void (**)(void))((swift_isaMask & *v42) + 0xF0))();
              swift_bridgeObjectRelease();
              goto LABEL_26;
            }
            swift_release();

            goto LABEL_32;
          case 2:
            id v164 = v10;
            char v161 = v13;
            NSString v104 = String._bridgeToObjectiveC()();
            Class v105 = IndexPath._bridgeToObjectiveC()().super.isa;
            id v30 = [a1 dequeueReusableCellWithReuseIdentifier:v104 forIndexPath:v105];

            type metadata accessor for MOSuggestionCollectionViewListCell();
            uint64_t v106 = (void *)swift_dynamicCastClass();
            if (!v106) {
              goto LABEL_27;
            }
            id v42 = v106;
            id v160 = v30;
            uint64_t v107 = *(void (**)(uint64_t))((swift_isaMask & *v106) + 0x110);
            uint64_t v108 = swift_retain();
            v107(v108);
            uint64_t v109 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v110 = v167;
            uint64_t v111 = v168;
            uint64_t v112 = (void (*)(char *, uint64_t, uint64_t))*((void *)v168 + 2);
            Swift::String v158 = (void (*)(char *, uint64_t, uint64_t))(v168 + 16);
            uint64_t v159 = a2;
            Swift::String v157 = v112;
            v112(v25, a2, v167);
            unint64_t v113 = v111[80];
            uint64_t v114 = (v113 + 32) & ~v113;
            unint64_t v115 = (v26 + v114 + 7) & 0xFFFFFFFFFFFFFFF8;
            Swift::String v155 = (void (*)(char *, char *, uint64_t))v113;
            uint64_t v156 = v113 | 7;
            uint64_t v116 = swift_allocObject();
            *(void *)(v116 + 16) = v109;
            *(void *)(v116 + 24) = v22;
            id v117 = (void (*)(char *, char *, uint64_t))*((void *)v111 + 4);
            uint64_t v168 = v111 + 32;
            Swift::String v154 = v117;
            v117((char *)(v116 + v114), v25, v110);
            id v118 = v166;
            *(void *)(v116 + v115) = v166;
            uint64_t v119 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v42) + 0xF0);
            swift_retain();
            id v120 = v118;
            swift_retain();
            v119(partial apply for closure #5 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), v116);
            swift_release();
            (*(void (**)(void))(*(void *)v22 + 304))(0);
            uint64_t v121 = type metadata accessor for URL();
            uint64_t v122 = (uint64_t)v161;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v161, 1, 1, v121);
            uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
            uint64_t v124 = (uint64_t)v164;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v164, 1, 1, v123);
            long long v171 = 0u;
            long long v172 = 0u;
            char v173 = 1;
            uint64_t v125 = type metadata accessor for Date();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v165, 1, 1, v125);
            type metadata accessor for MOSuggestionSheetAssetViewModel(0);
            swift_allocObject();
            swift_retain();
            uint64_t v126 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v22, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, v122, 0, 0, 0, 0xE000000000000000, 0,
                     0xE000000000000000,
                     0,
                     0xE000000000000000,
                     0,
                     0,
                     0,
                     0xE000000000000000,
                     0,
                     0xE000000000000000,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0xE000000000000000,
                     v124,
                     0,
                     0xE000000000000000,
                     0,
                     0,
                     0,
                     0xE000000000000000,
                     0,
                     0xE000000000000000,
                     0,
                     (uint64_t)&v171,
                     (uint64_t)&v171,
                     (uint64_t)&v171,
                     11,
                     0,
                     0,
                     0,
                     0,
                     0,
                     1,
                     1,
                     0,
                     0,
                     0xE000000000000000,
                     1,
                     0,
                     0xE000000000000000,
                     0);
            (*(void (**)(void *))((swift_isaMask & *v42) + 0x170))(v126);
            uint64_t v127 = swift_release();
            if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v42) + 0x108))(v127))
            {
              uint64_t v128 = v120;
              unint64_t v129 = (unint64_t)v155;
              char v130 = v163();
              uint64_t v131 = v167;
              v157(v25, v159, v167);
              uint64_t v132 = (v129 + 48) & ~v129;
              uint64_t v133 = (char *)swift_allocObject();
              *((void *)v133 + 2) = v42;
              *((void *)v133 + 3) = v22;
              uint64_t v134 = v170;
              *((void *)v133 + 4) = v128;
              *((void *)v133 + 5) = v134;
              v154(&v133[v132], v25, v131);
              swift_retain();
              id v94 = v128;
              swift_retain();
              id v135 = v160;
              MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(1, 1, v130, (uint64_t)partial apply for closure #6 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), (uint64_t)v133);
              swift_release();
              goto LABEL_25;
            }
            swift_release();

            goto LABEL_32;
          case 3:
            NSString v136 = String._bridgeToObjectiveC()();
            uint64_t v137 = a2;
            Class v138 = IndexPath._bridgeToObjectiveC()().super.isa;
            id v30 = [a1 dequeueReusableCellWithReuseIdentifier:v136 forIndexPath:v138];

            type metadata accessor for MOSuggestionEvergreenCollectionViewCell();
            id v139 = (void *)swift_dynamicCastClass();
            if (!v139) {
              goto LABEL_27;
            }
            id v42 = v139;
            uint64_t v140 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v139) + 0xA0);
            uint64_t v141 = swift_retain();
            uint64_t v142 = v140(v141);
            if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v42) + 0x98))(v142))
            {
              id v143 = v168;
              id v144 = (void (*)(char *, uint64_t, uint64_t))*((void *)v168 + 2);
              id v160 = v30;
              uint64_t v145 = v167;
              v144(v25, v137, v167);
              unint64_t v146 = (v143[80] + 48) & ~(unint64_t)v143[80];
              id v147 = (char *)swift_allocObject();
              *((void *)v147 + 2) = v42;
              *((void *)v147 + 3) = v22;
              id v148 = v166;
              uint64_t v149 = v170;
              *((void *)v147 + 4) = v166;
              *((void *)v147 + 5) = v149;
              (*((void (**)(char *, char *, uint64_t))v143 + 4))(&v147[v146], v25, v145);
              swift_retain();
              id v94 = v148;
              swift_retain();
              id v150 = v160;
              MOSuggestionCollectionViewCellViewModel.fetchAssetsForBundle(previewOnly:previewMax:style:completionHandler:)(1, 5, 1, (uint64_t)partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), (uint64_t)v147);
              swift_release();
LABEL_25:
              swift_release();
LABEL_26:
              swift_release();
            }
            else
            {
              swift_release();
            }
            goto LABEL_32;
          default:
            id v164 = v10;
            NSString v27 = String._bridgeToObjectiveC()();
            uint64_t v28 = a2;
            Class v29 = IndexPath._bridgeToObjectiveC()().super.isa;
            id v30 = [a1 dequeueReusableCellWithReuseIdentifier:v27 forIndexPath:v29];

            type metadata accessor for MOSuggestionCollectionViewCell();
            uint64_t v31 = (void *)swift_dynamicCastClass();
            if (v31)
            {
              id v32 = v31;
              id v160 = v30;
              char v161 = v13;
              id v33 = *(void (**)(uint64_t))((swift_isaMask & *v31) + 0x100);
              uint64_t v34 = swift_retain();
              v33(v34);
              uint64_t v35 = swift_allocObject();
              swift_unknownObjectWeakInit();
              id v36 = v25;
              uint64_t v37 = v167;
              char v38 = v168;
              id v39 = (void (*)(char *, uint64_t, uint64_t))*((void *)v168 + 2);
              uint64_t v162 = (uint64_t)(v168 + 16);
              Swift::String v158 = v39;
              v39(v36, a2, v167);
              uint64_t v40 = v38[80];
              uint64_t v41 = (v40 + 32) & ~v40;
              id v42 = v32;
              uint64_t v159 = v28;
              uint64_t v43 = (uint64_t (*)(void))v22;
              unint64_t v44 = (v169 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v156 = v40;
              Swift::String v157 = (void (*)(char *, uint64_t, uint64_t))(v40 | 7);
              uint64_t v45 = swift_allocObject();
              *(void *)(v45 + 16) = v35;
              *(void *)(v45 + 24) = v43;
              uint64_t v46 = (void (*)(char *, char *, uint64_t))*((void *)v38 + 4);
              uint64_t v168 = v36;
              Swift::String v155 = v46;
              v46((char *)(v45 + v41), v36, v37);
              id v47 = v166;
              *(void *)(v45 + v44) = v166;
              uint64_t v48 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v42) + 0xB8);
              swift_retain();
              swift_retain();
              id v49 = v47;
              v48(partial apply for closure #5 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), v45);
              swift_release();
              uint64_t v50 = (*(uint64_t (**)(void))(*(void *)v43 + 304))(0);
              if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v42) + 0xF8))(v50))
              {
                id v51 = v42;
                char v52 = v49;
                uint64_t v53 = v156;
                char v54 = (*(uint64_t (**)(void))(*(void *)v43 + 400))();
                id v55 = v168;
                id v163 = v43;
                uint64_t v56 = v167;
                v158(v168, v159, v167);
                uint64_t v57 = (v53 + 40) & ~v53;
                id v58 = (char *)swift_allocObject();
                *((void *)v58 + 2) = v51;
                *((void *)v58 + 3) = v52;
                *((void *)v58 + 4) = v170;
                v155(&v58[v57], v55, v56);
                id v59 = v52;
                id v42 = v51;
                id v60 = v59;
                id v61 = v160;
                swift_retain();
                if (v54) {
                  MomentsUIService::SuggestionCellStyle v62 = MomentsUIService_SuggestionCellStyle_fullWidthCondensed;
                }
                else {
                  MomentsUIService::SuggestionCellStyle v62 = MomentsUIService_SuggestionCellStyle_fullWidth;
                }
                uint64_t v63 = MOSuggestionCollectionViewCellViewModel.fetchAssetsWithPlaceHolderSingleResult(previewOnly:previewMax:style:typeSorted:completionHandler:)(1, 5, v62, 0, (uint64_t)partial apply for closure #2 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:), (uint64_t)v58);
                swift_release();
                swift_release();
                uint64_t v64 = type metadata accessor for URL();
                uint64_t v65 = (uint64_t)v161;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v161, 1, 1, v64);
                uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
                uint64_t v67 = (uint64_t)v164;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v164, 1, 1, v66);
                long long v171 = 0u;
                long long v172 = 0u;
                char v173 = 1;
                uint64_t v68 = type metadata accessor for Date();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v165, 1, 1, v68);
                type metadata accessor for MOSuggestionSheetAssetViewModel(0);
                swift_allocObject();
                uint64_t v69 = (uint64_t)v163;
                swift_retain();
                uint64_t v70 = MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, v69, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, v65, 0, 0, 0, 0xE000000000000000, 0,
                        0xE000000000000000,
                        0,
                        0xE000000000000000,
                        0,
                        0,
                        0,
                        0xE000000000000000,
                        0,
                        0xE000000000000000,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0xE000000000000000,
                        v67,
                        0,
                        0xE000000000000000,
                        0,
                        0,
                        0,
                        0xE000000000000000,
                        0,
                        0xE000000000000000,
                        0,
                        (uint64_t)&v171,
                        (uint64_t)&v171,
                        (uint64_t)&v171,
                        11,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        1,
                        0,
                        0,
                        0xE000000000000000,
                        1,
                        0,
                        0xE000000000000000,
                        0);
                uint64_t v71 = specialized Array.init(repeating:count:)((uint64_t)v70, v63);
                (*(void (**)(uint64_t))((swift_isaMask & *v42) + 0x170))(v71);
                swift_bridgeObjectRelease();
                swift_release();
              }
              else
              {
                swift_release();
              }
LABEL_32:
              swift_release();
              id result = v42;
            }
            else
            {
LABEL_27:
              id v151 = v166;

              id v152 = [objc_allocWithZone((Class)UICollectionViewCell) init];
              swift_release();

              swift_release();
              id result = v152;
            }
            break;
        }
        return result;
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  id v72 = objc_allocWithZone((Class)UICollectionViewCell);

  return [v72 init];
}

uint64_t MOSuggestionCollectionView.collectionViewHandleSuggestionSelection(indexPath:interactionState:)(uint64_t a1, char a2)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x130))();
  if (result)
  {
    uint64_t v7 = a2 & 1;
    if (v7)
    {
      uint64_t v8 = v6;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v8 + 40))(ObjectType, v8);
    }
    uint64_t v10 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100))();
    if (v10)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 704))(a1, v7);
      swift_release();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t *a1, void *a2, NSObject *a3, uint64_t a4, void *a5)
{
  os_log_t v80 = a3;
  id v81 = a5;
  uint64_t v79 = a4;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v68 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v78 = (char *)v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v68 - v21;
  __chkstk_darwin(v20);
  char v24 = (char *)v68 - v23;
  uint64_t v25 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  outlined init with copy of UUID?((uint64_t)a1 + *(int *)(v25 + 24), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
  }
  uint64_t v77 = v7;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v16);
  uint64_t v27 = *a1;
  if (!*a1) {
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
  }
  NSString v74 = v12;
  unint64_t v75 = v10;
  uint64_t v28 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0xA0);
  uint64_t v29 = (swift_isaMask & *a2) + 160;
  uint64_t v30 = swift_retain();
  uint64_t v72 = v29;
  uint64_t v73 = v28;
  uint64_t v31 = v28(v30);
  if (!v31)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    return swift_release();
  }
  uint64_t v76 = v27;
  uint64_t v32 = v31;
  (*(void (**)(void))(*(void *)v31 + 344))();
  char v33 = static UUID.== infix(_:_:)();
  uint64_t v34 = v22;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v17 + 8);
  v35(v34, v16);
  if ((v33 & 1) == 0 || (uint64_t v71 = v32, *((unsigned char *)a1 + 16) == 1))
  {
    v35(v24, v16);
    swift_release();
    return swift_release();
  }
  uint64_t v70 = v35;
  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *a2) + 0x100))(v76, a1[1]);
  id v36 = *(uint64_t (**)(void))(*(void *)v79 + 424);
  id v37 = *(id *)(v71 + 16);
  char v38 = v36();
  if (v38) {
    uint64_t v39 = 0x746E65636552;
  }
  else {
    uint64_t v39 = 0x6E656D6D6F636552;
  }
  if (v38) {
    unint64_t v40 = 0xE600000000000000;
  }
  else {
    unint64_t v40 = 0xEB00000000646564;
  }
  (*(void (**)(id, uint64_t, unint64_t))((swift_isaMask & (uint64_t)v80->isa) + 0x188))(v37, v39, v40);

  swift_bridgeObjectRelease();
  if (serverManager._connectionListener != (BSServiceConnectionListener *)-1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  os_log_t v80 = (os_log_t)__swift_project_value_buffer(v41, (uint64_t)static MOAngelLogger.ranking);
  id v42 = v81;
  uint64_t v43 = v82;
  unint64_t v44 = *(void (**)(char *, id, uint64_t))(v82 + 16);
  uint64_t v45 = v74;
  uint64_t v46 = v77;
  v44(v74, v81, v77);
  v44(v75, v42, v46);
  id v47 = a2;
  uint64_t v48 = Logger.logObject.getter();
  int v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, (os_log_type_t)v49))
  {
    LODWORD(v79) = v49;
    os_log_t v80 = v48;
    uint64_t v50 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v84 = v69;
    *(_DWORD *)uint64_t v50 = 134218498;
    id v81 = v47;
    v68[1] = v50 + 4;
    uint64_t v51 = IndexPath.row.getter();
    char v52 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v53 = v77;
    v52(v45, v77);
    uint64_t v83 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2048;
    uint64_t v82 = v50 + 14;
    char v54 = v75;
    uint64_t v55 = IndexPath.section.getter();
    v52(v54, v53);
    uint64_t v83 = v55;
    uint64_t v56 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 22) = 2080;
    uint64_t v57 = v73(v56);
    if (v57)
    {
      id v58 = v78;
      (*(void (**)(uint64_t))(*(void *)v57 + 344))(v57);
      swift_release();
      uint64_t v59 = UUID.uuidString.getter();
      unint64_t v61 = v60;
      MomentsUIService::SuggestionCellStyle v62 = v58;
      uint64_t v63 = (uint64_t (*)(char *, uint64_t))v70;
      v70(v62, v16);
    }
    else
    {
      unint64_t v61 = 0xE300000000000000;
      uint64_t v59 = 7104878;
      uint64_t v63 = (uint64_t (*)(char *, uint64_t))v70;
    }
    uint64_t v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, &v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v66 = v81;

    swift_bridgeObjectRelease();
    os_log_t v67 = v80;
    _os_log_impl((void *)&_mh_execute_header, v80, (os_log_type_t)v79, "(collectionView) layout cell %ld, %ld, bundleId=%s", (uint8_t *)v50, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_release();
    return v63(v24, v16);
  }
  else
  {
    uint64_t v64 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v65 = v77;
    v64(v75, v77);
    v64(v45, v65);

    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v70)(v24, v16);
  }
}

uint64_t closure #6 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v79 = a5;
  uint64_t v80 = a7;
  uint64_t v78 = a6;
  uint64_t v86 = a4;
  uint64_t v88 = a2;
  uint64_t v9 = type metadata accessor for IndexPath();
  Class isa = v9[-1].isa;
  os_log_t v85 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v83 = &v71[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v82 = &v71[-v12];
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  id v81 = &v71[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v18 = &v71[-v17];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  __chkstk_darwin(v19);
  uint64_t v21 = &v71[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = &v71[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = &v71[-v27];
  uint64_t result = __chkstk_darwin(v26);
  uint64_t v31 = &v71[-v30];
  uint64_t v87 = a1;
  if (!a1) {
    return result;
  }
  uint64_t v32 = (swift_isaMask & *a3) + 264;
  uint64_t v76 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a3) + 0x108);
  uint64_t v77 = a3;
  uint64_t v75 = v32;
  uint64_t v33 = v76(result);
  if (v33)
  {
    (*(void (**)(uint64_t))(*(void *)v33 + 344))(v33);
    swift_release();
    uint64_t v34 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v34(v31, 0, 1, v13);
  }
  else
  {
    uint64_t v34 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v34(v31, 1, 1, v13);
  }
  uint64_t v73 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v74 = v14 + 16;
  v73(v28, v88, v13);
  v34(v28, 0, 1, v13);
  uint64_t v35 = (uint64_t)&v21[*(int *)(v19 + 48)];
  outlined init with copy of UUID?((uint64_t)v31, (uint64_t)v21);
  outlined init with copy of UUID?((uint64_t)v28, v35);
  id v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v36((uint64_t)v21, 1, v13) == 1)
  {
    outlined destroy of Any?((uint64_t)v28, &demangling cache variable for type metadata for UUID?);
    outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
    if (v36(v35, 1, v13) == 1)
    {
      uint64_t result = outlined destroy of Any?((uint64_t)v21, &demangling cache variable for type metadata for UUID?);
      uint64_t v37 = v14;
      goto LABEL_12;
    }
    return outlined destroy of Any?((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  }
  outlined init with copy of UUID?((uint64_t)v21, (uint64_t)v25);
  if (v36(v35, 1, v13) == 1)
  {
    outlined destroy of Any?((uint64_t)v28, &demangling cache variable for type metadata for UUID?);
    outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v25, v13);
    return outlined destroy of Any?((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 32))(v18, v35, v13);
  _sSo21NSAttributedStringKeyaABSHSCWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
  int v72 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v38 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
  v38(v18, v13);
  outlined destroy of Any?((uint64_t)v28, &demangling cache variable for type metadata for UUID?);
  outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
  v38(v25, v13);
  uint64_t v37 = v14;
  uint64_t result = outlined destroy of Any?((uint64_t)v21, &demangling cache variable for type metadata for UUID?);
  if ((v72 & 1) == 0) {
    return result;
  }
LABEL_12:
  uint64_t result = v76(result);
  if (!result) {
    return result;
  }
  uint64_t v39 = result;
  unint64_t v40 = *(void **)(v86 + 16);
  id v41 = [v40 interfaceType];
  unint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t, id))(*(void *)v39 + 520))(v87, 2, v41);
  swift_release();
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  Class v44 = isa;
  os_log_t v45 = v85;
  id v47 = v82;
  uint64_t v46 = v83;
  if (!v43) {
    return swift_bridgeObjectRelease();
  }
  if ((v42 & 0xC000000000000001) != 0)
  {
    uint64_t v48 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_19:
    swift_bridgeObjectRelease();
    int v49 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v77) + 0x170);
    uint64_t v87 = v48;
    uint64_t v50 = v49(v48);
    char v51 = (*(uint64_t (**)(uint64_t))(*(void *)v78 + 424))(v50);
    if (v51) {
      uint64_t v52 = 0x746E65636552;
    }
    else {
      uint64_t v52 = 0x6E656D6D6F636552;
    }
    if (v51) {
      unint64_t v53 = 0xE600000000000000;
    }
    else {
      unint64_t v53 = 0xEB00000000646564;
    }
    (*(void (**)(void *, uint64_t, unint64_t))((swift_isaMask & *v79) + 0x188))(v40, v52, v53);
    swift_bridgeObjectRelease();
    if (serverManager._connectionListener == (BSServiceConnectionListener *)-1) {
      goto LABEL_26;
    }
    goto LABEL_35;
  }
  if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v48 = *(void *)(v42 + 32);
    swift_retain();
    goto LABEL_19;
  }
  __break(1u);
LABEL_35:
  swift_once();
LABEL_26:
  uint64_t v54 = type metadata accessor for Logger();
  __swift_project_value_buffer(v54, (uint64_t)static MOAngelLogger.ranking);
  uint64_t v55 = (void (*)(unsigned char *, uint64_t, os_log_t))*((void *)v44 + 2);
  uint64_t v56 = v80;
  v55(v47, v80, v45);
  v55(v46, v56, v45);
  uint64_t v57 = v81;
  v73(v81, v88, v13);
  id v58 = Logger.logObject.getter();
  os_log_type_t v59 = static os_log_type_t.debug.getter();
  int v60 = v59;
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v61 = swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    uint64_t v90 = v88;
    *(_DWORD *)uint64_t v61 = 134218498;
    LODWORD(v86) = v60;
    uint64_t v62 = IndexPath.row.getter();
    uint64_t v63 = (void (*)(unsigned char *, os_log_t))*((void *)v44 + 1);
    v63(v47, v45);
    uint64_t v89 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v61 + 12) = 2048;
    uint64_t v64 = IndexPath.section.getter();
    os_log_t v85 = v58;
    uint64_t v65 = v64;
    v63(v46, v45);
    uint64_t v89 = v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v61 + 22) = 2080;
    _sSo21NSAttributedStringKeyaABSHSCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    id v66 = v81;
    uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v89 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v66, v13);
    os_log_t v69 = v85;
    _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v86, "(collectionView) layout cell %ld, %ld, bundleId=%s", (uint8_t *)v61, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v70 = (void (*)(unsigned char *, os_log_t))*((void *)v44 + 1);
    v70(v46, v45);
    v70(v47, v45);
    (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v57, v13);
  }
  return swift_release();
}

uint64_t closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v88 = a5;
  uint64_t v89 = a7;
  uint64_t v87 = a6;
  uint64_t v95 = a2;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v90 = &v77[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v14 = &v77[-v13];
  uint64_t v94 = type metadata accessor for UUID();
  uint64_t v96 = *(void *)(v94 - 8);
  uint64_t v15 = __chkstk_darwin(v94);
  uint64_t v17 = &v77[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v93 = &v77[-v18];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  __chkstk_darwin(v19);
  uint64_t v21 = &v77[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = &v77[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = &v77[-v27];
  uint64_t result = __chkstk_darwin(v26);
  uint64_t v31 = &v77[-v30];
  uint64_t v86 = a1;
  if (!a1) {
    return result;
  }
  uint64_t v83 = v14;
  uint64_t v84 = v17;
  uint64_t v85 = a4;
  uint64_t v32 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a3) + 0x98);
  uint64_t v33 = a3;
  uint64_t v81 = (swift_isaMask & *a3) + 152;
  uint64_t v82 = v32;
  uint64_t v34 = v32(result);
  if (v34)
  {
    (*(void (**)(uint64_t))(*(void *)v34 + 344))(v34);
    swift_release();
    uint64_t v35 = v96;
    id v36 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v96 + 56);
    uint64_t v37 = v31;
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v35 = v96;
    id v36 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v96 + 56);
    uint64_t v37 = v31;
    uint64_t v38 = 1;
  }
  uint64_t v39 = v94;
  v36(v37, v38, 1, v94);
  uint64_t v79 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v80 = v35 + 16;
  v79(v28, v95, v39);
  v36(v28, 0, 1, v39);
  uint64_t v40 = (uint64_t)&v21[*(int *)(v19 + 48)];
  outlined init with copy of UUID?((uint64_t)v31, (uint64_t)v21);
  outlined init with copy of UUID?((uint64_t)v28, v40);
  id v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v41((uint64_t)v21, 1, v39) != 1)
  {
    outlined init with copy of UUID?((uint64_t)v21, (uint64_t)v25);
    if (v41(v40, 1, v39) != 1)
    {
      uint64_t v46 = v96;
      id v47 = v93;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v96 + 32))(v93, v40, v39);
      _sSo21NSAttributedStringKeyaABSHSCWlTm_0(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v78 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
      v48(v47, v39);
      outlined destroy of Any?((uint64_t)v28, &demangling cache variable for type metadata for UUID?);
      outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
      v48(v25, v39);
      uint64_t result = outlined destroy of Any?((uint64_t)v21, &demangling cache variable for type metadata for UUID?);
      uint64_t v43 = v84;
      uint64_t v42 = v85;
      Class v44 = v83;
      os_log_t v45 = v33;
      if ((v78 & 1) == 0) {
        return result;
      }
      goto LABEL_12;
    }
    outlined destroy of Any?((uint64_t)v28, &demangling cache variable for type metadata for UUID?);
    outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
    (*(void (**)(unsigned char *, uint64_t))(v96 + 8))(v25, v39);
    return outlined destroy of Any?((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  }
  outlined destroy of Any?((uint64_t)v28, &demangling cache variable for type metadata for UUID?);
  outlined destroy of Any?((uint64_t)v31, &demangling cache variable for type metadata for UUID?);
  if (v41(v40, 1, v39) != 1) {
    return outlined destroy of Any?((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  }
  uint64_t result = outlined destroy of Any?((uint64_t)v21, &demangling cache variable for type metadata for UUID?);
  uint64_t v43 = v84;
  uint64_t v42 = v85;
  Class v44 = v83;
  os_log_t v45 = v33;
LABEL_12:
  uint64_t result = v82(result);
  if (result)
  {
    uint64_t v49 = result;
    uint64_t v50 = *(void **)(v42 + 16);
    id v51 = [v50 interfaceType];
    uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t, id))(*(void *)v49 + 520))(v86, 3, v51);
    swift_release();
    unint64_t v53 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v45) + 0xC8);
    uint64_t v93 = (unsigned char *)v52;
    uint64_t v54 = v53(v52);
    char v55 = (*(uint64_t (**)(uint64_t))(*(void *)v87 + 424))(v54);
    if (v55) {
      uint64_t v56 = 0x746E65636552;
    }
    else {
      uint64_t v56 = 0x6E656D6D6F636552;
    }
    if (v55) {
      unint64_t v57 = 0xE600000000000000;
    }
    else {
      unint64_t v57 = 0xEB00000000646564;
    }
    (*(void (**)(void *, uint64_t, unint64_t))((swift_isaMask & *v88) + 0x188))(v50, v56, v57);
    swift_bridgeObjectRelease();
    if (serverManager._connectionListener != (BSServiceConnectionListener *)-1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    __swift_project_value_buffer(v58, (uint64_t)static MOAngelLogger.ranking);
    uint64_t v59 = v91;
    uint64_t v60 = v92;
    uint64_t v61 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v91 + 16);
    uint64_t v62 = v89;
    v61(v44, v89, v92);
    uint64_t v63 = v90;
    v61(v90, v62, v60);
    uint64_t v64 = v94;
    v79(v43, v95, v94);
    uint64_t v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.debug.getter();
    int v67 = v66;
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v68 = swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      uint64_t v98 = v95;
      *(_DWORD *)uint64_t v68 = 134218498;
      os_log_t v69 = v44;
      LODWORD(v89) = v67;
      uint64_t v70 = IndexPath.row.getter();
      uint64_t v71 = *(void (**)(unsigned char *, uint64_t))(v59 + 8);
      v71(v69, v60);
      uint64_t v97 = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v68 + 12) = 2048;
      uint64_t v72 = IndexPath.section.getter();
      v71(v63, v60);
      uint64_t v97 = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v68 + 22) = 2080;
      _sSo21NSAttributedStringKeyaABSHSCWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v73 = v84;
      uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v97 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v74, v75, &v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v96 + 8))(v73, v64);
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v89, "(collectionView) layout cell %ld, %ld, bundleId=%s", (uint8_t *)v68, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v76 = *(void (**)(unsigned char *, uint64_t))(v59 + 8);
      v76(v63, v60);
      v76(v44, v60);
      (*(void (**)(unsigned char *, uint64_t))(v96 + 8))(v43, v64);
    }

    return (*(uint64_t (**)(unsigned char *))(*(void *)v85 + 304))(v93);
  }
  return result;
}

void closure #3 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    (*(void (**)(void))(*(void *)static MOSuggestionAssetCacheManager.shared + 280))(a2[2]);
    uint64_t v9 = IndexPath.row.getter();
    (*(void (**)(uint64_t, void, void, uint64_t, uint64_t))(*a2 + 528))(v9, 0, 0, 1, a4);
    MOSuggestionCollectionView.collectionViewHandleSuggestionSelection(indexPath:interactionState:)(a3, 0);
  }
}

uint64_t closure #2 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t *a1, void *a2, NSObject *a3, uint64_t a4, void *a5)
{
  os_log_t v80 = a3;
  id v81 = a5;
  uint64_t v79 = a4;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v68 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  int v78 = (char *)v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v68 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v68 - v23;
  uint64_t v25 = type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderSingleResult(0);
  outlined init with copy of UUID?((uint64_t)a1 + *(int *)(v25 + 24), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
  }
  uint64_t v77 = v7;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v16);
  uint64_t v27 = *a1;
  if (!*a1) {
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
  }
  uint64_t v74 = v12;
  unint64_t v75 = v10;
  uint64_t v28 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0xF8);
  uint64_t v29 = (swift_isaMask & *a2) + 248;
  uint64_t v30 = swift_retain();
  uint64_t v72 = v29;
  uint64_t v73 = v28;
  uint64_t v31 = v28(v30);
  if (!v31)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    return swift_release();
  }
  uint64_t v76 = v27;
  uint64_t v32 = v31;
  (*(void (**)(void))(*(void *)v31 + 344))();
  char v33 = static UUID.== infix(_:_:)();
  uint64_t v34 = v22;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v17 + 8);
  v35(v34, v16);
  if ((v33 & 1) == 0 || (uint64_t v71 = v32, *((unsigned char *)a1 + 16) == 1))
  {
    v35(v24, v16);
    swift_release();
    return swift_release();
  }
  uint64_t v70 = v35;
  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *a2) + 0x180))(v76, a1[1]);
  id v36 = *(uint64_t (**)(void))(*(void *)v79 + 424);
  id v37 = *(id *)(v71 + 16);
  char v38 = v36();
  if (v38) {
    uint64_t v39 = 0x746E65636552;
  }
  else {
    uint64_t v39 = 0x6E656D6D6F636552;
  }
  if (v38) {
    unint64_t v40 = 0xE600000000000000;
  }
  else {
    unint64_t v40 = 0xEB00000000646564;
  }
  (*(void (**)(id, uint64_t, unint64_t))((swift_isaMask & (uint64_t)v80->isa) + 0x188))(v37, v39, v40);

  swift_bridgeObjectRelease();
  if (serverManager._connectionListener != (BSServiceConnectionListener *)-1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  os_log_t v80 = (os_log_t)__swift_project_value_buffer(v41, (uint64_t)static MOAngelLogger.ranking);
  id v42 = v81;
  uint64_t v43 = v82;
  Class v44 = *(void (**)(char *, id, uint64_t))(v82 + 16);
  os_log_t v45 = v74;
  uint64_t v46 = v77;
  v44(v74, v81, v77);
  v44(v75, v42, v46);
  id v47 = a2;
  uint64_t v48 = Logger.logObject.getter();
  int v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, (os_log_type_t)v49))
  {
    LODWORD(v79) = v49;
    os_log_t v80 = v48;
    uint64_t v50 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v84 = v69;
    *(_DWORD *)uint64_t v50 = 134218498;
    id v81 = v47;
    v68[1] = v50 + 4;
    uint64_t v51 = IndexPath.row.getter();
    uint64_t v52 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v53 = v77;
    v52(v45, v77);
    uint64_t v83 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2048;
    uint64_t v82 = v50 + 14;
    uint64_t v54 = v75;
    uint64_t v55 = IndexPath.section.getter();
    v52(v54, v53);
    uint64_t v83 = v55;
    uint64_t v56 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 22) = 2080;
    uint64_t v57 = v73(v56);
    if (v57)
    {
      uint64_t v58 = v78;
      (*(void (**)(uint64_t))(*(void *)v57 + 344))(v57);
      swift_release();
      uint64_t v59 = UUID.uuidString.getter();
      unint64_t v61 = v60;
      uint64_t v62 = v58;
      uint64_t v63 = (uint64_t (*)(char *, uint64_t))v70;
      v70(v62, v16);
    }
    else
    {
      unint64_t v61 = 0xE300000000000000;
      uint64_t v59 = 7104878;
      uint64_t v63 = (uint64_t (*)(char *, uint64_t))v70;
    }
    uint64_t v83 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, &v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v66 = v81;

    swift_bridgeObjectRelease();
    os_log_t v67 = v80;
    _os_log_impl((void *)&_mh_execute_header, v80, (os_log_type_t)v79, "(collectionView) layout cell %ld, %ld, bundleId=%s", (uint8_t *)v50, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_release();
    return v63(v24, v16);
  }
  else
  {
    uint64_t v64 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v65 = v77;
    v64(v75, v77);
    v64(v45, v65);

    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v70)(v24, v16);
  }
}

Swift::Int __swiftcall MOSuggestionCollectionView.numberOfSections(in:)(UICollectionView in)
{
  uint64_t v2 = (*(uint64_t (**)(Class))((swift_isaMask & *v1) + 0x100))(in.super.super.super.super.isa);
  if (!v2) {
    return 1;
  }
  Swift::Int v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 608))(v2);
  swift_release();
  return v3;
}

void *MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v57)(void *__return_ptr, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  NSString v69;
  NSString v70;
  Class v71;
  uint64_t v72;
  void *v73;
  uint64_t (*v74)(void *);
  void *v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  char v78;
  uint64_t (*v79)(void *, _UNKNOWN **);
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t (*v85)(uint64_t);
  uint64_t v86;
  uint64_t v87;
  unsigned char *v88;
  void (*v89)(uint64_t);
  uint64_t v90;
  id v91;
  char v92;
  NSString v93;
  NSString v94;
  uint64_t v95;
  Class isa;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  void (*v105)(void (*)(), uint64_t);
  void *v106;
  id v107;
  NSString v108;
  NSString v109;
  Class v110;
  id v111;
  id v112;
  uint64_t v113;
  void *v114;
  uint64_t (*v115)(void *, _UNKNOWN **);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t ObjectType;
  char v122;
  uint64_t v123;
  void *v124;
  void *v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, _UNKNOWN **);
  uint64_t v131;
  uint64_t (*v132)(void *);
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(void *__return_ptr, uint64_t);
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t);
  uint64_t v153;
  char v154;
  char v155;
  uint64_t v156;
  unsigned char *v157;
  void *v158;
  void (*v159)(uint64_t);
  uint64_t v160;
  uint64_t (*v161)(uint64_t);
  id v162;
  char v163;
  char *v164;
  id v165;
  id v166;
  id v167;
  NSString v168;
  NSString v169;
  Class v170;
  id v171;
  uint64_t v172;
  void *v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t (*v178)(uint64_t);
  uint64_t v179;
  uint64_t v180;
  unsigned char *v181;
  void (*v182)(uint64_t);
  uint64_t v183;
  id v184;
  NSString v185;
  NSString v186;
  Class v187;
  id v188;
  uint64_t v189;
  void *v190;
  char v191;
  uint64_t *v192;
  char v193;
  uint64_t v194;
  unsigned char *v195;
  void (*v196)(uint64_t);
  uint64_t v197;
  void *v198;
  NSString v199;
  NSString v200;
  Class v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  id v209;
  uint64_t (*v210)(void);
  void *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t (*v216)(void);
  uint64_t v217;
  uint64_t v218;
  void *v219;
  id v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  void *v224;
  void v225[3];
  uint64_t v226;
  _UNKNOWN **v227;
  uint64_t vars8;

  uint64_t v5 = v4;
  v223 = a3;
  id v224 = a2;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v208 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  id v222 = (char *)&v208 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x100))(v13);
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = v15;
  uint64_t v221 = a4;
  uint64_t v17 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x118))();
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    id v220 = a1;
    uint64_t v19 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0x130);
    uint64_t v20 = v19();
    if (!v20)
    {
      swift_release();

      goto LABEL_12;
    }
    id v216 = v19;
    uint64_t v22 = *(uint64_t **)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator);
    if (!v22)
    {
      swift_release();

      swift_unknownObjectRelease();
      goto LABEL_12;
    }
    uint64_t v214 = v21;
    uint64_t v217 = v20;
    id v218 = v16;
    id v219 = v18;
    uint64_t v23 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x160);
    uint64_t v24 = swift_retain();
    uint64_t v25 = v23(v24);
    if (v25)
    {
      uint64_t v27 = v25;
      id v212 = v26;
      uint64_t v215 = v22;
      uint64_t v28 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v223;
      if (v28 == v224 && v29 == v223)
      {
        uint64_t v31 = swift_bridgeObjectRelease();
      }
      else
      {
        char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v31 = swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {
          id v66 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v68 = v219;
          id v213 = v27;
          if (v66 == v224 && v67 == v30)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v92 & 1) == 0)
            {
              id v166 = [objc_allocWithZone((Class)UICollectionReusableView) init];
              swift_release();

              swift_unknownObjectRelease();
              swift_release();
              swift_unknownObjectRelease();
              return v166;
            }
          }
          uint64_t v93 = String._bridgeToObjectiveC()();
          uint64_t v94 = String._bridgeToObjectiveC()();
          uint64_t v95 = v221;
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          uint64_t v97 = v220;
          uint64_t v98 = [v220 dequeueReusableSupplementaryViewOfKind:v93 withReuseIdentifier:v94 forIndexPath:isa];

          type metadata accessor for MOSuggestionShowMoreFooterView();
          id v211 = v98;
          uint64_t v99 = swift_dynamicCastClass();
          uint64_t v100 = v218;
          if (v99)
          {
            uint64_t v101 = (void *)v99;
            (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v208 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v95, v8);
            uint64_t v102 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
            uint64_t v103 = (v10 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
            NSString v104 = swift_allocObject();
            *(void *)(v104 + 16) = v100;
            (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v104 + v102, v11, v8);
            *(void *)(v104 + v103) = v97;
            Class v105 = *(void (**)(void (*)(), uint64_t))((swift_isaMask & *v101) + 0x68);
            uint64_t v106 = v211;
            swift_retain();
            uint64_t v107 = v97;
            v105(partial apply for closure #2 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:), v104);
            swift_unknownObjectRelease();

            swift_release();
            swift_unknownObjectRelease();

            swift_release();
            return v101;
          }
          else
          {
            swift_release();

            swift_unknownObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
            return v211;
          }
        }
      }
      uint64_t v35 = v218;
      if ((*(uint64_t (**)(uint64_t))(*(void *)v218 + 552))(v31))
      {
        id v36 = [self sharedInstance];
        unsigned __int8 v37 = [v36 isOnboarded];

        if ((v37 & 1) == 0)
        {
          uint64_t v69 = String._bridgeToObjectiveC()();
          uint64_t v70 = String._bridgeToObjectiveC()();
          uint64_t v71 = IndexPath._bridgeToObjectiveC()().super.isa;
          uint64_t v63 = [v220 dequeueReusableSupplementaryViewOfKind:v69 withReuseIdentifier:v70 forIndexPath:v71];

          type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView();
          uint64_t v72 = swift_dynamicCastClass();
          if (v72)
          {
            uint64_t v73 = (void *)v72;
            id v213 = v27;
            id v226 = type metadata accessor for MOSuggestionCollectionView();
            uint64_t v227 = &protocol witness table for MOSuggestionCollectionView;
            v225[0] = v5;
            uint64_t v74 = *(uint64_t (**)(void *))((swift_isaMask & *v73) + 0x80);
            id v224 = v63;
            unint64_t v75 = v5;
            uint64_t v76 = v74(v225);
            uint64_t v77 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v219) + 0x1B0);
            int v78 = v77(v76);
            (*(void (**)(void))((swift_isaMask & *v73) + 0xF0))(v78 & 1);
            uint64_t v79 = *(uint64_t (**)(void *, _UNKNOWN **))((swift_isaMask & *v75) + 0x180);
            os_log_t v80 = v224;
            id v81 = v79(v73, &protocol witness table for MOSuggestionCollectionViewOnboardingSectionHeaderView);
            LOBYTE(v75) = v77(v81);
            uint64_t v82 = swift_allocObject();
            uint64_t v83 = v214;
            *(void *)(v82 + 16) = v217;
            *(void *)(v82 + 24) = v83;
            uint64_t v84 = v215;
            uint64_t v85 = *(uint64_t (**)(uint64_t))(*v215 + 144);
            uint64_t v86 = swift_unknownObjectRetain();
            LOBYTE(v85) = v85(v86) & 1;
            type metadata accessor for MOSuggestionSheetOnboardingTipCellModel();
            uint64_t v87 = swift_allocObject();
            *(unsigned char *)(v87 + 33) = 2;
            uint64_t v88 = (unsigned char *)(v87 + 33);
            *(unsigned char *)(v87 + 32) = v75 & 1;
            *(void *)(v87 + 16) = partial apply for implicit closure #8 in implicit closure #7 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:);
            *(void *)(v87 + 24) = v82;
            swift_beginAccess();
            *uint64_t v88 = (_BYTE)v85;
            uint64_t v89 = *(void (**)(uint64_t))((swift_isaMask & *v73) + 0xE0);
            uint64_t v90 = swift_retain();
            v89(v90);
            if ((*(uint64_t (**)(void))(*v84 + 272))(0))
            {
              (*(void (**)(void))((swift_isaMask & *v73) + 0x108))();
              uint64_t v91 = [v220 collectionViewLayout];
              [v91 invalidateLayout];
            }
            swift_unknownObjectRelease();
            swift_release();

            swift_release();
            swift_unknownObjectRelease();

            swift_release();
            return v80;
          }
          else
          {
            swift_release();

            swift_unknownObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
          }
          return v63;
        }
        if (!IndexPath.section.getter())
        {
          uint64_t v108 = String._bridgeToObjectiveC()();
          uint64_t v109 = String._bridgeToObjectiveC()();
          uint64_t v110 = IndexPath._bridgeToObjectiveC()().super.isa;
          uint64_t v111 = v220;
          uint64_t v112 = [v220 dequeueReusableSupplementaryViewOfKind:v108 withReuseIdentifier:v109 forIndexPath:v110];

          type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView();
          unint64_t v113 = swift_dynamicCastClass();
          if (v113)
          {
            uint64_t v114 = (void *)v113;
            unint64_t v115 = *(uint64_t (**)(void *, _UNKNOWN **))((swift_isaMask & *v5) + 0x180);
            id v222 = (char *)v112;
            uint64_t v116 = v115(v114, &protocol witness table for MOSuggestionCollectionViewBlankEntrySectionHeaderView);
            id v117 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x178))(v116);
            if (v117)
            {
              uint64_t v119 = v118;
              id v120 = v27;
              uint64_t ObjectType = swift_getObjectType();
              uint64_t v122 = (*(uint64_t (**)(void))(*(void *)v35 + 576))();
              uint64_t v123 = ObjectType;
              uint64_t v27 = v120;
              (*(void (**)(void, uint64_t, uint64_t))(v119 + 8))(v122 & 1, v123, v119);
              id v117 = swift_unknownObjectRelease();
            }
            uint64_t v124 = v219;
            uint64_t v125 = *(void **)((swift_isaMask & *v219) + 0x1B0);
            v223 = (swift_isaMask & *v219) + 432;
            id v224 = v125;
            uint64_t v126 = ((uint64_t (*)(uint64_t))v125)(v117);
            (*(void (**)(void))((swift_isaMask & *v114) + 0x1B0))(v126 & 1);
            uint64_t v127 = swift_getObjectType();
            uint64_t v128 = (*(uint64_t (**)(uint64_t))(v212 + 24))(v127);
            unint64_t v129 = (*(uint64_t (**)(uint64_t))(*(void *)v35 + 424))(v128) & 1;
            (*(void (**)(uint64_t))((swift_isaMask & *v114) + 0x1C8))(v129);
            char v130 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *v114) + 0xC8);
            uint64_t v131 = swift_unknownObjectRetain();
            v130(v131, &protocol witness table for MOSuggestionCollectionView);
            id v226 = type metadata accessor for MOSuggestionCollectionView();
            uint64_t v227 = &protocol witness table for MOSuggestionCollectionView;
            v225[0] = v5;
            uint64_t v132 = *(uint64_t (**)(void *))((swift_isaMask & *v114) + 0xE0);
            uint64_t v133 = v5;
            uint64_t v134 = v132(v225);
            id v135 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v124) + 0x1D0))(v134);
            id v211 = v114;
            uint64_t v137 = v215;
            if (v136)
            {
              Class v138 = v135;
              id v139 = v136;
              LODWORD(v221) = ((uint64_t (*)(void))v224)();
              uint64_t v140 = (*(uint64_t (**)(void))((swift_isaMask & *v124) + 0x1C8))();
              uint64_t v142 = v141;
              id v143 = swift_allocObject();
              id v144 = v214;
              *(void *)(v143 + 16) = v217;
              *(void *)(v143 + 24) = v144;
              uint64_t v145 = *v137;
              id v213 = v27;
              unint64_t v146 = *(void (**)(void *__return_ptr, uint64_t))(v145 + 168);
              id v147 = swift_unknownObjectRetain();
              v146(v225, v147);
              type metadata accessor for MOSuggestionPrivacyTipCellModel();
              id v148 = swift_allocObject();
              uint64_t v149 = v221 & 1;
              *(_OWORD *)(v148 + 88) = 0u;
              *(unsigned char *)(v148 + 104) = 0;
              *(_OWORD *)(v148 + 72) = 0u;
              *(unsigned char *)(v148 + 32) = v149;
              *(void *)(v148 + 40) = v138;
              *(void *)(v148 + 48) = v139;
              *(void *)(v148 + 56) = v140;
              *(void *)(v148 + 64) = v142;
              *(void *)(v148 + 16) = partial apply for implicit closure #6 in implicit closure #5 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:);
              *(void *)(v148 + 24) = v143;
              swift_beginAccess();
              id v150 = *(void *)(v148 + 72);
              id v151 = *(void *)(v148 + 80);
              outlined init with take of MOSuggestionPrivacyTip?((uint64_t)v225, v148 + 72);
              uint64_t v111 = v220;
              outlined consume of MOSuggestionPrivacyTip?(v150, v151);
              id v152 = *(void (**)(uint64_t))((swift_isaMask & *v211) + 0x158);
              uint64_t v153 = swift_retain();
              v152(v153);
              id v135 = swift_release();
            }
            Swift::String v154 = ((uint64_t (*)(uint64_t))v224)(v135);
            Swift::String v155 = (*(uint64_t (**)(void))(*v137 + 192))() & 1;
            type metadata accessor for MOSuggestionSheetStateOfMindTipCellModel();
            uint64_t v156 = swift_allocObject();
            *(unsigned char *)(v156 + 17) = 2;
            Swift::String v157 = (unsigned char *)(v156 + 17);
            *(unsigned char *)(v156 + 16) = v154 & 1;
            swift_beginAccess();
            *Swift::String v157 = v155;
            Swift::String v158 = v211;
            uint64_t v159 = *(void (**)(uint64_t))((swift_isaMask & *v211) + 0x188);
            id v160 = swift_retain();
            v159(v160);
            char v161 = *(uint64_t (**)(uint64_t))(*v137 + 272);
            uint64_t v63 = v158;
            if (v161(1))
            {
              (*(void (**)(void))((swift_isaMask & *v158) + 0x1C0))();
              uint64_t v162 = [v111 collectionViewLayout];
              [v162 invalidateLayout];
            }
            id v163 = v161(2);
            id v164 = v222;
            if (v163)
            {
              (*(void (**)(void))((swift_isaMask & *v158) + 0x1B8))();
              id v165 = [v111 collectionViewLayout];
              [v165 invalidateLayout];
            }
            swift_unknownObjectRelease();
            swift_release();

            goto LABEL_69;
          }
          goto LABEL_66;
        }
      }
      char v38 = *(uint64_t (**)(void))(*(void *)v35 + 424);
      id v212 = *(void *)v35 + 424;
      if (v38())
      {
LABEL_63:
        id v199 = String._bridgeToObjectiveC()();
        uint64_t v200 = String._bridgeToObjectiveC()();
        int v201 = IndexPath._bridgeToObjectiveC()().super.isa;
        uint64_t v112 = [v220 dequeueReusableSupplementaryViewOfKind:v199 withReuseIdentifier:v200 forIndexPath:v201];

        type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView();
        v202 = swift_dynamicCastClass();
        if (v202)
        {
          uint64_t v63 = (void *)v202;
          id v203 = v112;
          if (v38())
          {
            id v206 = IndexPath.section.getter();
            id v205 = v222;
            (*(void (**)(uint64_t))(*(void *)v35 + 616))(v206);
            id v207 = type metadata accessor for Date();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v207 - 8) + 56))(v205, 0, 1, v207);
          }
          else
          {
            id v204 = type metadata accessor for Date();
            id v205 = v222;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v204 - 8) + 56))(v222, 1, 1, v204);
          }
          (*(void (**)(char *))((swift_isaMask & *v63) + 0x68))(v205);
          swift_unknownObjectRelease();

          goto LABEL_69;
        }
LABEL_66:
        swift_release();

        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        return v112;
      }
      NSString v39 = String._bridgeToObjectiveC()();
      NSString v40 = String._bridgeToObjectiveC()();
      Class v41 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v42 = [v220 dequeueReusableSupplementaryViewOfKind:v39 withReuseIdentifier:v40 forIndexPath:v41];

      type metadata accessor for MOSuggestionPrivacyTipCell();
      uint64_t v43 = (void *)swift_dynamicCastClass();
      uint64_t v210 = v38;
      if (v43)
      {
        id v209 = v42;
        id v211 = v43;
        Class v44 = v219;
        uint64_t v45 = (*(uint64_t (**)(void))((swift_isaMask & *v219) + 0x1D0))();
        if (v46)
        {
          uint64_t v47 = v46;
          v208 = v45;
          uint64_t v48 = v216();
          if (v48)
          {
            uint64_t v50 = v48;
            uint64_t v51 = v49;
            id v213 = v27;
            uint64_t v52 = swift_allocObject();
            *(void *)(v52 + 16) = v50;
            *(void *)(v52 + 24) = v51;
            LODWORD(v216) = (*(uint64_t (**)(void))((swift_isaMask & *v44) + 0x1B0))();
            uint64_t v53 = (*(uint64_t (**)(void))((swift_isaMask & *v44) + 0x1C8))();
            uint64_t v55 = v54;
            uint64_t v56 = v215;
            uint64_t v57 = *(void (**)(void *__return_ptr, uint64_t))(*v215 + 168);
            uint64_t v58 = swift_retain();
            v57(v225, v58);
            type metadata accessor for MOSuggestionPrivacyTipCellModel();
            uint64_t v59 = swift_allocObject();
            unint64_t v60 = v216 & 1;
            *(_OWORD *)(v59 + 88) = 0u;
            *(unsigned char *)(v59 + 104) = 0;
            *(_OWORD *)(v59 + 72) = 0u;
            *(unsigned char *)(v59 + 32) = v60;
            *(void *)(v59 + 40) = v208;
            *(void *)(v59 + 48) = v47;
            *(void *)(v59 + 56) = v53;
            *(void *)(v59 + 64) = v55;
            *(void *)(v59 + 16) = partial apply for implicit closure #6 in implicit closure #5 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:);
            *(void *)(v59 + 24) = v52;
            swift_beginAccess();
            unint64_t v61 = *(void *)(v59 + 72);
            uint64_t v62 = *(void *)(v59 + 80);
            LODWORD(v216) = *(unsigned __int8 *)(v59 + 104);
            outlined init with take of MOSuggestionPrivacyTip?((uint64_t)v225, v59 + 72);
            outlined consume of MOSuggestionPrivacyTip?(v61, v62);
            uint64_t v63 = v211;
            uint64_t v64 = *(void (**)(uint64_t))((swift_isaMask & *v211) + 0x88);
            uint64_t v65 = swift_retain();
            v64(v65);
            if ((*(uint64_t (**)(uint64_t))(*v56 + 272))(1))
            {
              swift_unknownObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              swift_unknownObjectRelease();

LABEL_70:
              swift_release();
              return v63;
            }
            [v63 removeFromSuperview];
            swift_release();
            swift_release();

            uint64_t v27 = v213;
            Class v44 = v219;
            uint64_t v167 = v220;
            goto LABEL_53;
          }

          swift_bridgeObjectRelease();
        }
        else
        {
        }
      }
      else
      {

        Class v44 = v219;
      }
      uint64_t v167 = v220;
LABEL_53:
      uint64_t v168 = String._bridgeToObjectiveC()();
      uint64_t v169 = String._bridgeToObjectiveC()();
      uint64_t v170 = IndexPath._bridgeToObjectiveC()().super.isa;
      long long v171 = [v167 dequeueReusableSupplementaryViewOfKind:v168 withReuseIdentifier:v169 forIndexPath:v170];

      type metadata accessor for MOSuggestionSheetOnboardingTipCell();
      long long v172 = swift_dynamicCastClass();
      if (v172)
      {
        id v213 = v27;
        char v173 = (void *)v172;
        id v174 = (*(uint64_t (**)(void))((swift_isaMask & *v44) + 0x1B0))();
        id v175 = swift_allocObject();
        id v176 = v214;
        *(void *)(v175 + 16) = v217;
        *(void *)(v175 + 24) = v176;
        uint64_t v177 = v215;
        id v178 = *(uint64_t (**)(uint64_t))(*v215 + 144);
        id v179 = swift_unknownObjectRetain();
        LOBYTE(v178) = v178(v179) & 1;
        type metadata accessor for MOSuggestionSheetOnboardingTipCellModel();
        id v180 = swift_allocObject();
        *(unsigned char *)(v180 + 33) = 2;
        uint64_t v181 = (unsigned char *)(v180 + 33);
        *(unsigned char *)(v180 + 32) = v174 & 1;
        *(void *)(v180 + 16) = partial apply for implicit closure #8 in implicit closure #7 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:);
        *(void *)(v180 + 24) = v175;
        swift_beginAccess();
        *uint64_t v181 = (_BYTE)v178;
        id v182 = *(void (**)(uint64_t))((swift_isaMask & *v173) + 0x60);
        id v183 = swift_retain();
        v182(v183);
        if ((*(uint64_t (**)(void))(*v177 + 272))(0))
        {
          double v184 = [v220 collectionViewLayout];
          [v184 invalidateLayout];

          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          swift_unknownObjectRelease();

          swift_release();
          return v173;
        }

        swift_release();
        uint64_t v35 = v218;
        uint64_t v167 = v220;
      }
      else
      {

        uint64_t v35 = v218;
      }
      char v38 = v210;
      id v185 = String._bridgeToObjectiveC()();
      id v186 = String._bridgeToObjectiveC()();
      id v187 = IndexPath._bridgeToObjectiveC()().super.isa;
      Swift::String v188 = [v167 dequeueReusableSupplementaryViewOfKind:v185 withReuseIdentifier:v186 forIndexPath:v187];

      type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
      id v189 = swift_dynamicCastClass();
      if (v189)
      {
        uint64_t v190 = (void *)v189;
        id v191 = (*(uint64_t (**)(void))((swift_isaMask & *v219) + 0x1B0))();
        id v192 = v215;
        id v193 = (*(uint64_t (**)(void))(*v215 + 192))() & 1;
        type metadata accessor for MOSuggestionSheetStateOfMindTipCellModel();
        id v194 = swift_allocObject();
        *(unsigned char *)(v194 + 17) = 2;
        id v195 = (unsigned char *)(v194 + 17);
        *(unsigned char *)(v194 + 16) = v191 & 1;
        swift_beginAccess();
        void *v195 = v193;
        uint64_t v196 = *(void (**)(uint64_t))((swift_isaMask & *v190) + 0x80);
        id v197 = swift_retain();
        v196(v197);
        char v38 = v210;
        LOBYTE(v195) = (*(uint64_t (**)(uint64_t))(*v192 + 272))(2);
        uint64_t v63 = v190;
        swift_release();
        if (v195)
        {
          swift_unknownObjectRelease();
LABEL_69:
          swift_release();
          swift_unknownObjectRelease();

          goto LABEL_70;
        }
      }

      id v198 = *(void **)((char *)v5
                      + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint);
      if (v198) {
        [v198 setConstant:*(double *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset)];
      }
      goto LABEL_63;
    }
    swift_release();

    swift_unknownObjectRelease();
  }
  swift_release();
LABEL_12:
  id v32 = objc_allocWithZone((Class)UICollectionReusableView);

  return [v32 init];
}

void closure #2 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexSet();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = IndexPath.section.getter();
  (*(void (**)(uint64_t))(*(void *)a1 + 824))(v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Int>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001DA0F0;
  *(void *)(v10 + 32) = IndexPath.section.getter();
  v14[1] = v10;
  _sSo21NSAttributedStringKeyaABSHSCWlTm_0(&lazy protocol witness table cache variable for type IndexSet and conformance IndexSet, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Int]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A](&lazy protocol witness table cache variable for type [Int] and conformance [A], &demangling cache variable for type metadata for [Int]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  IndexSet._bridgeToObjectiveC()(v11);
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  [a3 reloadSections:v13];
}

uint64_t MOSuggestionCollectionView.collectionView(_:didSelectItemAt:)(uint64_t a1, uint64_t a2)
{
  return specialized MOSuggestionCollectionView.collectionView(_:didSelectItemAt:)(a2);
}

double MOSuggestionCollectionView.collectionView(_:layout:sizeForItemAt:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x100))();
  if (!v8) {
    return CGSizeZero.width;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 680))(a3);
  if (!v9)
  {
    swift_release();
    return CGSizeZero.width;
  }
  uint64_t v10 = v9;
  self;
  id v11 = (id)swift_dynamicCastObjCClass();
  uint64_t v12 = v11;
  if (v11)
  {
    id v13 = a2;
    [v12 minimumInteritemSpacing];
    double v15 = v14;
    [v12 sectionInset];
    double v17 = v15 + v16;
    id v11 = [v12 sectionInset];
    double v19 = v17 + v18;
  }
  else
  {
    double v19 = 0.0;
  }
  switch((*(unsigned __int8 (**)(id))(*(void *)v10 + 152))(v11))
  {
    case 1u:
      [a1 frame];
      double v26 = (v25 - v19) * 0.5;
      specialized static MOSuggestionCollectionViewCell.calculateLabelHeight(width:)(v26);
      swift_release();

      swift_release();
      double v20 = v26;
      break;
    case 2u:
      [a1 frame];
      double v20 = v27;
      swift_release();

      swift_release();
      break;
    case 3u:
      [a1 frame];
      double v20 = v28 - v19;
      specialized static MOSuggestionEvergreenCollectionViewCell.calculateEvergreenHeight(width:)(v20);
      swift_release();

      swift_release();
      break;
    default:
      [a1 frame];
      double v20 = v21 - v19;
      specialized static MOSuggestionCollectionViewCell.calculateLabelHeight(width:)(v20);
      id v22 = [v4 traitCollection];
      id v23 = [v22 preferredContentSizeCategory];

      char v24 = static UIContentSizeCategory.> infix(_:_:)();
      if ((*(uint64_t (**)(void))(*(void *)v10 + 400))() & 1) != 0 && (v24) {
        (*(uint64_t (**)(void))(*(void *)v10 + 328))();
      }
      if (((*(uint64_t (**)(void))(*(void *)v10 + 320))() & 1) != 0
        && one-time initialization token for LABEL_HEIGHT != -1)
      {
        swift_once();
      }
      swift_release();

      swift_release();
      break;
  }
  return v20;
}

double MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(void *a1, uint64_t a2, uint64_t a3)
{
  return specialized MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(a1, a3);
}

double calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(row:section:)();
  uint64_t v9 = UICollectionElementKindSectionHeader;
  NSString v10 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v12 = [a4 dequeueReusableSupplementaryViewOfKind:v9 withReuseIdentifier:v10 forIndexPath:isa];

  [a4 frame];
  CGFloat Width = CGRectGetWidth(v20);
  LODWORD(v14) = 1148846080;
  LODWORD(v15) = 1112014848;
  [v12 systemLayoutSizeFittingSize:Width withHorizontalFittingPriority:UILayoutFittingExpandedSize.height verticalFittingPriority:v14, v15];
  double v17 = v16;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v17;
}

double MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForFooterInSection:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x100))();
  if (!v6) {
    return CGSizeZero.width;
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)v6 + 656))(a3))
  {
    [a1 frame];
    double width = v7;
  }
  else
  {
    double width = CGSizeZero.width;
  }
  swift_release();
  return width;
}

UIEdgeInsets __swiftcall MOSuggestionCollectionView.collectionView(_:layout:insetForSectionAt:)(UICollectionView _, UICollectionViewLayout layout, Swift::Int insetForSectionAt)
{
  double v3 = specialized MOSuggestionCollectionView.collectionView(_:layout:insetForSectionAt:)(layout.super.isa, insetForSectionAt);
  result.right = v6;
  result.bottom = v5;
  result.left = v4;
  result.top = v3;
  return result;
}

uint64_t MOSuggestionCollectionView.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return specialized MOSuggestionCollectionView.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)(a2, a3, a4);
}

id MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2)
{
  return specialized MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a2);
}

Class closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  double v7 = *(objc_class **)(v6 - 8);
  uint64_t v8 = *((void *)v7 + 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v11 = Strong;
  Class isa = v7;
  id v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x118))();
  if (v12)
  {
    id v13 = v12;
    uint64_t v110 = a4;
    uint64_t v14 = (*(uint64_t (**)(void))((swift_isaMask & *v12) + 0x1C8))();
    uint64_t v16 = v15;
    double v17 = *(uint64_t (**)(void))((swift_isaMask & *v13) + 0x1B0);
    uint64_t v112 = (swift_isaMask & *v13) + 432;
    uint64_t v111 = v17;
    char v18 = v17();
    uint64_t v114 = v11;
    if (v18)
    {
      if (v16)
      {
        id v19 = [self mainBundle];
        v131._uint64_t countAndFlagsBits = 0xD000000000000011;
        v131._id object = (void *)0x80000001001E2560;
        v20._uint64_t countAndFlagsBits = 0xE2206F7420646441;
        v20._id object = (void *)0xAF9D80E240259C80;
        v21._uint64_t countAndFlagsBits = 0;
        v21._id object = (void *)0xE000000000000000;
        uint64_t countAndFlagsBits = (void (*)(char *, uint64_t, uint64_t))NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v131)._countAndFlagsBits;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1001DA0F0;
        *(void *)(v22 + 56) = &type metadata for String;
        *(void *)(v22 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v22 + 32) = v14;
        *(void *)(v22 + 40) = v16;
        id v119 = (id)static String.localizedStringWithFormat(_:_:)();
        id object = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v25 = [self mainBundle];
    v26._id object = (void *)0x80000001001E6E10;
    v132._id object = (void *)0x80000001001E6E10;
    v26._uint64_t countAndFlagsBits = 0xD000000000000010;
    v27._uint64_t countAndFlagsBits = 0;
    v27._id object = (void *)0xE000000000000000;
    v132._uint64_t countAndFlagsBits = 0xD000000000000010;
    Swift::String v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v132);
    id v119 = (id)v28._countAndFlagsBits;
    id object = v28._object;

LABEL_10:
    uint64_t v124 = a3;
    uint64_t v115 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    NSString v29 = String._bridgeToObjectiveC()();
    id v118 = self;
    id v30 = [v118 systemImageNamed:v29];

    swift_beginAccess();
    uint64_t v31 = (void *)swift_unknownObjectWeakLoadStrong();
    Class v32 = isa;
    uint64_t countAndFlagsBits = (void (*)(char *, uint64_t, uint64_t))*((void *)isa + 2);
    id v117 = (char *)isa + 16;
    countAndFlagsBits((char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
    uint64_t v33 = *((unsigned __int8 *)v32 + 80);
    uint64_t v109 = ((v33 + 24) & ~v33) + v8;
    uint64_t v34 = (v33 + 24) & ~v33;
    uint64_t v116 = v33 | 7;
    id v123 = (id)(((v109 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    unint64_t v35 = (v109 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v121 = v34;
    *(void *)&long long v122 = v35;
    uint64_t v36 = swift_allocObject();
    unsigned __int8 v37 = v114;
    *(void *)(v36 + 16) = v114;
    char v38 = (void (*)(uint64_t, char *, uint64_t))*((void *)v32 + 4);
    Class isa = (Class)((char *)v32 + 32);
    id v120 = v38;
    v38(v36 + v34, v9, v6);
    *(void *)(v36 + v35) = v13;
    id v107 = v37;
    uint64_t v108 = v13;
    uint64_t v104 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();

    id v119 = self;
    id v39 = [v119 mainBundle];
    v40._uint64_t countAndFlagsBits = 0xD000000000000014;
    v40._id object = (void *)0x80000001001E2460;
    v133._id object = (void *)0x80000001001E2460;
    v41._uint64_t countAndFlagsBits = 0;
    v41._id object = (void *)0xE000000000000000;
    v133._uint64_t countAndFlagsBits = 0xD000000000000014;
    Swift::String v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v39, v41, v133);
    id object = (id)v42._countAndFlagsBits;
    uint64_t v105 = (uint64_t)v42._object;

    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = v118;
    id v45 = [v118 systemImageNamed:v43];

    uint64_t v46 = v124;
    uint64_t v47 = v9;
    uint64_t v106 = v9;
    countAndFlagsBits(v9, v124, v6);
    uint64_t v48 = swift_allocObject();
    uint64_t v49 = v107;
    *(void *)(v48 + 16) = v107;
    v120(v48 + v121, v47, v6);
    uint64_t v50 = v108;
    *(void *)(v48 + v122) = v108;
    id v107 = v49;
    uint64_t v108 = v50;
    id object = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v51 = [v119 mainBundle];
    v134._id object = (void *)0xED0000746E656D6FLL;
    v52._uint64_t countAndFlagsBits = 0x65766F6D6552;
    v52._id object = (void *)0xE600000000000000;
    v53._uint64_t countAndFlagsBits = 0;
    v53._id object = (void *)0xE000000000000000;
    v134._uint64_t countAndFlagsBits = 0x4D2065766F6D6552;
    uint64_t v105 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)v51, v53, v134)._countAndFlagsBits;

    NSString v54 = String._bridgeToObjectiveC()();
    id v55 = [v44 systemImageNamed:v54];

    uint64_t v56 = v106;
    uint64_t v57 = v6;
    countAndFlagsBits(v106, v46, v6);
    uint64_t v58 = swift_allocObject();
    uint64_t v59 = (void *)v110;
    *(void *)(v58 + 16) = v110;
    unint64_t v60 = v120;
    uint64_t v61 = v121;
    v120(v58 + v121, v56, v57);
    id v62 = v59;
    uint64_t v110 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v63 = [v119 mainBundle];
    v135._id object = (void *)0xE800000000000000;
    v64._uint64_t countAndFlagsBits = 0x6B63616264656546;
    v64._id object = (void *)0xE800000000000000;
    v65._uint64_t countAndFlagsBits = 0;
    v65._id object = (void *)0xE000000000000000;
    v135._uint64_t countAndFlagsBits = 0x6B63616264656546;
    id v119 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v135)._object;

    NSString v66 = String._bridgeToObjectiveC()();
    id v67 = [v118 systemImageNamed:v66];

    countAndFlagsBits(v56, v124, v57);
    uint64_t v68 = swift_allocObject();
    uint64_t v69 = v107;
    *(void *)(v68 + 16) = v107;
    v60(v68 + v61, v56, v57);
    uint64_t v70 = v108;
    *(void *)(v68 + v122) = v108;
    uint64_t v71 = v69;
    id v72 = v70;
    uint64_t v73 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    uint64_t v74 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIMenu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v75 = swift_allocObject();
    long long v122 = xmmword_1001DA250;
    *(_OWORD *)(v75 + 16) = xmmword_1001DA250;
    *(void *)(v75 + 32) = v73;
    UIMenuElementSize v128 = v75;
    specialized Array._endMutation()();
    UIMenuElementSize v76 = v128;
    id v77 = v73;
    v78._uint64_t countAndFlagsBits = 0;
    v78._id object = (void *)0xE000000000000000;
    v129.value.super.Class isa = 0;
    v129.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v78, (Swift::String_optional)0, v129, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v76, v102).super.super.isa;
    uint64_t v79 = v72;
    char v80 = v111();
    uint64_t countAndFlagsBits = (void (*)(char *, uint64_t, uint64_t))v74;
    id v123 = v77;
    if (v80)
    {
      if (one-time initialization token for uiInternalOS != -1) {
        swift_once();
      }
      id v81 = (void *)v110;
      uint64_t v82 = (void *)v104;
      if (static MOAngelControllerWrapper.uiInternalOS != 1)
      {
        uint64_t v89 = swift_allocObject();
        *(_OWORD *)(v89 + 16) = v122;
        *(void *)(v89 + 32) = v82;
        UIMenuElementSize v128 = v89;
        specialized Array._endMutation()();
        UIMenuElementSize v87 = v128;
LABEL_23:
        UIMenuElementSize v128 = v87;
        uint64_t v91 = *(uint64_t (**)(void))((swift_isaMask & *v71) + 0x100);
        id v92 = v82;
        uint64_t v93 = v91();
        if (!v93) {
          goto LABEL_36;
        }
        uint64_t v94 = (*(uint64_t (**)(uint64_t))(*(void *)v93 + 680))(v124);
        uint64_t v95 = swift_release();
        if (!v94) {
          goto LABEL_36;
        }
        if ((*(uint64_t (**)(uint64_t))(*(void *)v94 + 432))(v95))
        {
          swift_bridgeObjectRelease();
          uint64_t v96 = swift_allocObject();
          *(_OWORD *)(v96 + 16) = v122;
          *(void *)(v96 + 32) = v92;
          UIMenuElementSize v127 = v96;
          specialized Array._endMutation()();
          UIMenuElementSize v128 = v127;
          id v97 = v92;
          if (((uint64_t (*)(id))v111)(v97)) {
            goto LABEL_35;
          }
          if (one-time initialization token for uiInternalOS != -1) {
            swift_once();
          }
          if (static MOAngelControllerWrapper.uiInternalOS != 1) {
            goto LABEL_35;
          }
          uint64_t v98 = isa;
        }
        else
        {
          id v99 = v81;
        }
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
LABEL_35:
        swift_release();
LABEL_36:
        v100._uint64_t countAndFlagsBits = 0;
        v100._id object = (void *)0xE000000000000000;
        v130.value.super.Class isa = 0;
        v130.is_nil = 0;
        Class v24 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v100, (Swift::String_optional)0, v130, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v128, (Swift::OpaquePointer)v103.super.super.isa).super.super.isa;

        return v24;
      }
      uint64_t v83 = swift_allocObject();
      *(_OWORD *)(v83 + 16) = xmmword_1001DACA0;
      *(void *)(v83 + 32) = v82;
      Class v84 = isa;
    }
    else
    {
      if (one-time initialization token for uiInternalOS != -1) {
        swift_once();
      }
      id v81 = (void *)v110;
      uint64_t v82 = (void *)v104;
      if (static MOAngelControllerWrapper.uiInternalOS == 1)
      {
        uint64_t v85 = swift_allocObject();
        *(_OWORD *)(v85 + 16) = xmmword_1001DD100;
        Class v84 = (Class)object;
        *(void *)(v85 + 32) = v82;
        *(void *)(v85 + 40) = v84;
        Class v86 = isa;
        *(void *)(v85 + 48) = isa;
        UIMenuElementSize v128 = v85;
        specialized Array._endMutation()();
        UIMenuElementSize v87 = v128;
        uint64_t v88 = v86;
LABEL_22:
        uint64_t v90 = v84;
        goto LABEL_23;
      }
      uint64_t v83 = swift_allocObject();
      *(_OWORD *)(v83 + 16) = xmmword_1001DACA0;
      *(void *)(v83 + 32) = v82;
      Class v84 = (Class)object;
    }
    *(void *)(v83 + 40) = v84;
    UIMenuElementSize v128 = v83;
    specialized Array._endMutation()();
    UIMenuElementSize v87 = v128;
    goto LABEL_22;
  }

  return 0;
}

uint64_t closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0x100))();
  if (result)
  {
    double v7 = (id *)(*(uint64_t (**)(uint64_t))(*(void *)result + 680))(a3);
    uint64_t result = swift_release();
    if (v7)
    {
      uint64_t v8 = IndexPath.row.getter();
      uint64_t v9 = (*((uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))*v7 + 66))(v8, 0, 0, 1, a4);
      (*((void (**)(uint64_t))*v7 + 55))(v9);
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      NSString v10 = *(void (**)(void))(*(void *)static MOSuggestionAssetCacheManager.shared + 280);
      id v11 = v7[2];
      v10();

      MOSuggestionCollectionView.collectionViewHandleSuggestionSelection(indexPath:interactionState:)(a3, 0);
      return swift_release();
    }
  }
  return result;
}

uint64_t closure #2 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0x100))();
  if (result)
  {
    double v7 = (id *)(*(uint64_t (**)(uint64_t))(*(void *)result + 680))(a3);
    uint64_t result = swift_release();
    if (v7)
    {
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      uint64_t v8 = *(void (**)(void))(*(void *)static MOSuggestionAssetCacheManager.shared + 280);
      id v9 = v7[2];
      v8();

      uint64_t v10 = IndexPath.row.getter();
      uint64_t v11 = (*((uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))*v7 + 69))(v10, 0, 0, 1, a4);
      (*((void (**)(uint64_t))*v7 + 55))(v11);
      MOSuggestionCollectionView.collectionViewHandleSuggestionSelection(indexPath:interactionState:)(a3, 1);
      return swift_release();
    }
  }
  return result;
}

void confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x148))(v7);
  if (v9)
  {
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    uint64_t v13 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x118))();
    if (v13)
    {
      NSString v43 = (void *)v13;
      uint64_t v14 = self;
      id v42 = v14;
      id v15 = [v14 mainBundle];
      v54._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
      v16._uint64_t countAndFlagsBits = 0xD000000000000049;
      v54._id object = (void *)0x80000001001E6EA0;
      v16._id object = (void *)0x80000001001E6E50;
      v17._uint64_t countAndFlagsBits = 0;
      v17._id object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v54);
      uint64_t v46 = v12;
      uint64_t v44 = a2;

      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v45 = [self alertControllerWithTitle:0 message:v18 preferredStyle:0];

      id v19 = [v14 mainBundle];
      v55._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      v55._id object = (void *)0x80000001001E6ED0;
      v20._uint64_t countAndFlagsBits = 0x4D2065766F6D6552;
      v20._id object = (void *)0xED0000746E656D6FLL;
      v21._uint64_t countAndFlagsBits = 0;
      v21._id object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v55);

      uint64_t v22 = swift_allocObject();
      swift_unknownObjectWeakInit();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v44, v4);
      uint64_t v23 = *(unsigned __int8 *)(v5 + 80);
      uint64_t v44 = v11;
      uint64_t v24 = (v23 + 24) & ~v23;
      unint64_t v25 = (v6 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v22;
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v26 + v24, v8, v4);
      Swift::String v27 = v43;
      *(void *)(v26 + v25) = v43;
      swift_retain();
      id v28 = v27;
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v51 = partial apply for closure #1 in confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:);
      uint64_t v52 = v26;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v48 = 1107296256;
      uint64_t v49 = thunk for @escaping @callee_guaranteed (@guaranteed UIAlertAction) -> ();
      uint64_t v50 = &block_descriptor_108;
      id v30 = _Block_copy(&aBlock);
      swift_release();
      uint64_t v31 = self;
      id v32 = [v31 actionWithTitle:v29 style:2 handler:v30];
      _Block_release(v30);
      swift_release();

      id v33 = [v42 mainBundle];
      v56._id object = (void *)0x80000001001E6EF0;
      v34._uint64_t countAndFlagsBits = 0x6C65636E6143;
      v34._id object = (void *)0xE600000000000000;
      v35._uint64_t countAndFlagsBits = 0;
      v35._id object = (void *)0xE000000000000000;
      v56._uint64_t countAndFlagsBits = 0xD000000000000013;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v56);

      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v51 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
      uint64_t v52 = 0;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v48 = 1107296256;
      uint64_t v49 = thunk for @escaping @callee_guaranteed (@guaranteed UIAlertAction) -> ();
      uint64_t v50 = &block_descriptor_111;
      unsigned __int8 v37 = _Block_copy(&aBlock);
      swift_release();
      id v38 = [v31 actionWithTitle:v36 style:1 handler:v37];
      _Block_release(v37);

      id v39 = v45;
      [v45 addAction:v32];
      [v39 addAction:v38];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(id, uint64_t))(v46 + 8))(v39, ObjectType);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t closure #4 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0x100))();
  if (result)
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)result + 680))(a3);
    uint64_t result = swift_release();
    if (v7)
    {
      uint64_t v8 = IndexPath.row.getter();
      (*(void (**)(uint64_t, uint64_t))(*(void *)v7 + 536))(v8, a4);
      return swift_release();
    }
  }
  return result;
}

void closure #1 in confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    uint64_t v8 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x100);
    uint64_t v9 = v8();
    if (v9)
    {
      uint64_t v10 = (id *)(*(uint64_t (**)(uint64_t))(*(void *)v9 + 680))(a3);
      swift_release();
      if (v10)
      {
        uint64_t v11 = IndexPath.row.getter();
        uint64_t v12 = (*((uint64_t (**)(uint64_t, uint64_t))*v10 + 68))(v11, a4);
        uint64_t v13 = ((uint64_t (*)(uint64_t))v8)(v12);
        if (v13)
        {
          uint64_t v14 = *(void (**)(void))(*(void *)v13 + 816);
          id v15 = v10[2];
          v14();
          swift_release();
        }
        swift_release();
      }
    }
  }
}

uint64_t MOSuggestionCollectionView.collectionView(_:didEndDisplaying:forItemAt:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return specialized MOSuggestionCollectionView.collectionView(_:didEndDisplaying:forItemAt:)(a3);
}

Swift::Void __swiftcall MOSuggestionCollectionView.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  (*(void (**)(void))((swift_isaMask & *v1) + 0x258))();
}

uint64_t implicit closure #2 in implicit closure #1 in MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(uint64_t a1, char a2, void *a3)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a3) + 0x130))();
  if (result)
  {
    uint64_t v8 = a2 & 1;
    if (v8)
    {
      uint64_t v9 = v7;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 40))(ObjectType, v9);
    }
    uint64_t v11 = (*(uint64_t (**)(void))((swift_isaMask & *a3) + 0x100))();
    if (v11)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 704))(a1, v8);
      swift_release();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

id thunk for @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> (@owned UIMenu?)(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIMenuElement);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  double v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

char *specialized MOSuggestionCollectionView.__allocating_init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  NSString v18 = (char *)objc_allocWithZone((Class)type metadata accessor for MOSuggestionCollectionView());

  return specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(a1, a2, a3, a4, a5, v18, a7, a8, a9, a10, a11, a12);
}

char *specialized MOSuggestionCollectionView.init(controller:presentationDelegate:dialogDelegate:segmentedVisibilityDelegate:options:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)&a6[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView] = 0;
  uint64_t v14 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_onboardingManager;
  id v15 = self;
  Swift::String v16 = a6;
  *(void *)&a6[v14] = [v15 sharedInstance];
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel] = 0;
  uint64_t v17 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_engagementWriter;
  *(void *)&v16[v17] = [self sharedInstance];
  swift_unknownObjectWeakInit();
  NSString v18 = &v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate];
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v19 = &v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate];
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  Swift::String v20 = &v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate];
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v21 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge;
  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  *(void *)&v16[v21] = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionPickerPrivacyBadge()) initWithFrame:CGRectZero.origin.x, y, width, height];
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight] = 0;
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset] = 0;
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint] = 0;
  uint64_t v25 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator;
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator] = 0;
  uint64_t v26 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_refresher;
  *(void *)&v16[v26] = [objc_allocWithZone((Class)UIRefreshControl) init];
  uint64_t v27 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  id v28 = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
  [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v16[v27] = v28;
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield] = 0;
  uint64_t v29 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  closure #1 in variable initialization expression of MOSuggestionCollectionView.supportingLoadingTextLabel();
  *(void *)&v16[v29] = v30;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *((void *)v18 + 1) = a11;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *((void *)v19 + 1) = a10;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *((void *)v20 + 1) = a12;
  swift_unknownObjectWeakAssign();
  *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_options] = a5;
  uint64_t v31 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1D0);
  id v79 = a5;
  uint64_t v32 = v31();
  uint64_t v34 = v33;
  uint64_t v35 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1C8))();
  uint64_t v37 = v36;
  LOBYTE(v27) = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1B0))();
  type metadata accessor for MOSuggestionTipCoordinator();
  swift_allocObject();
  *(void *)&v16[v25] = MOSuggestionTipCoordinator.init(clientId:clientName:isPublicUI:)(v32, v34, v35, v37, v27 & 1);

  swift_release();
  v80.receiver = v16;
  v80.super_class = (Class)type metadata accessor for MOSuggestionCollectionView();
  id v38 = (char *)objc_msgSendSuper2(&v80, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  id v39 = v38;
  uint64_t v40 = *(void *)&v38[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator];
  if (v40)
  {
    uint64_t v41 = *(void (**)(char *, _UNKNOWN **))(*(void *)v40 + 128);
    id v42 = v38;
    swift_retain();
    v41(v39, &protocol witness table for MOSuggestionCollectionView);
    swift_release();
  }
  else
  {
    NSString v43 = v38;
  }
  uint64_t v44 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  id v45 = *(void **)&v39[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator];
  [v39 addSubview:v45];
  uint64_t v46 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  [v39 addSubview:*(void *)&v39[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel]];
  uint64_t v47 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1001DA110;
  id v49 = [v45 centerYAnchor];
  id v50 = [v39 centerYAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50];

  *(void *)(v48 + 32) = v51;
  id v52 = [*(id *)&v39[v44] centerXAnchor];
  id v53 = [v39 centerXAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53];

  *(void *)(v48 + 40) = v54;
  id v55 = [*(id *)&v39[v44] heightAnchor];
  id v56 = [v55 constraintEqualToConstant:50.0];

  *(void *)(v48 + 48) = v56;
  id v57 = [*(id *)&v39[v44] widthAnchor];
  id v58 = [v57 constraintEqualToConstant:50.0];

  *(void *)(v48 + 56) = v58;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v47 activateConstraints:isa];

  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1001DA110;
  id v61 = [*(id *)&v39[v46] topAnchor];
  id v62 = [*(id *)&v39[v44] bottomAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62 constant:2.0];

  *(void *)(v60 + 32) = v63;
  id v64 = [*(id *)&v39[v46] centerXAnchor];
  id v65 = [v39 centerXAnchor];
  id v66 = [v64 constraintEqualToAnchor:v65];

  *(void *)(v60 + 40) = v66;
  id v67 = [*(id *)&v39[v46] leadingAnchor];
  id v68 = [v39 leadingAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68 constant:20.0];

  *(void *)(v60 + 48) = v69;
  id v70 = [*(id *)&v39[v46] trailingAnchor];
  id v71 = [v39 trailingAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71 constant:-20.0];

  *(void *)(v60 + 56) = v72;
  specialized Array._endMutation()();
  Class v73 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v47 activateConstraints:v73];

  uint64_t v74 = *(void **)&v39[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_refresher];
  uint64_t v75 = v39;
  id v76 = v74;
  [v76 addTarget:v75 action:"handlePullToRefreshTrigger" forControlEvents:4096];

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v75;
}

void specialized MOSuggestionCollectionView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_suggestionCollectionView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_onboardingManager;
  *(void *)&v0[v1] = [self sharedInstance];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_viewModel] = 0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_engagementWriter;
  *(void *)&v0[v2] = [self sharedInstance];
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_presentationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_dialogDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_segmentedVisibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_newEntryHeaderDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadge;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionPickerPrivacyBadge()) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator] = 0;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_refresher;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIRefreshControl) init];
  uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_activityIndicator;
  id v6 = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v5] = v6;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_protectedContentShield] = 0;
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_supportingLoadingTextLabel;
  closure #1 in variable initialization expression of MOSuggestionCollectionView.supportingLoadingTextLabel();
  *(void *)&v0[v7] = v8;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionCollectionView()
{
  return self;
}

uint64_t sub_100115CC8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionView.layoutSubviews()(char a1, char a2)
{
  return closure #1 in MOSuggestionCollectionView.layoutSubviews()(a1, a2, v2);
}

uint64_t partial apply for closure #2 in MOSuggestionCollectionView.layoutSubviews()(uint64_t a1)
{
  return closure #2 in MOSuggestionCollectionView.layoutSubviews()(a1, v1);
}

uint64_t partial apply for closure #3 in MOSuggestionCollectionView.layoutSubviews()()
{
  return closure #1 in MOSuggestionCollectionView.handlePullToRefreshTrigger()(v0, (uint64_t)partial apply for closure #1 in closure #3 in MOSuggestionCollectionView.layoutSubviews(), (uint64_t)&block_descriptor_114);
}

uint64_t sub_100115D48()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #4 in MOSuggestionCollectionView.layoutSubviews()()
{
  return closure #4 in MOSuggestionCollectionView.layoutSubviews()(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t partial apply for implicit closure #2 in implicit closure #1 in MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(uint64_t a1, char a2)
{
  return implicit closure #2 in implicit closure #1 in MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(a1, a2 & 1, *(void **)(v2 + 16));
}

uint64_t partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #6 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))closure #6 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:));
}

uint64_t partial apply for closure #7 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v6 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  uint64_t v10 = v3[5];
  uint64_t v11 = (char *)v3 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7, v8, v9, v10, v11);
}

void partial apply for closure #5 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  closure #3 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(*(void *)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1)
{
  return partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:));
}

uint64_t objectdestroy_14Tm_0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t partial apply for closure #2 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1)
{
  return partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))closure #2 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:));
}

uint64_t partial apply for closure #4 in MOSuggestionCollectionView.collectionView(_:cellForItemAt:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (char *)v2 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6, v7, v8);
}

void partial apply for closure #2 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  closure #2 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)(v3, v0 + v2, v4);
}

uint64_t sub_10011631C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for implicit closure #8 in implicit closure #7 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t partial apply for implicit closure #6 in implicit closure #5 in MOSuggestionCollectionView.collectionView(_:viewForSupplementaryElementOfKind:at:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t specialized MOSuggestionCollectionView.collectionView(_:didSelectItemAt:)(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100))();
  if (result)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)result + 680))(a1);
    uint64_t result = swift_release();
    if (v4)
    {
      uint64_t v5 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x118))(result);
      if (v5)
      {
        uint64_t v6 = (void *)v5;
        if ((*(uint64_t (**)(void))(*(void *)v4 + 424))())
        {
          MOSuggestionCollectionView.presentInterstitialFor(cellViewModel:indexPath:fromNotification:)(v4, a1, 0);
        }
        else
        {
          uint64_t v7 = IndexPath.row.getter();
          (*(void (**)(uint64_t, void, void, uint64_t, void *))(*(void *)v4 + 528))(v7, 0, 0, 1, v6);
        }
      }
      return swift_release();
    }
  }
  return result;
}

double specialized MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Tips.Status();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x100))(v11);
  if (!v14) {
    return CGSizeZero.width;
  }
  uint64_t v15 = v14;
  uint64_t v16 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x118))();
  if (!v16)
  {
    swift_release();
    return CGSizeZero.width;
  }
  uint64_t v17 = (void *)v16;
  uint64_t v18 = *(void *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_tipCoordinator);
  if (!v18)
  {
    swift_release();

    return CGSizeZero.width;
  }
  uint64_t v72 = a2;
  Class v73 = v17;
  id v19 = *(uint64_t (**)(uint64_t))(*(void *)v15 + 552);
  uint64_t v74 = v18;
  uint64_t v75 = a1;
  uint64_t v20 = swift_retain();
  char v21 = v19(v20);
  uint64_t v22 = v75;
  if (v21)
  {
    id v23 = [self sharedInstance];
    unsigned __int8 v24 = [v23 isOnboarded];

    if (v24)
    {
      if (v72) {
        goto LABEL_7;
      }
      id v50 = (uint64_t (**)(uint64_t))(*(void *)v74 + 272);
      id v51 = *v50;
      if ((*v50)(1))
      {
        id v52 = v75;
        calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD00000000000001ALL, 0x80000001001E69E0, 0, v75);
        if (v53 >= 100.0) {
          double v54 = v53;
        }
        else {
          double v54 = 200.0;
        }
        id v55 = [v52 frame];
        double v25 = v56;
        id v57 = v73;
        char v58 = (*(uint64_t (**)(id))((swift_isaMask & *v73) + 0x1B0))(v55);
        *(double *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight) = v54 + (*(double (**)(void))((swift_isaMask & *v3) + 0x220))(v58 & 1) + 1.0;
LABEL_39:
        id v64 = *(void **)((char *)v3
                       + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint);
        if (v64)
        {
          double v65 = v54
              + *(double *)((char *)v3
                          + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset);
          id v66 = v64;
          [v66 setConstant:v65];
        }
        swift_release();

        goto LABEL_22;
      }
      if (v51(2))
      {
        uint64_t v59 = v75;
        calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD000000000000023, 0x80000001001E6A30, 0, v75);
        if (v60 >= 100.0) {
          double v54 = v60;
        }
        else {
          double v54 = 200.0;
        }
        id v61 = [v59 frame];
        double v25 = v62;
        id v57 = v73;
        char v63 = (*(uint64_t (**)(id))((swift_isaMask & *v73) + 0x1B0))(v61);
        *(double *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight) = v54 + (*(double (**)(void))((swift_isaMask & *v3) + 0x220))(v63 & 1);
        goto LABEL_39;
      }
      id v67 = [v75 frame];
      double v25 = v68;
      id v69 = v73;
      char v70 = (*(uint64_t (**)(id))((swift_isaMask & *v73) + 0x1B0))(v67);
      double v43 = (*(double (**)(void))((swift_isaMask & *v3) + 0x220))(v70 & 1);
      swift_release();

      swift_release();
    }
    else
    {
      uint64_t v37 = v74;
      char v76 = (*(uint64_t (**)(void))(*(void *)v74 + 144))() & 1;
      lazy protocol witness table accessor for type MOSuggestionOnboardingTip and conformance MOSuggestionOnboardingTip();
      Tip.status.getter();
      uint64_t v38 = enum case for Tips.InvalidationReason.tipClosed(_:);
      uint64_t v39 = type metadata accessor for Tips.InvalidationReason();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v10, v38, v39);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for Tips.Status.invalidated(_:), v6);
      char v40 = static Tips.Status.== infix(_:_:)();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v7 + 8);
      v41(v10, v6);
      v41(v13, v6);
      if ((*(uint64_t (**)(void))(*(void *)v37 + 272))(0))
      {
        calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD000000000000022, 0x80000001001E6A00, v72, v22);
        double v43 = v42 + 68.0;
      }
      else
      {
        double v43 = 68.0;
      }
      id v48 = v73;
      [v22 frame];
      double v25 = v49;
      swift_release();

      swift_release();
      if (v40) {
        double v43 = 68.0;
      }
    }
    *(double *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_headerOffsetHeight) = v43;
    return v25;
  }
LABEL_7:
  if ((*(uint64_t (**)(void))(*(void *)v15 + 624))())
  {
    double v25 = calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD00000000000002FLL, 0x80000001001E69B0, v72, v22);
    id v26 = [objc_allocWithZone((Class)UILabel) init];
    [v3 frame];
    double Width = CGRectGetWidth(v77);
    id v28 = [self preferredFontForTextStyle:UIFontTextStyleTitle3];
    Class isa = UIFont.withWeight(_:)(UIFontWeightRegular).super.isa;

    [(objc_class *)isa pointSize];
    double v31 = v30;

    specialized UILabel.estimatedHeight(forWidth:text:ofSize:weight:)(0, 0xE000000000000000, Width, v31, UIFontWeightBold);
LABEL_21:
    swift_release();

LABEL_22:
    swift_release();
    return v25;
  }
  uint64_t v33 = (uint64_t (**)(uint64_t))(*(void *)v74 + 272);
  uint64_t v34 = *v33;
  if ((*v33)(1))
  {
    uint64_t v35 = 0x80000001001E69E0;
    uint64_t v36 = 0xD00000000000001ALL;
    goto LABEL_19;
  }
  if (v34(2))
  {
    uint64_t v36 = 0xD000000000000023;
    uint64_t v35 = 0x80000001001E6A30;
LABEL_19:
    double v25 = calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(v36, v35, v72, v22);
    id v45 = *(void **)((char *)v3
                   + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_privacyBadgeTopConstraint);
    if (v45)
    {
      double v46 = v44
          + *(double *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionCollectionView_currentBadgeOffset);
      id v47 = v45;
      [v47 setConstant:v46];
    }
    goto LABEL_21;
  }
  if (v34(0)) {
    double v25 = calculateHeaderSize #1 (reuseIdentifier:padding:) in MOSuggestionCollectionView.collectionView(_:layout:referenceSizeForHeaderInSection:)(0xD000000000000022, 0x80000001001E6A00, v72, v22);
  }
  else {
    double v25 = CGSizeZero.width;
  }
  swift_release();

  swift_release();
  return v25;
}

double specialized MOSuggestionCollectionView.collectionView(_:layout:insetForSectionAt:)(void *a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100))();
  if (!v5) {
    return UIEdgeInsetsZero.top;
  }
  uint64_t v6 = v5;
  self;
  id v7 = (id)swift_dynamicCastObjCClass();
  uint64_t v8 = v7;
  if (v7) {
    id v7 = a1;
  }
  uint64_t v9 = (uint64_t (**)(void))(*(void *)v6 + 424);
  uint64_t v10 = *v9;
  if ((((uint64_t (*)(id))*v9)(v7) & 1) != 0
    && ((*(uint64_t (**)(void))(*(void *)v6 + 552))() & 1) != 0
    && !a2)
  {
    swift_release();

    return 0.0;
  }
  else if (v8)
  {
    id v12 = v8;
    if (v10())
    {
      (*(void (**)(uint64_t))(*(void *)v6 + 656))(a2);
      [v12 sectionInset];
      double top = v14;
      [v12 sectionInset];
      [v12 sectionInset];

      swift_release();
    }
    else
    {
      [v12 sectionInset];
      double top = v13;
      swift_release();
    }
  }
  else
  {
    double top = UIEdgeInsetsZero.top;
    swift_release();
  }
  return top;
}

uint64_t specialized MOSuggestionCollectionView.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x100))();
  if (!result) {
    return result;
  }
  uint64_t v8 = result;
  if (!(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x160))()) {
    goto LABEL_17;
  }
  uint64_t v10 = v9;
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v11 == a3)
  {
    uint64_t v14 = swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v14 = swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)v8 + 552))(v14) & 1) == 0)
  {
LABEL_16:
    swift_unknownObjectRelease();
LABEL_17:
    return swift_release();
  }
  type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView();
  if (swift_dynamicCastClass())
  {
    uint64_t v15 = *(uint64_t (**)(void))(*(void *)v8 + 576);
    id v16 = a1;
    if ((v15() & 1) == 0)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v18 = (*(uint64_t (**)(void))(*(void *)v8 + 424))();
      (*(void (**)(void, uint64_t, uint64_t))(v10 + 8))(v18 & 1, ObjectType, v10);
    }
    swift_unknownObjectRelease();

    goto LABEL_17;
  }
  swift_release();

  return swift_unknownObjectRelease();
}

id specialized MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  *(void *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  uint64_t v9 = self;
  aBlock[4] = partial apply for closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:);
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed [UIMenuElement]) -> (@owned UIMenu?);
  void aBlock[3] = &block_descriptor_89_0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  id v11 = v1;
  swift_retain();
  swift_release();
  id v12 = [v9 configurationWithIdentifier:0 previewProvider:0 actionProvider:v10];
  swift_release();
  _Block_release(v10);
  swift_release();
  return v12;
}

uint64_t specialized MOSuggestionCollectionView.collectionView(_:didEndDisplaying:forItemAt:)(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  if (serverManager._displayMonitor != (FBSDisplayLayoutMonitor *)-1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)static MOAngelLogger.memory);
  id v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v8, a1, v4);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (_DWORD *)swift_slowAlloc();
    uint64_t v25 = a1;
    id v16 = v15;
    *uint64_t v15 = 134218240;
    uint64_t v17 = IndexPath.section.getter();
    unsigned __int8 v24 = v2;
    char v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v10, v4);
    uint64_t v26 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v16 + 6) = 2048;
    uint64_t v19 = IndexPath.row.getter();
    v18(v8, v4);
    unint64_t v2 = v24;
    uint64_t v26 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[CollectionView] Claning up indexPath=%ld, %ld", (uint8_t *)v16, 0x16u);
    a1 = v25;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v8, v4);
    v20(v10, v4);
  }

  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100))();
  if (result)
  {
    uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)result + 680))(a1);
    uint64_t result = swift_release();
    if (v22)
    {
      (*(void (**)(void))(*(void *)v22 + 304))(0);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100117A04@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE8))();
  *a2 = result;
  return result;
}

uint64_t sub_100117A60(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xF0);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100117AC8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x100))();
  *a2 = result;
  return result;
}

uint64_t sub_100117B2C(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x108);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_100117B98@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x118))();
  *a2 = result;
  return result;
}

uint64_t sub_100117BFC(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x120);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100117C6C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x130))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100117CD0(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x138);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_100117D4C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x148))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100117DB0(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x150);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_100117E2C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x160))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100117E90(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x168);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_100117F0C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x178))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100117F70(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x180);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_100117FEC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x208))();
  *a2 = result;
  return result;
}

uint64_t sub_100118050(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x210);
  id v4 = *a1;
  return v3(v2);
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionView.handlePullToRefreshTrigger()()
{
  return closure #1 in MOSuggestionCollectionView.handlePullToRefreshTrigger()(v0, (uint64_t)partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.handlePullToRefreshTrigger(), (uint64_t)&block_descriptor_82);
}

void partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.handlePullToRefreshTrigger()()
{
}

Class partial apply for closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, v5, v1 + v4, v6);
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:));
}

uint64_t partial apply for closure #2 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))closure #2 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:));
}

uint64_t sub_100118200()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void partial apply for closure #3 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(v2, v3);
}

uint64_t objectdestroy_91Tm()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t partial apply for closure #4 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))closure #4 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:));
}

uint64_t objectdestroy_34Tm()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t partial apply for closure #1 in confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))closure #1 in confirmRemove #1 () in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:));
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(a1, v6, v2 + v5, v7);
}

uint64_t _sSo21NSAttributedStringKeyaABSHSCWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void partial apply for closure #1 in closure #3 in MOSuggestionCollectionView.layoutSubviews()()
{
}

uint64_t sub_100118690()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void partial apply for closure #1 in closure #2 in MOSuggestionCollectionView.layoutSubviews()()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  closure #1 in closure #2 in MOSuggestionCollectionView.layoutSubviews()(v2, v3);
}

uint64_t sub_1001187C0()
{
  swift_release();

  return _swift_deallocObject(v0, 26, 7);
}

void partial apply for closure #1 in closure #1 in MOSuggestionCollectionView.layoutSubviews()()
{
  closure #1 in closure #1 in MOSuggestionCollectionView.layoutSubviews()(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

id one-time initialization function for sharedFetcher()
{
  id result = [objc_allocWithZone((Class)MOSuggestionAssetContactProfilePictureProviderAvatar) init];
  static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionAssetContactProfilePictureProvider.sharedFetcher.unsafeMutableAddressor()
{
  if (one-time initialization token for sharedFetcher != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher;
}

id static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher.getter()
{
  if (one-time initialization token for sharedFetcher != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher;

  return v0;
}

void static MOSuggestionAssetContactProfilePictureProvider.getAssetFor(idInput:cacheType:completion:)(uint64_t a1, uint64_t a2, char a3, void (*a4)(void))
{
  id v6 = [objc_allocWithZone((Class)CNContactStore) init];
  NSString v7 = String._bridgeToObjectiveC()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v18 = 0;
  id v9 = [v6 unifiedContactWithIdentifier:v7 keysToFetch:isa error:&v18];

  if (v9)
  {
    if ((a3 - 2) > 8u) {
      double v10 = 300.0;
    }
    else {
      double v10 = dbl_1001DD1C8[(char)(a3 - 2)];
    }
    uint64_t v12 = one-time initialization token for sharedFetcher;
    id v13 = v18;
    if (v12 != -1) {
      swift_once();
    }
    id v14 = [static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher avatarForContact:v9 size:v10];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = MOSuggestionAssetsTypeContactPhoto;
      type metadata accessor for UIImage();
      id v17 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v15 type:v16 contentClassType:swift_getObjCClassFromMetadata()];
      a4();
    }
    else
    {
      a4();
    }
  }
  else
  {
    id v11 = v18;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    ((void (*)(void))a4)(0);
    id v9 = v6;
  }
}

double *specialized _arrayForceCast<A, B>(_:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v4 += 16;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

id static MOSuggestionAssetContactProfilePictureProvider.getContact(withIdentifier:)()
{
  id v0 = [objc_allocWithZone((Class)CNContactStore) init];
  NSString v1 = String._bridgeToObjectiveC()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v7 = 0;
  id v3 = [v0 unifiedContactWithIdentifier:v1 keysToFetch:isa error:&v7];

  id v4 = v7;
  if (v3)
  {
  }
  else
  {
    uint64_t v5 = v4;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v3;
}

uint64_t specialized static MOSuggestionAssetContactProfilePictureProvider.getFirstNameFor(idInput:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DA390;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 56) = v2;
  id v3 = [objc_allocWithZone((Class)CNContactStore) init];
  NSString v4 = String._bridgeToObjectiveC()();
  specialized _arrayForceCast<A, B>(_:)(inited);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = 0;
  id v6 = [v3 unifiedContactWithIdentifier:v4 keysToFetch:isa error:&v17];

  if (!v6)
  {
    id v15 = v17;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();

    return 0;
  }
  id v7 = v17;
  id v8 = [v6 givenName];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {

    return 0;
  }
  id v13 = [v6 givenName];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v14;
}

uint64_t type metadata accessor for MOSuggestionAssetContactProfilePictureProvider()
{
  return self;
}

uint64_t key path setter for MOSuggestionCapsuleButton.buttonTapped : MOSuggestionCapsuleButton(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  id v6 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & **a2) + 0x60);
  swift_retain();
  return v6(partial apply for thunk for @escaping @callee_guaranteed () -> (@out ()), v5);
}

uint64_t MOSuggestionCapsuleButton.buttonTapped.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t MOSuggestionCapsuleButton.buttonTapped.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t (*MOSuggestionCapsuleButton.buttonTapped.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionCapsuleButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __chkstk_darwin(v9 - 8);
  uint64_t v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for UIButton.Configuration();
  uint64_t v19 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  char v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (void (__swiftcall **)())&v4[OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped];
  *uint64_t v22 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v22[1] = 0;
  uint64_t v23 = (objc_class *)type metadata accessor for MOSuggestionCapsuleButton();
  v38.receiver = v4;
  v38.super_class = v23;
  [super initWithFrame:a1, a2, a3, a4];
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for UIButton.Configuration.Size.medium(_:), v15);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v11);
  UIButton.Configuration.cornerStyle.setter();
  uint64_t v25 = self;
  id v26 = [v25 tertiarySystemFillColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v27 = [v25 secondaryLabelColor];
  UIButton.Configuration.baseForegroundColor.setter();
  id v28 = [self mainBundle];
  v39._id object = (void *)0x80000001001E3220;
  v29._uint64_t countAndFlagsBits = 0x726F4D20776F6853;
  v29._id object = (void *)0xE900000000000065;
  v30._uint64_t countAndFlagsBits = 0;
  v30._id object = (void *)0xE000000000000000;
  v39._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v39);

  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setAccessibilityLabel:v31];

  uint64_t v32 = v36;
  uint64_t v33 = v37;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v37, v21, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v33, 0, 1, v32);
  UIButton.configuration.setter();
  type metadata accessor for UIAction();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v34 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v24 addAction:v34 forControlEvents:64];

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v32);
  return v24;
}

uint64_t type metadata accessor for MOSuggestionCapsuleButton()
{
  return self;
}

uint64_t sub_100119680()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id MOSuggestionCapsuleButton.init(coder:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UIButton.Configuration();
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void (__swiftcall **)())&v1[OBJC_IVAR____TtC16MomentsUIService25MOSuggestionCapsuleButton_buttonTapped];
  *uint64_t v16 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v16[1] = 0;
  uint64_t v17 = (objc_class *)type metadata accessor for MOSuggestionCapsuleButton();
  v38.receiver = v1;
  v38.super_class = v17;
  id v18 = [super initWithCoder:a1];
  id v19 = v18;
  if (v18)
  {
    id v20 = v18;
    uint64_t v34 = a1;
    id v21 = v20;
    static UIButton.Configuration.filled()();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.Size.medium(_:), v9);
    UIButton.Configuration.buttonSize.setter();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v5);
    UIButton.Configuration.cornerStyle.setter();
    uint64_t v22 = self;
    id v23 = [v22 tertiarySystemFillColor];
    UIButton.Configuration.baseBackgroundColor.setter();
    id v24 = [v22 secondaryLabelColor];
    UIButton.Configuration.baseForegroundColor.setter();
    id v25 = [self mainBundle];
    v39._id object = (void *)0x80000001001E3220;
    v26._uint64_t countAndFlagsBits = 0x726F4D20776F6853;
    v26._id object = (void *)0xE900000000000065;
    v27._uint64_t countAndFlagsBits = 0;
    v27._id object = (void *)0xE000000000000000;
    v39._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v39);

    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v21 setAccessibilityLabel:v28];

    Swift::String v29 = v35;
    uint64_t v30 = v36;
    uint64_t v31 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v35, v15, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v29, 0, 1, v31);
    UIButton.configuration.setter();
    type metadata accessor for UIAction();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    [v21 addAction:v32 forControlEvents:64];

    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
    a1 = v34;
  }

  return v19;
}

void *closure #1 in MOSuggestionCapsuleButton.sharedInit()()
{
  swift_beginAccess();
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *result) + 0x58))();

    v2();
    return (void *)swift_release();
  }
  return result;
}

void *partial apply for closure #1 in MOSuggestionCapsuleButton.sharedInit()()
{
  return closure #1 in MOSuggestionCapsuleButton.sharedInit()();
}

id MOSuggestionCapsuleButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCapsuleButton();
  return [super dealloc];
}

uint64_t sub_100119C9C@<X0>(void **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x58))();
  uint64_t v5 = v4;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v5;
  *a2 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_100119D48()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void *MOSuggestionInterstitialAlertContentViewController.Constants.MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialAlertContentViewController.Constants.MARGIN;
}

id MOSuggestionInterstitialAlertContentViewController.textView.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView));
}

char *MOSuggestionInterstitialAlertContentViewController.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView;
  id v2 = objc_allocWithZone((Class)UITextView);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for MOSuggestionInterstitialAlertContentViewController();
  uint64_t v4 = (char *)[v14 initWithNibName:0 bundle:0];
  uint64_t result = (char *)[v4 view];
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView;
    [result addSubview:*(void *)&v4[OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView]];

    id v8 = *(id *)&v4[v7];
    UIView.fillSuper(margin:)(10.0);

    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001DA0F0;
    *(void *)(v9 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
    *(void *)(v9 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    uint64_t v10 = v4;
    UIViewController.registerForTraitChanges(_:action:)();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v11 = *(void **)&v4[v7];
    [v11 _setCornerRadius:8.0];
    id v12 = [v11 layer];
    [v12 setBorderWidth:1.0];

    id v13 = [self preferredFontForTextStyle:UIFontTextStyleCallout];
    [v11 setFont:v13];

    (*(void (**)(void))((swift_isaMask & *(void *)v10) + 0x60))();
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionInterstitialAlertContentViewController()
{
  return self;
}

Swift::Void __swiftcall MOSuggestionInterstitialAlertContentViewController.handleTraitChange()()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView) layer];
  id v2 = [self separatorColor];
  id v3 = [v2 CGColor];

  [v1 setBorderColor:v3];
}

void MOSuggestionInterstitialAlertContentViewController.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UITextView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void MOSuggestionInterstitialAlertContentViewController.init(nibName:bundle:)()
{
}

id MOSuggestionInterstitialAlertContentViewController.__deallocating_deinit()
{
  return MOSuggestionInterstitialAlertContentViewController.__deallocating_deinit(type metadata accessor for MOSuggestionInterstitialAlertContentViewController);
}

Swift::Void __swiftcall MOSuggestionInterstitialAlertController.addTextView(with:)(Swift::String with)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService39MOSuggestionInterstitialAlertController_textViewContentController];
  id v3 = objc_retain(*(id *)(v2
                         + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView));
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];

  [v1 setContentViewController:v2];
}

id MOSuggestionInterstitialAlertController.currentText.getter()
{
  id result = [*(id *)(*(void *)(v0+ OBJC_IVAR____TtC16MomentsUIService39MOSuggestionInterstitialAlertController_textViewContentController)+ OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialAlertContentViewController_textView) text];
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id MOSuggestionInterstitialAlertController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionInterstitialAlertController_textViewContentController;
  id v7 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialAlertContentViewController());
  id v8 = v3;
  *(void *)&v3[v6] = [v7 init];

  if (a2)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for MOSuggestionInterstitialAlertController();
  id v10 = [super initWithNibName:v9 bundle:a3];

  return v10;
}

uint64_t type metadata accessor for MOSuggestionInterstitialAlertController()
{
  return self;
}

id MOSuggestionInterstitialAlertController.init(coder:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService39MOSuggestionInterstitialAlertController_textViewContentController;
  id v4 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialAlertContentViewController());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for MOSuggestionInterstitialAlertController();
  [super initWithCoder:a1];

  return v6;
}

id MOSuggestionInterstitialAlertController.__deallocating_deinit()
{
  return MOSuggestionInterstitialAlertContentViewController.__deallocating_deinit(type metadata accessor for MOSuggestionInterstitialAlertController);
}

id MOSuggestionInterstitialAlertContentViewController.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

ValueMetadata *type metadata accessor for MOSuggestionInterstitialAlertContentViewController.Constants()
{
  return &type metadata for MOSuggestionInterstitialAlertContentViewController.Constants;
}

unint64_t MOSuggestionAssetsBundle.availableAssets(bundleInterfaceType:)(uint64_t a1)
{
  unint64_t result = 0;
  unint64_t v92 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v4 = (unint64_t)v1;
  switch(a1)
  {
    case 1:
    case 12:
    case 13:
      uint64_t v5 = MOSuggestionAssetsTypePhoto;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypePhoto])
      {
        id v6 = [(id)v4 assetsForType:v5];
        if (v6)
        {
          id v7 = v6;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Array.append<A>(contentsOf:)(v8);
        }
      }
      uint64_t v9 = MOSuggestionAssetsTypeWorkout;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypeWorkout])
      {
        id v10 = [(id)v4 assetsForType:v9];
        if (v10)
        {
          uint64_t v11 = v10;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Array.append<A>(contentsOf:)(v12);
        }
      }
      uint64_t v13 = MOSuggestionAssetsTypeMapSnapshot;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypeMapSnapshot])
      {
        id v14 = [(id)v4 assetsForType:v13];
        if (v14)
        {
          uint64_t v15 = v14;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Array.append<A>(contentsOf:)(v16);
        }
      }
      uint64_t v17 = MOSuggestionAssetsTypeMotionActivity;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypeMotionActivity])
      {
        id v18 = [(id)v4 assetsForType:v17];
        if (v18)
        {
          id v19 = v18;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Array.append<A>(contentsOf:)(v20);
        }
      }
      uint64_t v21 = MOSuggestionAssetsTypeAppIcon;
      if (![(id)v4 hasAssetType:MOSuggestionAssetsTypeAppIcon]) {
        goto LABEL_123;
      }
      id v22 = [(id)v4 assetsForType:v21];
      if (!v22) {
        goto LABEL_123;
      }
      id v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v4 >> 62) {
        goto LABEL_78;
      }
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_117;
      }
      goto LABEL_18;
    case 2:
    case 3:
    case 10:
      goto LABEL_21;
    case 4:
      uint64_t v35 = MOSuggestionAssetsTypeContactPhoto;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypeContactPhoto]) {
        goto LABEL_121;
      }
      goto LABEL_123;
    case 5:
      uint64_t v36 = MOSuggestionAssetsTypeMediaCoverArt;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypeMediaCoverArt])
      {
        id v37 = [(id)v4 assetsForType:v36];
        if (v37)
        {
          objc_super v38 = v37;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Array.append<A>(contentsOf:)(v39);
        }
      }
      uint64_t v40 = MOSuggestionAssetsTypeAppIcon;
      if (![(id)v4 hasAssetType:MOSuggestionAssetsTypeAppIcon]) {
        goto LABEL_123;
      }
      id v41 = [(id)v4 assetsForType:v40];
      if (!v41) {
        goto LABEL_123;
      }
      double v42 = v41;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v4 >> 62) {
        goto LABEL_99;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_42;
      }
      goto LABEL_117;
    case 6:
      goto LABEL_45;
    case 7:
      goto LABEL_52;
    case 9:
      goto LABEL_62;
    case 11:
      uint64_t v60 = MOSuggestionAssetsTypeReflectionPrompt;
      if (![(id)v4 hasAssetType:MOSuggestionAssetsTypeReflectionPrompt]) {
        goto LABEL_123;
      }
      id v61 = [(id)v4 assetsForType:v60];
      if (!v61) {
        goto LABEL_123;
      }
      double v62 = v61;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v81) {
          goto LABEL_117;
        }
      }
      else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_117;
      }
      if ((v4 & 0xC000000000000001) != 0) {
        goto LABEL_92;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_88;
      }
      __break(1u);
LABEL_78:
      swift_bridgeObjectRetain();
      uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v63) {
        goto LABEL_117;
      }
LABEL_18:
      if ((v4 & 0xC000000000000001) != 0) {
        goto LABEL_92;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_88;
      }
      __break(1u);
LABEL_21:
      uint64_t v24 = MOSuggestionAssetsTypePhoto;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypePhoto])
      {
        id v25 = [(id)v4 assetsForType:v24];
        if (v25)
        {
          Swift::String v26 = v25;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Array.append<A>(contentsOf:)(v27);
        }
      }
      uint64_t v28 = MOSuggestionAssetsTypeMapSnapshot;
      if (![(id)v4 hasAssetType:MOSuggestionAssetsTypeMapSnapshot]) {
        goto LABEL_82;
      }
      id v29 = [(id)v4 assetsForType:v28];
      if (!v29) {
        goto LABEL_82;
      }
      uint64_t v30 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        id v32 = (id)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v32)
        {
LABEL_28:
          if ((v31 & 0xC000000000000001) != 0)
          {
            id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_97;
            }
            id v33 = *(id *)(v31 + 32);
          }
          uint64_t v34 = v33;
          swift_bridgeObjectRelease();
          id v32 = v34;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_32:
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            goto LABEL_82;
          }
LABEL_97:
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          goto LABEL_32;
        }
      }
      else
      {
        id v32 = *(id *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v32) {
          goto LABEL_28;
        }
      }
      swift_bridgeObjectRelease();
LABEL_82:
      uint64_t v64 = MOSuggestionAssetsTypeActivityRings;
      if (![(id)v4 hasAssetType:MOSuggestionAssetsTypeActivityRings]) {
        goto LABEL_123;
      }
      id v65 = [(id)v4 assetsForType:v64];
      if (!v65) {
        goto LABEL_123;
      }
      id v66 = v65;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v70) {
          goto LABEL_117;
        }
      }
      else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_117;
      }
      if ((v4 & 0xC000000000000001) != 0) {
        goto LABEL_92;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_88;
      }
      __break(1u);
LABEL_99:
      swift_bridgeObjectRetain();
      uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v71) {
        goto LABEL_117;
      }
LABEL_42:
      if ((v4 & 0xC000000000000001) != 0) {
        goto LABEL_92;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_88;
      }
      __break(1u);
LABEL_45:
      uint64_t v43 = MOSuggestionAssetsTypeLinkPreview;
      if (![(id)v4 hasAssetType:MOSuggestionAssetsTypeLinkPreview]) {
        goto LABEL_123;
      }
      id v44 = [(id)v4 assetsForType:v43];
      if (!v44) {
        goto LABEL_123;
      }
      id v45 = v44;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v72) {
          goto LABEL_117;
        }
      }
      else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_117;
      }
      if ((v4 & 0xC000000000000001) != 0)
      {
LABEL_92:
        id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_89;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_88:
        id v67 = *(id *)(v4 + 32);
LABEL_89:
        double v68 = v67;
        swift_bridgeObjectRelease();
        id v69 = v68;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_123;
      }
      __break(1u);
LABEL_52:
      uint64_t v46 = MOSuggestionAssetsTypePhoto;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypePhoto])
      {
        id v47 = [(id)v4 assetsForType:v46];
        if (v47)
        {
          id v48 = v47;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Array.append<A>(contentsOf:)(v49);
        }
      }
      uint64_t v50 = MOSuggestionAssetsTypeMapSnapshot;
      if (![(id)v4 hasAssetType:MOSuggestionAssetsTypeMapSnapshot]) {
        goto LABEL_123;
      }
      id v51 = [(id)v4 assetsForType:v50];
      if (!v51) {
        goto LABEL_123;
      }
      id v52 = v51;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v4 >> 62))
      {
        if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_59;
        }
LABEL_117:
        swift_bridgeObjectRelease();
        goto LABEL_123;
      }
      swift_bridgeObjectRetain();
      uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v73) {
        goto LABEL_117;
      }
LABEL_59:
      if ((v4 & 0xC000000000000001) != 0) {
        goto LABEL_92;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_88;
      }
      __break(1u);
LABEL_62:
      uint64_t v53 = MOSuggestionAssetsTypeSystemImage;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypeSystemImage])
      {
        id v54 = [(id)v4 assetsForType:v53];
        if (v54)
        {
          id v55 = v54;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v56 >> 62)
          {
            swift_bridgeObjectRetain();
            id v57 = (id)_CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v57)
            {
LABEL_66:
              if ((v56 & 0xC000000000000001) != 0)
              {
                id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (!*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_131;
                }
                id v58 = *(id *)(v56 + 32);
              }
              uint64_t v59 = v58;
              swift_bridgeObjectRelease();
              id v57 = v59;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              {
LABEL_70:
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                goto LABEL_107;
              }
LABEL_131:
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              goto LABEL_70;
            }
          }
          else
          {
            id v57 = *(id *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v57) {
              goto LABEL_66;
            }
          }
          swift_bridgeObjectRelease();
        }
      }
LABEL_107:
      uint64_t v74 = MOSuggestionAssetsTypeContactPhoto;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypeContactPhoto])
      {
        id v75 = [(id)v4 assetsForType:v74];
        if (v75)
        {
          char v76 = v75;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v77 >> 62)
          {
            swift_bridgeObjectRetain();
            id v78 = (id)_CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v78)
            {
LABEL_111:
              if ((v77 & 0xC000000000000001) != 0)
              {
                id v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (!*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_134;
                }
                id v79 = *(id *)(v77 + 32);
              }
              objc_super v80 = v79;
              swift_bridgeObjectRelease();
              id v78 = v80;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              {
LABEL_115:
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                goto LABEL_120;
              }
LABEL_134:
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              goto LABEL_115;
            }
          }
          else
          {
            id v78 = *(id *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v78) {
              goto LABEL_111;
            }
          }
          swift_bridgeObjectRelease();
        }
      }
LABEL_120:
      uint64_t v35 = MOSuggestionAssetsTypeWorkout;
      if ([(id)v4 hasAssetType:MOSuggestionAssetsTypeWorkout])
      {
LABEL_121:
        id v82 = [(id)v4 assetsForType:v35];
        if (v82)
        {
          uint64_t v83 = v82;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
          unint64_t v84 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          specialized Array.append<A>(contentsOf:)(v84);
        }
      }
LABEL_123:
      if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v85 = type metadata accessor for Logger();
      __swift_project_value_buffer(v85, (uint64_t)static MOAngelLogger.shared);
      swift_bridgeObjectRetain_n();
      Class v86 = Logger.logObject.getter();
      os_log_type_t v87 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v88 = (uint8_t *)swift_slowAlloc();
        v91[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v88 = 136315138;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
        uint64_t v89 = Array.debugDescription.getter();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v89, v90, v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v86, v87, "[Assets] Preparing assets in order %s", v88, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      return v92;
    default:
      return result;
  }
}

id MOSuggestionLinkShareView.__allocating_init(linkMetadata:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MOSuggestionLinkShareView.init(linkMetadata:)(a1);
}

id MOSuggestionLinkShareView.init(linkMetadata:)(void *a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  uint64_t v13 = (objc_class *)type metadata accessor for MOSuggestionLinkShareView();
  v26.receiver = v1;
  v26.super_class = v13;
  id v14 = [super initWithFrame:CGRectZero.origin.x, y, width, height];
  id v15 = objc_allocWithZone((Class)LPLinkMetadata);
  id v16 = v14;
  id v17 = [v15 init];
  id v18 = [a1 title];
  [v17 setTitle:v18];

  id v19 = [a1 URL];
  if (v19)
  {
    unint64_t v20 = v19;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    {
      id v22 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v21);
      id v22 = v23;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    id v22 = 0;
  }
  [v17 setURL:v22];

  id v24 = [a1 image];
  [v17 setImage:v24];

  [v16 setUserInteractionEnabled:0];
  [v16 setMetadata:v17];
  [v16 _setPreferredSizeClass:5];

  return v16;
}

uint64_t type metadata accessor for MOSuggestionLinkShareView()
{
  return self;
}

id MOSuggestionLinkShareView.__allocating_init(url:)(uint64_t a1)
{
  return MOSuggestionLinkShareView.__allocating_init(url:)(a1, (uint64_t (*)(void))&URL._bridgeToObjectiveC(), (SEL *)&selRef_initWithURL_, (uint64_t (*)(void))&type metadata accessor for URL);
}

void MOSuggestionLinkShareView.init(url:)()
{
}

id MOSuggestionLinkShareView.__allocating_init(metadata:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithMetadata:a1];

  return v3;
}

void MOSuggestionLinkShareView.init(metadata:)()
{
}

void MOSuggestionLinkShareView.init(frame:)()
{
}

id MOSuggestionLinkShareView.__allocating_init(presentationProperties:)(uint64_t a1)
{
  id v2 = [objc_allocWithZone(v1) initWithPresentationProperties:a1];
  swift_unknownObjectRelease();
  return v2;
}

void MOSuggestionLinkShareView.init(presentationProperties:)()
{
}

id MOSuggestionLinkShareView.__allocating_init(presentationProperties:url:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6) != 1)
  {
    URL._bridgeToObjectiveC()(v8);
    uint64_t v9 = v10;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  }
  id v11 = [objc_allocWithZone(v3) initWithPresentationProperties:a1 URL:v9];

  swift_unknownObjectRelease();
  return v11;
}

void MOSuggestionLinkShareView.init(presentationProperties:url:)()
{
}

id MOSuggestionLinkShareView.__allocating_init(metadataLoadedFrom:)(uint64_t a1)
{
  return MOSuggestionLinkShareView.__allocating_init(url:)(a1, (uint64_t (*)(void))&URL._bridgeToObjectiveC(), (SEL *)&selRef_initWithMetadataLoadedFromURL_, (uint64_t (*)(void))&type metadata accessor for URL);
}

{
  return MOSuggestionLinkShareView.__allocating_init(url:)(a1, (uint64_t (*)(void))&URLRequest._bridgeToObjectiveC(), (SEL *)&selRef_initWithMetadataLoadedFromRequest_, (uint64_t (*)(void))&type metadata accessor for URLRequest);
}

id MOSuggestionLinkShareView.__allocating_init(url:)(uint64_t a1, uint64_t (*a2)(void), SEL *a3, uint64_t (*a4)(void))
{
  id v9 = objc_allocWithZone(v4);
  id v10 = (void *)a2();
  id v11 = [v9 *a3:v10];

  uint64_t v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  return v11;
}

void MOSuggestionLinkShareView.init(metadataLoadedFrom:)()
{
}

{
  MOSuggestionLinkShareView.init(metadataLoadedFrom:)();
}

void @objc MOSuggestionLinkShareView.init(url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(uint64_t))
{
  uint64_t v7 = a4(0);
  __chkstk_darwin(v7 - 8);
  a5(a3);
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MOSuggestionLinkShareView.__deallocating_deinit()
{
  return MOSuggestionLinkShareView.__deallocating_deinit(type metadata accessor for MOSuggestionLinkShareView);
}

uint64_t mapImageView.__allocating_init(image:weatherString:weatherTemperature:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return mapImageView.init(image:weatherString:weatherTemperature:)(a1, a2, a3, a4);
}

uint64_t mapImageView.init(image:weatherString:weatherTemperature:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v76 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v75 - v11;
  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  id v16 = (objc_class *)type metadata accessor for mapImageView();
  v81.receiver = v4;
  v81.super_class = v16;
  id v17 = [super initWithFrame:CGRectZero.origin.x, y, width, height];
  id v18 = objc_allocWithZone((Class)UIImageView);
  id v19 = v17;
  id v20 = [v18 initWithImage:a1];
  [v20 setContentMode:2];
  id v77 = v19;
  [v19 addSubview:v20];
  id v21 = v20;
  UIView.fillSuper(margin:)(0.0);
  swift_bridgeObjectRelease();
  uint64_t v78 = a4;
  if (a3)
  {
    id v22 = [self boldSystemFontOfSize:20.0];
    id v23 = [self configurationWithFont:v22];

    id v21 = v23;
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v25 = [self systemImageNamed:v24 withConfiguration:v21];

    id v26 = [objc_allocWithZone((Class)UIImageView) initWithImage:v25];
    id v27 = [self systemBlackColor];
    id v28 = [v27 colorWithAlphaComponent:0.7];

    [v26 setTintColor:v28];
    [v20 addSubview:v26];
    id v29 = [v26 superview];
    if (v29)
    {
      uint64_t v30 = v29;
      [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v31 = [v26 trailingAnchor];
      id v32 = [v30 trailingAnchor];
      id v33 = [v31 constraintEqualToAnchor:v32];

      [v33 setConstant:-66.0];
      if (v33)
      {
        id v34 = v33;
        [v34 setActive:1];
      }
    }
    id v35 = [v26 superview];
    if (v35)
    {
      uint64_t v36 = v35;
      [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v37 = [v26 bottomAnchor];
      id v38 = [v36 bottomAnchor];
      id v39 = [v37 constraintEqualToAnchor:v38];

      if (v39)
      {
        [v39 setConstant:-1.0];
        id v40 = v39;
        [v40 setActive:1];

        id v25 = v26;
        id v26 = v40;
        id v21 = v36;
      }
      else
      {
        id v40 = v36;
      }

      id v25 = v26;
      id v26 = v40;
    }
    a4 = v78;
  }
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  if (v43(a4, 1, v41) == 1)
  {
    id v44 = v77;
    id v45 = v77;
LABEL_27:

    outlined destroy of Measurement<NSUnitTemperature>?(a4);
    return (uint64_t)v44;
  }
  id v75 = a1;
  outlined init with copy of Measurement<NSUnitTemperature>?(a4, (uint64_t)v12);
  if (v43((uint64_t)v12, 1, v41) == 1)
  {
    outlined destroy of Measurement<NSUnitTemperature>?((uint64_t)v12);
    __break(1u);
  }
  else
  {
    Measurement.value.getter();
    uint64_t v46 = *(void (**)(char *, uint64_t))(v42 + 8);
    v46(v12, v41);
    uint64_t v47 = Double.description.getter();
    uint64_t v49 = v48;
    id v21 = v76;
    outlined init with copy of Measurement<NSUnitTemperature>?(a4, (uint64_t)v76);
    if (v43((uint64_t)v21, 1, v41) != 1)
    {
      uint64_t v50 = (void *)Measurement.unit.getter();
      v46((char *)v21, v41);
      id v51 = [v50 symbol];

      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v54 = v53;

      uint64_t v79 = v47;
      uint64_t v80 = v49;
      swift_bridgeObjectRetain();
      v55._uint64_t countAndFlagsBits = v52;
      v55._id object = v54;
      String.append(_:)(v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v56 = [objc_allocWithZone((Class)UILabel) init];
      NSString v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v56 setText:v57];

      id v58 = [self systemBlackColor];
      [v56 setTextColor:v58];

      id v59 = [self boldSystemFontOfSize:18.0];
      [v56 setFont:v59];

      id v44 = v77;
      [v77 addSubview:v56];
      id v60 = [v56 superview];
      a4 = v78;
      if (v60)
      {
        id v61 = v60;
        [v56 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v62 = [v56 trailingAnchor];
        id v63 = [v61 trailingAnchor];
        id v64 = [v62 constraintEqualToAnchor:v63];

        [v64 setConstant:-5.0];
        if (v64)
        {
          id v65 = v64;
          [v65 setActive:1];
        }
      }
      id v66 = [v56 superview];
      if (v66)
      {
        id v67 = v66;
        [v56 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v68 = [v56 bottomAnchor];
        id v69 = [v67 bottomAnchor];
        id v70 = [v68 constraintEqualToAnchor:v69];

        if (v70)
        {
          [v70 setConstant:-1.0];
          id v71 = v70;
          [v71 setActive:1];

          id v20 = v71;
          id v56 = v67;
        }
        else
        {
          id v71 = v67;
        }

        uint64_t v72 = v75;
        id v73 = v71;
      }
      else
      {
        uint64_t v72 = v44;
        id v73 = v75;
      }
      id v45 = v20;

      id v20 = v73;
      a1 = v56;
      goto LABEL_27;
    }
  }
  uint64_t result = outlined destroy of Measurement<NSUnitTemperature>?((uint64_t)v21);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for mapImageView()
{
  return self;
}

uint64_t outlined destroy of Measurement<NSUnitTemperature>?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of Measurement<NSUnitTemperature>?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void mapImageView.init(coder:)()
{
}

void mapImageView.init(frame:)()
{
}

id mapImageView.__deallocating_deinit()
{
  return MOSuggestionLinkShareView.__deallocating_deinit(type metadata accessor for mapImageView);
}

id MOSuggestionLinkShareView.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t CMTime.durationText.getter(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  time.value = a1;
  *(void *)&time.timescale = a2;
  time.epoch = a3;
  double Seconds = CMTimeGetSeconds(&time);
  id v4 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  uint64_t v5 = v4;
  if (Seconds >= 60.0)
  {
    if (Seconds <= 3600.0) {
      goto LABEL_6;
    }
    uint64_t v6 = &selRef_setAllowedUnits_;
    uint64_t v7 = 224;
  }
  else
  {
    [v4 setAllowedUnits:192];
    uint64_t v6 = &selRef_setZeroFormattingBehavior_;
    uint64_t v7 = 0x10000;
  }
  [v5 *v6 v7];
LABEL_6:
  id v8 = [v5 stringFromTimeInterval:Seconds];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    specialized Collection.dropFirst(_:)(1uLL, v10, v12);
    swift_bridgeObjectRelease();
    uint64_t v10 = static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
  }

  return v10;
}

unint64_t specialized Collection.dropFirst(_:)(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = String.index(_:offsetBy:limitedBy:)();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return String.subscript.getter();
}

uint64_t specialized Collection.dropFirst(_:)(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    Swift::Int v7 = v6;
  }
  else {
    Swift::Int v7 = 0;
  }
  if (v5 < v7)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7) {
    goto LABEL_34;
  }
  if (v7 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 < v5) {
    goto LABEL_36;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7 != v5)
  {
    if (v7 < (unint64_t)v5)
    {
      type metadata accessor for MOSuggestionCollectionViewCellViewModel();
      Swift::Int v10 = v7;
      do
      {
        Swift::Int v11 = v10 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v10);
        Swift::Int v10 = v11;
      }
      while (v5 != v11);
      goto LABEL_27;
    }
LABEL_37:
    __break(1u);
    return result;
  }
LABEL_27:
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t MOSuggestionSheetAssetViewModel.id.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MOSuggestionSheetAssetViewModel.id.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t MOSuggestionGenericFallBackInfo.__allocating_init(bundleInfo:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = 0;
  swift_beginAccess();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRelease();
  MOSuggestionGenericFallBackInfo.description()();
  return v4;
}

void *MOSuggestionGenericFallBackInfo.init(bundleInfo:)(uint64_t a1, uint64_t a2)
{
  v2[3] = 0;
  v2[2] = 0;
  swift_beginAccess();
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v5 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*v2 + 120))(v5);
  return v2;
}

Swift::Void __swiftcall MOSuggestionGenericFallBackInfo.description()()
{
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static MOAngelLogger.shared);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v9 = v5;
    uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v0 + 88))();
    if (v7)
    {
      unint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v8 = 0xE000000000000000;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[MOSuggestionGenericFallBackInfo] Using fallback image for: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void MOSuggestionGenericFallBackInfo.__allocating_init(coder:)()
{
}

void MOSuggestionGenericFallBackInfo.init(coder:)()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t MOSuggestionGenericFallBackInfo.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOSuggestionGenericFallBackInfo.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10011D59C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 88))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10011D5E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 96);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t type metadata accessor for MOSuggestionGenericFallBackInfo()
{
  return self;
}

id UIView.alignBottomToSuper(margin:equivalency:)(char a1, double a2)
{
  id v5 = [v2 superview];
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v5;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (a1)
  {
    id v7 = [v2 bottomAnchor];
    if (a1 == 1)
    {
      id v8 = [v6 bottomAnchor];
      id v9 = [v7 constraintGreaterThanOrEqualToAnchor:v8];
    }
    else
    {
      id v8 = [v6 bottomAnchor];
      id v9 = [v7 constraintLessThanOrEqualToAnchor:v8];
    }
  }
  else
  {
    id v7 = [v2 bottomAnchor];
    id v8 = [v6 bottomAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];
  }
  id v10 = v9;

  if (v10)
  {
    [v10 setConstant:-a2];
    id v11 = v10;
    [v11 setActive:1];
  }
  return v10;
}

id UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_centerXAnchor, a2);
}

void UIView.alignLeadingTo(view:margin:)(void *a1, double a2)
{
}

void UIView.alignTrailingTo(view:margin:)(void *a1, double a2)
{
}

void UIView.alignTopTo(view:margin:)(void *a1, double a2)
{
}

void UIView.alignBottomTo(view:margin:)(void *a1, double a2)
{
}

void UIView.alignLeadingTo(view:margin:)(void *a1, SEL *a2, double a3)
{
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = [v3 *a2];
  id v8 = [a1 *a2];
  id v9 = [v7 constraintEqualToAnchor:v8 constant:a3];

  [v9 setActive:1];
}

void *UIView.fillSuper(margin:)(double a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 superview];
  if (v4)
  {
    id v5 = v4;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v1 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:a1];
    if (v8)
    {
      id v9 = v8;
      [v9 setActive:1];

      id v5 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v10 = [v2 superview];
  if (v10)
  {
    id v11 = v10;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v2 trailingAnchor];
    id v13 = [v11 trailingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:-a1];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];

      id v11 = v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v16 = [v2 superview];
  if (v16)
  {
    id v17 = v16;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v2 topAnchor];
    id v19 = [v17 topAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:a1];
    if (v20)
    {
      id v21 = v20;
      [v21 setActive:1];

      id v17 = v21;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v22 = [v2 superview];
  if (v22)
  {
    id v23 = v22;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v24 = [v2 bottomAnchor];
    id v25 = [v23 bottomAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    if (v26)
    {
      [v26 setConstant:-a1];
      id v27 = v26;
      [v27 setActive:1];

      id v23 = v27;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  return &_swiftEmptyArrayStorage;
}

id UIView.alignTopToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_topAnchor, a2);
}

id UIView.alignLeadingToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_leadingAnchor, a2);
}

id UIView.alignTrailingToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_trailingAnchor, a2);
}

id UIView.alignCenterVerticallyToSuper(margin:equivalency:)(char a1, double a2)
{
  return UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(a1, (SEL *)&selRef_centerYAnchor, a2);
}

id UIView.alignCenterHorizontallyToSuper(margin:equivalency:)(char a1, SEL *a2, double a3)
{
  id v7 = [v3 superview];
  if (!v7) {
    return 0;
  }
  id v8 = v7;
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (a1)
  {
    id v9 = [v3 *a2];
    id v10 = [v8 *a2];
    if (a1 == 1) {
      id v11 = [v9 constraintGreaterThanOrEqualToAnchor:v10];
    }
    else {
      id v11 = [v9 constraintLessThanOrEqualToAnchor:v10];
    }
  }
  else
  {
    id v9 = [v3 *a2];
    id v10 = [v8 *a2];
    id v11 = [v9 constraintEqualToAnchor:v10];
  }
  id v12 = v11;

  [v12 setConstant:a3];
  if (v12)
  {
    id v13 = v12;
    [v13 setActive:1];
  }
  return v12;
}

id UIView.setFixedHeight(height:)(double a1)
{
  return UIView.setFixedHeight(height:)((SEL *)&selRef_heightAnchor, a1);
}

Swift::Void __swiftcall UIView.removeAllSubviews()()
{
  id v1 = [v0 subviews];
  type metadata accessor for UIView();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v2 + 8 * i + 32);
    }
    id v6 = v5;
    [v5 removeFromSuperview];
  }
LABEL_10:

  swift_bridgeObjectRelease();
}

unint64_t type metadata accessor for UIView()
{
  unint64_t result = lazy cache variable for type metadata for UIView;
  if (!lazy cache variable for type metadata for UIView)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIView);
  }
  return result;
}

id UIView.alignRightOf(view:margin:)(void *a1, double a2)
{
  return UIView.alignRightOf(view:margin:)(a1, (SEL *)&selRef_leadingAnchor, (SEL *)&selRef_trailingAnchor, a2);
}

id UIView.setFixedWidth(width:)(double a1)
{
  return UIView.setFixedHeight(height:)((SEL *)&selRef_widthAnchor, a1);
}

id UIView.setFixedHeight(height:)(SEL *a1, double a2)
{
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v2 *a1];
  id v6 = [v5 constraintEqualToConstant:a2];

  [v6 setActive:1];
  return v6;
}

id UIView.alignBelow(view:margin:)(void *a1, double a2)
{
  return UIView.alignRightOf(view:margin:)(a1, (SEL *)&selRef_topAnchor, (SEL *)&selRef_bottomAnchor, a2);
}

id UIView.alignAbove(view:margin:)(void *a1, double a2)
{
  return UIView.alignRightOf(view:margin:)(a1, (SEL *)&selRef_bottomAnchor, (SEL *)&selRef_topAnchor, a2);
}

id UIView.alignRightOf(view:margin:)(void *a1, SEL *a2, SEL *a3, double a4)
{
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v9 = [v4 *a2];
  id v10 = [a1 *a3];
  id v11 = [v9 constraintEqualToAnchor:v10];

  [v11 setConstant:a4];
  [v11 setActive:1];
  return v11;
}

id UIView.setWidthAnchor(view:multiplier:)(void *a1, double a2)
{
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v2 widthAnchor];
  id v6 = [a1 widthAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6 multiplier:a2];

  [v7 setActive:1];
  return v7;
}

id UIView.alignLeftOf(view:margin:)(void *a1, double a2)
{
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v2 trailingAnchor];
  id v6 = [a1 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  [v7 setConstant:-a2];
  [v7 setActive:1];
  return v7;
}

NSLayoutConstraint_optional __swiftcall UIView.alignCenterVerticallyBetweenTopAndBottomAnchor(topAnchor:bottomAnchor:)(NSLayoutYAxisAnchor topAnchor, NSLayoutYAxisAnchor bottomAnchor)
{
  uint64_t v3 = v2;
  id v6 = [v3 superview];
  if (v6)
  {
    id v8 = v6;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v9 = [v3 centerYAnchor];
    id v10 = [(objc_class *)topAnchor.super.super.isa anchorWithOffsetToAnchor:v9];

    id v11 = [v3 centerYAnchor];
    id v12 = [v11 anchorWithOffsetToAnchor:bottomAnchor.super.super.isa];

    id v13 = (objc_class *)[v10 constraintEqualToAnchor:v12];
    id v14 = v13;
    if (v13)
    {
      id v15 = v13;
      [(objc_class *)v15 setActive:1];
    }
  }
  else
  {
    id v14 = 0;
  }
  id v16 = v14;
  result.value.super.Class isa = v16;
  result.is_nil = v7;
  return result;
}

unint64_t lazy protocol witness table accessor for type UIView.AutolayoutEquivalency and conformance UIView.AutolayoutEquivalency()
{
  unint64_t result = lazy protocol witness table cache variable for type UIView.AutolayoutEquivalency and conformance UIView.AutolayoutEquivalency;
  if (!lazy protocol witness table cache variable for type UIView.AutolayoutEquivalency and conformance UIView.AutolayoutEquivalency)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIView.AutolayoutEquivalency and conformance UIView.AutolayoutEquivalency);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UIView.AutolayoutEquivalency(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011E69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIView.AutolayoutEquivalency()
{
  return &type metadata for UIView.AutolayoutEquivalency;
}

uint64_t static MOPOIAnnotationViewConfiguration.hasPOIIconImage(_:)(void *a1)
{
  id v2 = [a1 _poiCategory];
  if (v2)
  {
    int v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
    if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if (v9) {
      return result;
    }
  }
  id v11 = self;
  id v12 = [a1 _styleAttributes];
  id v13 = self;
  id v14 = [v13 mainScreen];
  [v14 scale];
  double v16 = v15;

  id v17 = [v11 newFillColorForStyleAttributes:v12 forScale:v16];
  id v18 = v11;
  if (v17)
  {
    id v19 = v18;
    id v20 = [a1 _styleAttributes];
    id v21 = [v13 mainScreen];
    [v21 scale];
    double v23 = v22;

    id v24 = [v19 imageForStyle:v20 size:3 forScale:0 format:v23];
    if (v24)
    {

      return 1;
    }
  }
  return 0;
}

uint64_t *MOPOIAnnotationView.cityStyleAttributes.unsafeMutableAddressor()
{
  if (one-time initialization token for cityStyleAttributes != -1) {
    swift_once();
  }
  return &static MOPOIAnnotationView.cityStyleAttributes;
}

uint64_t MOPOIAnnotationViewConfiguration.init(geoMapItem:tileSize:isWork:numLocations:forceCircle:isMediumToHighConfidence:isScaledDownPOI:shouldUseCityIcon:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(void *)a9 = result;
  *(unsigned char *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 9) = a3;
  *(void *)(a9 + 16) = a4;
  *(unsigned char *)(a9 + 24) = a5;
  *(unsigned char *)(a9 + 25) = a6;
  *(unsigned char *)(a9 + 26) = a7;
  *(unsigned char *)(a9 + 27) = a8;
  *(void *)(a9 + 32) = 0x4000000000000000;
  return result;
}

id MOPOIAnnotationView.__allocating_init(annotation:configuration:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = specialized MOPOIAnnotationView.init(annotation:configuration:)(a1, a2);
  outlined release of MOPOIAnnotationViewConfiguration(a2);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t MOPOIAnnotationViewConfiguration.geoMapItem.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MOPOIAnnotationViewConfiguration.geoMapItem.setter(uint64_t a1)
{
  uint64_t result = swift_unknownObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t MOPOIAnnotationViewConfiguration.isWork.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t MOPOIAnnotationViewConfiguration.isWork.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

void (__swiftcall *MOPOIAnnotationViewConfiguration.isWork.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOPOIAnnotationViewConfiguration.forceCircle.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MOPOIAnnotationViewConfiguration.forceCircle.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t MOPOIAnnotationViewConfiguration.isMediumToHighConfidence.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t MOPOIAnnotationViewConfiguration.isMediumToHighConfidence.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

void (__swiftcall *MOPOIAnnotationViewConfiguration.isMediumToHighConfidence.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOPOIAnnotationViewConfiguration.isScaledDownPOI.getter()
{
  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t MOPOIAnnotationViewConfiguration.isScaledDownPOI.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 26) = result;
  return result;
}

void (__swiftcall *MOPOIAnnotationViewConfiguration.isScaledDownPOI.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOPOIAnnotationViewConfiguration.shouldUseCityIcon.getter()
{
  return *(unsigned __int8 *)(v0 + 27);
}

uint64_t MOPOIAnnotationViewConfiguration.shouldUseCityIcon.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 27) = result;
  return result;
}

void (__swiftcall *MOPOIAnnotationViewConfiguration.shouldUseCityIcon.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

void *one-time initialization function for singlePinCanvasSize()
{
  uint64_t result = (void *)specialized Dictionary.init(dictionaryLiteral:)((uint64_t)&outlined read-only object #0 of one-time initialization function for singlePinCanvasSize);
  static MOPOIAnnotationViewConfiguration.singlePinCanvasSize = result;
  return result;
}

void *one-time initialization function for multiPinCanvasSize()
{
  uint64_t result = (void *)specialized Dictionary.init(dictionaryLiteral:)((uint64_t)&outlined read-only object #0 of one-time initialization function for multiPinCanvasSize);
  static MOPOIAnnotationViewConfiguration.multiPinCanvasSize = result;
  return result;
}

BOOL MOPOIAnnotationViewConfiguration.shouldAddWhiteCircularBorder.getter()
{
  return *(void *)(v0 + 16) > 1;
}

uint64_t MOPOIAnnotationViewConfiguration.pinSize.getter()
{
  uint64_t v1 = v0;
  if (*(uint64_t *)(v0 + 16) > 1 || (*(unsigned char *)(v0 + 24) & 1) != 0)
  {
    if (one-time initialization token for multiPinCanvasSize != -1) {
      swift_once();
    }
    id v2 = static MOPOIAnnotationViewConfiguration.multiPinCanvasSize;
    if (!*((void *)static MOPOIAnnotationViewConfiguration.multiPinCanvasSize + 2)) {
      goto LABEL_13;
    }
  }
  else
  {
    if (one-time initialization token for singlePinCanvasSize != -1) {
      swift_once();
    }
    id v2 = static MOPOIAnnotationViewConfiguration.singlePinCanvasSize;
    if (!*((void *)static MOPOIAnnotationViewConfiguration.singlePinCanvasSize + 2)) {
      goto LABEL_13;
    }
  }
  unint64_t v3 = specialized __RawDictionaryStorage.find<A>(_:)(*(unsigned char *)(v1 + 8));
  if ((v4 & 1) == 0)
  {
LABEL_13:
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  uint64_t result = *(uint64_t *)(v2[7] + 8 * v3);
  if (*(unsigned char *)(v1 + 26))
  {
    double v6 = *(double *)&result;
    double v7 = COERCE_DOUBLE(specialized static MOAngelDefaultsManager.doubleValueFor(_:)());
    if (v8) {
      double v7 = 0.5;
    }
    *(double *)&uint64_t result = v7 * v6;
  }
  return result;
}

uint64_t MOPOIAnnotationViewConfiguration.shouldAddPointedArrow.getter()
{
  if (*(uint64_t *)(v0 + 16) > 1 || (*(unsigned char *)(v0 + 24) & 1) != 0) {
    return 0;
  }
  if (*(unsigned char *)(v0 + 27)) {
    return *(unsigned __int8 *)(v0 + 9);
  }
  return 1;
}

void MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter()
{
  MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v1 & 1) == 0)
  {
    outlined init with take of MOSuggestionAssetTileSize((unsigned char *)(v0 + 8), &v2);
    outlined init with take of MOSuggestionAssetTileSize(&v2, &v3);
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  }
}

void MOPOIAnnotationViewConfiguration.downArrowFrame.getter()
{
  MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v0 & 1) == 0) {
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  }
}

void MOPOIAnnotationViewConfiguration.downArrowListTileFrame.getter()
{
  MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v0 & 1) == 0) {
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  }
}

void MOPOIAnnotationViewConfiguration.whiteCircularBorderFrame.getter()
{
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();

  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

void MOPOIAnnotationViewConfiguration.whiteCircularBorderCLusterFrame.getter()
{
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();

  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
}

void MOPOIAnnotationViewConfiguration.containerViewFrame.getter()
{
  MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v0 & 1) == 0) {
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  }
}

unsigned char *MOPOIAnnotationViewConfiguration.clusterFontSize.getter()
{
  uint64_t result = (unsigned char *)MOPOIAnnotationViewConfiguration.pinSize.getter();
  if ((v2 & 1) == 0)
  {
    outlined init with take of MOSuggestionAssetTileSize((unsigned char *)(v0 + 8), &v3);
    return outlined init with take of MOSuggestionAssetTileSize(&v3, &v4);
  }
  return result;
}

uint64_t static MOPOIAnnotationViewConfiguration.filterGenericRed(category:)(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  if (v1 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

void one-time initialization function for cityStyleAttributes()
{
  id v0 = [objc_allocWithZone((Class)GEOPlace) initWithLatitude:4 longitude:0.0 placeType:0.0];
  id v1 = [self styleAttributesForPlace:v0];

  static MOPOIAnnotationView.cityStyleAttributes = (uint64_t)v1;
}

uint64_t static MOPOIAnnotationView.cityStyleAttributes.getter()
{
  if (one-time initialization token for cityStyleAttributes != -1) {
    swift_once();
  }
  uint64_t v0 = static MOPOIAnnotationView.cityStyleAttributes;
  id v1 = (id)static MOPOIAnnotationView.cityStyleAttributes;
  return v0;
}

id MOPOIAnnotationView.init(annotation:configuration:)(uint64_t a1, uint64_t a2)
{
  id v3 = specialized MOPOIAnnotationView.init(annotation:configuration:)(a1, a2);
  outlined release of MOPOIAnnotationViewConfiguration(a2);
  swift_unknownObjectRelease();
  return v3;
}

void closure #1 in MOPOIAnnotationView.init(annotation:configuration:)()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (uint64_t *)&Strong[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
    uint64_t v2 = Strong;
    MOPOIAnnotationViewConfiguration.pinSize.getter();
    double v3 = 0.0;
    double v4 = 0.0;
    double v5 = 0.0;
    double v6 = 0.0;
    if ((v7 & 1) == 0) {
      MOSuggestionInterstitialExpandableListViewCellConstants.init()();
    }
    [v2 setFrame:v3, v4, v5, v6];

    char v8 = &v2[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView];
    id v9 = *(id *)&v2[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView];
    MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
    [v9 setFrame:];

    MOPOIAnnotationView.setupPOIAndColors()();
    if (v1[2] < 2)
    {
      if (v1[3])
      {
        specialized MOPOIAnnotationView.setupBorderBackground(cluster:)();
        uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView;
      }
      else
      {
        if (*((unsigned char *)v1 + 27) == 1 && !*((unsigned char *)v1 + 9)) {
          goto LABEL_12;
        }
        MOPOIAnnotationView.setupDownArrow()();
        uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView;
      }
      [v2 addSubview:*(void *)&v2[v10]];
    }
    else
    {
      specialized MOPOIAnnotationView.setupBorderBackground(cluster:)();
      MOPOIAnnotationView.setupClusterlabel()();
      [v2 addSubview:*(void *)&v2[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView]];
      char v8 = &v2[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel];
    }
LABEL_12:
    [v2 addSubview:*(void *)v8];
    uint64_t v11 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView;
    id v12 = [*(id *)&v2[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView] layer];
    id v13 = [self secondarySystemBackgroundColor];
    id v14 = [v13 CGColor];

    [v12 setShadowColor:v14];
    id v15 = [*(id *)&v2[v11] layer];
    LODWORD(v16) = 0.5;
    [v15 setShadowOpacity:v16];

    id v17 = [*(id *)&v2[v11] layer];
    [v17 setShadowRadius:5.0];

    id v18 = [*(id *)&v2[v11] layer];
    [v18 setShadowPathIsBounds:1];
  }
}

void MOPOIAnnotationView.setupDownArrow()()
{
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 16) > 1
    || *(unsigned char *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 24) != 0
    || (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 27) ^ 1 | *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 9)) == 0)
  {
    return;
  }
  double v3 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 8) == 3)
  {
    MOPOIAnnotationViewConfiguration.pinSize.getter();
    double v4 = 0.0;
    double v5 = 0.0;
    double v6 = 0.0;
    double v7 = 0.0;
    if ((v8 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    MOPOIAnnotationViewConfiguration.pinSize.getter();
    double v4 = 0.0;
    double v5 = 0.0;
    double v6 = 0.0;
    double v7 = 0.0;
    if ((v9 & 1) == 0) {
LABEL_14:
    }
      MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  }
  [v3 setFrame:v4, v5, v6, v7];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v10];

  [v3 setImage:v11];

  [v3 setContentMode:2];
}

void MOPOIAnnotationView.setupClusterlabel()()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 16);
  if (v2 >= 2)
  {
    double v3 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel);
    int v4 = *((unsigned __int8 *)v1 + 8);
    uint64_t v13 = *v1;
    LOWORD(v14) = *((_WORD *)v1 + 4);
    uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration + 16);
    LOWORD(v16) = *((_WORD *)v1 + 12);
    BYTE2(v16) = *((unsigned char *)v1 + 26);
    BYTE3(v16) = *((unsigned char *)v1 + 27);
    uint64_t v17 = v1[4];
    MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
    [v3 setFrame:];
    uint64_t v12 = v2;
    dispatch thunk of CustomStringConvertible.description.getter();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v5, v12, v13, v14, v15, v16, v17];

    [v3 setTextAlignment:1];
    id v6 = [self whiteColor];
    [v3 setTextColor:v6];

    double v7 = COERCE_DOUBLE(MOPOIAnnotationViewConfiguration.pinSize.getter());
    double v8 = 15.0;
    if ((v9 & 1) == 0)
    {
      if (v4 == 3) {
        double v8 = v7 * 0.5;
      }
      else {
        double v8 = v7 / 6.0;
      }
    }
    id v10 = [self boldSystemFontOfSize:v8];
    [v3 setFont:v10];

    [v3 setAdjustsFontSizeToFitWidth:1];
    [v3 setClipsToBounds:1];
    id v11 = [v3 layer];
    [v3 frame];
    [v11 setCornerRadius:CGRectGetWidth(v18) * 0.5];
  }
}

void MOPOIAnnotationView.setupPOIAndColors()()
{
  id v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
  double v3 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
  if (v3)
  {
    id v4 = [(id)swift_unknownObjectRetain() _poiCategory];
    if (v4)
    {
      NSString v5 = v4;
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;
      if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0) {
          goto LABEL_8;
        }
      }
LABEL_16:
      swift_unknownObjectRelease();
      goto LABEL_17;
    }
LABEL_8:
    uint64_t v12 = self;
    id v13 = [v3 _styleAttributes];
    uint64_t v14 = self;
    id v15 = [v14 mainScreen];
    [v15 scale];
    double v17 = v16;

    id v18 = [v12 newFillColorForStyleAttributes:v13 forScale:v17];
    id v19 = v12;
    if (v18)
    {
      id v20 = v19;
      id v21 = [v3 _styleAttributes];
      id v22 = [v14 mainScreen];
      [v22 scale];
      double v24 = v23;

      id v25 = [v20 imageForStyle:v21 size:3 forScale:0 format:v24];
      if (v25)
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v26 = type metadata accessor for Logger();
        __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.assets);
        swift_unknownObjectRetain_n();
        id v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v27, v28))
        {
          Swift::String v100 = v1;
          uint64_t v29 = swift_slowAlloc();
          uint64_t v103 = swift_slowAlloc();
          *(_DWORD *)uint64_t v29 = 134218242;
          id v30 = [v3 name];
          if (v30)
          {
            id v31 = v30;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
          Optional<A>.hashValue.getter();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease();
          *(_WORD *)(v29 + 12) = 2080;
          id v95 = [v3 _poiCategory];
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GEOPOICategory?);
          uint64_t v96 = Optional.debugDescription.getter();
          unint64_t v98 = v97;

          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v96, v98, &v103);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "[POIClustering] [RENDERING] POI mapItemName=%ld, mapItemPOICategory=%s", (uint8_t *)v29, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          id v1 = v100;
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView] setImage:v25];
        id v99 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v18];

        [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView] setTintColor:v99];
        [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel] setBackgroundColor:v99];
        swift_unknownObjectRelease();

        return;
      }
    }
    goto LABEL_16;
  }
LABEL_17:
  if (v2[9] == 1)
  {
    id v32 = self;
    id v33 = self;
    id v34 = [v33 workStyleAttributes];
    id v35 = self;
    id v36 = [v35 mainScreen];
    [v36 scale];
    double v38 = v37;

    id v39 = [v32 imageForStyle:v34 size:3 forScale:0 format:v38];
    if (v39)
    {
      id v40 = [v33 workStyleAttributes];
      id v41 = [v35 mainScreen];
      [v41 scale];
      double v43 = v42;

      id v44 = [v32 newFillColorForStyleAttributes:v40 forScale:v43];
      id v45 = v32;
      if (v44)
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v46 = type metadata accessor for Logger();
        __swift_project_value_buffer(v46, (uint64_t)static MOAngelLogger.assets);
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v49 = 0;
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "[POIClustering] [RENDERING] Work", v49, 2u);
          swift_slowDealloc();
        }

        [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView] setImage:v39];
        id v101 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v44];

        [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView] setTintColor:v101];
        [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel] setBackgroundColor:v101];

LABEL_37:

        return;
      }
    }
  }
  if ((v2[25] & 1) == 0 && v2[27] == 1)
  {
    uint64_t v50 = self;
    if (one-time initialization token for cityStyleAttributes != -1) {
      swift_once();
    }
    uint64_t v51 = static MOPOIAnnotationView.cityStyleAttributes;
    uint64_t v52 = self;
    id v53 = [v52 mainScreen];
    [v53 scale];
    double v55 = v54;

    id v56 = [v50 newFillColorForStyleAttributes:v51 forScale:v55];
    id v57 = v50;
    if (v56)
    {
      id v58 = v57;
      uint64_t v59 = static MOPOIAnnotationView.cityStyleAttributes;
      id v60 = [v52 mainScreen];
      [v60 scale];
      double v62 = v61;

      id v63 = [v58 imageForStyle:v59 size:3 forScale:0 format:v62];
      if (v63)
      {
        id v64 = v63;
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v65 = type metadata accessor for Logger();
        __swift_project_value_buffer(v65, (uint64_t)static MOAngelLogger.assets);
        id v66 = Logger.logObject.getter();
        os_log_type_t v67 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v66, v67))
        {
          id v68 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v68 = 0;
          _os_log_impl((void *)&_mh_execute_header, v66, v67, "[POIClustering] [RENDERING] City", v68, 2u);
          swift_slowDealloc();
        }

        [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView] setImage:v64];
        id v101 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v56];

        [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel] setBackgroundColor:v101];
        goto LABEL_37;
      }
    }
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v69 = type metadata accessor for Logger();
  __swift_project_value_buffer(v69, (uint64_t)static MOAngelLogger.assets);
  id v70 = v1;
  id v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = swift_slowAlloc();
    uint64_t v103 = swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 134218242;
    if (v3)
    {
      id v74 = [v3 name];
      if (v74)
      {
        id v75 = v74;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
      Optional<A>.hashValue.getter();

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v73 + 12) = 2080;
    if (v3)
    {
      id v102 = [v3 _poiCategory];
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GEOPOICategory?);
      uint64_t v76 = Optional.debugDescription.getter();
      unint64_t v78 = v77;
    }
    else
    {
      unint64_t v78 = 0xE300000000000000;
      uint64_t v76 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v78, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "[POIClustering] [RENDERING] Fallback, geoMapItem.name=%ld, geoMapItem.poiCategory=%s", (uint8_t *)v73, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v79 = *(void **)&v70[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView];
  [v79 frame];
  CGRectGetWidth(v105);
  [v79 frame];
  CGRectGetHeight(v106);
  [v79 frame];
  CGRectGetWidth(v107);
  [v79 frame];
  CGRectGetHeight(v108);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  id v84 = [objc_allocWithZone((Class)UIImageView) initWithFrame:v80, v81, v82, v83];
  NSString v85 = String._bridgeToObjectiveC()();
  id v86 = [self _systemImageNamed:v85];

  [v84 setImage:v86];
  os_log_type_t v87 = self;
  id v88 = [v87 systemWhiteColor];
  [v84 setTintColor:v88];

  id v89 = [v87 systemIndigoColor];
  [v79 setBackgroundColor:v89];

  unint64_t v90 = *(void **)&v70[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView];
  id v91 = [v87 systemIndigoColor];
  [v90 setTintColor:v91];

  unint64_t v92 = *(void **)&v70[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel];
  id v93 = [v87 systemIndigoColor];
  [v92 setBackgroundColor:v93];

  id v94 = [v79 layer];
  [v79 frame];
  [v94 setCornerRadius:CGRectGetHeight(v109) * 0.5];

  [v79 addSubview:v84];
}

void MOPOIAnnotationView.init(annotation:reuseIdentifier:)()
{
}

id MOPOIAnnotationView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOPOIAnnotationView();
  [super dealloc];
}

id specialized MOPOIAnnotationView.init(annotation:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView;
  id v11 = objc_allocWithZone((Class)UIImageView);
  uint64_t v12 = v2;
  *(void *)&v2[v10] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView;
  *(void *)&v12[v13] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v14 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v12[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v12[v15] = [objc_allocWithZone((Class)UIView) init];
  double v16 = &v12[OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_configuration];
  long long v17 = *(_OWORD *)a2;
  long long v18 = *(_OWORD *)(a2 + 16);
  *((void *)v16 + 4) = *(void *)(a2 + 32);
  *(_OWORD *)double v16 = v17;
  *((_OWORD *)v16 + 1) = v18;
  outlined retain of MOPOIAnnotationViewConfiguration(a2);

  id v19 = (objc_class *)type metadata accessor for MOPOIAnnotationView();
  v31.receiver = v12;
  v31.super_class = v19;
  id v20 = [super initWithAnnotation:v26 reuseIdentifier:0];
  type metadata accessor for OS_dispatch_queue();
  id v21 = v20;
  id v22 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in MOPOIAnnotationView.init(annotation:configuration:);
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_25;
  double v24 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  return v21;
}

uint64_t outlined release of MOPOIAnnotationViewConfiguration(uint64_t a1)
{
  return a1;
}

unsigned char *outlined init with take of MOSuggestionAssetTileSize(unsigned char *a1, unsigned char *a2)
{
  return a2;
}

void specialized MOPOIAnnotationView.setupBorderBackground(cluster:)()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView);
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOPOIAnnotationViewConfiguration.clusterCountLabelFrame.getter();
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  [v1 setFrame:];
  id v2 = [v1 layer];
  id v3 = [self whiteColor];
  id v4 = [v3 CGColor];

  [v2 setBackgroundColor:v4];
  [v1 setClipsToBounds:1];
  id v5 = [v1 layer];
  [v1 frame];
  [v5 setCornerRadius:CGRectGetWidth(v7) * 0.5];
}

void specialized MOPOIAnnotationView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_basePOICircleView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_downArrowView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for MOPOIAnnotationView()
{
  return self;
}

uint64_t initializeWithCopy for MOPOIAnnotationViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MOPOIAnnotationViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for MOPOIAnnotationViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOPOIAnnotationViewConfiguration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MOPOIAnnotationViewConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOPOIAnnotationViewConfiguration()
{
  return &type metadata for MOPOIAnnotationViewConfiguration;
}

uint64_t outlined retain of MOPOIAnnotationViewConfiguration(uint64_t a1)
{
  return a1;
}

uint64_t sub_100121134()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOPOIAnnotationView.init(annotation:configuration:)()
{
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

id MOAngelControllerWrapper.didTransitionTo(_:)(id result)
{
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
  if (*(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState) != result)
  {
    id v3 = result;
    uint64_t result = [*(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) sendSuggestionSheetStateUpdate:result sender:v1];
    *(void *)(v1 + v2) = v3;
  }
  return result;
}

char *MOAngelControllerWrapper.uiInternalOS.unsafeMutableAddressor()
{
  if (one-time initialization token for uiInternalOS != -1) {
    swift_once();
  }
  return &static MOAngelControllerWrapper.uiInternalOS;
}

uint64_t MOMusicPlaybackCoordinator.delegates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MOMusicPlaybackCoordinator.delegates.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

void *MOEventBundleWithAsset.__allocating_init(bundle:)(uint64_t a1)
{
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = 0;
  result[2] = a1;
  return result;
}

void *MOEventBundleWithAsset.init(bundle:)(uint64_t a1)
{
  v1[3] = 0;
  v1[4] = 0;
  v1[2] = a1;
  return v1;
}

uint64_t MOSuggestionAssetWorkoutRouteProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOSuggestionAssetWorkoutRouteProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MOAngelControllerWrapper.delegate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_delegate;
  swift_beginAccess();
  return outlined init with copy of MOAngelControllerWrapperDelegate?(v3, a1);
}

uint64_t MOAngelControllerWrapper.delegate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_delegate;
  swift_beginAccess();
  outlined assign with take of MOAngelControllerWrapperDelegate?(a1, v3);
  return swift_endAccess();
}

uint64_t (*MOAngelControllerWrapper.delegate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id one-time initialization function for uiInternalOS()
{
  id result = [self isInternalBuild];
  static MOAngelControllerWrapper.uiInternalOS = (char)result;
  return result;
}

uint64_t static MOAngelControllerWrapper.uiInternalOS.getter()
{
  if (one-time initialization token for uiInternalOS != -1) {
    swift_once();
  }
  return static MOAngelControllerWrapper.uiInternalOS;
}

uint64_t key path getter for MOAngelControllerWrapper.isVisible : MOAngelControllerWrapper@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for MOAngelControllerWrapper.isVisible : MOAngelControllerWrapper(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t MOAngelControllerWrapper.isVisible.getter()
{
  return MOAngelControllerWrapper.isVisible.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t MOAngelControllerWrapper.isVisible.setter()
{
  return MOAngelControllerWrapper.isVisible.setter();
}

{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v1 = v0;
  return static Published.subscript.setter();
}

uint64_t (*MOAngelControllerWrapper.isVisible.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOAngelControllerWrapper.$isVisible : MOAngelControllerWrapper(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x110))(v6);
}

uint64_t MOAngelControllerWrapper.$isVisible.getter()
{
  return MOAngelControllerWrapper.$isVisible.getter();
}

{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t MOAngelControllerWrapper.$isVisible.setter(uint64_t a1)
{
  return MOAngelControllerWrapper.$isVisible.setter(a1);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*MOAngelControllerWrapper.$isVisible.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isVisible;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t property wrapper backing initializer of MOAngelControllerWrapper.isExpanded()
{
  return Published.init(initialValue:)();
}

uint64_t key path getter for MOAngelControllerWrapper.isExpanded : MOAngelControllerWrapper@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for MOAngelControllerWrapper.isExpanded : MOAngelControllerWrapper(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t MOAngelControllerWrapper.isExpanded.getter()
{
  return MOAngelControllerWrapper.isVisible.getter();
}

uint64_t MOAngelControllerWrapper.isExpanded.setter()
{
  return MOAngelControllerWrapper.isVisible.setter();
}

uint64_t (*MOAngelControllerWrapper.isExpanded.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MOAngelControllerWrapper.isVisible.modify;
}

void MOAngelControllerWrapper.isVisible.modify(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t key path setter for MOAngelControllerWrapper.$isExpanded : MOAngelControllerWrapper(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __chkstk_darwin(v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x140))(v6);
}

uint64_t MOAngelControllerWrapper.$isExpanded.getter()
{
  return MOAngelControllerWrapper.$isVisible.getter();
}

uint64_t MOAngelControllerWrapper.$isExpanded.setter(uint64_t a1)
{
  return MOAngelControllerWrapper.$isVisible.setter(a1);
}

uint64_t (*MOAngelControllerWrapper.$isExpanded.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isExpanded;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MOAngelControllerWrapper.$isVisible.modify;
}

void MOAngelControllerWrapper.$isVisible.modify(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

id MOAngelControllerWrapper.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager;
  size_t v6 = self;
  uint64_t v7 = v0;
  *(void *)&v0[v5] = [v6 sharedInstance];
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter;
  *(void *)&v7[v8] = [self sharedInstance];
  *(void *)&v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState] = 0;
  *(void *)&v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_initialPresentRequestState] = 0;
  *(void *)&v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_contentOptions] = 0;
  uint64_t v9 = &v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_delegate];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = &v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isVisible];
  char v17 = 0;
  Published.init(initialValue:)();
  id v11 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v11(v10, v4, v1);
  uint64_t v12 = &v7[OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper__isExpanded];
  char v17 = 1;
  Published.init(initialValue:)();
  v11(v12, v4, v1);

  uint64_t v13 = (objc_class *)type metadata accessor for MOAngelControllerWrapper();
  v16.receiver = v7;
  v16.super_class = v13;
  return [super init];
}

Swift::Void __swiftcall MOAngelControllerWrapper.cancelSheetSelected()()
{
}

void wrapperDebugLog(_:)(uint64_t a1, unint64_t a2)
{
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "MOAngelControllerWrapper: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

Swift::Void __swiftcall MOAngelControllerWrapper.showBlankEntrySelected()()
{
}

id MOAngelControllerWrapper.cancelSheetSelected()(uint64_t a1, unint64_t a2, const char **a3)
{
  wrapperDebugLog(_:)(a1, a2);
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager);
  os_log_type_t v6 = *a3;

  return [v5 v6:v3];
}

uint64_t MOAngelControllerWrapper.selectedBundle(_:modifiedTitle:isPromptElligibleForTransfer:forContainer:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  uint64_t v50 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a1 labels];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v16 + 16)) {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    if (a3) {
      goto LABEL_7;
    }
  }
  else if (a3)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v17 = static MOSuggestionAssetCacheManager.shared;
  MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  uint64_t v18 = (*(uint64_t (**)(void))(*(void *)v17 + 240))();
  swift_bridgeObjectRelease();
  id v19 = a1;
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v18)
  {
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPrototype);
    v21.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v21.super.Class isa = 0;
  }
  id v22 = [objc_allocWithZone((Class)MOSuggestion) initWithBundle:v19 modifiedTitle:v20 isPromptElligibleForTransfer:a4 & 1 assetPrototypes:v21.super.isa];

  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(58);
  v23._id object = (void *)0x80000001001E7590;
  v23._uint64_t countAndFlagsBits = 0xD000000000000037;
  String.append(_:)(v23);
  id v24 = [v22 baseBundle];
  id v25 = [v24 bundleIdentifier];

  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = UUID.uuidString.getter();
  uint64_t v28 = v27;
  uint64_t v29 = v50;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v50);
  v30._uint64_t countAndFlagsBits = v26;
  v30._id object = v28;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 46;
  v31._id object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  wrapperDebugLog(_:)(v56, v57);
  swift_bridgeObjectRelease();
  id v32 = *(void **)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager);
  id v49 = v22;
  [v32 performTask:1 suggestion:v22 sender:v7];
  id v48 = *(id *)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  uint64_t v33 = MOSuggestionEngagementEventSelected;
  id v34 = [v32 getClientBundleIdentifierFor:v7];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  unint64_t v35 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1001DA0F0;
  unint64_t v37 = v36 + v35;
  id v38 = [v19 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v37, v13, v29);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v40 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  Class v41 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(v19);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, type metadata accessor for MOUsageContextType);
  Class v42 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v48 logSuggestionEngagementEvent:v33 clientIdentifier:v34 forBundles:isa uiContainer:v40 containerVisibleTime:v41 otherContext:v42];

  id v43 = [v19 setSuggestionEngagementEvent:v33];
  (*(void (**)(uint64_t *__return_ptr, id))((swift_isaMask & *v7) + 0xD8))(&v56, v43);
  if (v58)
  {
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)&v56, (uint64_t)v53);
    outlined destroy of Any?((uint64_t)&v56, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    uint64_t v44 = v54;
    uint64_t v45 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    (*(void (**)(uint64_t, uint64_t))(v45 + 32))(v44, v45);

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  else
  {

    return outlined destroy of Any?((uint64_t)&v56, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
  }
}

uint64_t MOAngelControllerWrapper.quickAddBundle(_:modifiedTitle:isPromptElligibleForTransfer:forContainer:)(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  LODWORD(v49) = a4;
  v48[1] = a2;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v14._id object = (void *)0x80000001001E75D0;
  v14._uint64_t countAndFlagsBits = 0xD000000000000036;
  String.append(_:)(v14);
  id v15 = [a1 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = UUID.uuidString.getter();
  uint64_t v18 = v17;
  id v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v50 = v10;
  v19(v13, v10);
  v20._uint64_t countAndFlagsBits = v16;
  v20._id object = v18;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 46;
  v21._id object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  wrapperDebugLog(_:)(v56, v57);
  swift_bridgeObjectRelease();
  id v22 = [a1 labels];
  if (v22)
  {
    uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v23 + 16)) {
      swift_bridgeObjectRetain();
    }
    p_ivar_lyt = &ThirdPartyMediaColorEffectView.ivar_lyt;
    swift_bridgeObjectRelease();
    if (a3) {
      goto LABEL_7;
    }
  }
  else
  {
    p_ivar_lyt = (void **)(&ThirdPartyMediaColorEffectView + 16);
    if (a3)
    {
LABEL_7:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v25 = static MOSuggestionAssetCacheManager.shared;
  MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  uint64_t v26 = (*(uint64_t (**)(void))(*(void *)v25 + 240))();
  swift_bridgeObjectRelease();
  id v27 = a1;
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v26)
  {
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPrototype);
    v29.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v29.super.Class isa = 0;
  }
  id v30 = objc_allocWithZone((Class)MOSuggestion);
  id v31 = [v30 initWithBundle:v27 modifiedTitle:v28 isPromptElligibleForTransfer:v49 & 1 assetPrototypes:v29.super.isa];

  id v32 = *(void **)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager);
  id v49 = v31;
  [v32 performTask:2 suggestion:v31 sender:v7];
  uint64_t v33 = *(void **)((char *)v7 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  uint64_t v34 = MOSuggestionEngagementEventQuickAddEntry;
  id v35 = [v32 getClientBundleIdentifierFor:v7];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  unint64_t v36 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1001DA0F0;
  unint64_t v38 = v37 + v36;
  id v39 = [v27 p_ivar_lyt[305]];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v38, v13, v50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v41 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  Class v42 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(v27);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, type metadata accessor for MOUsageContextType);
  Class v43 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v33 logSuggestionEngagementEvent:v34 clientIdentifier:v35 forBundles:isa uiContainer:v41 containerVisibleTime:v42 otherContext:v43];

  id v44 = [v27 setSuggestionEngagementEvent:v34];
  (*(void (**)(uint64_t *__return_ptr, id))((swift_isaMask & *v7) + 0xD8))(&v56, v44);
  if (v58)
  {
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)&v56, (uint64_t)v53);
    outlined destroy of Any?((uint64_t)&v56, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    uint64_t v45 = v54;
    uint64_t v46 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    (*(void (**)(uint64_t, uint64_t))(v46 + 32))(v45, v46);

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  else
  {

    return outlined destroy of Any?((uint64_t)&v56, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
  }
}

void MOAngelControllerWrapper.logInterstitialTap(_:forContainer:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  _StringGuts.grow(_:)(81);
  v10._id object = (void *)0x80000001001E7610;
  v10._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  String.append(_:)(v10);
  id v11 = [a1 bundleIdentifier:v28, v29];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = UUID.uuidString.getter();
  Swift::String v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15._uint64_t countAndFlagsBits = v12;
  v15._id object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 46;
  v16._id object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  wrapperDebugLog(_:)(v30, v31);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void **)(v4 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  uint64_t v18 = MOSuggestionEngagementEventThumbsUp;
  id v19 = [*(id *)(v4 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) getClientBundleIdentifierFor:v4];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001DA0F0;
  unint64_t v22 = v21 + v20;
  id v23 = [a1 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22, v9, v6);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v25 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  Class v26 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(a1);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, type metadata accessor for MOUsageContextType);
  Class v27 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 logSuggestionEngagementEvent:v18 clientIdentifier:v19 forBundles:isa uiContainer:v25 containerVisibleTime:v26 otherContext:v27];
}

id MOAngelControllerWrapper.removeBundle(_:forContainer:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(59);
  v10._id object = (void *)0x80000001001E7660;
  v10._uint64_t countAndFlagsBits = 0xD000000000000038;
  String.append(_:)(v10);
  id v11 = [a1 bundleIdentifier:v29, v30];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = UUID.uuidString.getter();
  Swift::String v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15._uint64_t countAndFlagsBits = v12;
  v15._id object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 46;
  v16._id object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  wrapperDebugLog(_:)(v31, v32);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void **)(v4 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  uint64_t v18 = MOSuggestionEngagementEventDeleted;
  id v19 = [*(id *)(v4 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) getClientBundleIdentifierFor:v4];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001DA0F0;
  unint64_t v22 = v21 + v20;
  id v23 = [a1 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22, v9, v6);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v25 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  Class v26 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(a1);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, type metadata accessor for MOUsageContextType);
  Class v27 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 logSuggestionEngagementEvent:v18 clientIdentifier:v19 forBundles:isa uiContainer:v25 containerVisibleTime:v26 otherContext:v27];

  return [a1 setSuggestionEngagementEvent:v18];
}

void MOAngelControllerWrapper.logViewedBundle(_:forContainer:)(void *a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = *(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  uint64_t v16 = MOSuggestionEngagementEventViewed;
  id v7 = [*(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) getClientBundleIdentifierFor:v1];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001DA0F0;
  unint64_t v10 = v9 + v8;
  id v11 = [a1 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v10, v6, v3);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  Class v14 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(a1);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, type metadata accessor for MOUsageContextType);
  Class v15 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 logSuggestionEngagementEvent:v16 clientIdentifier:v7 forBundles:isa uiContainer:v13 containerVisibleTime:v14 otherContext:v15];
}

uint64_t MOAngelControllerWrapper.selectedBundleFeedback(_:forContainer:)(void *a1, uint64_t a2, char *a3)
{
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  id v47 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v5 - 8);
  uint64_t v55 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for URL();
  uint64_t v50 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v46 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(74);
  v12._uint64_t countAndFlagsBits = 0xD000000000000047;
  v12._id object = (void *)0x80000001001E76A0;
  String.append(_:)(v12);
  id v13 = [a1 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = UUID.uuidString.getter();
  uint64_t v16 = v15;
  id v53 = *(void (**)(char *, uint64_t))(v9 + 8);
  v53(v11, v8);
  v17._uint64_t countAndFlagsBits = v14;
  v17._id object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 46;
  v18._id object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  wrapperDebugLog(_:)(v56, v57);
  swift_bridgeObjectRelease();
  id v49 = *(id *)(v3 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_engagementWriter);
  uint64_t v48 = MOSuggestionEngagementEventAnnotated;
  id v19 = [*(id *)(v3 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) getClientBundleIdentifierFor:v3];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UUID>);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001DA0F0;
  unint64_t v22 = v21 + v20;
  id v23 = v47;
  id v24 = [v47 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22, v11, v8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v26 = String._bridgeToObjectiveC()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  Class v27 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(v23);
  type metadata accessor for MOUsageContextType(0);
  lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(&lazy protocol witness table cache variable for type MOUsageContextType and conformance MOUsageContextType, type metadata accessor for MOUsageContextType);
  uint64_t v52 = (char *)&type metadata for Any + 8;
  Class v28 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v29 = v48;
  [v49 logSuggestionEngagementEvent:v48 clientIdentifier:v19 forBundles:isa uiContainer:v26 containerVisibleTime:v27 otherContext:v28];

  [v23 setSuggestionEngagementEvent:v29];
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  uint64_t v56 = 0xD00000000000001FLL;
  unint64_t v57 = 0x80000001001E76F0;
  id v30 = [v23 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v31 = UUID.uuidString.getter();
  uint64_t v33 = v32;
  uint64_t v34 = v8;
  uint64_t v35 = v54;
  v53(v11, v34);
  v36._uint64_t countAndFlagsBits = v31;
  v36._id object = v33;
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t)v55;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v38 = v50;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v37, 1, v35) == 1) {
    return outlined destroy of Any?(v37, &demangling cache variable for type metadata for URL?);
  }
  NSString v40 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v46, v37, v35);
  id v41 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v42);
  id v44 = v43;
  specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for UIApplicationOpenExternalURLOptionsKey(0);
  lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
  Class v45 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v41 openURL:v44 options:v45 completionHandler:0];

  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v40, v35);
}

Swift::Void __swiftcall MOAngelControllerWrapper.expandedChanged(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  BOOL v4 = a1;
  if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120))() & 1) != v4) {
    (*(void (**)(BOOL))((swift_isaMask & *v1) + 0x128))(v4);
  }
  if (a1) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = 1;
  }
  _StringGuts.grow(_:)(53);
  v6._id object = (void *)0x80000001001E7710;
  v6._uint64_t countAndFlagsBits = 0xD000000000000032;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = MOSuggestionSheetViewState.toString.getter(v5);
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 46;
  v8._id object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  wrapperDebugLog(_:)(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
  if (v5 != *(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState))
  {
    [*(id *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) sendSuggestionSheetStateUpdate:v5 sender:v2];
    *(void *)((char *)v2 + v9) = v5;
  }
}

uint64_t MOSuggestionSheetViewState.toString.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x455353494D534944;
    case 2:
      return 0x455243534C4C5546;
    case 1:
      return 1262830928;
  }
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

Swift::Void __swiftcall MOAngelControllerWrapper.visibilityChanged(_:)(Swift::Bool a1)
{
  Swift::String v2 = v1;
  if (a1)
  {
    if ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120))()) {
      uint64_t v3 = 2;
    }
    else {
      uint64_t v3 = 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  _StringGuts.grow(_:)(55);
  v4._id object = (void *)0x80000001001E7750;
  v4._uint64_t countAndFlagsBits = 0xD000000000000034;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = MOSuggestionSheetViewState.toString.getter(v3);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 46;
  v6._id object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  wrapperDebugLog(_:)(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState;
  if (v3 != *(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_currentViewState))
  {
    [*(id *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) sendSuggestionSheetStateUpdate:v3 sender:v2];
    *(void *)((char *)v2 + v7) = v3;
  }
}

uint64_t MOAngelControllerWrapper.performFeedbackOnBundle(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v2 - 8);
  Class v42 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  uint64_t v41 = v5;
  __chkstk_darwin(v4);
  id v39 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(74);
  v11._uint64_t countAndFlagsBits = 0xD000000000000047;
  v11._id object = (void *)0x80000001001E76A0;
  String.append(_:)(v11);
  Swift::String v12 = *(uint64_t (**)(void))(*(void *)a1 + 104);
  id v13 = (void *)v12();
  id v14 = [v13 bundleIdentifier];

  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = UUID.uuidString.getter();
  Swift::String v17 = v16;
  Swift::String v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  v19._uint64_t countAndFlagsBits = v15;
  v19._id object = v17;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 46;
  v20._id object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  wrapperDebugLog(_:)(v43, v44);
  swift_bridgeObjectRelease();
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  uint64_t v21 = swift_bridgeObjectRelease();
  uint64_t v43 = 0xD00000000000001FLL;
  unint64_t v44 = 0x80000001001E76F0;
  unint64_t v22 = (void *)((uint64_t (*)(uint64_t))v12)(v21);
  uint64_t v23 = v40;
  id v24 = v22;
  id v25 = [v22 bundleIdentifier];

  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = UUID.uuidString.getter();
  Class v28 = v27;
  v18(v10, v7);
  uint64_t v29 = v41;
  v30._uint64_t countAndFlagsBits = v26;
  v30._id object = v28;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = (uint64_t)v42;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v23) == 1) {
    return outlined destroy of Any?(v31, &demangling cache variable for type metadata for URL?);
  }
  uint64_t v33 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v39, v31, v23);
  id v34 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v35);
  uint64_t v37 = v36;
  specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for UIApplicationOpenExternalURLOptionsKey(0);
  lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 openURL:v37 options:isa completionHandler:0];

  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v33, v23);
}

Swift::Bool __swiftcall MOAngelControllerWrapper.isPublicUI()()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) getClientBundleIdentifierFor:v0];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    if (v3 != 0xD000000000000011 || v5 != 0x80000001001E7790)
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      char v6 = v7 ^ 1;
      return v6 & 1;
    }
    swift_bridgeObjectRelease();
  }
  char v6 = 0;
  return v6 & 1;
}

MomentsUIService::MOClientPresentationDetails __swiftcall MOAngelControllerWrapper.getClientPresentationDetails()()
{
  char v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1B0))();
  Swift::Int v2 = *(void *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_contentOptions);
  Swift::Bool v3 = v1 & 1;
  result.content.unint64_t rawValue = v2;
  result.isPublicUI = v3;
  return result;
}

Swift::Bool __swiftcall MOAngelControllerWrapper.isSourceJournalComposer()()
{
  return *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_initialPresentRequestState) == 1;
}

Swift::String_optional __swiftcall MOAngelControllerWrapper.clientName()()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) getClientBundleIdentifierFor:v0];
  if (!v1) {
    goto LABEL_5;
  }
  Swift::Int v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  id v6 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v7 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v3, (uint64_t)v5, 1);
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = v3;
  v8._id object = v5;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 572538144;
  v9._id object = (void *)0xE400000000000000;
  String.append(_:)(v9);
  if (!v7)
  {
    v20._uint64_t countAndFlagsBits = 0;
    v20._id object = (void *)0xE000000000000000;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 34;
    v21._id object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    wrapperDebugLog(_:)(0x614E746E65696C63, 0xEF20726F6620656DLL);
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v17 = 0;
    Swift::String v19 = 0;
    goto LABEL_6;
  }
  id v10 = [v7 localizedName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = v12;

  v14._uint64_t countAndFlagsBits = v11;
  v14._id object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 34;
  v15._id object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  wrapperDebugLog(_:)(0x614E746E65696C63, 0xEF20726F6620656DLL);
  swift_bridgeObjectRelease();
  id v16 = [v7 localizedName];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v19 = v18;

LABEL_6:
  uint64_t v22 = v17;
  uint64_t v23 = v19;
  result.value._id object = v23;
  result.value._uint64_t countAndFlagsBits = v22;
  return result;
}

Swift::String_optional __swiftcall MOAngelControllerWrapper.clientBundleIdentifier()()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) getClientBundleIdentifierFor:v0];
  if (v1)
  {
    Swift::Int v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v6 = v3;
  id v7 = v5;
  result.value._id object = v7;
  result.value._uint64_t countAndFlagsBits = v6;
  return result;
}

id MOAngelControllerWrapper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOAngelControllerWrapper();
  return [super dealloc];
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance MOAngelControllerWrapper@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MOAngelControllerWrapper();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id MOAngelControllerWrapper.isClientVisible.getter()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) isClientVisibleFor:v0];
}

Swift::Void __swiftcall MOAngelControllerWrapper.shouldRefreshEvents()()
{
  if ([*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_serverManager) isClientVisibleFor:v0])
  {
    (*(void (**)(void *__return_ptr))((swift_isaMask & *v0) + 0xD8))(v6);
    if (v6[3])
    {
      outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v6, (uint64_t)v3);
      outlined destroy of Any?((uint64_t)v6, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
      uint64_t v1 = v4;
      uint64_t v2 = v5;
      __swift_project_boxed_opaque_existential_1(v3, v4);
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    }
    else
    {
      outlined destroy of Any?((uint64_t)v6, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    }
    wrapperDebugLog(_:)(0xD000000000000027, 0x80000001001E77F0);
  }
  else
  {
    wrapperDebugLog(_:)(0xD00000000000003BLL, 0x80000001001E77B0);
  }
}

uint64_t MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

{
  uint64_t v1;
  uint64_t v2;

  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

uint64_t MOAngelControllerWrapper.willReturnAssets(for:withTypes:)()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(void *)(v2 + 16) = partial apply for closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  *(void *)(v2 + 24) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAssetsBundle?);
  void *v3 = v0;
  v3[1] = MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x80000001001E7820, partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:), v2, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;

  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(void *)(v2 + 16) = partial apply for closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  *(void *)(v2 + 24) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOSuggestionAsset]?);
  void *v3 = v0;
  v3[1] = MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x80000001001E7820, partial apply for thunk for @callee_guaranteed (@in_guaranteed URL) -> (), v2, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(v2);
}

uint64_t closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = [a2 baseBundle];
  unint64_t v10 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);

  if (v10)
  {
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v11 = static MOSuggestionAssetCacheManager.shared;
    uint64_t v12 = (*(uint64_t (**)(void))((swift_isaMask & *a3) + 0x1B0))() & 1;
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v15 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    *(void *)(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
    uint64_t v16 = one-time initialization token for defaultQueue;
    swift_retain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void (**)(unint64_t, void, id, uint64_t, uint64_t (*)(unint64_t), uint64_t))(*(void *)v11 + 232);
    id v18 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
    v17(v10, 0, v18, v12, partial apply for closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), v15);
    swift_release();
    swift_release();

    return swift_bridgeObjectRelease();
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static MOAngelLogger.assets);
    Swift::String v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "(Legacy Support) No assets to pack as expected", v23, 2u);
      swift_slowDealloc();
    }

    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(unint64_t a1)
{
  if (!a1)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      goto LABEL_79;
    }
    goto LABEL_8;
  }
  unint64_t v1 = a1;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    goto LABEL_45;
  }
  while (1)
  {
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    unint64_t v5 = v1 >> 62;
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      if (v5)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v7 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v76[0] = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "(Legacy Support) Assets to send n=%ld", v6, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v77 = &_swiftEmptyDictionarySingleton;
    id v75 = [objc_allocWithZone((Class)MOSuggestionAssetsBundle) init];
    if (!v5)
    {
      uint64_t v12 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12) {
        break;
      }
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    if (!v12) {
      break;
    }
LABEL_14:
    if (v12 < 1) {
      goto LABEL_78;
    }
    unint64_t v72 = v1 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v13 = 0;
    unint64_t v71 = v1;
    while (1)
    {
      if (v72) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(v1 + 8 * v13 + 32);
      }
      id v16 = v15;
      id v17 = [v15 assetType];
      id v18 = (id)specialized static MOSuggestionAssetReference.consolidatedGroupType(_:)((uint64_t)v17);

      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v20 = (void *)Strong;
        MOAngelControllerWrapper.grantAccessToAssets(_:)(v1);
      }
      uint64_t v21 = (uint64_t)v77;
      if (v77[2])
      {
        swift_bridgeObjectRetain();
        specialized __RawDictionaryStorage.find<A>(_:)(v18);
        char v23 = v22;
        swift_bridgeObjectRelease();
        if (v23)
        {
          id v24 = v18;
          uint64_t v26 = specialized Dictionary.subscript.modify(v76, v24);
          if (*v25)
          {
            Class v27 = v25;
            id v16 = v16;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          ((void (*)(uint64_t *, void))v26)(v76, 0);

          goto LABEL_18;
        }
      }
      unint64_t v1 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1001DA250;
      *(void *)(v28 + 32) = v16;
      v76[0] = v28;
      specialized Array._endMutation()();
      uint64_t v29 = v76[0];
      id v30 = v18;
      id v31 = v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v76[0] = v21;
      unint64_t v77 = (void *)0x8000000000000000;
      unint64_t v34 = specialized __RawDictionaryStorage.find<A>(_:)(v30);
      uint64_t v35 = *(void *)(v21 + 16);
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        break;
      }
      char v38 = v33;
      if (*(void *)(v21 + 24) >= v37)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v41 = (void *)v76[0];
          if ((v33 & 1) == 0) {
            goto LABEL_38;
          }
        }
        else
        {
          specialized _NativeDictionary.copy()();
          uint64_t v41 = (void *)v76[0];
          if ((v38 & 1) == 0) {
            goto LABEL_38;
          }
        }
      }
      else
      {
        specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v37, isUniquelyReferenced_nonNull_native);
        uint64_t v39 = specialized __RawDictionaryStorage.find<A>(_:)(v30);
        if ((v38 & 1) != (v40 & 1))
        {
          type metadata accessor for MOSuggestionAssetsType(0);
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v34 = v39;
        uint64_t v41 = (void *)v76[0];
        if ((v38 & 1) == 0)
        {
LABEL_38:
          v41[(v34 >> 6) + 8] |= 1 << v34;
          uint64_t v42 = 8 * v34;
          *(void *)(v41[6] + v42) = v30;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v44 = __OFADD__(v43, 1);
          uint64_t v45 = v43 + 1;
          if (v44) {
            goto LABEL_44;
          }
          v41[2] = v45;
          id v46 = v30;
          goto LABEL_17;
        }
      }
      uint64_t v14 = v41[7];
      swift_bridgeObjectRelease();
      *(void *)(v14 + 8 * v34) = v29;
LABEL_17:
      unint64_t v77 = v41;

      swift_bridgeObjectRelease();
      uint64_t v12 = v1;
      unint64_t v1 = v71;
LABEL_18:
      if (v12 == ++v13)
      {
        swift_bridgeObjectRelease();
        id v47 = v77;
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once();
  }
  swift_bridgeObjectRelease();
  id v47 = &_swiftEmptyDictionarySingleton;
LABEL_48:
  int64_t v48 = 0;
  uint64_t v73 = v47 + 64;
  uint64_t v49 = 1 << v47[32];
  uint64_t v50 = -1;
  if (v49 < 64) {
    uint64_t v50 = ~(-1 << v49);
  }
  unint64_t v51 = v50 & *((void *)v47 + 8);
  int64_t v74 = (unint64_t)(v49 + 63) >> 6;
  id v70 = v47;
  uint64_t v52 = &selRef_statisticsForType_;
  while (2)
  {
    if (v51)
    {
      unint64_t v54 = __clz(__rbit64(v51));
      v51 &= v51 - 1;
      unint64_t v55 = v54 | (v48 << 6);
LABEL_69:
      uint64_t v59 = 8 * v55;
      unint64_t v60 = *(void *)(*((void *)v47 + 7) + v59);
      id v61 = *(id *)(*((void *)v47 + 6) + v59);
      swift_bridgeObjectRetain_n();
      id v62 = v61;
      id v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = swift_slowAlloc();
        v76[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v65 = 136315394;
        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(v65 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v66, v67, v76);

        swift_bridgeObjectRelease();
        *(_WORD *)(v65 + 12) = 2048;
        if (v60 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v68 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        *(void *)(v65 + 14) = v68;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "(Legacy Support) Packing AssetBundle for type %s with count n=%ld", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v47 = v70;
        uint64_t v52 = &selRef_statisticsForType_;
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v75 v52[173]:isa:v62];

      continue;
    }
    break;
  }
  int64_t v56 = v48 + 1;
  if (__OFADD__(v48, 1))
  {
    __break(1u);
    goto LABEL_77;
  }
  if (v56 >= v74) {
    goto LABEL_74;
  }
  unint64_t v57 = *(void *)&v73[8 * v56];
  ++v48;
  if (v57) {
    goto LABEL_68;
  }
  int64_t v48 = v56 + 1;
  if (v56 + 1 >= v74) {
    goto LABEL_74;
  }
  unint64_t v57 = *(void *)&v73[8 * v48];
  if (v57) {
    goto LABEL_68;
  }
  int64_t v48 = v56 + 2;
  if (v56 + 2 >= v74) {
    goto LABEL_74;
  }
  unint64_t v57 = *(void *)&v73[8 * v48];
  if (v57)
  {
LABEL_68:
    unint64_t v51 = (v57 - 1) & v57;
    unint64_t v55 = __clz(__rbit64(v57)) + (v48 << 6);
    goto LABEL_69;
  }
  int64_t v58 = v56 + 3;
  if (v58 >= v74)
  {
LABEL_74:
    swift_release();
    v76[0] = (uint64_t)v75;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);
    return CheckedContinuation.resume(returning:)();
  }
  unint64_t v57 = *(void *)&v73[8 * v58];
  if (v57)
  {
    int64_t v48 = v58;
    goto LABEL_68;
  }
  while (1)
  {
    int64_t v48 = v58 + 1;
    if (__OFADD__(v58, 1)) {
      break;
    }
    if (v48 >= v74) {
      goto LABEL_74;
    }
    unint64_t v57 = *(void *)&v73[8 * v48];
    ++v58;
    if (v57) {
      goto LABEL_68;
    }
  }
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  swift_once();
LABEL_8:
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.assets);
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "(Legacy Support) No assets to pack", v11, 2u);
    swift_slowDealloc();
  }

  v76[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);
  return CheckedContinuation.resume(returning:)();
}

uint64_t MOAngelControllerWrapper.grantAccessToAssets(_:)(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  unint64_t v5 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v96 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v96 - v10;
  __chkstk_darwin(v9);
  id v102 = (char *)&v96 - v12;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v118 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v111 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v110 = (char *)&v96 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  id v99 = (char *)&v96 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v98 = (char *)&v96 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  id v101 = (char *)&v96 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  id v117 = (char *)&v96 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  Swift::String v100 = (char *)&v96 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  CGRect v109 = (char *)&v96 - v29;
  __chkstk_darwin(v28);
  CGRect v108 = (char *)&v96 - v30;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v31 = result;
  }
  else
  {
    uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  unint64_t v97 = v5;
  if (v31)
  {
    if (v31 >= 1)
    {
      uint64_t v103 = v8;
      uint64_t v104 = v11;
      uint64_t v33 = 0;
      unint64_t v114 = a1 & 0xC000000000000001;
      uint64_t v34 = v118;
      uint64_t v116 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
      id v119 = v118 + 56;
      id v120 = (unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 32);
      uint64_t v106 = v118 + 8;
      CGRect v107 = (void (**)(char *, char *, uint64_t))(v118 + 16);
      uint64_t v35 = (char *)_swiftEmptyArrayStorage;
      BOOL v36 = &selRef_collectionView_didSelectItemAtIndexPath_;
      uint64_t v112 = v31;
      unint64_t v113 = (char *)&type metadata for Swift.AnyObject + 8;
      uint64_t v115 = (void *)a1;
      uint64_t v37 = (uint64_t)v102;
      while (1)
      {
        unint64_t v39 = (unint64_t)v35;
        id v40 = v114 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v33 + 32);
        id v41 = v40;
        id v122 = [v40 v36[173]];
        int v42 = swift_dynamicCast();
        uint64_t v43 = *(void (**)(uint64_t, void, uint64_t, uint64_t))v119;
        id v121 = v41;
        if (v42)
        {
          v43(v37, 0, 1, v13);
          if ((*v116)(v37, 1, v13) != 1)
          {
            BOOL v44 = *v120;
            uint64_t v45 = v108;
            (*v120)(v108, v37, v13);
            (*v107)(v109, v45, v13);
            uint64_t v35 = (char *)v39;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v35 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v39 + 16) + 1, 1, v39);
            }
            uint64_t v38 = v112;
            unint64_t v47 = *((void *)v35 + 2);
            unint64_t v46 = *((void *)v35 + 3);
            if (v47 >= v46 >> 1) {
              uint64_t v35 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1, (unint64_t)v35);
            }
            *((void *)v35 + 2) = v47 + 1;
            v44(&v35[((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v47], (uint64_t)v109, v13);

            (*(void (**)(char *, uint64_t))(v34 + 8))(v108, v13);
            goto LABEL_7;
          }
        }
        else
        {
          v43(v37, 1, 1, v13);
        }
        outlined destroy of Any?(v37, &demangling cache variable for type metadata for URL?);
        id v48 = [v41 v36[173]];
        self;
        uint64_t v49 = (void *)swift_dynamicCastObjCClass();
        if (!v49) {
          break;
        }
        id v50 = [v49 iconURL];
        if (!v50)
        {
          uint64_t v54 = (uint64_t)v104;
          v43((uint64_t)v104, 1, 1, v13);
LABEL_29:
          swift_unknownObjectRelease();
          outlined destroy of Any?(v54, &demangling cache variable for type metadata for URL?);
          BOOL v36 = &selRef_collectionView_didSelectItemAtIndexPath_;
          id v41 = v121;
LABEL_30:
          id v58 = [v41 v36[173]];
          self;
          uint64_t v59 = (void *)swift_dynamicCastObjCClass();
          if (!v59)
          {
            swift_unknownObjectRelease();
            goto LABEL_42;
          }
          id v60 = [v59 imageURL];
          if (!v60)
          {
            uint64_t v64 = (uint64_t)v103;
            v43((uint64_t)v103, 1, 1, v13);
LABEL_41:
            swift_unknownObjectRelease();
            outlined destroy of Any?(v64, &demangling cache variable for type metadata for URL?);
            BOOL v36 = &selRef_collectionView_didSelectItemAtIndexPath_;
            id v41 = v121;
LABEL_42:
            id v68 = [v41 v36[173]];
            self;
            uint64_t v69 = (void *)swift_dynamicCastObjCClass();
            if (v69)
            {
              id v70 = v69;
              id v71 = [v69 lightURL];
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              unint64_t v72 = v39;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v72 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v39 + 16) + 1, 1, v39);
              }
              unint64_t v74 = *(void *)(v72 + 16);
              unint64_t v73 = *(void *)(v72 + 24);
              unint64_t v75 = v72;
              if (v74 >= v73 >> 1) {
                unint64_t v75 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1, v72);
              }
              *(void *)(v75 + 16) = v74 + 1;
              unint64_t v76 = (*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
              uint64_t v77 = *(void *)(v118 + 72);
              unint64_t v78 = *(void (**)(unint64_t, char *, uint64_t))(v118 + 32);
              v78(v75 + v76 + v77 * v74, v110, v13);
              id v79 = [v70 darkURL];
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              unint64_t v81 = *(void *)(v75 + 16);
              unint64_t v80 = *(void *)(v75 + 24);
              if (v81 >= v80 >> 1) {
                unint64_t v75 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1, v75);
              }
              double v82 = v111;
              uint64_t v38 = v112;
              *(void *)(v75 + 16) = v81 + 1;
              v78(v75 + v76 + v81 * v77, v82, v13);
              uint64_t v35 = (char *)v75;

              swift_unknownObjectRelease();
              uint64_t v34 = v118;
              uint64_t v37 = (uint64_t)v102;
              BOOL v36 = &selRef_collectionView_didSelectItemAtIndexPath_;
            }
            else
            {

              swift_unknownObjectRelease();
              uint64_t v35 = (char *)v39;
              uint64_t v38 = v112;
            }
            goto LABEL_7;
          }
          id v61 = v60;
          id v62 = v117;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          id v63 = *v120;
          uint64_t v64 = (uint64_t)v103;
          (*v120)(v103, (uint64_t)v62, v13);
          v43(v64, 0, 1, v13);
          if ((*v116)(v64, 1, v13) == 1) {
            goto LABEL_41;
          }
          uint64_t v65 = v98;
          v63(v98, v64, v13);
          (*v107)(v99, v65, v13);
          uint64_t v35 = (char *)v39;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v35 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v39 + 16) + 1, 1, v39);
          }
          uint64_t v38 = v112;
          unint64_t v67 = *((void *)v35 + 2);
          unint64_t v66 = *((void *)v35 + 3);
          if (v67 >= v66 >> 1) {
            uint64_t v35 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1, (unint64_t)v35);
          }
          *((void *)v35 + 2) = v67 + 1;
          v63(&v35[((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v67], (uint64_t)v99, v13);
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v34 + 8))(v98, v13);
          goto LABEL_38;
        }
        unint64_t v51 = v50;
        uint64_t v52 = v117;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        id v53 = *v120;
        uint64_t v54 = (uint64_t)v104;
        (*v120)(v104, (uint64_t)v52, v13);
        v43(v54, 0, 1, v13);
        if ((*v116)(v54, 1, v13) == 1) {
          goto LABEL_29;
        }
        unint64_t v55 = v100;
        v53(v100, v54, v13);
        (*v107)(v101, v55, v13);
        uint64_t v35 = (char *)v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v35 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v39 + 16) + 1, 1, v39);
        }
        uint64_t v38 = v112;
        unint64_t v57 = *((void *)v35 + 2);
        unint64_t v56 = *((void *)v35 + 3);
        if (v57 >= v56 >> 1) {
          uint64_t v35 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1, (unint64_t)v35);
        }
        *((void *)v35 + 2) = v57 + 1;
        v53(&v35[((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v57], (uint64_t)v101, v13);
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v34 + 8))(v100, v13);
LABEL_38:
        BOOL v36 = &selRef_collectionView_didSelectItemAtIndexPath_;
LABEL_7:
        ++v33;
        a1 = (unint64_t)v115;
        if (v38 == v33)
        {
          swift_bridgeObjectRelease();
          goto LABEL_52;
        }
      }
      swift_unknownObjectRelease();
      goto LABEL_30;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = (char *)_swiftEmptyArrayStorage;
LABEL_52:
    uint64_t v83 = *((void *)v35 + 2);
    uint64_t v115 = v35;
    if (v83)
    {
      id v84 = *(void **)(v118 + 16);
      NSString v85 = &v35[(*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80)];
      id v86 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56);
      os_log_type_t v87 = *(void *)(v118 + 72);
      v118 += 16;
      id v119 = v87;
      id v120 = (unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 32);
      id v121 = v84;
      uint64_t v116 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 16);
      id v88 = (void (**)(char *, uint64_t))(v118 - 8);
      unint64_t v114 = (v118 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      id v89 = v97;
      unint64_t v90 = v117;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v121)(v89, v85, v13);
        id v91 = *v86;
        (*v86)(v89, 0, 1, v13);
        if ((*v120)(v89, 1, v13) == 1) {
          break;
        }
        (*v116)((uint64_t)v90, (uint64_t)v89, v13);
        id v92 = [self sharedInstance];
        URL._bridgeToObjectiveC()(v93);
        id v95 = v94;
        [v92 grantSandboxAccessFor:v94 sender:v105];

        (*v88)(v90, v13);
        v85 += v119;
        if (!--v83) {
          goto LABEL_58;
        }
      }
    }
    else
    {
      id v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56);
LABEL_58:
      v91(v97, 1, 1, v13);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[3] = a1;
  v4[4] = a4;
  void v4[5] = _Block_copy(aBlock);
  uint64_t v8 = 0;
  if (a2)
  {
    type metadata accessor for MOSuggestionAssetsType(0);
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  v4[6] = v8;
  id v9 = a1;
  id v10 = a4;
  return _swift_task_switch(@objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

{
  void *v4;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v12;

  v4[3] = a1;
  v4[4] = a4;
  void v4[5] = _Block_copy(aBlock);
  uint64_t v8 = 0;
  if (a2)
  {
    type metadata accessor for MOSuggestionAssetsType(0);
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  v4[6] = v8;
  id v9 = a1;
  id v10 = a4;
  return _swift_task_switch(@objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

uint64_t @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *(void *)(v2 + 16) = closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)partial apply;
  *(void *)(v2 + 24) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAssetsBundle?);
  void *v3 = v0;
  v3[1] = @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x80000001001E7820, partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:), v2, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v1 + 80) = *(void *)(v1 + 16);
  swift_task_dealloc();
  return _swift_task_switch(@objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

{
  void *v0;
  void *v1;
  void (**v2)(void, void);
  void *v3;
  void *v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = (void (**)(void, void))v0[5];
  uint64_t v4 = (void *)v0[3];
  uint64_t v3 = (void *)v0[4];
  swift_bridgeObjectRelease();

  ((void (**)(void, void *))v2)[2](v2, v1);
  _Block_release(v2);

  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;

  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *(void *)(v2 + 16) = closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)partial apply;
  *(void *)(v2 + 24) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOSuggestionAsset]?);
  void *v3 = v0;
  v3[1] = @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x80000001001E7820, partial apply for specialized closure #1 in MOAngelControllerWrapper.continuationWrapper<A>(action:), v2, v4);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v1 + 80) = *(void *)(v1 + 16);
  swift_task_dealloc();
  return _swift_task_switch(@objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), 0, 0);
}

{
  void *v0;
  Class isa;
  void *v2;
  void *v3;
  void (**v4)(void, void);
  uint64_t (*v5)(void);
  uint64_t v7;

  Class isa = (Class)v0[10];
  uint64_t v3 = (void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  swift_bridgeObjectRelease();

  if (isa)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionAsset);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = (void (**)(void, void))v0[5];
  ((void (**)(void, Class))v4)[2](v4, isa);

  _Block_release(v4);
  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(unint64_t a1, void *a2, void *a3)
{
  unint64_t v72 = a3;
  unint64_t v79 = a1;
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MOSuggestionAsset]?, Never>);
  uint64_t v75 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v74 = v4;
  double v82 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v73 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v8;
  __chkstk_darwin(v7);
  uint64_t v83 = (char *)&v63 - v9;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = v11[8];
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v81 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v63 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v63 - v20;
  UUID.init()();
  id v70 = a2;
  id v22 = [a2 baseBundle];
  unint64_t v23 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);

  id v84 = v21;
  if (v23)
  {
    uint64_t v69 = v6;
    __chkstk_darwin(v24);
    *(&v63 - 2) = (uint64_t)v21;
    uint64_t v77 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay16MomentsUIService26MOSuggestionAssetReferenceCG_AHs5NeverOTg5((void (*)(uint64_t *__return_ptr, uint64_t *))partial apply for closure #1 in Array<A>.withTransferID(uuid:), (uint64_t)(&v63 - 4), v23);
    swift_bridgeObjectRelease();
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static MOAngelLogger.assets);
    uint64_t v26 = (void (*)(uint64_t, char *, uint64_t))v11[2];
    unint64_t v67 = v11 + 2;
    unint64_t v66 = v26;
    v26((uint64_t)v16, v21, v10);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    unint64_t v80 = v11;
    uint64_t v78 = v5;
    if (v29)
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      v87[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v31 = UUID.uuidString.getter();
      uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v31, v32, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v68 = (void (*)(char *, uint64_t))v80[1];
      v68(v16, v10);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[MOAngelControllerWrapper.willReturnAssets] Starting sheet processing for transferID=%s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v21 = v84;
      swift_slowDealloc();
    }
    else
    {
      id v68 = (void (*)(char *, uint64_t))v11[1];
      v68(v16, v10);
    }

    uint64_t v41 = v69;
    uint64_t v64 = v12;
    uint64_t v76 = v10;
    int v42 = v83;
    Date.init()();
    type metadata accessor for MOSuggestionAssetAnalytics.AssetTransferEvent();
    uint64_t v69 = swift_allocBox();
    uint64_t v44 = v43;
    id v45 = [v70 baseBundle];
    uint64_t v46 = (uint64_t)v81;
    uint64_t v47 = v10;
    id v48 = v66;
    v66((uint64_t)v81, v21, v47);
    unint64_t v49 = (unint64_t)v77;
    swift_bridgeObjectRetain();
    MOSuggestionAssetAnalytics.AssetTransferEvent.init(bundle:references:transferID:)(v45, v49, v46, v44);
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    id v70 = (id)static MOSuggestionAssetCacheManager.shared;
    LOBYTE(v65) = (*(uint64_t (**)(void))((swift_isaMask & *v72) + 0x1B0))() & 1;
    unsigned int v65 = v65;
    uint64_t v63 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v50 = v73;
    uint64_t v51 = v78;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v73, v42, v78);
    uint64_t v52 = v76;
    v48(v46, v21, v76);
    uint64_t v53 = v75;
    (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v82, v79, v85);
    unint64_t v54 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    unint64_t v55 = (v71 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v56 = (*((unsigned __int8 *)v80 + 80) + v55 + 8) & ~(unint64_t)*((unsigned __int8 *)v80 + 80);
    unint64_t v79 = (v64 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v57 = (*(unsigned __int8 *)(v53 + 80) + v79 + 8) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    uint64_t v58 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v58 + v54, v50, v51);
    *(void *)(v58 + v55) = v69;
    ((void (*)(unint64_t, char *, uint64_t))v80[4])(v58 + v56, v81, v52);
    *(void *)(v58 + v79) = v63;
    (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v58 + v57, v82, v85);
    uint64_t v59 = one-time initialization token for defaultQueue;
    swift_retain();
    swift_retain();
    if (v59 != -1) {
      swift_once();
    }
    id v60 = *(void (**)(void *, void, id, void, uint64_t (*)(unint64_t), uint64_t))(*(void *)v70 + 232);
    id v61 = (id)static MOSuggestionAssetCacheManager.defaultQueue;
    v60(v77, 0, v61, v65, partial apply for closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:), v58);
    swift_bridgeObjectRelease();
    swift_release();

    (*(void (**)(char *, uint64_t))(v41 + 8))(v83, v78);
    v68(v84, v76);
    swift_release();
    return swift_release();
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.assets);
    ((void (*)(char *, char *, uint64_t))v11[2])(v19, v21, v10);
    uint64_t v34 = Logger.logObject.getter();
    uint64_t v35 = v11;
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      v87[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v38 = UUID.uuidString.getter();
      uint64_t v86 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v39, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v40 = (void (*)(char *, uint64_t))v35[1];
      v40(v19, v10);
      _os_log_impl((void *)&_mh_execute_header, v34, v36, "[MOAngelControllerWrapper.willReturnAssets] Failed to initiate transferID=%s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v40 = (void (*)(char *, uint64_t))v35[1];
      v40(v19, v10);
    }

    v87[0] = 0;
    CheckedContinuation.resume(returning:)();
    return ((uint64_t (*)(char *, uint64_t))v40)(v84, v10);
  }
}

uint64_t closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a6;
  uint64_t v38 = a5;
  uint64_t v39 = a4;
  unint64_t v44 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v40 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MOSuggestionAssetAnalytics.AssetTransferEvent();
  uint64_t v10 = v9 - 8;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v42 = *(void *)(v17 - 8);
  uint64_t v43 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_projectBox();
  Date.init()();
  uint64_t v41 = v19;
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  swift_beginAccess();
  *(void *)(v20 + *(int *)(v10 + 44)) = v22;
  swift_beginAccess();
  outlined init with copy of MOSuggestionAssetAnalytics.AssetTransferEvent(v20, (uint64_t)v16);
  NSString v23 = String._bridgeToObjectiveC()();
  outlined init with copy of MOSuggestionAssetAnalytics.AssetTransferEvent((uint64_t)v16, (uint64_t)v14);
  unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v25 = swift_allocObject();
  outlined init with take of MOSuggestionAssetAnalytics.AssetTransferEvent((uint64_t)v14, v25 + v24);
  aBlock[4] = (uint64_t)partial apply for closure #1 in MOSuggestionAssetAnalytics.AssetTransferEvent.send();
  aBlock[5] = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> (@owned [String : NSObject]?);
  void aBlock[3] = (uint64_t)&block_descriptor_93_0;
  uint64_t v26 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v26);

  outlined destroy of MOSuggestionAssetAnalytics.AssetTransferEvent((uint64_t)v16);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  __swift_project_value_buffer(v27, (uint64_t)static MOAngelLogger.assets);
  uint64_t v28 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v8, v39, v6);
  BOOL v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315394;
    uint64_t v32 = UUID.uuidString.getter();
    uint64_t v46 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
    *(_WORD *)(v31 + 12) = 2048;
    uint64_t v46 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "[MOAngelControllerWrapper.willReturnAssets] Finishing sheet processing for transferID=%s, duration=%f", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
  }

  unint64_t v34 = v44;
  if (v44)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      os_log_type_t v36 = (void *)Strong;
      MOAngelControllerWrapper.grantAccessToAssets(_:)(v34);
    }
  }
  uint64_t v46 = v34;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MOSuggestionAsset]?, Never>);
  CheckedContinuation.resume(returning:)();
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v43);
}

void MOAngelControllerWrapper.didReceivePresentationRequest(with:)(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 contentOptions];
  *(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_contentOptions) = v11;
  (*(void (**)(long long *__return_ptr))((swift_isaMask & *v1) + 0xD8))(&aBlock);
  if (v24)
  {
    outlined init with take of Tip(&aBlock, (uint64_t)v28);
    unsigned int v12 = [a1 presentFullScreen];
    uint64_t v13 = 1;
    if (v12) {
      uint64_t v13 = 2;
    }
    *(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOAngelControllerWrapper_initialPresentRequestState) = v13;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v28, (uint64_t)v27);
    uint64_t v15 = swift_allocObject();
    outlined init with take of Tip(v27, v15 + 16);
    *(void *)(v15 + 56) = a1;
    uint64_t v25 = partial apply for closure #1 in MOAngelControllerWrapper.didReceivePresentationRequest(with:);
    uint64_t v26 = v15;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    NSString v23 = thunk for @escaping @callee_guaranteed () -> ();
    unint64_t v24 = &block_descriptor_26;
    uint64_t v16 = _Block_copy(&aBlock);
    id v17 = a1;
    swift_release();
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    outlined destroy of Any?((uint64_t)&aBlock, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static MOAngelLogger.shared);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Attempt to present a sheet before the view was ready to respond.", v21, 2u);
      swift_slowDealloc();
    }
  }
}

void MOAngelControllerWrapper.didReceiveUpdateRequest(with:animated:)(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(long long *__return_ptr, uint64_t))((swift_isaMask & *v2) + 0xD8))(&aBlock, v11);
  if (v23)
  {
    outlined init with take of Tip(&aBlock, (uint64_t)v27);
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v27, (uint64_t)v26);
    uint64_t v15 = swift_allocObject();
    outlined init with take of Tip(v26, v15 + 16);
    *(void *)(v15 + 56) = a1;
    *(unsigned char *)(v15 + 64) = a2 & 1;
    unint64_t v24 = partial apply for closure #1 in MOAngelControllerWrapper.didReceiveUpdateRequest(with:animated:);
    uint64_t v25 = v15;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v22 = thunk for @escaping @callee_guaranteed () -> ();
    NSString v23 = &block_descriptor_18_0;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    outlined destroy of Any?((uint64_t)&aBlock, &demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.shared);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Attempted to updated sheet state before the view was ready to respond.", v20, 2u);
      swift_slowDealloc();
    }
  }
}

id @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

uint64_t outlined init with copy of MOAngelControllerWrapperDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of MOAngelControllerWrapperDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOAngelControllerWrapperDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10012929C@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1001292FC(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_100129354@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1001293BC(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t type metadata accessor for MOAngelControllerWrapper()
{
  uint64_t result = type metadata singleton initialization cache for MOAngelControllerWrapper;
  if (!type metadata singleton initialization cache for MOAngelControllerWrapper) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _sIeghH_IeAgH_TR(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = _sIeghH_IeAgH_TRTQ0_;
  return v6();
}

uint64_t _sIeAgH_ytIeAgHr_TR(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  NSString v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = _sIeghH_IeAgH_TRTQ0_;
  return v7();
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgmq5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  outlined destroy of Any?(a1, &demangling cache variable for type metadata for TaskPriority?);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t specialized MOAngelControllerWrapper.getBundleRankingContext(_:)(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOUsageContextType, [UUID : [AnyHashable : Any]?])>);
  uint64_t inited = swift_initStackObject();
  long long v20 = xmmword_1001DA0F0;
  *(_OWORD *)(inited + 16) = xmmword_1001DA0F0;
  uint64_t v7 = (void *)kMOUsageContextRankingDictionaries;
  *(void *)(inited + 32) = kMOUsageContextRankingDictionaries;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(UUID, [AnyHashable : Any]?)>);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID, [AnyHashable : Any]?));
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v20;
  unint64_t v11 = v10 + v9;
  id v12 = v7;
  id v13 = [a1 bundleIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v11, v5, v2);
  id v14 = [a1 rankingDictionary];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v16 = 0;
  }
  *(void *)(v11 + *(int *)(v8 + 48)) = v16;
  *(void *)(inited + 40) = specialized Dictionary.init(dictionaryLiteral:)(v10);
  unint64_t v17 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  uint64_t v18 = specialized _dictionaryUpCast<A, B, C, D>(_:)(v17);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t partial apply for closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(uint64_t a1)
{
  return closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t partial apply for closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(unint64_t a1)
{
  return closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100129A10()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t partial apply for closure #1 in MOAngelControllerWrapper.didReceivePresentationRequest(with:)()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v2);
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t lazy protocol witness table accessor for type MOUsageContextType and conformance MOUsageContextType(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100129B0C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t partial apply for closure #1 in MOAngelControllerWrapper.didReceiveUpdateRequest(with:animated:)()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 24))(v1, v3, v4, v2);
}

void *associated type witness table accessor for ObservableObject.ObjectWillChangePublisher : Publisher in MOAngelControllerWrapper()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100129BBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 104))();
  *a2 = result;
  return result;
}

uint64_t sub_100129C08(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 112))(*a1);
}

uint64_t sub_100129C5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 128))();
  *a2 = result;
  return result;
}

uint64_t sub_100129CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 136);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100129CFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 152))();
  *a2 = result;
  return result;
}

uint64_t sub_100129D48(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 160);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100129DA0(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
}

uint64_t sub_100129DF4(uint64_t a1, void **a2)
{
  outlined init with copy of MOAngelControllerWrapperDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))((swift_isaMask & **a2) + 0xE0))(v4);
}

uint64_t sub_100129E60(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x108))();
}

uint64_t sub_100129EC0(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x138))();
}

uint64_t type metadata accessor for MOEventBundleWithAsset()
{
  return self;
}

uint64_t ObjC metadata update function for MOAngelControllerWrapper()
{
  return type metadata accessor for MOAngelControllerWrapper();
}

void type metadata completion function for MOAngelControllerWrapper()
{
  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for Published<Bool>()
{
  if (!lazy cache variable for type metadata for Published<Bool>)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
    }
  }
}

uint64_t partial apply for @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)()
{
  id v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  NSString v5 = (void *)v0[4];
  id v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, void *, void *))((char *)&async function pointer to @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)
                                                               + async function pointer to @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:));
  return v7(v2, v3, v5, v4);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t (*v7)(void *, uint64_t, void *, void *);
  uint64_t v9;

  id v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  NSString v5 = (void *)v0[4];
  id v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = _sIeghH_IeAgH_TRTQ0_;
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, void *, void *))((char *)&async function pointer to @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)
                                                               + async function pointer to @objc closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:));
  return v7(v2, v3, v5, v4);
}

uint64_t _sIeghH_IeAgH_TRTA()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  id v4 = (int *)v0[4];
  NSString v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = _sIeghH_IeAgH_TRTQ0_;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&_sIeghH_IeAgH_TRTu + _sIeghH_IeAgH_TRTu);
  return v6(v2, v3, v4);
}

uint64_t _sIeAgH_ytIeAgHr_TRTA(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = _sIeghH_IeAgH_TRTQ0_;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&_sIeAgH_ytIeAgHr_TRTu + _sIeAgH_ytIeAgHr_TRTu);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_10012A2B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TA(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = partial apply for closure #1 in MOSuggestionTipCoordinator.observeTipStatusUpdates(tip:);
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5Tu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5Tu);
  return v6(a1, v4);
}

uint64_t objectdestroy_44Tm()
{
  _Block_release(*(const void **)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t objectdestroy_48Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10012A504()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012A53C()
{
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v15 = (v2 + 16) & ~v2;
  unint64_t v13 = (*(void *)(v1 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v16 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v13 + v4 + 8) & ~v4;
  unint64_t v6 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MOSuggestionAsset]?, Never>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v6 + v9 + 8) & ~v9;
  uint64_t v14 = v10 + *(void *)(v8 + 64);
  uint64_t v11 = v2 | v4 | v9 | 7;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v15, v17);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v16);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);

  return _swift_deallocObject(v0, v14, v11);
}

uint64_t partial apply for closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(unint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<[MOSuggestionAsset]?, Never>)
                 - 8);
  uint64_t v10 = *(void *)(v1 + v5);
  uint64_t v11 = *(void *)(v1 + v8);
  uint64_t v12 = v1 + ((v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(a1, v1 + v4, v10, v1 + v7, v11, v12);
}

{
  uint64_t vars8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);

  return closure #1 in closure #1 in MOAngelControllerWrapper.willReturnAssets(for:withTypes:)(a1);
}

uint64_t sub_10012A8AC()
{
  uint64_t v1 = (int *)(type metadata accessor for MOSuggestionAssetAnalytics.AssetTransferEvent() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  uint64_t v7 = v6 + v1[10];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t outlined destroy of MOSuggestionAssetAnalytics.AssetTransferEvent(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MOSuggestionAssetAnalytics.AssetTransferEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10012A9FC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CheckedContinuation<MOSuggestionAssetsBundle?, Never>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t SegmentType.asUnlocalizedString.getter(char a1)
{
  if (a1) {
    return 0x746E65636552;
  }
  else {
    return 0x6E656D6D6F636552;
  }
}

id MOSuggestionSheetFilterCollectionView.layout.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_layout);
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t MOSuggestionSheetFilterCollectionView.filterViewModel.getter()
{
  return swift_retain();
}

uint64_t MOSuggestionSheetFilterCollectionView.filterViewModel.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*MOSuggestionSheetFilterCollectionView.filterViewModel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetFilterCollectionView.filterDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate;
  swift_beginAccess();
  return outlined init with copy of MOSuggestionSheetFilterCollectionViewDelegate?(v3, a1);
}

uint64_t MOSuggestionSheetFilterCollectionView.filterDelegate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate;
  swift_beginAccess();
  outlined assign with take of MOSuggestionSheetFilterCollectionViewDelegate?(a1, v3);
  return swift_endAccess();
}

uint64_t (*MOSuggestionSheetFilterCollectionView.filterDelegate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

char *MOSuggestionSheetFilterCollectionView.init()()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_layout;
  id v6 = objc_allocWithZone((Class)UICollectionViewFlowLayout);
  uint64_t v7 = v0;
  id v8 = [v6 init];
  [v8 setScrollDirection:1];
  [v8 setMinimumInteritemSpacing:12.0];
  *(void *)&v0[v5] = v8;
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel;
  type metadata accessor for MOSuggestionSheetFilterCollectionViewModel();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 0;
  *(void *)&v7[v9] = v10;
  uint64_t v11 = &v7[OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate];
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((void *)v11 + 4) = 0;

  uint64_t v12 = *(void *)&v0[v5];
  unint64_t v13 = (objc_class *)type metadata accessor for MOSuggestionSheetFilterCollectionView();
  v30.receiver = v7;
  v30.super_class = v13;
  id v14 = [super initWithFrame:v12 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = self;
  id v16 = v14;
  id v17 = [v15 whiteColor];
  [v16 setBackgroundColor:v17];

  [v16 setDelegate:v16];
  [v16 setDataSource:v16];
  [v16 setShowsHorizontalScrollIndicator:0];
  id v18 = v16;
  id v19 = [v15 secondarySystemBackgroundColor];
  [v18 setBackgroundColor:v19];

  type metadata accessor for MOSuggestionCollectionViewFilterCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v21 = (char *)v18;
  NSString v22 = String._bridgeToObjectiveC()();
  [v21 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v22];

  [v21 setAllowsMultipleSelection:0];
  NSString v23 = &v21[OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel];
  swift_beginAccess();
  unint64_t v24 = *(void (**)(uint64_t))(**(void **)v23 + 88);
  uint64_t v25 = swift_retain();
  v24(v25);
  swift_release();
  IndexPath.init(item:section:)();
  uint64_t v26 = v21;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v26 selectItemAtIndexPath:isa animated:0 scrollPosition:8];

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v26;
}

void *MOSuggestionCollectionViewFilterCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewFilterCell.reuseIdentifier;
}

uint64_t FilterType.rawValue.getter(char a1)
{
  return a1 & 1;
}

void MOSuggestionSheetFilterCollectionView.init(frame:collectionViewLayout:)()
{
}

id MOSuggestionSheetFilterCollectionView.__deallocating_deinit()
{
  return MOSuggestionSheetFilterCollectionView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetFilterCollectionView);
}

Swift::Int __swiftcall MOSuggestionSheetFilterCollectionView.collectionView(_:numberOfItemsInSection:)(UICollectionView _, Swift::Int numberOfItemsInSection)
{
  uint64_t v3 = (*(uint64_t (**)(Class, Swift::Int))((swift_isaMask & *v2) + 0x68))(_.super.super.super.super.isa, numberOfItemsInSection);
  Swift::Int v4 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 112))(v3);
  swift_release();
  return v4;
}

unint64_t MOSuggestionSheetFilterCollectionView.collectionView(_:cellForItemAt:)(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 dequeueReusableCellWithReuseIdentifier:v4 forIndexPath:isa];

  type metadata accessor for MOSuggestionCollectionViewFilterCell();
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    id v8 = (void *)v7;
    uint64_t v9 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x68);
    uint64_t v10 = v9();
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 120))(v10);
    swift_release();
    unint64_t result = IndexPath.row.getter();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v11 + 16))
    {
      unint64_t v13 = v11 + 16 * result;
      uint64_t v14 = *(void *)(v13 + 32);
      uint64_t v15 = *(void *)(v13 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v8) + 0x80))(v14, v15);
      uint64_t v16 = swift_bridgeObjectRelease();
      uint64_t v17 = ((uint64_t (*)(uint64_t))v9)(v16);
      char v18 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 88))(v17);
      swift_release();
      [v8 setSelected:IndexPath.row.getter() == (v18 & 1)];
      return (unint64_t)v8;
    }
    __break(1u);
  }
  else
  {

    id v19 = objc_allocWithZone((Class)UICollectionViewCell);
    return (unint64_t)[v19 init];
  }
  return result;
}

void MOSuggestionSheetFilterCollectionView.collectionView(_:layout:sizeForItemAt:)()
{
}

_UNKNOWN **static FilterType.allCases.getter()
{
  return &outlined read-only object #0 of static FilterType.allCases.getter;
}

uint64_t SegmentType.asString.getter(char a1)
{
  uint64_t v2 = (objc_class *)[self mainBundle];
  if (a1)
  {
    unint64_t v11 = 0xE600000000000000;
    uint64_t v3 = 0x746E65636552;
    unint64_t v4 = 0xE600000000000000;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    uint64_t v8 = 0x746E65636552;
  }
  else
  {
    unint64_t v11 = 0xEB00000000646564;
    uint64_t v3 = 0x6E656D6D6F636552;
    unint64_t v4 = 0xEB00000000646564;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    uint64_t v8 = 0x6E656D6D6F636552;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t MOSuggestionSheetFilterCollectionView.collectionView(_:didSelectItemAt:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x68);
  uint64_t v10 = ((uint64_t (*)(uint64_t))v9)(v6);
  char v11 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 88))(v10);
  swift_release();
  uint64_t result = IndexPath.row.getter();
  if (result != (v11 & 1))
  {
    uint64_t v13 = v9();
    (*(void (**)(uint64_t))(*(void *)v13 + 88))(v13);
    swift_release();
    IndexPath.init(item:section:)();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    [a1 deselectItemAtIndexPath:isa animated:0];

    uint64_t result = IndexPath.row.getter();
    if (result)
    {
      if (result != 1) {
        return result;
      }
      uint64_t v15 = 1;
    }
    else
    {
      uint64_t v15 = 0;
    }
    uint64_t v16 = v9();
    (*(void (**)(uint64_t))(*(void *)v16 + 96))(v15);
    uint64_t v17 = swift_release();
    (*(void (**)(void *__return_ptr, uint64_t))((swift_isaMask & *v2) + 0x80))(v25, v17);
    if (v25[3])
    {
      outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v25, (uint64_t)v22);
      outlined destroy of MOSuggestionSheetFilterCollectionViewDelegate?((uint64_t)v25);
      uint64_t v18 = v23;
      uint64_t v19 = v24;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      uint64_t v20 = v9();
      char v21 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 88))(v20);
      swift_release();
      (*(void (**)(void, uint64_t, uint64_t))(v19 + 8))(v21 & 1, v18, v19);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
    else
    {
      return outlined destroy of MOSuggestionSheetFilterCollectionViewDelegate?((uint64_t)v25);
    }
  }
  return result;
}

MomentsUIService::FilterType_optional __swiftcall FilterType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    v1.value = MomentsUIService_FilterType_recent;
  }
  else {
    v1.value = MomentsUIService_FilterType_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

Swift::Void __swiftcall MOSuggestionSheetFilterCollectionView.resetFilterState()()
{
  MomentsUIService::FilterType_optional v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x68))(v4);
  (*(void (**)(void))(*(void *)v7 + 96))(0);
  swift_release();
  IndexPath.init(item:section:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  [v1 selectItemAtIndexPath:isa animated:0 scrollPosition:1];
}

unint64_t static MOSuggestionCollectionViewFilterCell.reuseIdentifier.getter()
{
  return 0xD000000000000024;
}

uint64_t MOSuggestionCollectionViewFilterCell.title.getter()
{
  MomentsUIService::FilterType_optional v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MOSuggestionCollectionViewFilterCell.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOSuggestionCollectionViewFilterCell.title.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewFilterCell.filterButton()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  MomentsUIService::FilterType_optional v1 = self;
  id v2 = v0;
  id v3 = [v1 systemGroupedBackgroundColor];
  [v2 setBackgroundColor:v3];

  [v2 setTextAlignment:1];
  id v4 = [self boldSystemFontOfSize:14.0];
  [v2 setFont:v4];

  id v5 = [v1 labelColor];
  [v2 setTextColor:v5];

  id v6 = [v2 layer];
  [v6 setCornerRadius:18.0];

  id v7 = [v2 layer];
  [v7 setMasksToBounds:1];

  return v2;
}

id MOSuggestionCollectionViewFilterCell.filterButton.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton);
}

id MOSuggestionCollectionViewFilterCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton;
  char v11 = v4;
  *(void *)&v4[v10] = closure #1 in variable initialization expression of MOSuggestionCollectionViewFilterCell.filterButton();

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewFilterCell();
  [super initWithFrame:a1, a2, a3, a4];
  MOSuggestionCollectionViewFilterCell.setupView()();

  return v12;
}

void MOSuggestionCollectionViewFilterCell.init(coder:)()
{
  MomentsUIService::FilterType_optional v1 = &v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_title];
  *(void *)MomentsUIService::FilterType_optional v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton;
  *(void *)&v0[v2] = closure #1 in variable initialization expression of MOSuggestionCollectionViewFilterCell.filterButton();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void MOSuggestionCollectionViewFilterCell.setupView()()
{
  MomentsUIService::FilterType_optional v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton);
  (*(void (**)(void))((swift_isaMask & *v0) + 0x60))();
  if (v2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  [v1 setText:v3];

  [v0 addSubview:v1];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001DA110;
  id v6 = [v1 topAnchor];
  id v7 = [v0 topAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7];

  *(void *)(v5 + 32) = v8;
  id v9 = [v1 bottomAnchor];
  id v10 = [v0 bottomAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v5 + 40) = v11;
  id v12 = [v1 leadingAnchor];
  id v13 = [v0 leadingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v5 + 48) = v14;
  id v15 = [v1 trailingAnchor];
  id v16 = [v0 trailingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v5 + 56) = v17;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];
}

id MOSuggestionCollectionViewFilterCell.isSelected.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewFilterCell();
  return [super isSelected];
}

void MOSuggestionCollectionViewFilterCell.isSelected.setter(char a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewFilterCell();
  [super setSelected:a1 & 1];
  MOSuggestionCollectionViewFilterCell.isSelected.didset();
}

void MOSuggestionCollectionViewFilterCell.isSelected.didset()
{
  MomentsUIService::FilterType_optional v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton];
  unsigned int v2 = [v0 isSelected];
  objc_super v3 = self;
  id v4 = &selRef_systemCyanColor;
  if (!v2) {
    id v4 = &selRef_systemGroupedBackgroundColor;
  }
  id v5 = [v3 *v4];
  [v1 setBackgroundColor:v5];

  unsigned int v6 = [v0 isSelected];
  id v7 = self;
  id v8 = &selRef_whiteColor;
  if (!v6) {
    id v8 = &selRef_labelColor;
  }
  id v9 = [v7 *v8];
  [v1 setTextColor:v9];
}

Swift::Void __swiftcall MOSuggestionCollectionViewFilterCell.configure(title:)(Swift::String title)
{
  unsigned int v2 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService36MOSuggestionCollectionViewFilterCell_filterButton);
  id v3 = String._bridgeToObjectiveC()();
  [v2 setText:v3];
}

id MOSuggestionCollectionViewFilterCell.__deallocating_deinit()
{
  return MOSuggestionSheetFilterCollectionView.__deallocating_deinit(type metadata accessor for MOSuggestionCollectionViewFilterCell);
}

id MOSuggestionSheetFilterCollectionView.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.selectedFilter.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.selectedFilter.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = v2;
  return result;
}

void *MOSuggestionSheetFilterCollectionViewModel.possibleFilterTitles()()
{
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, 2, 0);
  id v0 = [self mainBundle];
  v13._id object = (void *)0xEB00000000646564;
  v1._uint64_t countAndFlagsBits = 0x6E656D6D6F636552;
  v1._id object = (void *)0xEB00000000646564;
  v2._uint64_t countAndFlagsBits = 0;
  v2._id object = (void *)0xE000000000000000;
  v13._uint64_t countAndFlagsBits = 0x6E656D6D6F636552;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v13);

  unint64_t v5 = _swiftEmptyArrayStorage[2];
  unint64_t v4 = _swiftEmptyArrayStorage[3];
  if (v5 >= v4 >> 1) {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v5 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v5 + 4] = v3;
  id v6 = [self mainBundle];
  v14._id object = (void *)0xE600000000000000;
  v7._uint64_t countAndFlagsBits = 0x746E65636552;
  v7._id object = (void *)0xE600000000000000;
  v8._uint64_t countAndFlagsBits = 0;
  v8._id object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0x746E65636552;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v14);

  unint64_t v11 = _swiftEmptyArrayStorage[2];
  unint64_t v10 = _swiftEmptyArrayStorage[3];
  if (v11 >= v10 >> 1) {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v11 + 1;
  *(Swift::String *)&_swiftEmptyArrayStorage[2 * v11 + 4] = v9;
  return _swiftEmptyArrayStorage;
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t MOSuggestionSheetFilterCollectionViewModel.init()()
{
  uint64_t result = v0;
  *(unsigned char *)(v0 + 16) = 0;
  return result;
}

uint64_t outlined init with copy of MOSuggestionSheetFilterCollectionViewDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetFilterCollectionViewDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of MOSuggestionSheetFilterCollectionViewDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetFilterCollectionViewDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MOSuggestionSheetFilterCollectionViewModel()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionSheetFilterCollectionView()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewFilterCell()
{
  return self;
}

void *protocol witness for RawRepresentable.init(rawValue:) in conformance FilterType@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance FilterType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance FilterType;
}

_UNKNOWN **static SegmentType.allCases.getter()
{
  return &outlined read-only object #0 of static SegmentType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance SegmentType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance SegmentType;
}

void specialized MOSuggestionSheetFilterCollectionView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_layout;
  id v2 = [objc_allocWithZone((Class)UICollectionViewFlowLayout) init];
  [v2 setScrollDirection:1];
  [v2 setMinimumInteritemSpacing:12.0];
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterViewModel;
  type metadata accessor for MOSuggestionSheetFilterCollectionViewModel();
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = 0;
  *(void *)&v0[v3] = v4;
  unint64_t v5 = &v0[OBJC_IVAR____TtC16MomentsUIService37MOSuggestionSheetFilterCollectionView_filterDelegate];
  *(_OWORD *)unint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void specialized MOSuggestionSheetFilterCollectionView.collectionView(_:layout:sizeForItemAt:)()
{
  unint64_t v0 = IndexPath.row.getter();
  if (v0 > 1)
  {
    __break(1u);
  }
  else
  {
    char v1 = *((unsigned char *)&outlined read-only object #0 of MOSuggestionSheetFilterCollectionView.collectionView(_:layout:sizeForItemAt:)
         + v0
         + 32);
    id v2 = (objc_class *)[self mainBundle];
    if (v1)
    {
      unint64_t v15 = 0xE600000000000000;
      uint64_t v3 = 0x746E65636552;
      unint64_t v4 = 0xE600000000000000;
      v5.super.Class isa = v2;
      uint64_t v6 = 0;
      unint64_t v7 = 0xE000000000000000;
      uint64_t v8 = 0x746E65636552;
    }
    else
    {
      unint64_t v15 = 0xEB00000000646564;
      uint64_t v3 = 0x6E656D6D6F636552;
      unint64_t v4 = 0xEB00000000646564;
      v5.super.Class isa = v2;
      uint64_t v6 = 0;
      unint64_t v7 = 0xE000000000000000;
      uint64_t v8 = 0x6E656D6D6F636552;
    }
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8);

    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001DA0F0;
    *(void *)(inited + 32) = NSFontAttributeName;
    unint64_t v11 = self;
    id v12 = NSFontAttributeName;
    id v13 = [v11 boldSystemFontOfSize:14.0];
    *(void *)(inited + 64) = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    *(void *)(inited + 40) = v13;
    specialized Dictionary.init(dictionaryLiteral:)(inited);
    type metadata accessor for NSAttributedStringKey(0);
    lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 sizeWithAttributes:isa];
  }
}

uint64_t outlined destroy of MOSuggestionSheetFilterCollectionViewDelegate?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetFilterCollectionViewDelegate?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type FilterType and conformance FilterType()
{
  unint64_t result = lazy protocol witness table cache variable for type FilterType and conformance FilterType;
  if (!lazy protocol witness table cache variable for type FilterType and conformance FilterType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type FilterType and conformance FilterType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in FilterType()
{
  return lazy protocol witness table accessor for type [FilterType] and conformance [A](&lazy protocol witness table cache variable for type [FilterType] and conformance [A], &demangling cache variable for type metadata for [FilterType]);
}

unint64_t lazy protocol witness table accessor for type SegmentType and conformance SegmentType()
{
  unint64_t result = lazy protocol witness table cache variable for type SegmentType and conformance SegmentType;
  if (!lazy protocol witness table cache variable for type SegmentType and conformance SegmentType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SegmentType and conformance SegmentType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in SegmentType()
{
  return lazy protocol witness table accessor for type [FilterType] and conformance [A](&lazy protocol witness table cache variable for type [SegmentType] and conformance [A], &demangling cache variable for type metadata for [SegmentType]);
}

uint64_t lazy protocol witness table accessor for type [FilterType] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012D38C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_10012D3E8(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x70);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_10012D44C(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
}

uint64_t sub_10012D4A0(uint64_t a1, void **a2)
{
  outlined init with copy of MOSuggestionSheetFilterCollectionViewDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))((swift_isaMask & **a2) + 0x88))(v4);
}

uint64_t sub_10012D50C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10012D568(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x68);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_10012D5E0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 88))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10012D630(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 96))(*a1);
}

ValueMetadata *type metadata accessor for FilterType()
{
  return &type metadata for FilterType;
}

unsigned char *storeEnumTagSinglePayload for FilterType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012D77CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SegmentType()
{
  return &type metadata for SegmentType;
}

uint64_t MOSuggestionSheetAssetDateRange.init(start:end:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  return outlined init with take of Date?(a2, a3 + *(int *)(v7 + 20), (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t type metadata accessor for MOSuggestionSheetAssetDateRange(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionSheetAssetDateRange);
}

const char *MOSuggestionSheetAssetViewModel.placeHolderId.unsafeMutableAddressor()
{
  return "placeholder";
}

uint64_t static MOSuggestionSheetAssetViewModel.assetTypeAsPluralString(assetAndMediaType:count:includeCount:)(void *a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  return specialized static MOSuggestionSheetAssetViewModel.assetTypeAsPluralString(assetAndMediaType:count:includeCount:)(a1, a2, a3 & 1, a4, a5);
}

uint64_t static MOSuggestionSheetAssetViewModel.assetTypeAsPluralString(assetViewSubType:count:includeCount:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  if (a3)
  {
    MOSuggestionAssetVisualSubType.localizableKeyWithCount(count:)(a2, a1);
    static Locale.current.getter();
    return String.init(localized:table:bundle:locale:comment:)();
  }
  else if (a2 < 2)
  {
    return MOSuggestionAssetVisualSubType.singularLocalizedString.getter(a1);
  }
  else
  {
    return MOSuggestionAssetVisualSubType.pluralLocalizedString.getter(a1);
  }
}

uint64_t MOSuggestionSheetAssetViewModel.__allocating_init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, char a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,char a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v63 = swift_allocObject();
  MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40 & 1,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51,
    a52,
    a53,
    a54,
    a55 & 1,
    a56,
    a57,
    a58,
    a59,
    a60,
    a61,
    a62,
    a63);
  return v63;
}

uint64_t MOSuggestionSheetAssetDateRange.end.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  return outlined init with copy of Date?(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t MOSuggestionSheetAssetDateRange.end.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  return outlined assign with take of Date?(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&demangling cache variable for type metadata for Date?);
}

void (__swiftcall *MOSuggestionSheetAssetDateRange.end.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

void *MOSuggestionSheetAssetViewModel.routeMap.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.routeMap.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = a1;
}

void *MOSuggestionSheetAssetViewModel.linkMetadata.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.linkMetadata.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 56);
  *(void *)(v1 + 56) = a1;
}

void *MOSuggestionSheetAssetViewModel.assetType.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.assetType.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 64);
  *(void *)(v1 + 64) = a1;
}

uint64_t MOSuggestionSheetAssetViewModel.assetVisualSubType.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MOSuggestionSheetAssetViewModel.assetVisualSubType.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 72) = a1;
  return result;
}

void *MOSuggestionSheetAssetViewModel.evergreenData.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

void MOSuggestionSheetAssetViewModel.evergreenData.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 80);
  *(void *)(v1 + 80) = a1;
}

uint64_t MOSuggestionSheetAssetViewModel.reflectionIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 88);
}

uint64_t MOSuggestionSheetAssetViewModel.reflectionIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.reflectionIndex.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaAssetID.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaAssetID.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t key path setter for MOSuggestionSheetAssetViewModel.URL : MOSuggestionSheetAssetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6, &demangling cache variable for type metadata for URL?);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 760))(v6);
}

uint64_t MOSuggestionSheetAssetViewModel.URL.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionSheetAssetViewModel.URL.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL, &demangling cache variable for type metadata for URL?, a1);
}

uint64_t MOSuggestionSheetAssetViewModel.URL.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.URL.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL, &demangling cache variable for type metadata for URL?);
}

uint64_t (*MOSuggestionSheetAssetViewModel.URL.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaType.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaType;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaType.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaType);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.mediaType.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.isSquare.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isSquare);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionSheetAssetViewModel.isSquare.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isSquare);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.isSquare.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.contactName.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactName);
}

uint64_t MOSuggestionSheetAssetViewModel.contactName.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactName);
}

uint64_t (*MOSuggestionSheetAssetViewModel.contactName.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.contactID.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactID);
}

uint64_t MOSuggestionSheetAssetViewModel.contactID.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactID);
}

uint64_t (*MOSuggestionSheetAssetViewModel.contactID.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.contactFirstName.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactFirstName);
}

uint64_t MOSuggestionSheetAssetViewModel.contactFirstName.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactFirstName);
}

uint64_t (*MOSuggestionSheetAssetViewModel.contactFirstName.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.workoutName.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_workoutName);
}

uint64_t MOSuggestionSheetAssetViewModel.workoutName.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_workoutName);
}

uint64_t (*MOSuggestionSheetAssetViewModel.workoutName.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetAssetViewModel.livePhoto.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionSheetAssetViewModel.livePhoto.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unsigned char *v3 = a1;
}

uint64_t (*MOSuggestionSheetAssetViewModel.livePhoto.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetAssetViewModel.videoAsset.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionSheetAssetViewModel.videoAsset.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unsigned char *v3 = a1;
}

uint64_t (*MOSuggestionSheetAssetViewModel.videoAsset.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.activityName.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityName);
}

uint64_t MOSuggestionSheetAssetViewModel.activityName.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityName);
}

uint64_t (*MOSuggestionSheetAssetViewModel.activityName.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.activityStepCount.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityStepCount);
}

uint64_t MOSuggestionSheetAssetViewModel.activityStepCount.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityStepCount);
}

uint64_t (*MOSuggestionSheetAssetViewModel.activityStepCount.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.motionActivityNumSteps.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_motionActivityNumSteps;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MOSuggestionSheetAssetViewModel.motionActivityNumSteps.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_motionActivityNumSteps);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.motionActivityNumSteps.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.title.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_title);
}

uint64_t MOSuggestionSheetAssetViewModel.title.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_title);
}

uint64_t (*MOSuggestionSheetAssetViewModel.title.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.subtitle.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_subtitle);
}

uint64_t MOSuggestionSheetAssetViewModel.subtitle.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_subtitle);
}

uint64_t (*MOSuggestionSheetAssetViewModel.subtitle.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.weatherString.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherString);
}

uint64_t MOSuggestionSheetAssetViewModel.weatherString.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherString);
}

uint64_t (*MOSuggestionSheetAssetViewModel.weatherString.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path setter for MOSuggestionSheetAssetViewModel.weatherTemperature : MOSuggestionSheetAssetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 1120))(v6);
}

uint64_t MOSuggestionSheetAssetViewModel.weatherTemperature.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionSheetAssetViewModel.URL.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?, a1);
}

uint64_t MOSuggestionSheetAssetViewModel.URL.getter@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  return outlined init with copy of Date?(v6, a3, a2);
}

uint64_t MOSuggestionSheetAssetViewModel.weatherTemperature.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.URL.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
}

uint64_t MOSuggestionSheetAssetViewModel.URL.setter(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = v3 + *a2;
  swift_beginAccess();
  outlined assign with take of Date?(a1, v6, a3);
  return swift_endAccess();
}

uint64_t (*MOSuggestionSheetAssetViewModel.weatherTemperature.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.calories.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_calories);
}

uint64_t MOSuggestionSheetAssetViewModel.calories.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_calories);
}

uint64_t (*MOSuggestionSheetAssetViewModel.calories.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.duration.getter()
{
  return MOSuggestionSheetAssetViewModel.duration.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_duration);
}

uint64_t MOSuggestionSheetAssetViewModel.duration.setter(uint64_t a1, char a2)
{
  return MOSuggestionSheetAssetViewModel.duration.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_duration);
}

uint64_t (*MOSuggestionSheetAssetViewModel.duration.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.distance.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_distance);
}

uint64_t MOSuggestionSheetAssetViewModel.distance.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_distance);
}

uint64_t (*MOSuggestionSheetAssetViewModel.distance.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.averageHeartRate.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_averageHeartRate);
}

uint64_t MOSuggestionSheetAssetViewModel.averageHeartRate.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_averageHeartRate);
}

uint64_t (*MOSuggestionSheetAssetViewModel.averageHeartRate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.shouldAutoPlay.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_shouldAutoPlay);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionSheetAssetViewModel.shouldAutoPlay.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_shouldAutoPlay);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.shouldAutoPlay.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOSuggestionSheetAssetViewModel.squareCropRect.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = MOSuggestionSheetAssetViewModel.squareCropRect.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_squareCropRect, a1).n128_u64[0];
  return result;
}

uint64_t MOSuggestionSheetAssetViewModel.squareCropRect.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.squareCropRect.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_squareCropRect);
}

uint64_t (*MOSuggestionSheetAssetViewModel.squareCropRect.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOSuggestionSheetAssetViewModel.landscapeCropRect.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = MOSuggestionSheetAssetViewModel.squareCropRect.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_landscapeCropRect, a1).n128_u64[0];
  return result;
}

uint64_t MOSuggestionSheetAssetViewModel.landscapeCropRect.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.squareCropRect.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_landscapeCropRect);
}

uint64_t MOSuggestionSheetAssetViewModel.squareCropRect.setter(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  return outlined init with take of Date?(a1, v4, &demangling cache variable for type metadata for CGRect?);
}

uint64_t (*MOSuggestionSheetAssetViewModel.landscapeCropRect.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOSuggestionSheetAssetViewModel.portraitCropRect.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = MOSuggestionSheetAssetViewModel.squareCropRect.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_portraitCropRect, a1).n128_u64[0];
  return result;
}

__n128 MOSuggestionSheetAssetViewModel.squareCropRect.getter@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  char v5 = *(unsigned char *)(v4 + 32);
  __n128 result = *(__n128 *)v4;
  long long v7 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v4;
  *(_OWORD *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 32) = v5;
  return result;
}

uint64_t MOSuggestionSheetAssetViewModel.portraitCropRect.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.squareCropRect.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_portraitCropRect);
}

uint64_t (*MOSuggestionSheetAssetViewModel.portraitCropRect.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.assignedAssetTileSize.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_assignedAssetTileSize);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionSheetAssetViewModel.assignedAssetTileSize.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_assignedAssetTileSize);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.assignedAssetTileSize.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mapPrimaryField.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapPrimaryField);
}

uint64_t MOSuggestionSheetAssetViewModel.mapPrimaryField.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapPrimaryField);
}

uint64_t (*MOSuggestionSheetAssetViewModel.mapPrimaryField.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mapSecondaryField.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapSecondaryField);
}

uint64_t MOSuggestionSheetAssetViewModel.mapSecondaryField.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapSecondaryField);
}

uint64_t (*MOSuggestionSheetAssetViewModel.mapSecondaryField.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mapLocationCount.getter()
{
  return MOSuggestionSheetAssetViewModel.duration.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapLocationCount);
}

uint64_t MOSuggestionSheetAssetViewModel.duration.getter(void *a1)
{
  uint64_t v2 = v1 + *a1;
  swift_beginAccess();
  return *(void *)v2;
}

uint64_t MOSuggestionSheetAssetViewModel.mapLocationCount.setter(uint64_t a1, char a2)
{
  return MOSuggestionSheetAssetViewModel.duration.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapLocationCount);
}

uint64_t MOSuggestionSheetAssetViewModel.duration.setter(uint64_t a1, char a2, void *a3)
{
  uint64_t v6 = v3 + *a3;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.mapLocationCount.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.isLoadingPlaceHolder.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isLoadingPlaceHolder);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionSheetAssetViewModel.isLoadingPlaceHolder.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isLoadingPlaceHolder);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.isLoadingPlaceHolder.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetAssetViewModel.preComposedView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionSheetAssetViewModel.preComposedView.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unsigned char *v3 = a1;
}

uint64_t (*MOSuggestionSheetAssetViewModel.preComposedView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.valenceClassificationAndReflectiveInterval.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_valenceClassificationAndReflectiveInterval);
}

uint64_t MOSuggestionSheetAssetViewModel.valenceClassificationAndReflectiveInterval.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_valenceClassificationAndReflectiveInterval);
}

uint64_t (*MOSuggestionSheetAssetViewModel.valenceClassificationAndReflectiveInterval.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.reflectiveInterval.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_reflectiveInterval;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MOSuggestionSheetAssetViewModel.reflectiveInterval.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_reflectiveInterval);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.reflectiveInterval.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindLabels.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabels);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindLabels.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabels);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindLabels.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindLabelsShortened.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabelsShortened);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindLabelsShortened.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabelsShortened);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindLabelsShortened.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDomains.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomains);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDomains.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomains);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindDomains.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDomainsShortened.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomainsShortened);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDomainsShortened.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomainsShortened);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindDomainsShortened.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsLight.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsLight.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsLight.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsDark.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsDark.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindAssociatedColorsDark.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path setter for MOSuggestionSheetAssetViewModel.stateOfMindDate : MOSuggestionSheetAssetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Date?);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 1672))(v6);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionSheetAssetViewModel.URL.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate, (uint64_t *)&demangling cache variable for type metadata for Date?, a1);
}

uint64_t MOSuggestionSheetAssetViewModel.stateOfMindDate.setter(uint64_t a1)
{
  return MOSuggestionSheetAssetViewModel.URL.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t (*MOSuggestionSheetAssetViewModel.stateOfMindDate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetAssetViewModel.bgColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionSheetAssetViewModel.bgColor.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*MOSuggestionSheetAssetViewModel.bgColor.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.mediaThirdPartyAppAssociatedColors.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionSheetAssetViewModel.mediaThirdPartyAppAssociatedColors.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors);
}

uint64_t (*MOSuggestionSheetAssetViewModel.mediaThirdPartyAppAssociatedColors.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.bgColorVariant.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColorVariant;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MOSuggestionSheetAssetViewModel.bgColorVariant.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColorVariant);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetAssetViewModel.bgColorVariant.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetAssetViewModel.parent.getter()
{
  return swift_weakLoadStrong();
}

uint64_t MOSuggestionSheetAssetViewModel.parent.setter()
{
  return swift_release();
}

void (*MOSuggestionSheetAssetViewModel.parent.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_parent;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  void v3[3] = swift_weakLoadStrong();
  return MOSuggestionSheetAssetViewModel.parent.modify;
}

void MOSuggestionSheetAssetViewModel.parent.modify(void **a1, char a2)
{
  id v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }

  free(v3);
}

uint64_t MOSuggestionSheetAssetViewModel.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t static MOSuggestionSheetAssetViewModel.placeHolderId.getter()
{
  return 0x6C6F686563616C70;
}

void *MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, char a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,char a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v74 = (void *)v73;
  unint64_t v161 = STACK[0x9C0];
  *(void *)(v73 + 64) = 0;
  uint64_t v75 = (void **)(v73 + 64);
  *(_OWORD *)(v73 + 48) = 0u;
  uint64_t v76 = (void **)(v73 + 48);
  *(_OWORD *)(v73 + 32) = 0u;
  uint64_t v77 = (void **)(v73 + 32);
  *(unsigned char *)(v73 + 72) = 26;
  id v119 = (unsigned char *)(v73 + 72);
  *(void *)(v73 + 80) = 0;
  uint64_t v78 = (void **)(v73 + 80);
  *(void *)(v73 + 104) = 0;
  *(void *)(v73 + 96) = 0;
  id v121 = (void *)(v73 + 96);
  uint64_t v120 = v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL;
  uint64_t v79 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v120, 1, 1, v79);
  unint64_t v80 = (void *)(v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactName);
  *unint64_t v80 = 0;
  v80[1] = 0;
  unint64_t v81 = (void *)(v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactID);
  void *v81 = 0;
  v81[1] = 0;
  double v82 = (void *)(v73 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_contactFirstName);
  *double v82 = 0;
  v82[1] = 0;
  uint64_t v83 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_workoutName);
  void *v83 = 0;
  v83[1] = 0;
  id v122 = (void **)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto);
  *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto) = 0;
  id v123 = (void **)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset);
  *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_videoAsset) = 0;
  uint64_t v124 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityName);
  *uint64_t v124 = 0;
  v124[1] = 0;
  uint64_t v125 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_activityStepCount);
  void *v125 = 0;
  v125[1] = 0;
  uint64_t v126 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_title);
  *uint64_t v126 = 0;
  v126[1] = 0;
  UIMenuElementSize v127 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_subtitle);
  *UIMenuElementSize v127 = 0;
  v127[1] = 0;
  UIImage_optional v129 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherString);
  *UIImage_optional v129 = 0;
  v129[1] = 0;
  id v84 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature;
  uint64_t v128 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature;
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v84, 1, 1, v85);
  uint64_t v86 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_calories);
  void *v86 = 0;
  v86[1] = 0;
  UIImage_optional v130 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_duration;
  *(void *)UIImage_optional v130 = 0;
  v130[8] = 1;
  Swift::String v131 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_distance);
  *Swift::String v131 = 0;
  v131[1] = 0;
  Swift::String v132 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_averageHeartRate);
  *Swift::String v132 = 0;
  v132[1] = 0;
  uint64_t v133 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_squareCropRect;
  *(_OWORD *)uint64_t v133 = 0u;
  *(_OWORD *)(v133 + 16) = 0u;
  *(unsigned char *)(v133 + 32) = 1;
  uint64_t v134 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_landscapeCropRect;
  *(_OWORD *)uint64_t v134 = 0u;
  *(_OWORD *)(v134 + 16) = 0u;
  *(unsigned char *)(v134 + 32) = 1;
  uint64_t v135 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_portraitCropRect;
  *(_OWORD *)uint64_t v135 = 0u;
  *(_OWORD *)(v135 + 16) = 0u;
  *(unsigned char *)(v135 + 32) = 1;
  os_log_type_t v87 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_assignedAssetTileSize;
  unsigned char *v87 = 11;
  NSString v136 = v87;
  uint64_t v137 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapPrimaryField);
  *uint64_t v137 = 0;
  v137[1] = 0;
  Class v138 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapSecondaryField);
  *Class v138 = 0;
  v138[1] = 0;
  id v139 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mapLocationCount;
  *(void *)id v139 = 0;
  v139[8] = 1;
  uint64_t v140 = (void **)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView);
  *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_preComposedView) = 0;
  uint64_t v141 = (void *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_valenceClassificationAndReflectiveInterval);
  *uint64_t v141 = 0;
  v141[1] = 0;
  uint64_t v142 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabels);
  *uint64_t v142 = 0;
  v142[1] = 0;
  id v143 = (void *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindLabelsShortened);
  *id v143 = 0;
  v143[1] = 0;
  id v144 = (void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomains);
  *id v144 = 0;
  v144[1] = 0;
  uint64_t v145 = (void *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDomainsShortened);
  *uint64_t v145 = 0;
  v145[1] = 0;
  unint64_t v146 = (void *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight);
  *(void *)((char *)v74
            + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsLight) = 0;
  id v148 = (void *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark);
  *(void *)((char *)v74
            + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindAssociatedColorsDark) = 0;
  id v88 = (char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate;
  uint64_t v147 = (uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate;
  uint64_t v89 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v88, 1, 1, v89);
  uint64_t v149 = (void **)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor);
  *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColor) = 0;
  id v150 = (void *)((char *)v74
                  + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors);
  *(void *)((char *)v74
            + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaThirdPartyAppAssociatedColors) = 0;
  swift_weakInit();
  UUID.init()();
  _OWORD v74[2] = a1;
  v74[3] = a2;
  swift_beginAccess();
  swift_weakAssign();
  swift_beginAccess();
  unint64_t v90 = *v77;
  *uint64_t v77 = a4;
  id v91 = a4;

  swift_beginAccess();
  id v92 = (void *)v74[5];
  v74[5] = a5;
  id v158 = a5;

  swift_beginAccess();
  id v93 = *v76;
  char *v76 = a6;
  id v94 = a6;

  swift_beginAccess();
  id v95 = (void *)v74[7];
  v74[7] = a7;
  id v156 = a7;

  swift_beginAccess();
  uint64_t v96 = *v75;
  *uint64_t v75 = a8;
  id v154 = a8;

  swift_beginAccess();
  unsigned char *v119 = a9;
  swift_beginAccess();
  unint64_t v97 = *v78;
  char *v78 = a10;
  id v152 = a10;

  v74[11] = a11;
  swift_beginAccess();
  *id v121 = a12;
  v74[13] = a13;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  outlined assign with copy of URL?(a14, v120, &demangling cache variable for type metadata for URL?);
  swift_endAccess();
  *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_mediaType) = a15;
  *((unsigned char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isSquare) = a16;
  swift_beginAccess();
  *unint64_t v80 = a17;
  v80[1] = a18;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *double v82 = a19;
  v82[1] = a20;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  void *v83 = a21;
  v83[1] = a22;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v98 = *v122;
  *id v122 = a23;
  id v99 = a23;

  swift_beginAccess();
  Swift::String v100 = *v123;
  *id v123 = a24;
  id v101 = a24;

  swift_beginAccess();
  *uint64_t v124 = a25;
  v124[1] = a26;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  void *v125 = a27;
  v125[1] = a28;
  swift_bridgeObjectRelease();
  *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_motionActivityNumSteps) = a29;
  swift_beginAccess();
  *uint64_t v126 = a30;
  v126[1] = a31;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *UIMenuElementSize v127 = a32;
  v127[1] = a33;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *UIImage_optional v129 = a34;
  v129[1] = a35;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  outlined assign with copy of URL?(a36, v128, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  swift_endAccess();
  swift_beginAccess();
  void *v86 = a37;
  v86[1] = a38;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)UIImage_optional v130 = a39;
  v130[8] = a40 & 1;
  swift_beginAccess();
  *Swift::String v131 = a41;
  v131[1] = a42;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *Swift::String v132 = a43;
  v132[1] = a44;
  swift_bridgeObjectRelease();
  *((unsigned char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_shouldAutoPlay) = a45;
  swift_beginAccess();
  outlined init with take of Date?(a46, v133, &demangling cache variable for type metadata for CGRect?);
  swift_beginAccess();
  outlined init with take of Date?(a47, v134, &demangling cache variable for type metadata for CGRect?);
  swift_beginAccess();
  outlined init with take of Date?(a48, v135, &demangling cache variable for type metadata for CGRect?);
  swift_beginAccess();
  *NSString v136 = a49;
  swift_beginAccess();
  *uint64_t v137 = a50;
  v137[1] = a51;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *Class v138 = a52;
  v138[1] = a53;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)id v139 = a54;
  v139[8] = a55 & 1;
  *((unsigned char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_isLoadingPlaceHolder) = a56;
  swift_beginAccess();
  id v102 = *v140;
  void *v140 = a57;
  id v103 = a57;

  swift_beginAccess();
  *uint64_t v141 = a58;
  v141[1] = a59;
  swift_bridgeObjectRelease();
  *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_reflectiveInterval) = a60;
  swift_beginAccess();
  *uint64_t v142 = a61;
  v142[1] = a62;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *id v143 = a63;
  v143[1] = a64;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *id v144 = a65;
  v144[1] = a66;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *uint64_t v145 = a67;
  v145[1] = a68;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *unint64_t v146 = a69;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *id v148 = a70;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  outlined assign with copy of URL?(a71, v147, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v104 = *v149;
  *uint64_t v149 = a72;
  id v105 = a72;

  swift_beginAccess();
  void *v150 = a73;
  swift_bridgeObjectRelease();
  *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_bgColorVariant) = v161;
  if (serverManager._displayMonitor != (FBSDisplayLayoutMonitor *)-1) {
    swift_once();
  }
  uint64_t v106 = type metadata accessor for Logger();
  __swift_project_value_buffer(v106, (uint64_t)static MOAngelLogger.memory);
  swift_retain_n();
  CGRect v107 = Logger.logObject.getter();
  os_log_type_t v108 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v107, v108))
  {
    uint64_t v162 = v103;
    uint64_t v109 = swift_slowAlloc();
    uint64_t v163 = swift_slowAlloc();
    *(_DWORD *)uint64_t v109 = 136315394;
    id v160 = v101;
    uint64_t v159 = v94;
    uint64_t v110 = UUID.uuidString.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v110, v111, &v163);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v109 + 12) = 2080;
    swift_beginAccess();
    uint64_t v112 = v105;
    uint64_t v113 = v74[2];
    unint64_t v114 = v74[3];
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v113, v114, &v163);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v107, v108, "[MOSuggestionSheetAssetViewModel] init=%s\t id=%s", (uint8_t *)v109, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {
    swift_release_n();

    swift_release();
  }
  outlined destroy of Any?(a71, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of Any?(a36, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  outlined destroy of Any?(a14, &demangling cache variable for type metadata for URL?);
  return v74;
}

Swift::Int __swiftcall MOSuggestionSheetAssetViewModel.updateReflectionIndex()()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*v0 + 680))();
  if (!v1) {
    return (*(uint64_t (**)(void *))(*v0 + 704))(v1);
  }
  uint64_t v2 = v1;
  id v3 = [v1 reflectionPrompts];

  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = swift_bridgeObjectRelease();
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*v0 + 704))(v6);
  uint64_t v8 = *v0;
  if (v7 >= v5 - 1)
  {
    uint64_t v1 = (void *)(*(uint64_t (**)(void))(v8 + 712))(0);
    return (*(uint64_t (**)(void *))(*v0 + 704))(v1);
  }
  Swift::Int result = (*(uint64_t (**)(unsigned char *))(v8 + 720))(v11);
  if (!__OFADD__(*v10, 1))
  {
    ++*v10;
    uint64_t v1 = (void *)((uint64_t (*)(unsigned char *, void))result)(v11, 0);
    return (*(uint64_t (**)(void *))(*v0 + 704))(v1);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MOSuggestionSheetAssetViewModel.prepareForReuse()()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 1760))();
  if (v1)
  {
    (*(void (**)(uint64_t))(*(void *)v1 + 560))(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid);
    swift_release();
  }
}

id *MOSuggestionSheetAssetViewModel.deinit()
{
  uint64_t v1 = v0;
  if (serverManager._displayMonitor != (FBSDisplayLayoutMonitor *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.memory);
  swift_retain_n();
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = UUID.uuidString.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    swift_beginAccess();
    uint64_t v8 = (uint64_t)v0[2];
    unint64_t v9 = (unint64_t)v0[3];
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[MOSuggestionSheetAssetViewModel] de-init=%s\t id=%s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  id v10 = v0[4];
  v0[4] = 0;

  unint64_t v11 = (id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_livePhoto);
  swift_beginAccess();
  id v12 = *v11;
  id *v11 = 0;

  swift_beginAccess();
  id v13 = v1[6];
  v1[6] = 0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of Any?((uint64_t)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_URL, &demangling cache variable for type metadata for URL?);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of Any?((uint64_t)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_weatherTemperature, &demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of Any?((uint64_t)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_stateOfMindDate, (uint64_t *)&demangling cache variable for type metadata for Date?);

  swift_bridgeObjectRelease();
  swift_weakDestroy();
  Swift::String v14 = (char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetAssetViewModel_uuid;
  uint64_t v15 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  return v1;
}

uint64_t MOSuggestionSheetAssetViewModel.__deallocating_deinit()
{
  MOSuggestionSheetAssetViewModel.deinit();

  return swift_deallocClassInstance();
}

Swift::Int MOSuggestionSheetAssetViewModel.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance MOSuggestionSheetAssetViewModel()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 1808))();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MOSuggestionSheetAssetViewModel()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t MOSuggestionSheetAssetViewModel.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionSheetAssetViewModel()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionSheetAssetViewModel()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static MOSuggestionSheetAssetViewModel.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t specialized static MOSuggestionSheetAssetViewModel.assetTypeAsPluralString(assetAndMediaType:count:includeCount:)(void *a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
    id v32 = a1;
LABEL_16:
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  id v147 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_17;
  }
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;
  if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21) {
    goto LABEL_16;
  }
  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_17;
  }
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;
  if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26) {
    goto LABEL_16;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;
    if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31)
    {
      swift_bridgeObjectRelease_n();
LABEL_29:

      if (a5)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v46._uint64_t countAndFlagsBits = 0;
        v46._id object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v46);
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
        unint64_t v34 = 0x74756F6B726F5720;
        unint64_t v35 = 0xEF736574756F5220;
        goto LABEL_19;
      }
      id v37 = [self mainBundle];
      unint64_t v146 = 0x80000001001E8040;
      unint64_t v39 = 0x2074756F6B726F57;
      if (a4 < 2) {
        unint64_t v40 = 0xED00006574756F52;
      }
      else {
        unint64_t v40 = 0xEE00736574756F52;
      }
LABEL_26:
      v42._uint64_t countAndFlagsBits = 0;
      v42._id object = (void *)0xE000000000000000;
      unint64_t v43 = 0xD00000000000001ALL;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v39, (Swift::String_optional)0, (NSBundle)v37, v42, *(Swift::String *)(&v146 - 1))._countAndFlagsBits;

      return countAndFlagsBits;
    }
    char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_29;
    }
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;
    if (v47 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v49 == v50)
    {
      swift_bridgeObjectRelease_n();
LABEL_38:

      if (a5)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v52._uint64_t countAndFlagsBits = 0;
        v52._id object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v52);
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
        v53._id object = (void *)0x80000001001E42C0;
        v53._uint64_t countAndFlagsBits = 0xD000000000000012;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v53);
        String.LocalizationValue.init(stringInterpolation:)();
        static Locale.current.getter();
        return String.init(localized:table:bundle:locale:comment:)();
      }
      id v37 = [self mainBundle];
      if (a4 < 2)
      {
        unint64_t v146 = 0x80000001001E8040;
        unint64_t v39 = 0x2074756F6B726F57;
        unint64_t v40 = 0xEF7972616D6D7553;
        goto LABEL_26;
      }
      unint64_t v39 = 0xD000000000000011;
      unint64_t v146 = 0x80000001001E8040;
      unint64_t v54 = "Workout Summaries";
      goto LABEL_42;
    }
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_38;
    }
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v56;
    if (v55 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v57 == v58)
    {
      swift_bridgeObjectRelease_n();
LABEL_48:

      if ((a5 & 1) == 0)
      {
        id v37 = [self mainBundle];
        unint64_t v146 = 0x80000001001E8040;
        if (a4 < 2) {
          unint64_t v39 = 0x6E6F73726550;
        }
        else {
          unint64_t v39 = 0x656C706F6550;
        }
        unint64_t v40 = 0xE600000000000000;
        goto LABEL_26;
      }
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v60._uint64_t countAndFlagsBits = 0;
      v60._id object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v60);
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      unint64_t v34 = 0x656C706F655020;
      goto LABEL_50;
    }
    char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_48;
    }
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v63 = v62;
    if (v61 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v63 == v64)
    {
      swift_bridgeObjectRelease_n();
LABEL_59:

      if (a5)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v66._uint64_t countAndFlagsBits = 0;
        v66._id object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v66);
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
        uint64_t v67 = 1852394528;
LABEL_61:
        unint64_t v34 = v67 & 0xFFFF0000FFFFFFFFLL | 0x736B00000000;
        unint64_t v35 = 0xE600000000000000;
        goto LABEL_19;
      }
      id v37 = [self mainBundle];
      if (a4 < 2)
      {
        unint64_t v146 = 0x80000001001E8040;
        unint64_t v39 = 1802398028;
        unint64_t v40 = 0xE400000000000000;
        goto LABEL_26;
      }
      unint64_t v146 = 0x80000001001E8040;
      uint64_t v68 = 1802398028;
      goto LABEL_64;
    }
    char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v65) {
      goto LABEL_59;
    }
    uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v71 = v70;
    if (v69 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v71 == v72) {
      goto LABEL_67;
    }
    char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v73) {
      goto LABEL_70;
    }
    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v78 = v77;
    if (v76 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v78 == v79)
    {
LABEL_67:
      swift_bridgeObjectRelease_n();
LABEL_70:

      if (a5)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v74._uint64_t countAndFlagsBits = 0;
        v74._id object = (void *)0xE000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v74);
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
        unint64_t v34 = 0x736F746F685020;
        goto LABEL_50;
      }
      id v37 = [self mainBundle];
      if (a4 >= 2)
      {
        unint64_t v146 = 0x80000001001E8040;
        uint64_t v75 = 1953458256;
LABEL_74:
        unint64_t v39 = v75 & 0xFFFF0000FFFFFFFFLL | 0x736F00000000;
        unint64_t v40 = 0xE600000000000000;
        goto LABEL_26;
      }
      unint64_t v146 = 0x80000001001E8040;
      uint64_t v85 = 1953458256;
      goto LABEL_82;
    }
    char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v80) {
      goto LABEL_70;
    }
    uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v83 = v82;
    if (v81 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v83 == v84)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_84;
    }
    char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v86)
    {
LABEL_84:

      if (a3)
      {
LABEL_88:
        if (a5)
        {
LABEL_89:
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v87._uint64_t countAndFlagsBits = 0;
          v87._id object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v87);
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
          unint64_t v34 = 0x616964654D20;
          unint64_t v35 = 0xE600000000000000;
          goto LABEL_19;
        }
LABEL_93:
        id v37 = [self mainBundle];
        unint64_t v146 = 0x80000001001E8040;
        unint64_t v39 = 0x616964654DLL;
        unint64_t v40 = 0xE500000000000000;
      }
      else
      {
        switch(a2)
        {
          case 1:
            if (a5)
            {
              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
              v106._uint64_t countAndFlagsBits = 0;
              v106._id object = (void *)0xE000000000000000;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v106);
              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
              unint64_t v34 = 0x73676E6F5320;
              unint64_t v35 = 0xE600000000000000;
              goto LABEL_19;
            }
            id v37 = [self mainBundle];
            if (a4 >= 2)
            {
              unint64_t v146 = 0x80000001001E8040;
              uint64_t v68 = 1735290707;
              goto LABEL_64;
            }
            unint64_t v146 = 0x80000001001E8040;
            unint64_t v39 = 1735290707;
            unint64_t v40 = 0xE400000000000000;
            goto LABEL_26;
          case 2:
          case 5:
            if (a5)
            {
              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
              v95._uint64_t countAndFlagsBits = 0;
              v95._id object = (void *)0xE000000000000000;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v95);
              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
              unint64_t v34 = 0x74736163646F5020;
              unint64_t v35 = 0xE900000000000073;
              goto LABEL_19;
            }
            id v37 = [self mainBundle];
            if (a4 >= 2)
            {
              unint64_t v146 = 0x80000001001E8040;
              uint64_t v38 = 0x736163646F50;
              goto LABEL_23;
            }
            unint64_t v146 = 0x80000001001E8040;
            uint64_t v41 = 0x736163646F50;
            goto LABEL_25;
          case 4:
            if (a5)
            {
              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
              v107._uint64_t countAndFlagsBits = 0;
              v107._id object = (void *)0xE000000000000000;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v107);
              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
              unint64_t v34 = 0x736D75626C4120;
              goto LABEL_50;
            }
            id v37 = [self mainBundle];
            unint64_t v146 = 0x80000001001E8040;
            if (a4 < 2)
            {
              unint64_t v39 = 0x6D75626C41;
              unint64_t v40 = 0xE500000000000000;
            }
            else
            {
              unint64_t v39 = 0x736D75626C41;
              unint64_t v40 = 0xE600000000000000;
            }
            break;
          case 6:
          case 7:
          case 8:
            if ((a5 & 1) == 0) {
              goto LABEL_93;
            }
            goto LABEL_89;
          default:
            goto LABEL_88;
        }
      }
      goto LABEL_26;
    }
    uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v90 = v89;
    if (v88 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v90 == v91) {
      goto LABEL_92;
    }
    char v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v92) {
      goto LABEL_95;
    }
    uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v98 = v97;
    if (v96 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v98 == v99)
    {
LABEL_92:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v100 & 1) == 0)
      {
        uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v103 = v102;
        if (v101 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v103 == v104)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v108 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v108 & 1) == 0)
          {
            uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v112 = v111;
            if (v110 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v112 == v113)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v114 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v114 & 1) == 0)
              {
                uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v118 = v117;
                if (v116 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v118 == v119)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  char v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v120 & 1) == 0)
                  {
                    uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v124 = v123;
                    if (v122 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v124 == v125)
                    {
                      swift_bridgeObjectRelease_n();
                    }
                    else
                    {
                      char v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v126 & 1) == 0)
                      {
                        uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        uint64_t v130 = v129;
                        if (v128 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v130 == v131)
                        {
                          swift_bridgeObjectRelease_n();
                        }
                        else
                        {
                          char v132 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v132 & 1) == 0)
                          {
                            uint64_t v134 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            uint64_t v136 = v135;
                            if (v134 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v136 == v137)
                            {
                              swift_bridgeObjectRelease_n();
                            }
                            else
                            {
                              char v138 = _stringCompareWithSmolCheck(_:_:expecting:)();
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if ((v138 & 1) == 0)
                              {
                                uint64_t v140 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                                uint64_t v142 = v141;
                                if (v140 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v142 == v143)
                                {

                                  swift_bridgeObjectRelease_n();
                                }
                                else
                                {
                                  char v144 = _stringCompareWithSmolCheck(_:_:expecting:)();

                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  if ((v144 & 1) == 0) {
                                    return 0;
                                  }
                                }
                                if (a5)
                                {
                                  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
                                  v145._uint64_t countAndFlagsBits = 0;
                                  v145._id object = (void *)0xE000000000000000;
                                  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v145);
                                  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
                                  unint64_t v34 = 0xD000000000000013;
                                  unint64_t v35 = 0x80000001001E80A0;
                                  goto LABEL_19;
                                }
                                id v37 = [self mainBundle];
                                if (a4 < 2)
                                {
                                  unint64_t v39 = 0xD000000000000011;
                                  unint64_t v146 = 0x80000001001E8040;
                                  unint64_t v54 = "State of Mind Log";
                                }
                                else
                                {
                                  unint64_t v39 = 0xD000000000000012;
                                  unint64_t v146 = 0x80000001001E8040;
                                  unint64_t v54 = "State of Mind Logs";
                                }
LABEL_42:
                                unint64_t v40 = (unint64_t)(v54 - 32) | 0x8000000000000000;
                                goto LABEL_26;
                              }
                            }

                            if (a5)
                            {
                              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
                              v139._uint64_t countAndFlagsBits = 0;
                              v139._id object = (void *)0xE000000000000000;
                              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v139);
                              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
                              unint64_t v34 = 0x7463656C66655220;
                              unint64_t v35 = 0xEC000000736E6F69;
                              goto LABEL_19;
                            }
                            id v37 = [self mainBundle];
                            if (a4 < 2)
                            {
                              unint64_t v40 = 0xEA00000000006E6FLL;
                              unint64_t v146 = 0x80000001001E8040;
                              unint64_t v39 = 0x697463656C666552;
                            }
                            else
                            {
                              unint64_t v146 = 0x80000001001E8040;
                              unint64_t v39 = 0x697463656C666552;
                              unint64_t v40 = 0xEB00000000736E6FLL;
                            }
                            goto LABEL_26;
                          }
                        }

                        if (a5)
                        {
                          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
                          v133._uint64_t countAndFlagsBits = 0;
                          v133._id object = (void *)0xE000000000000000;
                          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v133);
                          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
                          unint64_t v34 = 0x6F63492070704120;
                          goto LABEL_97;
                        }
                        id v37 = [self mainBundle];
                        if (a4 >= 2)
                        {
                          unint64_t v146 = 0x80000001001E8040;
                          uint64_t v94 = 0x634920707041;
                          goto LABEL_100;
                        }
                        unint64_t v146 = 0x80000001001E8040;
                        uint64_t v105 = 0x634920707041;
LABEL_110:
                        unint64_t v39 = v105 & 0xFFFFFFFFFFFFLL | 0x6E6F000000000000;
                        unint64_t v40 = 0xE800000000000000;
                        goto LABEL_26;
                      }
                    }

                    if (a5)
                    {
                      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
                      v127._uint64_t countAndFlagsBits = 0;
                      v127._id object = (void *)0xE000000000000000;
                      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v127);
                      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
                      uint64_t v67 = 1818318624;
                      goto LABEL_61;
                    }
                    id v37 = [self mainBundle];
                    if (a4 < 2)
                    {
                      unint64_t v146 = 0x80000001001E8040;
                      unint64_t v39 = 1802264919;
                      unint64_t v40 = 0xE400000000000000;
                      goto LABEL_26;
                    }
                    unint64_t v146 = 0x80000001001E8040;
                    uint64_t v68 = 1802264919;
LABEL_64:
                    unint64_t v39 = v68 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
                    unint64_t v40 = 0xE500000000000000;
                    goto LABEL_26;
                  }
                }

                if ((a5 & 1) == 0)
                {
                  id v37 = [self mainBundle];
                  unint64_t v146 = 0x80000001001E8040;
                  if (a4 < 2)
                  {
                    unint64_t v39 = 0x646E657254;
                    unint64_t v40 = 0xE500000000000000;
                  }
                  else
                  {
                    unint64_t v39 = 0x73646E657254;
                    unint64_t v40 = 0xE600000000000000;
                  }
                  goto LABEL_26;
                }
                String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
                v121._uint64_t countAndFlagsBits = 0;
                v121._id object = (void *)0xE000000000000000;
                String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v121);
                String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
                unint64_t v34 = 0x73646E65725420;
LABEL_50:
                unint64_t v35 = 0xE700000000000000;
                goto LABEL_19;
              }
            }

            if (a5)
            {
              String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
              v115._uint64_t countAndFlagsBits = 0;
              v115._id object = (void *)0xE000000000000000;
              String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v115);
              String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
              unint64_t v34 = 0x736F6564695620;
              goto LABEL_50;
            }
            id v37 = [self mainBundle];
            if (a4 >= 2)
            {
              unint64_t v146 = 0x80000001001E8040;
              uint64_t v75 = 1701079382;
              goto LABEL_74;
            }
            unint64_t v146 = 0x80000001001E8040;
            uint64_t v85 = 1701079382;
LABEL_82:
            unint64_t v39 = v85 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000;
            unint64_t v40 = 0xE500000000000000;
            goto LABEL_26;
          }
        }

        if (a5)
        {
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v109._uint64_t countAndFlagsBits = 0;
          v109._id object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v109);
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
          unint64_t v34 = 0x676E696B6C615720;
          unint64_t v35 = 0xEE00736165724120;
          goto LABEL_19;
        }
        id v37 = [self mainBundle];
        unint64_t v146 = 0x80000001001E8040;
        unint64_t v39 = 0x20676E696B6C6157;
        if (a4 < 2) {
          unint64_t v40 = 0xEC00000061657241;
        }
        else {
          unint64_t v40 = 0xED00007361657241;
        }
        goto LABEL_26;
      }
    }
LABEL_95:

    if (a5)
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v93._uint64_t countAndFlagsBits = 0;
      v93._id object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v93);
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      unint64_t v34 = 0x6F697461636F4C20;
LABEL_97:
      unint64_t v35 = 0xEA0000000000736ELL;
      goto LABEL_19;
    }
    id v37 = [self mainBundle];
    if (a4 >= 2)
    {
      unint64_t v146 = 0x80000001001E8040;
      uint64_t v94 = 0x697461636F4CLL;
LABEL_100:
      unint64_t v39 = v94 & 0xFFFFFFFFFFFFLL | 0x6E6F000000000000;
      unint64_t v40 = 0xE900000000000073;
      goto LABEL_26;
    }
    unint64_t v146 = 0x80000001001E8040;
    uint64_t v105 = 0x697461636F4CLL;
    goto LABEL_110;
  }
LABEL_17:

  if ((a5 & 1) == 0)
  {
    id v37 = [self mainBundle];
    if (a4 < 2)
    {
      unint64_t v146 = 0x80000001001E8040;
      uint64_t v41 = 0x756F6B726F57;
LABEL_25:
      unint64_t v39 = v41 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      unint64_t v40 = 0xE700000000000000;
    }
    else
    {
      unint64_t v146 = 0x80000001001E8040;
      uint64_t v38 = 0x756F6B726F57;
LABEL_23:
      unint64_t v39 = v38 & 0xFFFFFFFFFFFFLL | 0x7374000000000000;
      unint64_t v40 = 0xE800000000000000;
    }
    goto LABEL_26;
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v33._uint64_t countAndFlagsBits = 0;
  v33._id object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v33);
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  unint64_t v34 = 0x74756F6B726F5720;
  unint64_t v35 = 0xE900000000000073;
LABEL_19:
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v34);
  String.LocalizationValue.init(stringInterpolation:)();
  static Locale.current.getter();
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t outlined assign with copy of URL?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t base witness table accessor for Equatable in MOSuggestionSheetAssetViewModel()
{
  return _s10Foundation4UUIDVACSHAAWlTm_2(&lazy protocol witness table cache variable for type MOSuggestionSheetAssetViewModel and conformance MOSuggestionSheetAssetViewModel, (void (*)(uint64_t))type metadata accessor for MOSuggestionSheetAssetViewModel);
}

uint64_t _s10Foundation4UUIDVACSHAAWlTm_2(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionSheetAssetViewModel(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionSheetAssetViewModel);
}

uint64_t sub_100133ABC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 512))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100133B10(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 520);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100133B80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 536))();
  *a2 = result;
  return result;
}

uint64_t sub_100133BD4(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 544);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100133C34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 560))();
  *a2 = result;
  return result;
}

uint64_t sub_100133C88(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 568);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100133CE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 584))();
  *a2 = result;
  return result;
}

uint64_t sub_100133D3C(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 592);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100133D9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 608))();
  *a2 = result;
  return result;
}

uint64_t sub_100133DF0(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 616);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100133E50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 632))();
  *a2 = result;
  return result;
}

uint64_t sub_100133EA4(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 640);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100133F04@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 656))();
  *a2 = result;
  return result;
}

uint64_t sub_100133F58(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 664))(*a1);
}

uint64_t sub_100133FA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 680))();
  *a2 = result;
  return result;
}

uint64_t sub_100133FFC(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 688);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10013405C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 704))();
  *a2 = result;
  return result;
}

uint64_t sub_1001340B0(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 712))(*a1);
}

uint64_t sub_100134100@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 728))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134154(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 736);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1001341C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 752))();
}

uint64_t sub_100134214@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 776))();
  *a2 = result;
  return result;
}

uint64_t sub_100134268(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 784))(*a1);
}

uint64_t sub_1001342B8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 800))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100134310(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 808))(*a1);
}

uint64_t sub_100134360@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 824))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001343B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 832);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134424@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 848))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134478(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 856);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1001344E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 872))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10013453C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 880);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1001345AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 896))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134600(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 904);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134670@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 920))();
  *a2 = result;
  return result;
}

uint64_t sub_1001346C4(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 928);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100134724@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 944))();
  *a2 = result;
  return result;
}

uint64_t sub_100134778(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 952);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1001347D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 968))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10013482C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 976);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_10013489C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 992))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001348F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1000);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134960@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1016))();
  *a2 = result;
  return result;
}

uint64_t sub_1001349B4(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1024))(*a1);
}

uint64_t sub_100134A04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1040))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134A58(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1048);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134AC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1064))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134B1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1072);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134B8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1088))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134BE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1096);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134C50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 1112))();
}

uint64_t sub_100134CA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1136))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134CF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1144);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1160))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100134DC0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)a2 + 1168))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100134E1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1184))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134E70(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1192);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134EE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1208))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100134F34(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1216);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100134FA4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1232))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100134FFC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1240))(*a1);
}

uint64_t sub_10013504C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 1256))(v4);
  return outlined init with take of Date?((uint64_t)v4, a2, &demangling cache variable for type metadata for CGRect?);
}

uint64_t sub_1001350BC(uint64_t a1, uint64_t a2)
{
  outlined init with take of Date?(a1, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 1264))(v4);
}

uint64_t sub_100135134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 1280))(v4);
  return outlined init with take of Date?((uint64_t)v4, a2, &demangling cache variable for type metadata for CGRect?);
}

uint64_t sub_1001351A4(uint64_t a1, uint64_t a2)
{
  outlined init with take of Date?(a1, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 1288))(v4);
}

uint64_t sub_10013521C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 1304))(v4);
  return outlined init with take of Date?((uint64_t)v4, a2, &demangling cache variable for type metadata for CGRect?);
}

uint64_t sub_10013528C(uint64_t a1, uint64_t a2)
{
  outlined init with take of Date?(a1, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
  return (*(uint64_t (**)(unsigned char *))(**(void **)a2 + 1312))(v4);
}

uint64_t sub_100135304@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1328))();
  *a2 = result;
  return result;
}

uint64_t sub_100135358(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1336))(*a1);
}

uint64_t sub_1001353A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1352))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001353FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1360);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_10013546C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1376))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001354C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1384);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100135530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1400))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10013558C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)a2 + 1408))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1001355E8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1424))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100135640(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1432))(*a1);
}

uint64_t sub_100135690@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1448))();
  *a2 = result;
  return result;
}

uint64_t sub_1001356E4(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 1456);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100135744@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1472))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100135798(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1480);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100135808@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1496))();
  *a2 = result;
  return result;
}

uint64_t sub_10013585C(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1504))(*a1);
}

uint64_t sub_1001358AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1520))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100135900(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1528);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100135970@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1544))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001359C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1552);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100135A34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1568))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100135A88(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1576);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100135AF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1592))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100135B4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 1600);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100135BBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1616))();
  *a2 = result;
  return result;
}

uint64_t sub_100135C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 1624);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100135C6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1640))();
  *a2 = result;
  return result;
}

uint64_t sub_100135CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 1648);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100135D1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 1664))();
}

uint64_t sub_100135D6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1688))();
  *a2 = result;
  return result;
}

uint64_t sub_100135DC0(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 1696);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100135E20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1712))();
  *a2 = result;
  return result;
}

uint64_t sub_100135E74(uint64_t a1, uint64_t a2)
{
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 1720);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100135ED0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1736))();
  *a2 = result;
  return result;
}

uint64_t sub_100135F24(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 1744))(*a1);
}

uint64_t sub_100135F74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 1760))();
  *a2 = result;
  return result;
}

uint64_t sub_100135FC8(uint64_t a1, uint64_t a2)
{
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 1768);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t *initializeBufferWithCopyOfBuffer for MOSuggestionSheetAssetDateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for MOSuggestionSheetAssetDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for MOSuggestionSheetAssetDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for MOSuggestionSheetAssetDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for MOSuggestionSheetAssetDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for MOSuggestionSheetAssetDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionSheetAssetDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001368C0);
}

uint64_t sub_1001368C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionSheetAssetDateRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001369D0);
}

uint64_t sub_1001369D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void type metadata completion function for MOSuggestionSheetAssetDateRange()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for Date?, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t ObjC metadata update function for MOSuggestionSheetAssetViewModel()
{
  return type metadata accessor for MOSuggestionSheetAssetViewModel(0);
}

void type metadata completion function for MOSuggestionSheetAssetViewModel()
{
  type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for URL?, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Measurement<NSUnitTemperature>?();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date?(319, (unint64_t *)&lazy cache variable for type metadata for Date?, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F)
      {
        type metadata accessor for UUID();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void type metadata accessor for Date?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void type metadata accessor for Measurement<NSUnitTemperature>?()
{
  if (!lazy cache variable for type metadata for Measurement<NSUnitTemperature>?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Measurement<NSUnitTemperature>?);
    }
  }
}

const char *MOSuggestionInterstitialCarouselCheckMarkView.Constants.SELECTED_SYMBOL.unsafeMutableAddressor()
{
  return "checkmark";
}

uint64_t static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SELECTED_SYMBOL.getter()
{
  return 0x72616D6B63656863;
}

id one-time initialization function for SYMBOL_TINT_COLOR()
{
  id result = [self whiteColor];
  static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR.unsafeMutableAddressor()
{
  if (one-time initialization token for SYMBOL_TINT_COLOR != -1) {
    swift_once();
  }
  return &static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR;
}

id static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for SYMBOL_TINT_COLOR, (void **)&static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR);
}

id one-time initialization function for BORDER_COLOR()
{
  if (one-time initialization token for SYMBOL_TINT_COLOR != -1) {
    swift_once();
  }
  id result = [(id)static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR CGColor];
  static MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR.unsafeMutableAddressor()
{
  if (one-time initialization token for BORDER_COLOR != -1) {
    swift_once();
  }
  return &static MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR;
}

id static MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for BORDER_COLOR, (void **)&static MOSuggestionInterstitialCarouselCheckMarkView.Constants.BORDER_COLOR);
}

void *MOSuggestionInterstitialCarouselCheckMarkView.Constants.MARGIN.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialCarouselCheckMarkView.Constants.MARGIN;
}

double static MOSuggestionInterstitialCarouselCheckMarkView.Constants.MARGIN.getter()
{
  return 11.0;
}

uint64_t MOSuggestionInterstitialCarouselCheckMarkView.isSelected.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionInterstitialCarouselCheckMarkView.isSelected.setter(char a1)
{
  unint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*MOSuggestionInterstitialCarouselCheckMarkView.isSelected.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionInterstitialCarouselCheckMarkView.keyColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor);
  swift_beginAccess();
  unint64_t v2 = *v1;

  return v2;
}

void MOSuggestionInterstitialCarouselCheckMarkView.keyColor.setter(void *a1)
{
  unint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor);
  swift_beginAccess();
  unint64_t v4 = *v3;
  unsigned char *v3 = a1;
}

uint64_t (*MOSuggestionInterstitialCarouselCheckMarkView.keyColor.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionInterstitialCarouselCheckMarkView.accessoryButton.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton));
}

id MOSuggestionInterstitialCarouselCheckMarkView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected] = 2;
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor;
  uint64_t v10 = self;
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 systemBlueColor];
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v11[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView();
  id v13 = [super initWithFrame:a1, a2, a3, a4];
  MOSuggestionInterstitialCarouselCheckMarkView.addButton()();

  return v13;
}

uint64_t type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView()
{
  return self;
}

void MOSuggestionInterstitialCarouselCheckMarkView.addButton()()
{
  char v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68))();
  (*(void (**)(void))((swift_isaMask & *v0) + 0xA0))((v1 == 2) | (v1 & 1));
  id v2 = [v0 layer];
  if (one-time initialization token for borderColor != -1) {
    swift_once();
  }
  [v2 setBorderColor:static CanvasAssetAccessoryView.borderColor];

  id v3 = [v0 layer];
  [v3 setBorderWidth:1.5];

  id v4 = [v0 layer];
  [v0 frame];
  [v4 setCornerRadius:v5 * 0.5];

  id v6 = [v0 layer];
  id v7 = [self blackColor];
  id v8 = [v7 CGColor];

  [v6 setShadowColor:v8];
  id v9 = [v0 layer];
  LODWORD(v10) = 1041865114;
  [v9 setShadowOpacity:v10];

  id v11 = [v0 layer];
  [v11 setShadowRadius:3.0];

  id v12 = [v0 layer];
  [v12 setShadowOffset:0.0, 0.0];

  id v13 = [v0 layer];
  [v13 setShadowPathIsBounds:1];

  uint64_t v14 = *(void **)((char *)v0
                 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton);
  [v0 addSubview:v14];
  [v0 frame];
  CGFloat v15 = CGRectGetWidth(v43) + -11.0;
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v14 widthAnchor];
  id v17 = [v16 constraintEqualToConstant:v15];

  [v17 setActive:1];
  [v0 frame];
  CGFloat v18 = CGRectGetHeight(v44) + -11.0;
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v19 = [v14 heightAnchor];
  id v20 = [v19 constraintEqualToConstant:v18];

  [v20 setActive:1];
  id v21 = [v14 superview];
  if (v21)
  {
    char v22 = v21;
    [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v23 = [v14 centerYAnchor];
    id v24 = [v22 centerYAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    [v25 setConstant:0.0];
    id v26 = v25;
    [v26 setActive:1];
  }
  id v27 = [v14 superview];
  if (v27)
  {
    uint64_t v28 = v27;
    [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v14 centerXAnchor];
    id v30 = [v28 centerXAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:0.0];
    id v32 = v31;
    [v32 setActive:1];
  }
  Swift::String v33 = self;
  id v34 = [v33 preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v35 = [v34 fontDescriptor];
  id v36 = [v35 fontDescriptorWithSymbolicTraits:2];

  if (v36)
  {
    id v37 = [v33 fontWithDescriptor:v36 size:0.0];

    id v38 = [self configurationWithFont:v37];
    id v39 = v38;
    NSString v40 = String._bridgeToObjectiveC()();
    id v41 = [self _systemImageNamed:v40 withConfiguration:v39];

    [v14 setImage:v41 forState:0];
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselCheckMarkView.layoutSubviews()()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView();
  [super layoutSubviews];
  id v1 = [v0 layer];
  [v0 bounds];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  [v0 bounds];
  CGFloat v10 = CGRectGetHeight(v14) * 0.5;
  id v11 = [self bezierPathWithRoundedRect:v3 cornerRadius:v5 v7, v9, v10];
  id v12 = [v11 CGPath];

  [v1 setShadowPath:v12];
}

Swift::Void __swiftcall MOSuggestionInterstitialCarouselCheckMarkView.updateCheckmark(isSelected:)(Swift::Bool isSelected)
{
  double v2 = *(void **)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton);
  if (isSelected)
  {
    if (one-time initialization token for SYMBOL_TINT_COLOR != -1) {
      swift_once();
    }
    [v2 setTintColor:static MOSuggestionInterstitialCarouselCheckMarkView.Constants.SYMBOL_TINT_COLOR];
    [v2 setHidden:0];
    id v3 = [v1 layer];
    id v4 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x80))();
    id v5 = [v4 CGColor];
  }
  else
  {
    [*(id *)((char *)v1+ OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton) setHidden:1];
    id v3 = [v1 layer];
    id v4 = [self clearColor];
    id v5 = [v4 CGColor];
  }
  id v6 = v5;

  [v3 setBackgroundColor:v6];
}

uint64_t MOSuggestionInterstitialCarouselCheckMarkView.setTapTarget(target:action:)(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(v2 + OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton);
  outlined init with copy of Any?(a1, (uint64_t)v12);
  uint64_t v5 = v13;
  if (v13)
  {
    id v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v7 = *(void *)(v5 - 8);
    __chkstk_darwin(v6);
    double v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    uint64_t v10 = 0;
  }
  [v4 addTarget:v10 action:a2 forControlEvents:64];
  return swift_unknownObjectRelease();
}

id MOSuggestionInterstitialCarouselCheckMarkView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView();
  return [super dealloc];
}

void specialized MOSuggestionInterstitialCarouselCheckMarkView.init(coder:)()
{
  v0[OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_isSelected] = 2;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_keyColor;
  *(void *)&v0[v1] = [self systemBlueColor];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService45MOSuggestionInterstitialCarouselCheckMarkView_accessoryButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v0[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t outlined init with copy of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001380A4@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_100138100(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x70))(*a1);
}

uint64_t sub_100138158@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_1001381B4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88))(*a1);
}

ValueMetadata *type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView.Constants()
{
  return &type metadata for MOSuggestionInterstitialCarouselCheckMarkView.Constants;
}

void *MOSuggestionInterstitialExpandableListView.__allocating_init(controller:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MOSuggestionInterstitialExpandableListView.init(controller:)(a1);
}

uint64_t MOSuggestionInterstitialExpandableListView.assetTypeSummary.getter()
{
  unint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB8))();
  unint64_t v2 = v1;
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [String]);
    uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    return v16;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    id v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v7 = *(void *)(v2 + 8 * v5 + 32);
        swift_retain();
      }
      uint64_t v8 = (*(uint64_t (**)(void))(*(void *)v7 + 200))();
      if (v9)
      {
        uint64_t v10 = v8;
        uint64_t v11 = v9;
        char v12 = (*(uint64_t (**)(void))(*(void *)v7 + 296))();
        swift_release();
        if (v12)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v6[2] + 1, 1, v6);
          }
          unint64_t v14 = v6[2];
          unint64_t v13 = v6[3];
          if (v14 >= v13 >> 1) {
            id v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v13 > 1), v14 + 1, 1, v6);
          }
          v6[2] = v14 + 1;
          CGFloat v15 = &v6[2 * v14];
          void v15[4] = v10;
          v15[5] = v11;
        }
      }
      else
      {
        swift_release();
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void MOSuggestionInterstitialExpandableListView.reloadCell(_:index:)(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(uint64_t (**)(unsigned char *))((swift_isaMask & *v2) + 0xC8);
  swift_retain();
  id v6 = (void (*)(unsigned char *, void))v5(v11);
  uint64_t v8 = v7;
  uint64_t v9 = *v7;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v8 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew()(v9);
    *uint64_t v8 = v9;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a1;
    swift_release();
    specialized Array._endMutation()();
    v6(v11, 0);
    MOSuggestionInterstitialExpandableListView.reloadAll()();
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.reloadAll()()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_queue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in MOSuggestionInterstitialExpandableListView.reloadAll();
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_27;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  char v12 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v11);
  swift_release();
  swift_release();
}

uint64_t MOSuggestionInterstitialExpandableListView.updateSelectedAssets(_:)()
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0xD8);
  uint64_t v1 = swift_bridgeObjectRetain();

  return v3(v1);
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.refreshCheckmarksState()()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  char v65 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v75 = (char *)&v62 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v62 - v8;
  uint64_t v10 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0xB8);
  uint64_t v90 = v0;
  unint64_t v11 = v10(v7);
  uint64_t v13 = v11;
  if (v11 >> 62) {
    goto LABEL_63;
  }
  uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v14)
  {
LABEL_3:
    unint64_t v15 = 0;
    unint64_t v68 = v13 & 0xC000000000000001;
    uint64_t v64 = v13 & 0xFFFFFFFFFFFFFF8;
    uint64_t v63 = v13 + 32;
    Swift::String v74 = (void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v89 = (void (**)(uint64_t, uint64_t))(v2 + 8);
    *(void *)&long long v12 = 136315650;
    long long v72 = v12;
    uint64_t v71 = (char *)&type metadata for Any + 8;
    uint64_t v79 = v9;
    uint64_t v67 = v13;
    uint64_t v66 = v14;
    while (1)
    {
      if (v68)
      {
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v17 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_61;
        }
      }
      else
      {
        if (v15 >= *(void *)(v64 + 16)) {
          goto LABEL_62;
        }
        uint64_t v16 = *(void *)(v63 + 8 * v15);
        swift_retain();
        unint64_t v17 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_61;
        }
      }
      unint64_t v70 = v17;
      unint64_t v18 = (*(uint64_t (**)(void))(*(void *)v16 + 176))();
      if (v18) {
        break;
      }
      uint64_t v58 = (*(uint64_t (**)(void))((swift_isaMask & *v90) + 0xD0))();
      uint64_t v60 = *(void *)(v16 + 72);
      uint64_t v59 = *(void *)(v16 + 80);
      swift_bridgeObjectRetain();
      LOBYTE(v60) = specialized Set.contains(_:)(v60, v59, v58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = (uint64_t)v65;
      IndexPath.init(row:section:)();
      char v61 = v60 & 1;
      uint64_t v14 = v66;
      uint64_t v13 = v67;
      MOSuggestionInterstitialExpandableListView.refreshCellStateAt(indexPath:assetIdentifier:isSelected:)(v2, *(void *)(v16 + 72), *(void *)(v16 + 80), v61);
      (*v89)(v2, v1);
      swift_release();
LABEL_5:
      unint64_t v15 = v70;
      if (v70 == v14) {
        goto LABEL_66;
      }
    }
    uint64_t v2 = v18;
    uint64_t v69 = v16;
    uint64_t v77 = v18 & 0xFFFFFFFFFFFFFF8;
    if (!(v18 >> 62))
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19) {
        goto LABEL_15;
      }
      goto LABEL_57;
    }
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (!v19)
    {
LABEL_57:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
LABEL_15:
    unint64_t v20 = 0;
    id v21 = *(uint64_t (**)(void))((swift_isaMask & *v90) + 0xD0);
    uint64_t v80 = (swift_isaMask & *v90) + 208;
    uint64_t v81 = v21;
    unint64_t v84 = v2 & 0xC000000000000001;
    Swift::String v87 = *(uint64_t (**)(void))(v80 - 48);
    uint64_t v88 = v80 - 48;
    uint64_t v76 = v2 + 32;
    unint64_t v85 = v15;
    uint64_t v82 = v19;
    uint64_t v83 = v2;
    while (1)
    {
      if (v84)
      {
        uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v23 = __OFADD__(v20++, 1);
        if (v23) {
          goto LABEL_59;
        }
      }
      else
      {
        if (v20 >= *(void *)(v77 + 16)) {
          goto LABEL_60;
        }
        uint64_t v22 = *(void *)(v76 + 8 * v20);
        swift_retain();
        BOOL v23 = __OFADD__(v20++, 1);
        if (v23)
        {
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
          if (!v14) {
            goto LABEL_64;
          }
          goto LABEL_3;
        }
      }
      uint64_t v24 = v81();
      if (!*(void *)(v24 + 16))
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = 0;
        goto LABEL_44;
      }
      uint64_t v25 = v1;
      uint64_t v27 = *(void *)(v22 + 72);
      uint64_t v26 = *(void *)(v22 + 80);
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v28 = Hasher._finalize()();
      uint64_t v29 = -1 << *(unsigned char *)(v24 + 32);
      unint64_t v30 = v28 & ~v29;
      if (((*(void *)(v24 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
        goto LABEL_42;
      }
      uint64_t v31 = *(void *)(v24 + 48);
      id v32 = (void *)(v31 + 16 * v30);
      BOOL v33 = *v32 == v27 && v32[1] == v26;
      if (!v33 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = 1;
LABEL_43:
      uint64_t v1 = v25;
      uint64_t v9 = v79;
LABEL_44:
      uint64_t v37 = IndexPath.init(row:section:)();
      unint64_t v38 = *(void *)(v22 + 80);
      uint64_t v86 = *(void *)(v22 + 72);
      uint64_t v39 = ((uint64_t (*)(uint64_t))v87)(v37);
      if (v39)
      {
        NSString v40 = (void *)v39;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v42 = [v40 cellForItemAtIndexPath:isa];

        if (v42)
        {
          unsigned int v78 = v13;
          uint64_t v43 = v87();
          if (v43)
          {
            CGRect v44 = (void *)v43;
            Class v45 = IndexPath._bridgeToObjectiveC()().super.isa;
            id v46 = [v44 cellForItemAtIndexPath:v45];

            if (v46)
            {
              type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
              uint64_t v47 = swift_dynamicCastClass();
              if (v47)
              {
                (*(void (**)(void))((swift_isaMask & **(void **)(v47
                                                                              + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                               + 0xA0))(v78);
                Swift::Int v48 = IndexPath.section.getter();
                MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v48);
              }
            }
          }
          if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v49 = type metadata accessor for Logger();
          __swift_project_value_buffer(v49, (uint64_t)static MOAngelLogger.shared);
          uint64_t v50 = v75;
          (*v74)(v75, v9, v1);
          swift_bridgeObjectRetain_n();
          uint64_t v13 = Logger.logObject.getter();
          uint64_t v51 = v1;
          os_log_type_t v52 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled((os_log_t)v13, v52))
          {
            uint64_t v53 = swift_slowAlloc();
            id v73 = v42;
            unint64_t v54 = v50;
            uint64_t v55 = v53;
            v91[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v55 = v72;
            _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))&type metadata accessor for IndexPath);
            uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)(v55 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v56, v57, v91);
            swift_bridgeObjectRelease();
            (*v89)((uint64_t)v54, v51);
            *(_WORD *)(v55 + 12) = 1024;
            *(_DWORD *)(v55 + 14) = v78;
            *(_WORD *)(v55 + 18) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v55 + 20) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v86, v38, v91);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v13, v52, "[MOSuggestionInterstitialExpandableListViewCell] update at %s, selected=%{BOOL}d, id=%s", (uint8_t *)v55, 0x1Cu);
            swift_arrayDestroy();
            uint64_t v9 = v79;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            (*v89)((uint64_t)v50, v51);

            swift_bridgeObjectRelease_n();
          }
          uint64_t v1 = v51;
        }
      }
      (*v89)((uint64_t)v9, v1);
      swift_release();
      uint64_t v2 = v83;
      if (v20 == v82)
      {
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v13 = v67;
        uint64_t v14 = v66;
        goto LABEL_5;
      }
    }
    uint64_t v34 = ~v29;
    while (1)
    {
      unint64_t v30 = (v30 + 1) & v34;
      if (((*(void *)(v24 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
        break;
      }
      id v35 = (void *)(v31 + 16 * v30);
      BOOL v36 = *v35 == v27 && v35[1] == v26;
      if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_32;
      }
    }
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
    goto LABEL_43;
  }
LABEL_64:

LABEL_66:
  swift_bridgeObjectRelease();
}

_UNKNOWN **static InterstitialSection.allCases.getter()
{
  return &outlined read-only object #0 of static InterstitialSection.allCases.getter;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance InterstitialSection@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized InterstitialSection.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance InterstitialSection(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static InterstitialSection.allCases.getter;
}

void *MOSuggestionInterstitialExpandableListView.dataSource.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionInterstitialExpandableListView.dataSource.setter(void *a1)
{
}

uint64_t (*MOSuggestionInterstitialExpandableListView.dataSource.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionInterstitialExpandableListView.collectionView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionInterstitialExpandableListView.collectionView.setter(void *a1)
{
}

uint64_t (*MOSuggestionInterstitialExpandableListView.collectionView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionInterstitialExpandableListView.assetViewModels.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionInterstitialExpandableListView.assetViewModels.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_assetViewModels);
  swift_beginAccess();
  void *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOSuggestionInterstitialExpandableListView.assetViewModels.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.setter(uint64_t a1)
{
  id v3 = (void *)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers);
  swift_beginAccess();
  void *v3 = a1;
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xE8))(v4);
  if (result)
  {
    uint64_t v7 = v6;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.modify;
}

uint64_t MOSuggestionInterstitialExpandableListView.selectedAssetIdentifiers.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(a1 + 24)) + 0xE8))(result);
    if (result)
    {
      uint64_t v6 = v5;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t MOSuggestionInterstitialExpandableListView.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t MOSuggestionInterstitialExpandableListView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*MOSuggestionInterstitialExpandableListView.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  void v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetAssetGridView.delegate.modify;
}

uint64_t MOSuggestionInterstitialExpandableListView.controller.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void MOSuggestionInterstitialExpandableListView.controller.setter(void *a1)
{
}

void (*MOSuggestionInterstitialExpandableListView.controller.modify(void *a1))(id **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_controller;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  void v3[3] = swift_unknownObjectWeakLoadStrong();
  return MOSuggestionSheetInterstitialView.controller.modify;
}

void *MOSuggestionInterstitialExpandableListView.init(controller:)(void *a1)
{
  BOOL v33 = a1;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_assetViewModels] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v30 = OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_queue;
  v29[1] = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  uint64_t v7 = v1;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v32);
  *(void *)&v1[v30] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  swift_beginAccess();
  uint64_t v8 = v33;
  swift_unknownObjectWeakAssign();

  uint64_t v9 = (objc_class *)type metadata accessor for MOSuggestionInterstitialExpandableListView();
  v35.receiver = v7;
  v35.super_class = v9;
  id v10 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  unint64_t v11 = self;
  long long v12 = v10;
  id v13 = [v11 systemBackgroundColor];
  [v12 setBackgroundColor:v13];

  [v12 bounds];
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  id v22 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = closure #1 in MOSuggestionInterstitialExpandableListView.generateLayout();
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  void aBlock[3] = &block_descriptor_3;
  BOOL v23 = _Block_copy(aBlock);
  id v24 = [v22 initWithSectionProvider:v23];
  _Block_release(v23);
  swift_release();
  id v25 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v24 collectionViewLayout:v15];

  [v12 addSubview:v25];
  [v25 setAutoresizingMask:18];
  uint64_t v26 = *(void (**)(id))((swift_isaMask & *v12) + 0xA8);
  id v27 = v25;
  v26(v25);
  [v27 setDelegate:v12];
  [v27 setAllowsSelection:1];
  [v27 setAllowsMultipleSelection:1];

  MOSuggestionInterstitialExpandableListView.configureDataSource()();
  return v12;
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.configureCollectionView()()
{
  [v0 bounds];
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  id v9 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  void v15[4] = closure #1 in MOSuggestionInterstitialExpandableListView.generateLayout();
  v15[5] = 0;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v15[3] = &block_descriptor_6_1;
  id v10 = _Block_copy(v15);
  id v11 = [v9 initWithSectionProvider:v10];
  _Block_release(v10);
  swift_release();
  id v12 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v11 collectionViewLayout:v2, v4, v6, v8];

  [v0 addSubview:v12];
  [v12 setAutoresizingMask:18];
  id v13 = *(void (**)(id))((swift_isaMask & *v0) + 0xA8);
  id v14 = v12;
  v13(v12);
  [v14 setDelegate:v0];
  [v14 setAllowsSelection:1];
  [v14 setAllowsMultipleSelection:1];
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.configureDataSource()()
{
  double v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialExpandableListViewCell, MOSuggestionInterstitialListAssetViewModel>);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v31 = (char *)&v30 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v30 - v9;
  __chkstk_darwin(v8);
  id v12 = (char *)&v30 - v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  type metadata accessor for MOSuggestionInterstitialListAssetViewModel();
  BOOL v33 = v12;
  id v13 = v10;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = UICollectionView.CellRegistration.init(handler:)();
  double v15 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0xA0))(v14);
  if (v15)
  {
    double v16 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    double v17 = v31;
    id v30 = v15;
    v16(v31, v10, v2);
    double v18 = v32;
    v16(v32, v33, v2);
    uint64_t v19 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v20 = (v19 + 16) & ~v19;
    uint64_t v21 = (v4 + v19 + v20) & ~v19;
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v22 + v20;
    id v24 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
    v24(v23, v17, v2);
    uint64_t v25 = v22 + v21;
    id v13 = v10;
    v24(v25, v18, v2);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = partial apply for closure #3 in MOSuggestionInterstitialExpandableListView.configureDataSource();
    *(void *)(v26 + 24) = v22;
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionViewDiffableDataSource<InterstitialSection, MOSuggestionInterstitialListAssetViewModel>));
    id v27 = v30;
    uint64_t v28 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x90))(v28);
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v3 + 8);
  v29(v13, v2);
  v29(v33, v2);
}

void MOSuggestionInterstitialExpandableListView.init(frame:)()
{
}

id MOSuggestionInterstitialExpandableListView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialExpandableListView();
  return [super dealloc];
}

UICollectionViewLayout __swiftcall MOSuggestionInterstitialExpandableListView.generateLayout()()
{
  id v0 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v4[4] = closure #1 in MOSuggestionInterstitialExpandableListView.generateLayout();
  void v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed NSCollectionLayoutEnvironment) -> (@owned NSCollectionLayoutSection?);
  v4[3] = &block_descriptor_17_0;
  double v1 = _Block_copy(v4);
  id v2 = [v0 initWithSectionProvider:v1];
  _Block_release(v1);
  swift_release();
  return (UICollectionViewLayout)v2;
}

void *closure #1 in MOSuggestionInterstitialExpandableListView.generateLayout()()
{
  uint64_t v0 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  id v10 = &v16[-v9];
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v0);
  UICollectionLayoutListConfiguration.init(appearance:)();
  id v11 = [self systemBackgroundColor];
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  if (one-time initialization token for CHECKMARK_PLATTER_SIZE != -1) {
    swift_once();
  }
  id v12 = (void (*)(unsigned char *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
  UIListSeparatorConfiguration.bottomSeparatorInsets.setter();
  v12(v16, 0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSCollectionLayoutSection);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v8, v10, v4);
  id v13 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  [v13 setContentInsets:0.0, 0.0, 20.0, 0.0];
  v14(v10, v4);
  return v13;
}

void closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource()(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v65 = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v64 = v7;
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v60 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.OutlineDisclosureOptions.Style?);
  __chkstk_darwin(v15 - 8);
  double v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions();
  uint64_t v62 = *(void *)(v18 - 8);
  uint64_t v63 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = *a3;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = Strong;
    uint64_t v58 = v8;
    uint64_t v23 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x100))();
    if (v23)
    {
      id v24 = (void *)v23;
      uint64_t v25 = enum case for UICellAccessory.OutlineDisclosureOptions.Style.header(_:);
      uint64_t v26 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style();
      uint64_t v56 = v6;
      uint64_t v57 = v5;
      uint64_t v27 = v26;
      uint64_t v28 = *(void *)(v26 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v17, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v17, 0, 1, v27);
      uint64_t v29 = type metadata accessor for UICellAccessory.LayoutDimension();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
      uint64_t v30 = UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)();
      uint64_t v55 = (uint64_t (**)(uint64_t))((swift_isaMask & *v24) + 432);
      uint64_t v31 = *v55;
      LOBYTE(v25) = (*v55)(v30);
      uint64_t v32 = self;
      BOOL v33 = &selRef_systemIndigoColor;
      if (v25) {
        BOOL v33 = &selRef_systemBlueColor;
      }
      id v34 = [v32 *v33];
      UICellAccessory.OutlineDisclosureOptions.tintColor.setter();
      NSString v35 = String._bridgeToObjectiveC()();
      id v36 = [self _systemImageNamed:v35];

      UICellAccessory.OutlineDisclosureOptions._customImage.setter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
      type metadata accessor for UICellAccessory();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001DA0F0;
      uint64_t v37 = v59;
      uint64_t v38 = v60;
      (*(void (**)(char *, void, uint64_t))(v59 + 104))(v11, enum case for UICellAccessory.DisplayedState.always(_:), v60);
      static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v38);
      UICollectionViewListCell.accessories.setter();
      uint64_t v39 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xE8);
      uint64_t v40 = v61;
      uint64_t v41 = swift_retain();
      uint64_t v42 = v39(v41);
      LOBYTE(v35) = v31(v42);
      uint64_t v43 = self;
      CGRect v44 = &selRef_systemIndigoColor;
      if (v35) {
        CGRect v44 = &selRef_systemBlueColor;
      }
      id v45 = [v43 *v44];
      (*(void (**)(id))((swift_isaMask & *a1) + 0xB8))(v45);
      uint64_t v46 = v56;
      uint64_t v47 = v57;
      Swift::Int v48 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v58, v65, v57);
      uint64_t v49 = v46;
      unint64_t v50 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v51 = (char *)swift_allocObject();
      *((void *)v51 + 2) = v22;
      *((void *)v51 + 3) = v40;
      *((void *)v51 + 4) = a1;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v51[v50], v48, v47);
      os_log_type_t v52 = *(void (**)(void (*)(), char *))((swift_isaMask & *a1) + 0xA0);
      swift_retain();
      id v53 = v22;
      unint64_t v54 = a1;
      v52(partial apply for closure #1 in closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource(), v51);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v20, v63);
    }
    else
    {
    }
  }
}

void MOSuggestionInterstitialExpandableListView.toggleSelectionState(_:cell:indexPath:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v72 = a2;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v76 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v71 = (char *)&v68 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v70 = (char *)&v68 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v68 - v15;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xD0))(v14);
  char v18 = MOSuggestionInterstitialListAssetViewModel.hasIdentifiersSelected(_:)(v17);
  swift_bridgeObjectRelease();
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)static MOAngelLogger.shared);
  id v73 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  uint64_t v74 = v79 + 16;
  v73(v16, a3, v7);
  swift_retain_n();
  uint64_t v75 = v20;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v78 = a3;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v69 = v4;
    uint64_t v25 = v24;
    uint64_t v68 = swift_slowAlloc();
    v80[0] = v68;
    *(_DWORD *)uint64_t v25 = 67109634;
    LODWORD(v81) = v18 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 8) = 2080;
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    Swift::Int v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v77 = *(void (**)(char *, uint64_t))(v79 + 8);
    v77(v16, v7);
    *(_WORD *)(v25 + 18) = 2080;
    uint64_t v28 = a1[9];
    unint64_t v29 = a1[10];
    swift_bridgeObjectRetain();
    Swift::Int v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v80);
    a3 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[MOSuggestionInterstitialExpandableListViewCell] toggle attempt isCurrentlySelected=%{BOOL}d, at=%s, id=%s", (uint8_t *)v25, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v69;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v77 = *(void (**)(char *, uint64_t))(v79 + 8);
    v77(v16, v7);

    swift_release_n();
  }
  uint64_t v30 = *(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v72
                                                                         + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                          + 0xA0);
  if ((v18 & 1) == 0)
  {
    uint64_t v43 = v30(1);
    if ((*(uint64_t (**)(uint64_t))(*a1 + 176))(v43))
    {
      swift_bridgeObjectRelease();
      Swift::Int v44 = IndexPath.section.getter();
      MOSuggestionInterstitialExpandableListView.selectAllInSection(_:)(v44);
    }
    else
    {
      Swift::Int v52 = a1[9];
      Swift::Int v53 = a1[10];
      uint64_t v54 = v7;
      uint64_t v55 = *(uint64_t (**)(uint64_t *))((swift_isaMask & *v4) + 0xE0);
      swift_bridgeObjectRetain();
      uint64_t v56 = (void (*)(uint64_t *, void))v55(v80);
      Swift::Int v57 = v52;
      a3 = v78;
      specialized Set._Variant.insert(_:)(&v81, v57, v53);
      swift_bridgeObjectRelease();
      v56(v80, 0);
      uint64_t v7 = v54;
      if (IndexPath.row.getter() >= 1)
      {
        IndexPath.section.getter();
        uint64_t v58 = (uint64_t)v70;
        IndexPath.init(row:section:)();
        MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)(v58, 1);
        v77((char *)v58, v54);
      }
    }
    uint64_t v59 = v71;
    v73(v71, a3, v7);
    swift_retain_n();
    BOOL v33 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v60))
    {
      uint64_t v61 = v7;
      uint64_t v62 = swift_slowAlloc();
      uint64_t v76 = (char *)swift_slowAlloc();
      v80[0] = (uint64_t)v76;
      *(_DWORD *)uint64_t v62 = 136315394;
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
      Swift::Int v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v64, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v77(v59, v61);
      *(_WORD *)(v62 + 12) = 2080;
      uint64_t v65 = a1[9];
      unint64_t v66 = a1[10];
      swift_bridgeObjectRetain();
      Swift::Int v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v65, v66, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v60, "[MOSuggestionInterstitialExpandableListViewCell] did select at %s, id=%s", (uint8_t *)v62, 0x16u);
      goto LABEL_21;
    }
    id v45 = v59;
LABEL_23:
    v77(v45, v7);

    swift_release_n();
    goto LABEL_24;
  }
  uint64_t v31 = v30(0);
  if ((*(uint64_t (**)(uint64_t))(*a1 + 176))(v31))
  {
    swift_bridgeObjectRelease();
    Swift::Int v32 = IndexPath.section.getter();
    MOSuggestionInterstitialExpandableListView.deselectAllInSection(_:)(v32);
  }
  else
  {
    uint64_t v46 = a1[9];
    uint64_t v47 = a1[10];
    uint64_t v48 = v7;
    uint64_t v49 = *(uint64_t (**)(uint64_t *))((swift_isaMask & *v4) + 0xE0);
    swift_bridgeObjectRetain();
    unint64_t v50 = (void (*)(uint64_t *, void))v49(v80);
    specialized Set._Variant.remove(_:)(v46, v47);
    swift_bridgeObjectRelease();
    a3 = v78;
    swift_bridgeObjectRelease();
    v50(v80, 0);
    uint64_t v7 = v48;
    if (IndexPath.row.getter() >= 1
      && (MOSuggestionInterstitialExpandableListView.sectionHasSelection(indexPath:)() & 1) == 0)
    {
      IndexPath.section.getter();
      uint64_t v51 = (uint64_t)v70;
      IndexPath.init(row:section:)();
      MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)(v51, 0);
      v77((char *)v51, v48);
    }
  }
  v73(v76, a3, v7);
  swift_retain_n();
  BOOL v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v33, v34))
  {
    id v45 = v76;
    goto LABEL_23;
  }
  uint64_t v35 = v7;
  uint64_t v36 = swift_slowAlloc();
  uint64_t v37 = swift_slowAlloc();
  uint64_t v38 = v76;
  uint64_t v75 = v37;
  v80[0] = v37;
  *(_DWORD *)uint64_t v36 = 136315394;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
  Swift::Int v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v40, v80);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  v77(v38, v35);
  *(_WORD *)(v36 + 12) = 2080;
  uint64_t v41 = a1[9];
  unint64_t v42 = a1[10];
  swift_bridgeObjectRetain();
  Swift::Int v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v42, v80);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MOSuggestionInterstitialExpandableListViewCell] did de-select at %s, id=%s", (uint8_t *)v36, 0x16u);
LABEL_21:
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_24:
  Swift::Int v67 = IndexPath.section.getter();
  MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v67);
}

void closure #2 in MOSuggestionInterstitialExpandableListView.configureDataSource()(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x100))();
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      uint64_t v6 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xE8);
      uint64_t v7 = swift_retain();
      uint64_t v8 = v6(v7);
      char v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x1B0))(v8);
      uint64_t v10 = self;
      uint64_t v11 = &selRef_systemBlueColor;
      if ((v9 & 1) == 0) {
        uint64_t v11 = &selRef_systemIndigoColor;
      }
      id v12 = [v10 *v11];
      (*(void (**)(id))((swift_isaMask & *a1) + 0xB8))(v12);

      uint64_t v3 = v5;
    }
  }
}

uint64_t closure #3 in MOSuggestionInterstitialExpandableListView.configureDataSource()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(void *)a3 + 176))();
  swift_bridgeObjectRelease();
  type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  type metadata accessor for MOSuggestionInterstitialListAssetViewModel();
  swift_retain();
  uint64_t v3 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  swift_release();
  return v3;
}

unint64_t MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionInterstitialListAssetViewModel>);
  uint64_t v6 = swift_allocBox();
  uint64_t v8 = v7;
  type metadata accessor for MOSuggestionInterstitialListAssetViewModel();
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(&lazy protocol witness table cache variable for type MOSuggestionInterstitialListAssetViewModel and conformance MOSuggestionInterstitialListAssetViewModel, (void (*)(uint64_t))type metadata accessor for MOSuggestionInterstitialListAssetViewModel);
  uint64_t v9 = NSDiffableDataSourceSectionSnapshot.init()();
  unint64_t v10 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xB8))(v9);
  unint64_t v11 = v10;
  if (v10 >> 62)
  {
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_12:
      uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t result = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((a1 & 0x8000000000000000) != 0 || result <= a1) {
    goto LABEL_9;
  }
  if ((v11 & 0xC000000000000001) != 0) {
    goto LABEL_12;
  }
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    uint64_t v13 = *(void *)(v11 + 8 * a1 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1001DA250;
    *(void *)(v14 + 32) = v13;
    unint64_t v15 = v14;
    specialized Array._endMutation()();
    swift_retain();
    addItems #1 (_:to:) in MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(v15, 0, v6);
    swift_release();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v8, v5);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t addItems #1 (_:to:) in MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionInterstitialListAssetViewModel>);
  swift_projectBox();
  swift_beginAccess();
  NSDiffableDataSourceSectionSnapshot.append(_:to:)();
  swift_endAccess();
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(unsigned char **)(a1 + 8 * i + 32);
        swift_retain();
      }
      if (v8[88] != 1)
      {
        uint64_t v9 = (*(uint64_t (**)(void))(*(void *)v8 + 176))();
        if (v9)
        {
          uint64_t v10 = v9;
          swift_retain();
          addItems #1 (_:to:) in MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(v10, v8, a3);
          swift_bridgeObjectRelease();
          swift_release();
        }
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(Swift::Int section)
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = IndexPath.init(row:section:)();
  unint64_t v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xB8))(v7);
  unint64_t v9 = IndexPath.section.getter();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_25:
      uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
      uint64_t v12 = swift_bridgeObjectRelease();
      uint64_t v13 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xD0);
      unint64_t v14 = v13(v12);
      uint64_t v15 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(v14);
      uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 208))(v15);
      uint64_t v36 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 200))(v16);
      uint64_t v18 = v17;
      uint64_t v19 = swift_bridgeObjectRelease();
      uint64_t v20 = v13(v19);
      char v21 = MOSuggestionInterstitialListAssetViewModel.hasIdentifiersSelected(_:)(v20);
      uint64_t v22 = swift_bridgeObjectRelease();
      uint64_t v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xA0))(v22);
      if (v23
        && (uint64_t v24 = (void *)v23,
            char v25 = v21,
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa,
            id v27 = [v24 cellForItemAtIndexPath:isa],
            v24,
            isa,
            v27))
      {
        type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
        uint64_t v28 = (void *)swift_dynamicCastClass();
        uint64_t v29 = v18;
        if (v28)
        {
          uint64_t v30 = v28;
          uint64_t v3 = v37;
          if (v29)
          {
            uint64_t v31 = (*(uint64_t (**)(void))((swift_isaMask & *v28) + 0xE0))();
            if (v31)
            {
              if ((*(uint64_t (**)(uint64_t))(*(void *)v31 + 176))(v31))
              {
                swift_bridgeObjectRelease();
                Swift::Int v32 = *(void **)((char *)v30
                               + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_titleLabel);
                NSString v33 = String._bridgeToObjectiveC()();
                os_log_type_t v34 = v32;
                uint64_t v35 = v33;
                [v34 setText:];
                swift_bridgeObjectRelease();
                swift_release();
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_release();
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          (*(void (**)(void))((swift_isaMask & **(void **)((char *)v30
                                                                        + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                         + 0xA0))(v25 & 1);
          swift_release();

          goto LABEL_22;
        }

        swift_release();
      }
      else
      {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = v37;
LABEL_22:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return;
    }
  }
  else
  {
    unint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v9 & 0x8000000000000000) != 0 || v9 >= v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v37 = v3;
  if ((v8 & 0xC000000000000001) != 0) {
    goto LABEL_25;
  }
  if (v9 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v11 = *(void *)(v8 + 8 * v9 + 32);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
}

void closure #1 in MOSuggestionInterstitialExpandableListView.reloadAll()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSDiffableDataSourceSectionSnapshot<MOSuggestionInterstitialListAssetViewModel>);
  uint64_t v1 = *(uint64_t (***)(char *, uint64_t))(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xB8);
    uint64_t v25 = (swift_isaMask & *Strong) + 184;
    uint64_t v26 = v6;
    unint64_t v7 = v6();
    if (v7 >> 62) {
      goto LABEL_23;
    }
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v9 = swift_bridgeObjectRelease();
    while (1)
    {
      if (!v8)
      {
LABEL_20:
        MOSuggestionInterstitialExpandableListView.printViewModels()();

        return;
      }
      unint64_t v10 = 0;
      uint64_t v24 = (void (**)(char *, uint64_t, uint64_t))(v1 + 2);
      ++v1;
      long long v22 = xmmword_1001DA250;
      uint64_t v23 = v1;
      while (1)
      {
        if (v10 >= 0xD) {
          goto LABEL_9;
        }
        uint64_t v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x88))(v9);
        if (!v9) {
          goto LABEL_9;
        }
        unint64_t v14 = (void *)v9;
        uint64_t v15 = swift_allocBox();
        uint64_t v17 = v16;
        type metadata accessor for MOSuggestionInterstitialListAssetViewModel();
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(&lazy protocol witness table cache variable for type MOSuggestionInterstitialListAssetViewModel and conformance MOSuggestionInterstitialListAssetViewModel, (void (*)(uint64_t))type metadata accessor for MOSuggestionInterstitialListAssetViewModel);
        uint64_t v18 = NSDiffableDataSourceSectionSnapshot.init()();
        unint64_t v19 = ((uint64_t (*)(uint64_t))v26)(v18);
        unint64_t v20 = v19;
        if (v19 >> 62)
        {
          unint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
          if ((v21 & 0x8000000000000000) != 0)
          {
            __break(1u);
            goto LABEL_20;
          }
        }
        else
        {
          unint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v10 < v21) {
          break;
        }
LABEL_8:
        swift_bridgeObjectRelease();
        swift_beginAccess();
        (*v24)(v3, v17, v0);
        swift_release();
        LOBYTE(v27) = v10;
        UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();

        uint64_t v9 = (*v1)(v3, v0);
LABEL_9:
        if (v8 == ++v10) {
          goto LABEL_20;
        }
      }
      if ((v20 & 0xC000000000000001) != 0) {
        break;
      }
      if (v10 < *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v11 = *(void *)(v20 + 8 * v10 + 32);
        swift_retain();
        goto LABEL_7;
      }
      __break(1u);
LABEL_23:
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v9 = swift_bridgeObjectRelease();
      if (v8 < 0)
      {
        __break(1u);
        return;
      }
    }
    uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = v22;
    *(void *)(v12 + 32) = v11;
    unint64_t v27 = v12;
    specialized Array._endMutation()();
    unint64_t v13 = v27;
    swift_retain();
    addItems #1 (_:to:) in MOSuggestionInterstitialExpandableListView.updatedSnapshot(_:)(v13, 0, v15);
    swift_release();
    uint64_t v1 = v23;
    goto LABEL_8;
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.printViewModels()()
{
  unint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB8))();
  unint64_t v2 = v1;
  if (v1 >> 62) {
    goto LABEL_35;
  }
  for (uint64_t i = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = 0;
    unint64_t v36 = v2 & 0xC000000000000001;
    unint64_t v32 = v2 + 32;
    uint64_t v33 = v2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v34 = v2;
    uint64_t v35 = i;
    while (v36)
    {
      uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v6 = __OFADD__(v4, 1);
      unint64_t v7 = v4 + 1;
      if (v6) {
        goto LABEL_32;
      }
LABEL_12:
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.assets);
      swift_retain_n();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      unint64_t v37 = v7;
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 136315394;
        uint64_t v12 = v5[9];
        unint64_t v13 = v5[10];
        swift_bridgeObjectRetain();
        *(void *)(v11 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v39);
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2080;
        type metadata accessor for UUID();
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v11 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v39);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "assetViewModel id=%s, uuid=%s", (uint8_t *)v11, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        unint64_t v2 = v34;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v16 = swift_release_n();
      }
      unint64_t v17 = (*(uint64_t (**)(uint64_t))(*v5 + 176))(v16);
      if (v17)
      {
        unint64_t v18 = v17;
        if (v17 >> 62)
        {
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          if (!v19)
          {
LABEL_31:
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v19) {
            goto LABEL_31;
          }
        }
        if (v19 < 1) {
          goto LABEL_33;
        }
        uint64_t v20 = 0;
        unint64_t v21 = v18 & 0xC000000000000001;
        unint64_t v38 = v18;
        do
        {
          if (v21)
          {
            uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v22 = *(void *)(v18 + 8 * v20 + 32);
            swift_retain();
          }
          swift_retain_n();
          uint64_t v23 = Logger.logObject.getter();
          os_log_type_t v24 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v23, v24))
          {
            uint64_t v25 = swift_slowAlloc();
            uint64_t v39 = swift_slowAlloc();
            *(_DWORD *)uint64_t v25 = 136315394;
            uint64_t v26 = v19;
            unint64_t v27 = v21;
            uint64_t v28 = *(void *)(v22 + 72);
            unint64_t v29 = *(void *)(v22 + 80);
            swift_bridgeObjectRetain();
            *(void *)(v25 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, &v39);
            swift_bridgeObjectRelease();
            *(_WORD *)(v25 + 12) = 2080;
            type metadata accessor for UUID();
            _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
            unint64_t v21 = v27;
            uint64_t v19 = v26;
            unint64_t v18 = v38;
            uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)(v25 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v39);
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v23, v24, "-- subViewModel id=%s, uuid=%s", (uint8_t *)v25, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_release();
          }
          else
          {

            swift_release_n();
          }
          ++v20;
        }
        while (v19 != v20);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v2 = v34;
      }
      else
      {
        swift_release();
      }
LABEL_5:
      unint64_t v4 = v37;
      if (v37 == v35) {
        goto LABEL_36;
      }
    }
    if (v4 >= *(void *)(v33 + 16)) {
      goto LABEL_34;
    }
    uint64_t v5 = *(void **)(v32 + 8 * v4);
    swift_retain();
    BOOL v6 = __OFADD__(v4, 1);
    unint64_t v7 = v4 + 1;
    if (!v6) {
      goto LABEL_12;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    ;
  }
LABEL_36:

  swift_bridgeObjectRelease();
}

uint64_t MOSuggestionInterstitialExpandableListView.assetViewModelAt(indexPath:)(uint64_t a1)
{
  unint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB8))();
  unint64_t v4 = IndexPath.section.getter();
  unint64_t v5 = v4;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v4 = swift_bridgeObjectRelease();
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_24:
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v5 & 0x8000000000000000) != 0 || v5 >= v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_24;
  }
  if (v5 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
  swift_retain();
LABEL_8:
  swift_bridgeObjectRelease();
  if (!IndexPath.row.getter()) {
    return v7;
  }
  uint64_t v8 = (*(uint64_t (**)(void))(*(void *)v7 + 176))();
  if (!v8) {
    goto LABEL_33;
  }
  unint64_t v3 = v8;
  uint64_t v9 = IndexPath.row.getter();
  BOOL v10 = __OFSUB__(v9, 1);
  unint64_t v4 = v9 - 1;
  if (v10) {
    goto LABEL_26;
  }
  a1 = v3 & 0xFFFFFFFFFFFFFF8;
  if (!(v3 >> 62))
  {
    unint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((v4 & 0x8000000000000000) == 0)
    {
      while (v4 < v11)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          goto LABEL_29;
        }
        if (v4 < *(void *)(a1 + 16))
        {
          uint64_t v12 = *(void *)(v3 + 8 * v4 + 32);
          swift_retain();
          goto LABEL_17;
        }
        __break(1u);
LABEL_31:
        unint64_t v4 = v14;
        if ((v14 & 0x8000000000000000) != 0) {
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_33:
    swift_release();
    return 0;
  }
LABEL_27:
  unint64_t v14 = v4;
  swift_bridgeObjectRetain();
  unint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v11 & 0x8000000000000000) == 0) {
    goto LABEL_31;
  }
  __break(1u);
LABEL_29:
  uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
  swift_bridgeObjectRelease();
  swift_release();
  return v12;
}

uint64_t MOSuggestionInterstitialExpandableListView.sectionHasSelection(indexPath:)()
{
  unint64_t v1 = v0;
  unint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB8))();
  uint64_t result = IndexPath.section.getter();
  unint64_t v4 = result;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_12:
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  char v6 = 0;
  if ((v4 & 0x8000000000000000) != 0 || v4 >= v5) {
    goto LABEL_9;
  }
  if ((v2 & 0xC000000000000001) != 0) {
    goto LABEL_12;
  }
  if (v4 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_8:
    uint64_t v7 = swift_bridgeObjectRelease();
    uint64_t v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xD0))(v7);
    char v6 = MOSuggestionInterstitialListAssetViewModel.hasIdentifiersSelected(_:)(v8);
    swift_release();
LABEL_9:
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.selectAllInSection(_:)(Swift::Int a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v50 - v10;
  IndexPath.init(row:section:)();
  MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)((uint64_t)v11, 1);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v58 = v6 + 8;
  uint64_t v59 = v5;
  Swift::Int v57 = v12;
  uint64_t v13 = ((uint64_t (*)(char *, uint64_t))v12)(v11, v5);
  unint64_t v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xB8))(v13);
  unint64_t v15 = v14;
  if (v14 >> 62)
  {
    unint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_35:
      unint64_t v2 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (a1 < 0 || v16 <= a1)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if ((v15 & 0xC000000000000001) != 0) {
    goto LABEL_35;
  }
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a1)
  {
    __break(1u);
LABEL_37:
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    goto LABEL_11;
  }
  unint64_t v2 = *(void **)(v15 + 8 * a1 + 32);
  swift_retain();
LABEL_8:
  uint64_t v17 = swift_bridgeObjectRelease();
  unint64_t v18 = (*(uint64_t (**)(uint64_t))(*v2 + 272))(v17);
  if (!v18) {
    goto LABEL_15;
  }
  if (v18 >> 62) {
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_11:
  unint64_t v18 = swift_bridgeObjectRelease();
  if (v19 == 1)
  {
    (*(void (**)(unint64_t))(*v2 + 200))(v18);
    uint64_t v21 = v20;
    unint64_t v18 = swift_bridgeObjectRelease();
    if (v21)
    {
      if (!(*(uint64_t (**)(unint64_t))(*v2 + 176))(v18))
      {
        Swift::Int v40 = v2[9];
        Swift::Int v41 = v2[10];
        unint64_t v42 = *(uint64_t (**)(void *))((swift_isaMask & *v3) + 0xE0);
        swift_bridgeObjectRetain();
        uint64_t v43 = (void (*)(void *, void))v42(v60);
        specialized Set._Variant.insert(_:)(&v61, v40, v41);
        swift_bridgeObjectRelease();
        v43(v60, 0);
        goto LABEL_44;
      }
      unint64_t v18 = swift_bridgeObjectRelease();
    }
  }
LABEL_15:
  unint64_t v22 = (*(uint64_t (**)(unint64_t))(*v2 + 176))(v18);
  if (!v22)
  {
LABEL_44:
    swift_release();
    return;
  }
  unint64_t v23 = v22;
  Swift::Int v56 = a1;
  unint64_t v50 = v2;
  if (!(v22 >> 62))
  {
    uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v24) {
      goto LABEL_18;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.shared);
    id v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.debug.getter();
    BOOL v47 = os_log_type_enabled(v45, v46);
    Swift::Int v48 = v56;
    if (v47)
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 134217984;
      v60[0] = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[MOSuggestionInterstitialExpandableListViewCell] select at section %ld", v49, 0xCu);
      swift_slowDealloc();
      swift_release();

      return;
    }

    goto LABEL_44;
  }
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  if (!v24) {
    goto LABEL_39;
  }
LABEL_18:
  uint64_t v25 = (swift_isaMask & *v3) + 224;
  uint64_t v55 = *(uint64_t (**)(void *))((swift_isaMask & *v3) + 0xE0);
  if (v24 >= 1)
  {
    uint64_t v26 = v25;
    uint64_t v27 = 0;
    Swift::Int v52 = *(uint64_t (**)(uint64_t))(v25 - 64);
    uint64_t v53 = v25 - 64;
    unint64_t v51 = v23 & 0xC000000000000001;
    unint64_t v54 = v23;
    do
    {
      if (v51)
      {
        uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v28 = *(void *)(v23 + 8 * v27 + 32);
        swift_retain();
      }
      ++v27;
      Swift::Int v29 = *(void *)(v28 + 72);
      Swift::Int v30 = *(void *)(v28 + 80);
      swift_bridgeObjectRetain();
      uint64_t v31 = v26;
      unint64_t v32 = (void (*)(void *, void))v55(v60);
      specialized Set._Variant.insert(_:)(&v61, v29, v30);
      swift_bridgeObjectRelease();
      v32(v60, 0);
      uint64_t v33 = IndexPath.init(row:section:)();
      uint64_t v34 = v52(v33);
      if (v34
        && (uint64_t v35 = (void *)v34,
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa,
            id v37 = [v35 cellForItemAtIndexPath:isa],
            v35,
            isa,
            v37))
      {
        type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
        uint64_t v38 = swift_dynamicCastClass();
        uint64_t v26 = v31;
        if (v38)
        {
          (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v38
                                                                         + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                          + 0xA0))(1);
          Swift::Int v39 = IndexPath.section.getter();
          MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v39);
        }
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v26 = v31;
      }
      unint64_t v23 = v54;
      v57(v9, v59);
    }
    while (v24 != v27);
    goto LABEL_39;
  }
  __break(1u);
}

void MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)(uint64_t a1, char a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xA0))();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v9 = [v5 cellForItemAtIndexPath:isa];

    if (v9)
    {
      type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
      uint64_t v7 = swift_dynamicCastClass();
      if (v7)
      {
        (*(void (**)(void))((swift_isaMask & **(void **)(v7
                                                                      + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                       + 0xA0))(a2 & 1);
        Swift::Int v8 = IndexPath.section.getter();
        MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v8);
      }
    }
  }
}

Swift::Void __swiftcall MOSuggestionInterstitialExpandableListView.deselectAllInSection(_:)(Swift::Int a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v50 - v10;
  IndexPath.init(row:section:)();
  MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)((uint64_t)v11, 0);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v58 = v6 + 8;
  uint64_t v59 = v5;
  Swift::Int v57 = v12;
  uint64_t v13 = ((uint64_t (*)(char *, uint64_t))v12)(v11, v5);
  unint64_t v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xB8))(v13);
  unint64_t v15 = v14;
  if (v14 >> 62)
  {
    unint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_35:
      unint64_t v2 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (a1 < 0 || v16 <= a1)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if ((v15 & 0xC000000000000001) != 0) {
    goto LABEL_35;
  }
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a1)
  {
    __break(1u);
LABEL_37:
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    goto LABEL_11;
  }
  unint64_t v2 = *(void **)(v15 + 8 * a1 + 32);
  swift_retain();
LABEL_8:
  uint64_t v17 = swift_bridgeObjectRelease();
  unint64_t v18 = (*(uint64_t (**)(uint64_t))(*v2 + 272))(v17);
  if (!v18) {
    goto LABEL_15;
  }
  if (v18 >> 62) {
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_11:
  unint64_t v18 = swift_bridgeObjectRelease();
  if (v19 == 1)
  {
    (*(void (**)(unint64_t))(*v2 + 200))(v18);
    uint64_t v21 = v20;
    unint64_t v18 = swift_bridgeObjectRelease();
    if (v21)
    {
      if (!(*(uint64_t (**)(unint64_t))(*v2 + 176))(v18))
      {
        uint64_t v40 = v2[9];
        uint64_t v41 = v2[10];
        unint64_t v42 = *(uint64_t (**)(void *))((swift_isaMask & *v3) + 0xE0);
        swift_bridgeObjectRetain();
        uint64_t v43 = (void (*)(void *, void))v42(v60);
        specialized Set._Variant.remove(_:)(v40, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43(v60, 0);
        goto LABEL_44;
      }
      unint64_t v18 = swift_bridgeObjectRelease();
    }
  }
LABEL_15:
  unint64_t v22 = (*(uint64_t (**)(unint64_t))(*v2 + 176))(v18);
  if (!v22)
  {
LABEL_44:
    swift_release();
    return;
  }
  unint64_t v23 = v22;
  Swift::Int v56 = a1;
  unint64_t v50 = v2;
  if (!(v22 >> 62))
  {
    uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v24) {
      goto LABEL_18;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)static MOAngelLogger.shared);
    id v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.debug.getter();
    BOOL v47 = os_log_type_enabled(v45, v46);
    Swift::Int v48 = v56;
    if (v47)
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 134217984;
      v60[0] = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[MOSuggestionInterstitialExpandableListViewCell] de-select at section %ld", v49, 0xCu);
      swift_slowDealloc();
      swift_release();

      return;
    }

    goto LABEL_44;
  }
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  if (!v24) {
    goto LABEL_39;
  }
LABEL_18:
  uint64_t v25 = (swift_isaMask & *v3) + 224;
  uint64_t v55 = *(uint64_t (**)(void *))((swift_isaMask & *v3) + 0xE0);
  if (v24 >= 1)
  {
    uint64_t v26 = v25;
    uint64_t v27 = 0;
    Swift::Int v52 = *(uint64_t (**)(uint64_t))(v25 - 64);
    uint64_t v53 = v25 - 64;
    unint64_t v51 = v23 & 0xC000000000000001;
    unint64_t v54 = v23;
    do
    {
      if (v51)
      {
        uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v28 = *(void *)(v23 + 8 * v27 + 32);
        swift_retain();
      }
      ++v27;
      uint64_t v29 = *(void *)(v28 + 72);
      uint64_t v30 = *(void *)(v28 + 80);
      swift_bridgeObjectRetain();
      uint64_t v31 = v26;
      unint64_t v32 = (void (*)(void *, void))v55(v60);
      specialized Set._Variant.remove(_:)(v29, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32(v60, 0);
      uint64_t v33 = IndexPath.init(row:section:)();
      uint64_t v34 = v52(v33);
      if (v34
        && (uint64_t v35 = (void *)v34,
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa,
            id v37 = [v35 cellForItemAtIndexPath:isa],
            v35,
            isa,
            v37))
      {
        type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
        uint64_t v38 = swift_dynamicCastClass();
        uint64_t v26 = v31;
        if (v38)
        {
          (*(void (**)(void))((swift_isaMask & **(void **)(v38
                                                                        + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                         + 0xA0))(0);
          Swift::Int v39 = IndexPath.section.getter();
          MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v39);
        }
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v26 = v31;
      }
      unint64_t v23 = v54;
      v57(v9, v59);
    }
    while (v24 != v27);
    goto LABEL_39;
  }
  __break(1u);
}

void MOSuggestionInterstitialExpandableListView.toggleSelectionState(indexPath:)(uint64_t a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA0))();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v9 = [v4 cellForItemAtIndexPath:isa];

    if (v9)
    {
      type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
      uint64_t v6 = (void *)swift_dynamicCastClass();
      if (v6 && (uint64_t v7 = (uint64_t)v6, (v8 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0xE0))()) != 0))
      {
        if (*(unsigned char *)(v8 + 90)) {
          MOSuggestionInterstitialExpandableListView.toggleSelectionState(_:cell:indexPath:)((void *)v8, v7, a1);
        }

        swift_release();
      }
      else
      {
      }
    }
  }
}

void MOSuggestionInterstitialExpandableListView.refreshCellStateAt(indexPath:assetIdentifier:isSelected:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v27 = a2;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0xA0))(v10);
  if (v13)
  {
    unint64_t v14 = (void *)v13;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v16 = [v14 cellForItemAtIndexPath:isa];

    if (v16)
    {
      MOSuggestionInterstitialExpandableListView.forceCell(indexPath:selected:)(a1, a4 & 1);
      if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.shared);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
      swift_bridgeObjectRetain_n();
      unint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.debug.getter();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v29 = v26;
        *(_DWORD *)uint64_t v21 = 136315650;
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        HIDWORD(v24) = v20;
        uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v28 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v29);
        id v25 = v16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        *(_WORD *)(v21 + 12) = 1024;
        LODWORD(v28) = a4 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v21 + 18) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v28 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, a3, &v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v18, BYTE4(v24), "[MOSuggestionInterstitialExpandableListViewCell] update at %s, selected=%{BOOL}d, id=%s", (uint8_t *)v21, 0x1Cu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void MOSuggestionInterstitialExpandableListView.collectionView(_:didDeselectItemAt:)(uint64_t a1, uint64_t a2)
{
}

uint64_t @objc MOSuggestionInterstitialExpandableListView.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  MOSuggestionInterstitialExpandableListView.toggleSelectionState(indexPath:)((uint64_t)v8);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void MOSuggestionInterstitialExpandableListView.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2, uint64_t a3)
{
}

uint64_t sub_10013E92C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionInterstitialExpandableListView.reloadAll()()
{
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

unint64_t specialized InterstitialSection.init(rawValue:)(unint64_t result)
{
  if (result >= 0xD) {
    return 13;
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionInterstitialExpandableListView()
{
  return self;
}

void partial apply for closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource()(void *a1, uint64_t a2, uint64_t *a3)
{
}

void partial apply for closure #2 in MOSuggestionInterstitialExpandableListView.configureDataSource()(void *a1)
{
}

uint64_t sub_10013E9C8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialExpandableListViewCell, MOSuggestionInterstitialListAssetViewModel>);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  uint64_t v9 = v8 + v6;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);

  return _swift_deallocObject(v0, v9, v7);
}

uint64_t partial apply for closure #3 in MOSuggestionInterstitialExpandableListView.configureDataSource()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICollectionView.CellRegistration<MOSuggestionInterstitialExpandableListViewCell, MOSuggestionInterstitialListAssetViewModel>);

  return closure #3 in MOSuggestionInterstitialExpandableListView.configureDataSource()(a1, a2, a3);
}

uint64_t sub_10013EB48()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void specialized MOSuggestionInterstitialExpandableListView.init(coder:)()
{
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_dataSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_collectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_assetViewModels] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService42MOSuggestionInterstitialExpandableListView_queue;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  uint64_t v9 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v8);
  *(void *)&v0[v7] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void specialized MOSuggestionInterstitialExpandableListView.collectionView(_:willDisplay:forItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MOSuggestionInterstitialExpandableListViewCell();
  id v10 = (void *)swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(uint64_t (**)(void))((swift_isaMask & *v10) + 0xE0);
    id v34 = a1;
    uint64_t v13 = v12();
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD0))();
      int v33 = MOSuggestionInterstitialListAssetViewModel.hasIdentifiersSelected(_:)(v15);
      swift_bridgeObjectRelease();
      if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      __swift_project_value_buffer(v16, (uint64_t)static MOAngelLogger.shared);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
      swift_retain_n();
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.debug.getter();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v36 = v31;
        *(_DWORD *)uint64_t v20 = 136315650;
        int v30 = v19;
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_2(&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        os_log_t v29 = v17;
        uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v36);
        uint64_t v32 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        *(_WORD *)(v20 + 12) = 2080;
        uint64_t v23 = *(void *)(v14 + 72);
        unint64_t v24 = *(void *)(v14 + 80);
        swift_bridgeObjectRetain();
        uint64_t v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 22) = 1024;
        char v25 = v33;
        LODWORD(v35) = v33 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        os_log_t v26 = v29;
        _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v30, "[MOSuggestionInterstitialExpandableListViewCell] will display cell at %s, id=%s, shouldBeSelected=%{BOOL}d", (uint8_t *)v20, 0x1Cu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

        swift_release_n();
        char v25 = v33;
      }
      (*(void (**)(void))((swift_isaMask & **(void **)((char *)v11
                                                                    + OBJC_IVAR____TtC16MomentsUIService46MOSuggestionInterstitialExpandableListViewCell_checkmarkView))
                                     + 0xA0))(v25 & 1);
      Swift::Int v28 = IndexPath.section.getter();
      MOSuggestionInterstitialExpandableListView.updateSectionHeaderTitle(section:)(v28);

      swift_release();
    }
    else
    {
      id v27 = v34;
    }
  }
}

unint64_t lazy protocol witness table accessor for type InterstitialSection and conformance InterstitialSection()
{
  unint64_t result = lazy protocol witness table cache variable for type InterstitialSection and conformance InterstitialSection;
  if (!lazy protocol witness table cache variable for type InterstitialSection and conformance InterstitialSection)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InterstitialSection and conformance InterstitialSection);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in InterstitialSection()
{
  return lazy protocol witness table accessor for type [String] and conformance [A](&lazy protocol witness table cache variable for type [InterstitialSection] and conformance [A], &demangling cache variable for type metadata for [InterstitialSection]);
}

uint64_t sub_10013F3FC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t sub_10013F458(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x90);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10013F4C0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA0))();
  *a2 = result;
  return result;
}

uint64_t sub_10013F51C(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xA8);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10013F584@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t sub_10013F5E0(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xC0);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_10013F644@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t sub_10013F6A0(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xD8);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_10013F704@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10013F760(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0xF0);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_10013F7D4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x100))();
  *a2 = result;
  return result;
}

uint64_t sub_10013F838(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x108);
  id v4 = *a1;
  return v3(v2);
}

uint64_t getEnumTagSinglePayload for InterstitialSection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InterstitialSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10013FA04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InterstitialSection()
{
  return &type metadata for InterstitialSection;
}

uint64_t sub_10013FA3C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void partial apply for closure #1 in closure #1 in MOSuggestionInterstitialExpandableListView.configureDataSource()()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  MOSuggestionInterstitialExpandableListView.toggleSelectionState(_:cell:indexPath:)(*(void **)(v0 + 24), *(void *)(v0 + 32), v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t String.shortenedAssetID.getter()
{
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = StringProtocol.components<A>(separatedBy:)();
  if (*(void *)(result + 16))
  {
    uint64_t v1 = *(void *)(result + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static MOSuggestionAssetReference.consolidatedType(_:)(uint64_t a1)
{
  uint64_t v1 = (void *)specialized static MOSuggestionAssetReference.consolidatedType(_:)(a1);

  return v1;
}

id static MOSuggestionAssetReference.consolidatedGroupType(_:)(uint64_t a1)
{
  uint64_t v1 = (void *)specialized static MOSuggestionAssetReference.consolidatedGroupType(_:)(a1);

  return v1;
}

uint64_t MOSuggestionAssetReference.bundleType.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t MOSuggestionAssetReference.bundleType.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t key path setter for MOSuggestionAssetReference.transferID : MOSuggestionAssetReference(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of UUID?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 200))(v6);
}

uint64_t MOSuggestionAssetReference.transferID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  swift_beginAccess();
  return outlined init with copy of UUID?(v3, a1);
}

uint64_t MOSuggestionAssetReference.transferID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  swift_beginAccess();
  outlined assign with take of UUID?(a1, v3);
  return swift_endAccess();
}

uint64_t (*MOSuggestionAssetReference.transferID.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionAssetReference.resource.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionAssetReference.resource.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*MOSuggestionAssetReference.resource.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionAssetReference.NUM_WORKOUT_ASSET_REPRESENTATIONS.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetReference.NUM_WORKOUT_ASSET_REPRESENTATIONS;
}

void *MOSuggestionAssetReference.NUM_MOTIONACTIVITY_ASSET_REPRESENTATIONS.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetReference.NUM_MOTIONACTIVITY_ASSET_REPRESENTATIONS;
}

void *MOSuggestionAssetReference.__allocating_init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)swift_allocObject();
  v10[5] = 0;
  v10[4] = 0;
  uint64_t v11 = (char *)v10 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)((char *)v10 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a1;
  swift_beginAccess();
  v10[4] = a4;
  v10[5] = a5;
  swift_bridgeObjectRelease();
  void v10[2] = a2;
  uint64_t v10[3] = a3;
  return v10;
}

void *MOSuggestionAssetReference.init(resource:assetType:bundleType:appendices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = 0;
  v5[4] = 0;
  uint64_t v11 = (char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a1;
  swift_beginAccess();
  v5[4] = a4;
  v5[5] = a5;
  swift_bridgeObjectRelease();
  v5[2] = a2;
  v5[3] = a3;
  return v5;
}

uint64_t MOSuggestionAssetReference.packedAssetKeywordString.getter()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 216))();
  id v2 = [v1 assets];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t MOSuggestionAssetReference.packedMetadata.getter()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 216))();
  id v2 = [v1 data];
  if (!v2) {
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  BOOL v7 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v15[0] = 0;
  id v9 = [v7 JSONObjectWithData:isa options:0 error:v15];

  if (!v9)
  {
    id v12 = v15[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    outlined consume of Data._Representation(v4, v6);
    swift_errorRelease();
    goto LABEL_6;
  }
  id v10 = v15[0];
  _bridgeAnyObjectToAny(_:)();
  outlined consume of Data._Representation(v4, v6);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:

    return 0;
  }
  uint64_t v11 = v14;

  return v11;
}

uint64_t MOSuggestionAssetReference.photoLocalIdentifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 256))();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v3 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v4, v5), (v6 & 1) != 0))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = swift_dynamicCast();
      if (v2) {
        return v15;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = swift_bridgeObjectRelease();
    }
  }
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v1 + 216))(v2);
  id v9 = [v8 assets];

  if (!v9) {
    return 0;
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.assets);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[MOSuggestionAssetReference] (non-fatal) Honoring legacy photo behavior in moments db", v13, 2u);
    swift_slowDealloc();
  }

  return v7;
}

uint64_t MOSuggestionAssetReference.mediaType.getter()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 256))();
  if (!result) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v2 + 16) || (specialized __RawDictionaryStorage.find<A>(_:)(v3, v4), (v5 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for MOMediaPlayMetaDataKeyPlayerMediaType(0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_17:

    return 1;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
LABEL_19:

    return 4;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;
  if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
    goto LABEL_22;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_24;
  }
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
  {
LABEL_22:
    swift_bridgeObjectRelease_n();
LABEL_24:

    return 2;
  }
  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_24;
  }
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;
  if (v27 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
LABEL_32:

    return 6;
  }
  char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_32;
  }
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;
  if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
LABEL_37:

    return 7;
  }
  char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_37;
  }
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v39 = v38;
  if (v37 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v39 == v40)
  {
    uint64_t v41 = 8;
  }
  else if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    uint64_t v41 = 8;
  }
  else
  {
    uint64_t v41 = 0;
  }
  id v42 = v43;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t MOSuggestionAssetReference.motionActivityType.getter()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 256))();
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v2 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v3, v4), (v5 & 1) != 0))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for MOWorkoutMotionActivityAction(0);
      if (swift_dynamicCast()) {
        return v6;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return result;
}

id static MOSuggestionAssetReference.consolidatedTypeWithoutVideo(_:)(void *a1)
{
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  if (v1 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v3 == v4) {
    goto LABEL_12;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_13:
    uint64_t v13 = (void *)MOSuggestionAssetsTypePhoto;
    goto LABEL_14;
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1;
  if (v12) {
    goto LABEL_13;
  }
LABEL_14:

  return v13;
}

uint64_t MOSuggestionAssetReference.assetIdentifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v0 + 216))(v4);
  id v8 = [v7 identifier];

  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = UUID.uuidString.getter();
  unint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v34 = v9;
  unint64_t v35 = v11;
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = 95;
  v12._id object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  uint64_t v13 = swift_bridgeObjectRelease();
  uint64_t v15 = v34;
  unint64_t v14 = v35;
  char v16 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v1 + 120))(v13);
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  uint64_t v34 = v15;
  unint64_t v35 = v14;
  swift_bridgeObjectRetain();
  v20._uint64_t countAndFlagsBits = v17;
  v20._id object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v21._uint64_t countAndFlagsBits = 95;
  v21._id object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  uint64_t v22 = swift_bridgeObjectRelease();
  uint64_t v24 = v34;
  unint64_t v23 = v35;
  uint64_t v25 = *(void (**)(uint64_t))(*(void *)v1 + 168);
  v25(v22);
  uint64_t v27 = v26;
  uint64_t v28 = swift_bridgeObjectRelease();
  uint64_t v29 = (void *)0xE000000000000000;
  if (!v27)
  {
    uint64_t v32 = 0;
    goto LABEL_5;
  }
  uint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  uint64_t result = ((uint64_t (*)(uint64_t))v25)(v28);
  if (v31)
  {
    String.append(_:)(*(Swift::String *)&result);
    swift_bridgeObjectRelease();
    uint64_t v32 = v34;
    uint64_t v29 = (void *)v35;
LABEL_5:
    uint64_t v34 = v24;
    unint64_t v35 = v23;
    swift_bridgeObjectRetain();
    v33._uint64_t countAndFlagsBits = v32;
    v33._id object = v29;
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v34;
  }
  __break(1u);
  return result;
}

uint64_t MOSuggestionAssetReference.identifierWithoutCacheType.getter()
{
  (*(void (**)(void))(*(void *)v0 + 288))();
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t result = StringProtocol.components<A>(separatedBy:)();
  if (*(void *)(result + 16))
  {
    uint64_t v2 = *(void *)(result + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MOSuggestionAssetReference.assetGroupIdentifier.getter()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v0 + 216))(v3);
  id v7 = [v6 identifier];

  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v8;
}

uint64_t MOSuggestionAssetReference.logDescription.getter()
{
  _StringGuts.grow(_:)(23);
  uint64_t v1 = swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 288))(v1);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x7954746573736120;
  v3._id object = (void *)0xEB000000003D6570;
  String.append(_:)(v3);
  uint64_t v4 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 120))();
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = v6;

  v8._uint64_t countAndFlagsBits = v5;
  v8._id object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  return 0x3D64497465737361;
}

Swift::Void __swiftcall MOSuggestionAssetReference.addAppendices(_:)(Swift::String a1)
{
  id object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  (*(void (**)(void))(*(void *)v1 + 168))();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (!v5) {
    (*(void (**)(void, unint64_t))(*(void *)v1 + 176))(0, 0xE000000000000000);
  }
  char v6 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 184))(v9);
  if (*(void *)(v7 + 8))
  {
    v8._uint64_t countAndFlagsBits = countAndFlagsBits;
    v8._id object = object;
    String.append(_:)(v8);
  }
  v6(v9, 0);
}

uint64_t MOSuggestionAssetReference.addCacheType(_:)()
{
  v1._uint64_t countAndFlagsBits = 0x5954454843414323;
  v1._id object = (void *)0xEA00000000004550;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  (*(void (**)(void, unint64_t))(*(void *)v0 + 320))(0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t MOSuggestionAssetReference.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  return v0;
}

uint64_t MOSuggestionAssetReference.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  return swift_deallocClassInstance();
}

uint64_t MOEvergreenAssetReference.prompts.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOEvergreenAssetReference.prompts.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
}

uint64_t (*MOEvergreenAssetReference.prompts.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOEvergreenAssetReference.__allocating_init(resource:appendices:prompts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRelease();
  char v6 = (void *)swift_allocObject();
  *(void *)((char *)v6 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts) = 0;
  uint64_t v7 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
  void v6[5] = 0;
  v6[4] = 0;
  Swift::String v8 = (char *)v6 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)((char *)v6 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a1;
  swift_beginAccess();
  v6[4] = 0;
  void v6[5] = 0;
  id v10 = v7;
  swift_bridgeObjectRelease();
  v6[2] = v10;
  v6[3] = 0;
  unint64_t v11 = (void *)((char *)v6 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
  swift_beginAccess();
  void *v11 = a4;
  swift_bridgeObjectRelease();
  return v6;
}

void *MOEvergreenAssetReference.init(resource:appendices:prompts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRelease();
  *(void *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts) = 0;
  uint64_t v7 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
  void v4[5] = 0;
  v4[4] = 0;
  Swift::String v8 = (char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a1;
  swift_beginAccess();
  v4[4] = 0;
  void v4[5] = 0;
  id v10 = v7;
  swift_bridgeObjectRelease();
  v4[2] = v10;
  v4[3] = 0;
  unint64_t v11 = (void *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
  swift_beginAccess();
  void *v11 = a4;
  swift_bridgeObjectRelease();
  return v4;
}

void MOEvergreenAssetReference.init(resource:assetType:bundleType:appendices:)()
{
}

uint64_t MOEvergreenAssetReference.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

uint64_t MOEvergreenAssetReference.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOEvergreenAssetReference.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MOMultiMapAssetReference.locationResources.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOMultiMapAssetReference.locationResources.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources);
}

uint64_t (*MOMultiMapAssetReference.locationResources.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOMultiMapAssetReference.weatherResource.getter()
{
  Swift::String v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource);
  swift_beginAccess();
  Swift::String v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOMultiMapAssetReference.weatherResource.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*MOMultiMapAssetReference.weatherResource.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOMultiMapAssetReference.pointOfInterestResources.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOMultiMapAssetReference.pointOfInterestResources.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources);
}

uint64_t (*MOMultiMapAssetReference.pointOfInterestResources.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOMultiMapAssetReference.__allocating_init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  Swift::String v8 = specialized MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(a1, a2, a3, a4);

  return v8;
}

void *MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = specialized MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(a1, a2, a3, a4);

  return v5;
}

void MOMultiMapAssetReference.init(resource:assetType:bundleType:appendices:)()
{
}

uint64_t MOMultiMapAssetReference.__ivar_destroyer()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t MOMultiMapAssetReference.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOMultiMapAssetReference.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id MOGenericMapAssetReference.associatedMotionType.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType);
  swift_beginAccess();
  Swift::String v2 = *v1;

  return v2;
}

void MOGenericMapAssetReference.associatedMotionType.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*MOGenericMapAssetReference.associatedMotionType.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOGenericMapAssetReference.__allocating_init(associatedMotionType:resource:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  *(void *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType) = a1;
  uint64_t v5 = (void *)MOSuggestionAssetsTypeGenericMap;
  void v4[5] = 0;
  v4[4] = 0;
  char v6 = (char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)((char *)v4 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a2;
  swift_beginAccess();
  v4[4] = 0;
  void v4[5] = 0;
  id v8 = v5;
  swift_bridgeObjectRelease();
  v4[2] = v8;
  v4[3] = 0;
  return v4;
}

void *MOGenericMapAssetReference.init(associatedMotionType:resource:)(void *a1, uint64_t a2)
{
  *(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType) = a1;
  uint64_t v5 = (void *)MOSuggestionAssetsTypeGenericMap;
  v2[5] = 0;
  v2[4] = 0;
  char v6 = (char *)v2 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = a2;
  swift_beginAccess();
  v2[4] = 0;
  v2[5] = 0;
  id v8 = a1;
  id v9 = v5;
  swift_bridgeObjectRelease();
  v2[2] = v9;
  v2[3] = 0;

  return v2;
}

void MOGenericMapAssetReference.init(resource:assetType:bundleType:appendices:)()
{
}

void MOGenericMapAssetReference.__ivar_destroyer()
{
}

uint64_t MOGenericMapAssetReference.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  return v0;
}

uint64_t MOGenericMapAssetReference.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  return swift_deallocClassInstance();
}

uint64_t MOWorkoutGroupAssetReference.workoutResources.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOWorkoutGroupAssetReference.workoutResources.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources);
}

uint64_t (*MOWorkoutGroupAssetReference.workoutResources.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOWorkoutGroupAssetReference.__allocating_init(workoutResources:)(unint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  MOWorkoutGroupAssetReference.init(workoutResources:)(a1);
  return v2;
}

uint64_t MOWorkoutGroupAssetReference.init(workoutResources:)(unint64_t a1)
{
  *(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService28MOWorkoutGroupAssetReference_workoutResources) = a1;
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(a1 + 32);
LABEL_6:
    id v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)MOSuggestionAssetsTypeWorkoutGroup;
    v1[5] = 0;
    v1[4] = 0;
    id v8 = (char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    *(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v6;
    swift_beginAccess();
    v1[4] = 0;
    v1[5] = 0;
    id v10 = v7;
    swift_bridgeObjectRelease();
    v1[2] = v10;
    v1[3] = 0;
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

void MOWorkoutGroupAssetReference.init(resource:assetType:bundleType:appendices:)()
{
}

void MOEvergreenAssetReference.__allocating_init(resource:assetType:bundleType:appendices:)()
{
}

uint64_t MOWorkoutGroupAssetReference.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

uint64_t MOWorkoutGroupAssetReference.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOWorkoutGroupAssetReference.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID);

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MOResource.workoutUUID.getter@<X0>(uint64_t a1@<X8>)
{
  return MOResource.workoutUUID.getter(a1);
}

{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  Class isa;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  uint64_t v3 = [v1 data];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    id v8 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v19 = 0;
    id v10 = [v8 JSONObjectWithData:isa options:0 error:&v19];

    if (v10)
    {
      unint64_t v11 = v19;
      _bridgeAnyObjectToAny(_:)();
      outlined consume of Data._Representation(v5, v7);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if (swift_dynamicCast())
      {
        Swift::String v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (*(void *)(v18 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v12, v13), (v14 & 1) != 0))
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (swift_dynamicCast())
          {
            UUID.init(uuidString:)();
            return swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      char v16 = v19;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      outlined consume of Data._Representation(v5, v7);
      swift_errorRelease();
    }
  }
  uint64_t v17 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
}

uint64_t MOResource.stateOfMindUUID.getter@<X0>(uint64_t a1@<X8>)
{
  return MOResource.workoutUUID.getter(a1);
}

id MOResource.photoLocalIdentifier.getter()
{
  uint64_t v1 = v0;
  id v2 = [v0 data];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    uint64_t v7 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v24 = 0;
    id v9 = [v7 JSONObjectWithData:isa options:0 error:&v24];

    if (v9)
    {
      id v10 = v24;
      _bridgeAnyObjectToAny(_:)();
      outlined consume of Data._Representation(v4, v6);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if (swift_dynamicCast())
      {
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (*(void *)(v23 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v11, v12), (v13 & 1) != 0))
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (swift_dynamicCast()) {
            return v24;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      id v15 = v24;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      outlined consume of Data._Representation(v4, v6);
      swift_errorRelease();
    }
  }
  id v16 = [v1 assets];
  if (!v16) {
    return 0;
  }
  uint64_t v17 = v16;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static MOAngelLogger.assets);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    Swift::String v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[MOSuggestionAssetReference] (non-fatal) Honoring legacy photo behavior in moments db", v21, 2u);
    swift_slowDealloc();
  }

  return (id)v14;
}

id MOResource.bundleId.getter()
{
  id result = [v0 data];
  if (result)
  {
    id v2 = result;
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    unint64_t v6 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v15 = 0;
    id v8 = [v6 JSONObjectWithData:isa options:0 error:&v15];

    if (v8)
    {
      id v9 = v15;
      _bridgeAnyObjectToAny(_:)();
      outlined consume of Data._Representation(v3, v5);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if (swift_dynamicCast())
      {
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (*(void *)(v14 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v10, v11), (v12 & 1) != 0))
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (swift_dynamicCast()) {
            return v15;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      id v13 = v15;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      outlined consume of Data._Representation(v3, v5);
      swift_errorRelease();
    }
    return 0;
  }
  return result;
}

void *specialized MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = (void **)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource);
  *(void *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_weatherResource) = 0;
  uint64_t v11 = (void *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources);
  *(void *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_pointOfInterestResources) = 0;
  *(void *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService24MOMultiMapAssetReference_locationResources) = a1;
  swift_beginAccess();
  char v12 = *v10;
  *uint64_t v10 = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  id v13 = a2;

  swift_beginAccess();
  void *v11 = a3;
  swift_release();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
    {
LABEL_3:
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_6;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v15 = *(id *)(a1 + 32);
LABEL_6:
        id v16 = v15;
        swift_bridgeObjectRelease();
        id v17 = (id)MOSuggestionAssetsTypeMultiPinMap;
        if (a1 >> 62)
        {
          swift_bridgeObjectRetain();
          id v20 = v17;
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v19 = MOSuggestionAssetsTypeMultiPinMap;
        }
        swift_bridgeObjectRelease();
        if (v18 <= 1) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = 0x49544C554DLL;
        }
        if (v18 <= 1) {
          unint64_t v22 = 0;
        }
        else {
          unint64_t v22 = 0xE500000000000000;
        }
        v5[5] = 0;
        v5[4] = 0;
        uint64_t v23 = (char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
        uint64_t v24 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
        *(void *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
        swift_beginAccess();
        v5[4] = v21;
        v5[5] = v22;
        goto LABEL_21;
      }
      __break(1u);
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease_n();
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
LABEL_24:
  }
    swift_once();
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static MOAngelLogger.assets);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Empty Multimap reference", v28, 2u);
    swift_slowDealloc();
  }

  id v29 = objc_allocWithZone((Class)MOResource);
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [v29 initWithName:v30 type:6];

  uint64_t v32 = (void *)MOSuggestionAssetsTypeMultiPinMap;
  v5[5] = 0;
  v5[4] = 0;
  Swift::String v33 = (char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
  uint64_t v34 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  *(void *)((char *)v5 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v31;
  swift_beginAccess();
  v5[4] = 0;
  v5[5] = 0;
  id v17 = v32;
LABEL_21:
  swift_bridgeObjectRelease();
  v5[2] = v17;
  v5[3] = a4;
  return v5;
}