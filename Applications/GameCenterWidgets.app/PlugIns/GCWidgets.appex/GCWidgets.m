uint64_t sub_100003020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v1 = sub_100004FB4(&qword_1000A8890);
  v2 = __chkstk_darwin(v1 - 8);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v24 - v5;
  v7 = sub_100004FB4(&qword_1000A8898);
  v8 = __chkstk_darwin(v7 - 8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v24 - v11;
  v13 = sub_100004FB4(&qword_1000A88A0);
  v14 = __chkstk_darwin(v13 - 8);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v24 - v17;
  sub_1000032BC((uint64_t *)((char *)&v24 - v17));
  *(void *)v12 = sub_100087720();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  v19 = &v12[*(int *)(sub_100004FB4(&qword_1000A88A8) + 44)];
  sub_1000043EC((uint64_t)v6);
  sub_100006B3C((uint64_t)v6, (uint64_t)v4, &qword_1000A8890);
  *(void *)v19 = 0;
  v19[8] = 0;
  v20 = sub_100004FB4(&qword_1000A88B0);
  sub_100006B3C((uint64_t)v4, (uint64_t)&v19[*(int *)(v20 + 48)], &qword_1000A8890);
  sub_100006AE0((uint64_t)v6, &qword_1000A8890);
  sub_100006AE0((uint64_t)v4, &qword_1000A8890);
  sub_100006B3C((uint64_t)v18, (uint64_t)v16, &qword_1000A88A0);
  sub_100006B3C((uint64_t)v12, (uint64_t)v10, &qword_1000A8898);
  v21 = v25;
  sub_100006B3C((uint64_t)v16, v25, &qword_1000A88A0);
  v22 = sub_100004FB4(&qword_1000A88B8);
  sub_100006B3C((uint64_t)v10, v21 + *(int *)(v22 + 48), &qword_1000A8898);
  sub_100006AE0((uint64_t)v12, &qword_1000A8898);
  sub_100006AE0((uint64_t)v18, &qword_1000A88A0);
  sub_100006AE0((uint64_t)v10, &qword_1000A8898);
  return sub_100006AE0((uint64_t)v16, &qword_1000A88A0);
}

uint64_t sub_1000032BC@<X0>(uint64_t *a1@<X8>)
{
  v144 = a1;
  uint64_t v2 = sub_100087DA0();
  uint64_t v142 = *(void *)(v2 - 8);
  uint64_t v143 = v2;
  __chkstk_darwin(v2);
  v140 = (char *)v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100004FB4(&qword_1000A88E0);
  __chkstk_darwin(v133);
  v129 = (void *)((char *)v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100004FB4(&qword_1000A88E8);
  uint64_t v137 = *(void *)(v5 - 8);
  uint64_t v138 = v5;
  __chkstk_darwin(v5);
  v136 = (char *)v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100004FB4(&qword_1000A88F0);
  uint64_t v7 = __chkstk_darwin(v134);
  uint64_t v141 = (uint64_t)v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v135 = (char *)v108 - v10;
  __chkstk_darwin(v9);
  uint64_t v139 = (uint64_t)v108 - v11;
  uint64_t v122 = sub_100087700();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100087380();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100087C50();
  v15 = *(char **)(v14 - 8);
  __chkstk_darwin(v14);
  v109 = (char *)v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004FB4(&qword_1000A88F8);
  __chkstk_darwin(v17 - 8);
  v19 = (void *)((char *)v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v110 = sub_100004FB4(&qword_1000A8900);
  __chkstk_darwin(v110);
  uint64_t v111 = (uint64_t)v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100004FB4(&qword_1000A8908);
  __chkstk_darwin(v113);
  v112 = (char *)v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_100004FB4(&qword_1000A8910);
  uint64_t v22 = __chkstk_darwin(v128);
  v115 = (char *)v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v114 = (char *)v108 - v25;
  __chkstk_darwin(v24);
  uint64_t v119 = (uint64_t)v108 - v26;
  v125 = (void *)sub_100087EC0();
  uint64_t v124 = *(v125 - 1);
  __chkstk_darwin(v125);
  uint64_t v123 = (uint64_t)v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100004FB4(&qword_1000A8918);
  __chkstk_darwin(v126);
  uint64_t v127 = (uint64_t)v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100004FB4(&qword_1000A8920);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  v132 = (char *)v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v131 = (uint64_t)v108 - v32;
  uint64_t v33 = sub_100087E60();
  uint64_t v146 = *(void *)(v33 - 8);
  uint64_t v147 = v33;
  uint64_t v34 = __chkstk_darwin(v33);
  v145 = (char *)v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v37 = (char *)v108 - v36;
  uint64_t v38 = type metadata accessor for CPSmallContentView();
  uint64_t v39 = v1 + *(int *)(v38 + 24);
  uint64_t v40 = *(void *)v39;
  char v41 = *(unsigned char *)(v39 + 8);
  sub_100005554(*(void *)v39, v41);
  char v42 = sub_100016FF4(v40, v41);
  sub_100005720(v40, v41);
  uint64_t i = 0;
  uint64_t v148 = v1;
  if ((v42 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v130 = (uint64_t)v15;
  sub_1000171F8((uint64_t)v37);
  v44 = v145;
  sub_100087E50();
  sub_100006CB0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  uint64_t v45 = v147;
  char v46 = sub_100087FE0();
  v47 = *(void (**)(char *, uint64_t))(v146 + 8);
  v47(v44, v45);
  v15 = v37;
  v47(v37, v45);
  if ((v46 & 1) == 0)
  {
    if (qword_1000A86E0 != -1) {
      goto LABEL_27;
    }
    goto LABEL_5;
  }
  for (uint64_t i = 0; ; uint64_t i = swift_retain())
  {
    uint64_t v1 = v148;
    v37 = v15;
    v15 = (char *)v130;
LABEL_7:
    uint64_t v130 = i;
    uint64_t v48 = v1 + *(int *)(v38 + 32);
    uint64_t v49 = type metadata accessor for CPTimelineEntry();
    if (*(unsigned char *)(v48 + *(int *)(v49 + 32)) == 1)
    {
      uint64_t v50 = *(void *)v39;
      char v51 = *(unsigned char *)(v39 + 8);
      sub_100005554(*(void *)v39, v51);
      uint64_t v39 = sub_100016FF4(v50, v51);
      sub_100005720(v50, v51);
      if ((v39 & 1) == 0)
      {
        swift_storeEnumTagMultiPayload();
        sub_100006BA0();
        uint64_t v82 = v131;
        sub_1000877E0();
        uint64_t v83 = sub_100004FB4(&qword_1000A8928);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 0, 1, v83);
        uint64_t v54 = v148;
        goto LABEL_21;
      }
    }
    unint64_t v52 = *(void *)(v48 + *(int *)(v49 + 20));
    if (v52 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_1000883C0();
      uint64_t v54 = v148;
      if (!v84)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v54 = v148;
      if (!v53) {
        goto LABEL_19;
      }
    }
    if ((v52 & 0xC000000000000001) != 0) {
      break;
    }
    if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v55 = *(void *)(v52 + 32);
      swift_retain();
      goto LABEL_14;
    }
    __break(1u);
LABEL_27:
    swift_once();
LABEL_5:
    ;
  }
  uint64_t v55 = sub_100088340();
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v56 = v123;
  sub_100016FB8(v123);
  v57 = sub_1000252C0(v56, 0);
  (*(void (**)(uint64_t, void *))(v124 + 8))(v56, v125);
  if (v57)
  {
    v125 = v57;
    sub_100087C30();
    uint64_t v58 = v55;
    v59 = v109;
    (*((void (**)(char *, void, uint64_t))v15 + 13))(v109, enum case for Image.ResizingMode.stretch(_:), v14);
    sub_100087CB0();
    swift_release();
    (*((void (**)(char *, uint64_t))v15 + 1))(v59, v14);
    uint64_t *v19 = sub_100087D90();
    v19[1] = v60;
    uint64_t v61 = sub_100004FB4(&qword_1000A8948);
    sub_100064EF8((char *)v19 + *(int *)(v61 + 44), 0.3);
    swift_release();
    uint64_t v62 = v111;
    sub_100006B3C((uint64_t)v19, v111, &qword_1000A88F8);
    uint64_t v63 = v62 + *(int *)(v110 + 36);
    *(void *)uint64_t v63 = 0;
    *(_WORD *)(v63 + 8) = 1;
    sub_100006AE0((uint64_t)v19, &qword_1000A88F8);
    uint64_t v64 = v117;
    v65 = v116;
    uint64_t v66 = v118;
    (*(void (**)(char *, void, uint64_t))(v117 + 104))(v116, enum case for ColorScheme.light(_:), v118);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v68 = (uint64_t)v112;
    v69 = (uint64_t *)&v112[*(int *)(v113 + 36)];
    uint64_t v70 = sub_100004FB4(&qword_1000A8950);
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))((char *)v69 + *(int *)(v70 + 28), v65, v66);
    uint64_t *v69 = KeyPath;
    uint64_t v54 = v148;
    sub_100006B3C(v62, v68, &qword_1000A8900);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    sub_100006AE0(v62, &qword_1000A8900);
    v108[1] = v58;
    uint64_t v71 = *(void *)(v58 + 48);
    uint64_t v149 = *(void *)(v58 + 40);
    uint64_t v150 = v71;
    sub_1000068F8();
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_100087A70();
    uint64_t v74 = v73;
    LOBYTE(v66) = v75 & 1;
    sub_10000694C();
    uint64_t v76 = (uint64_t)v115;
    sub_100087AE0();
    sub_100006AD0(v72, v74, v66);
    swift_bridgeObjectRelease();
    sub_100006AE0(v68, &qword_1000A8908);
    v77 = v120;
    sub_1000876F0();
    uint64_t v78 = (uint64_t)v114;
    sub_100087480();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v77, v122);
    sub_100006AE0(v76, &qword_1000A8910);
    uint64_t v79 = v119;
    sub_100006C4C(v78, v119, &qword_1000A8910);
    sub_100006B3C(v79, v127, &qword_1000A8910);
    swift_storeEnumTagMultiPayload();
    sub_100006BA0();
    uint64_t v80 = (uint64_t)v132;
    sub_1000877E0();

    swift_release();
    sub_100006AE0(v79, &qword_1000A8910);
    uint64_t v81 = sub_100004FB4(&qword_1000A8928);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 0, 1, v81);
    uint64_t v82 = v131;
    sub_100006C4C(v80, v131, &qword_1000A8920);
    goto LABEL_22;
  }
  swift_release();
LABEL_20:
  uint64_t v85 = sub_100004FB4(&qword_1000A8928);
  uint64_t v82 = v131;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v131, 1, 1, v85);
LABEL_21:
  uint64_t v80 = (uint64_t)v132;
LABEL_22:
  uint64_t v86 = sub_100087720();
  uint64_t v87 = (uint64_t)v129;
  uint64_t *v129 = v86;
  *(void *)(v87 + 8) = 0;
  *(unsigned char *)(v87 + 16) = 1;
  uint64_t v88 = sub_100004FB4(&qword_1000A8930);
  sub_10000494C(v54, v87 + *(int *)(v88 + 44));
  sub_100006A8C(&qword_1000A8938, &qword_1000A88E0);
  v89 = v136;
  sub_100087A80();
  sub_100006AE0(v87, &qword_1000A88E0);
  sub_1000171F8((uint64_t)v37);
  v90 = v145;
  sub_100087E50();
  char v91 = sub_100087E40();
  v92 = *(void (**)(char *, uint64_t))(v146 + 8);
  v93 = v90;
  uint64_t v94 = v147;
  v92(v93, v147);
  v92(v37, v94);
  uint64_t v95 = v142;
  v96 = (unsigned int *)&enum case for BlendMode.destinationOut(_:);
  if ((v91 & 1) == 0) {
    v96 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  v97 = v140;
  uint64_t v98 = v143;
  (*(void (**)(char *, void, uint64_t))(v142 + 104))(v140, *v96, v143);
  v99 = v135;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(&v135[*(int *)(v134 + 36)], v97, v98);
  uint64_t v101 = v137;
  uint64_t v100 = v138;
  (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v99, v89, v138);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v98);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v89, v100);
  uint64_t v102 = (uint64_t)v99;
  uint64_t v103 = v139;
  sub_100006C4C(v102, v139, &qword_1000A88F0);
  sub_100006B3C(v82, v80, &qword_1000A8920);
  uint64_t v104 = v141;
  sub_100006B3C(v103, v141, &qword_1000A88F0);
  v105 = v144;
  uint64_t *v144 = v130;
  uint64_t v106 = sub_100004FB4(&qword_1000A8940);
  sub_100006B3C(v80, (uint64_t)v105 + *(int *)(v106 + 48), &qword_1000A8920);
  sub_100006B3C(v104, (uint64_t)v105 + *(int *)(v106 + 64), &qword_1000A88F0);
  swift_retain();
  sub_100006AE0(v103, &qword_1000A88F0);
  sub_100006AE0(v82, &qword_1000A8920);
  sub_100006AE0(v104, &qword_1000A88F0);
  sub_100006AE0(v80, &qword_1000A8920);
  return swift_release();
}

uint64_t sub_1000043EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v2 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for CPTimelineEntry();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v38 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100087430();
  uint64_t v11 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  char v41 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for CPTitleView();
  uint64_t v39 = *((void *)v13 - 1);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = (int *)type metadata accessor for CPSmallContentView();
  uint64_t v17 = v1 + v16[8];
  unint64_t v18 = *(void *)(v17 + *(int *)(v9 + 28));
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v33 = v40;
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v39 + 56);
    return v34(v33, 1, 1, v13);
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v18 & 0xC000000000000001) != 0)
  {
    uint64_t v36 = sub_100088340();
    goto LABEL_6;
  }
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v36 = *(void *)(v18 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v21 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v41, v1 + v16[7], v37);
    uint64_t v22 = v38;
    sub_100006D60(v17, v38, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    uint64_t v23 = (long long *)(v1 + v16[9]);
    uint64_t v24 = *((void *)v23 + 4);
    long long v25 = v23[1];
    long long v42 = *v23;
    long long v43 = v25;
    uint64_t v44 = v24;
    sub_100004FB4(&qword_1000A88C8);
    sub_100087CE0();
    uint64_t v26 = v45;
    uint64_t v27 = v46;
    long long v35 = v47;
    uint64_t v28 = v48;
    uint64_t v29 = v49;
    *uint64_t v7 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    *uint64_t v4 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A88D0);
    swift_storeEnumTagMultiPayload();
    uint64_t *v15 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A88D8);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (uint64_t *)((char *)v15 + v13[5]);
    *uint64_t v30 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87A8);
    swift_storeEnumTagMultiPayload();
    sub_100006C4C((uint64_t)v7, (uint64_t)v15 + v13[6], &qword_1000A87C0);
    sub_100006C4C((uint64_t)v4, (uint64_t)v15 + v13[7], &qword_1000A88C0);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))((char *)v15 + v13[8], v41, v21);
    sub_100006CF8(v22, (uint64_t)v15 + v13[9], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    *(uint64_t *)((char *)v15 + v13[10]) = v36;
    uint64_t v31 = (char *)v15 + v13[11];
    *(void *)uint64_t v31 = v26;
    *((void *)v31 + 1) = v27;
    *((_OWORD *)v31 + 1) = v35;
    *((void *)v31 + 4) = v28;
    *((void *)v31 + 5) = v29;
    uint64_t v32 = v40;
    sub_100006CF8((uint64_t)v15, v40, (uint64_t (*)(void))type metadata accessor for CPTitleView);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v39 + 56))(v32, 0, 1, v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_100004924@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100087BB0();
  *a1 = result;
  return result;
}

uint64_t sub_10000494C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for CPTimelineEntry();
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CPTitleGradientView() - 8;
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = type metadata accessor for CPSmallContentView();
  sub_100087410();
  uint64_t v14 = v13;
  sub_100087410();
  double v16 = v15 * 0.5;
  sub_100006D60(a1 + *(int *)(v12 + 32), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  *uint64_t v9 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (double *)((char *)v9 + *(int *)(v6 + 28));
  *(void *)uint64_t v17 = v14;
  v17[1] = v16;
  sub_100006CF8((uint64_t)v5, (uint64_t)v9 + *(int *)(v6 + 32), (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  sub_100006CF8((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  sub_100006D60((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v18 = sub_100004FB4(&qword_1000A8998);
  sub_100006D60((uint64_t)v9, a2 + *(int *)(v18 + 48), (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  sub_100006DC8((uint64_t)v11);
  return sub_100006DC8((uint64_t)v9);
}

uint64_t sub_100004B6C()
{
  return sub_100087B00();
}

uint64_t sub_100004B88()
{
  uint64_t v0 = sub_100087840();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FB4(&qword_1000A8878);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = sub_100087D90();
  v6[1] = v7;
  uint64_t v8 = sub_100004FB4(&qword_1000A8880);
  sub_100003020((uint64_t)v6 + *(int *)(v8 + 44));
  sub_100087830();
  sub_100087D90();
  sub_100006A8C(&qword_1000A8888, &qword_1000A8878);
  sub_100087B30();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_100006AE0((uint64_t)v6, &qword_1000A8878);
}

uint64_t sub_100004D6C()
{
  return sub_1000877D0();
}

uint64_t sub_100004ED4(long long *a1)
{
  long long v2 = *a1;
  if (sub_100086B94(2, 17, 0, 0)) {
    return swift_getOpaqueTypeMetadata2();
  }
  else {
    return v2;
  }
}

uint64_t sub_100004F48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (sub_100086B94(2, 17, 0, 0)) {
    return swift_getOpaqueTypeConformance2();
  }
  return v1;
}

uint64_t sub_100004FB4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100004FF8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100005040()
{
  return sub_1000877D0();
}

uint64_t initializeBufferWithCopyOfBuffer for MessageViewMemoji(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for MessageViewMemoji(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100005220(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100005240(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t *sub_100005280(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    double v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_100005554(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_100087430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_100087220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = (int *)type metadata accessor for CPTimelineEntry();
    *(void *)&v23[v26[5]] = *(void *)&v24[v26[5]];
    v23[v26[6]] = v24[v26[6]];
    v23[v26[7]] = v24[v26[7]];
    v23[v26[8]] = v24[v26[8]];
    v23[v26[9]] = v24[v26[9]];
    uint64_t v27 = a3[9];
    uint64_t v28 = (char *)v4 + v27;
    uint64_t v29 = (char *)a2 + v27;
    long long v30 = *((_OWORD *)v29 + 1);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v30;
    *((void *)v28 + 4) = *((void *)v29 + 4);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100005554(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100005560(uint64_t a1, int *a2)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_100005720(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100005720(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void *sub_10000572C(void *a1, void *a2, int *a3)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100005554(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v21[v24[5]] = *(void *)&v22[v24[5]];
  v21[v24[6]] = v22[v24[6]];
  v21[v24[7]] = v22[v24[7]];
  v21[v24[8]] = v22[v24[8]];
  v21[v24[9]] = v22[v24[9]];
  uint64_t v25 = a3[9];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  *((void *)v26 + 4) = *((void *)v27 + 4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1000059B4(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100006AE0((uint64_t)a1 + v7, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100005554(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_100005720(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v23[v26[5]] = *(void *)&v24[v26[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[v26[6]] = v24[v26[6]];
  v23[v26[7]] = v24[v26[7]];
  v23[v26[8]] = v24[v26[8]];
  v23[v26[9]] = v24[v26[9]];
  uint64_t v27 = a3[9];
  long long v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  *long long v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  v28[3] = v29[3];
  v28[4] = v29[4];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100005CA4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087E60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  uint64_t v19 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v21[v24[5]] = *(void *)&v22[v24[5]];
  v21[v24[6]] = v22[v24[6]];
  v21[v24[7]] = v22[v24[7]];
  v21[v24[8]] = v22[v24[8]];
  v21[v24[9]] = v22[v24[9]];
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  *((void *)v26 + 4) = *((void *)v27 + 4);
  return a1;
}

char *sub_100005F1C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100006AE0((uint64_t)&a1[v8], &qword_1000A87B0);
    uint64_t v11 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_100005720(v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v24[v27[5]] = *(void *)&v25[v27[5]];
  swift_bridgeObjectRelease();
  v24[v27[6]] = v25[v27[6]];
  v24[v27[7]] = v25[v27[7]];
  v24[v27[8]] = v25[v27[8]];
  v24[v27[9]] = v25[v27[9]];
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  long long v30 = &a2[v28];
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((void *)v29 + 4) = *((void *)v30 + 4);
  swift_release();
  return a1;
}

uint64_t sub_1000061E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000061F4);
}

uint64_t sub_1000061F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9] + 32);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_1000063B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000063CC);
}

uint64_t sub_1000063CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A87C0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100087430();
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[7];
      }
      else
      {
        uint64_t result = type metadata accessor for CPTimelineEntry();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9] + 32) = a2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[8];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CPSmallContentView()
{
  uint64_t result = qword_1000A8820;
  if (!qword_1000A8820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000065CC()
{
  sub_100006754(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_100006754(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_100087430();
      if (v2 <= 0x3F)
      {
        type metadata accessor for CPTimelineEntry();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100006754(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100087390();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000067A8()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_1000067E0(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_1000067F4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_100006800(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10000680C()
{
  return sub_100087510();
}

uint64_t sub_100006830(uint64_t a1)
{
  uint64_t v2 = sub_100087380();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_100087520();
}

unint64_t sub_1000068F8()
{
  unint64_t result = qword_1000A8958;
  if (!qword_1000A8958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8958);
  }
  return result;
}

unint64_t sub_10000694C()
{
  unint64_t result = qword_1000A8960;
  if (!qword_1000A8960)
  {
    sub_100004FF8(&qword_1000A8908);
    sub_1000069EC();
    sub_100006A8C(&qword_1000A8978, &qword_1000A8950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8960);
  }
  return result;
}

unint64_t sub_1000069EC()
{
  unint64_t result = qword_1000A8968;
  if (!qword_1000A8968)
  {
    sub_100004FF8(&qword_1000A8900);
    sub_100006A8C(&qword_1000A8970, &qword_1000A88F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8968);
  }
  return result;
}

uint64_t sub_100006A8C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100006AD0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100006AE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100004FB4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100006B3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004FB4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100006BA0()
{
  unint64_t result = qword_1000A8980;
  if (!qword_1000A8980)
  {
    sub_100004FF8(&qword_1000A8910);
    sub_10000694C();
    sub_100006CB0(&qword_1000A8988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8980);
  }
  return result;
}

uint64_t sub_100006C4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004FB4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100006CB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100006CF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100006D60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100006DC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CPTitleGradientView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 initializeWithTake for ContinuePlayingWidget(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_100006E30(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100006E50(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_100006EA0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100006EE8()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100006F8C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100087220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100007084(uint64_t a1)
{
  uint64_t v2 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000070F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000071A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10000725C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100007300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_1000073AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000073C0);
}

uint64_t sub_1000073C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100087220();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100007480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100007494);
}

uint64_t sub_100007494(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100087220();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CPTimelineEntry()
{
  uint64_t result = qword_1000A8A08;
  if (!qword_1000A8A08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000759C()
{
  uint64_t result = sub_100087220();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_100007644()
{
  unint64_t v1 = (int *)type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v1);
  char v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - v11;
  int v14 = *(unsigned __int8 *)(v0 + *(int *)(v13 + 24));
  sub_10000A6F4(v0, (uint64_t)&v22 - v11, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  if (v14 != 1)
  {
    sub_10000A75C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    sub_10000A6F4(v0, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    goto LABEL_9;
  }
  char v15 = v12[v1[7]];
  sub_10000A75C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  sub_10000A6F4(v0, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  if (v15)
  {
LABEL_9:
    sub_10000A75C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    sub_10000A6F4(v0, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    goto LABEL_10;
  }
  char v16 = v9[v1[8]];
  sub_10000A75C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  sub_10000A6F4(v0, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  if (v16)
  {
LABEL_10:
    sub_10000A75C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    sub_10000A6F4(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    goto LABEL_11;
  }
  char v17 = v6[v1[9]];
  sub_10000A75C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  sub_10000A6F4(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  if ((v17 & 1) == 0)
  {
LABEL_11:
    BOOL v20 = 0;
    goto LABEL_12;
  }
  unint64_t v18 = *(void *)&v3[v1[5]];
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000883C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v20 = v19 > 0;
LABEL_12:
  sub_10000A75C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  return v20;
}

uint64_t sub_100007910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100087280();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_100007644())
  {
    unint64_t v9 = *(void *)(v2 + *(int *)(type metadata accessor for CPTimelineEntry() + 20));
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1000883C0();
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v10)
      {
LABEL_4:
        if ((v9 & 0xC000000000000001) != 0)
        {
          sub_100088340();
        }
        else
        {
          if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          swift_retain();
        }
        swift_bridgeObjectRelease();
        sub_10005BE90(0xD000000000000015, 0x800000010008B6C0, a1, a2);
        swift_release();
        uint64_t v12 = sub_100087170();
        uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
        uint64_t v14 = v12;
        uint64_t v15 = a2;
        uint64_t v16 = 0;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_100087170();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v14 = v20;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
LABEL_15:
    return v13(v15, v16, 1, v14);
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for GKFeatureFlags.GameOverlayUI(_:), v5);
  char v17 = sub_100087270();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v17 & 1) != 0
    && (id v18 = [self currentDevice],
        id v19 = [v18 userInterfaceIdiom],
        v18,
        !v19))
  {
    return sub_1000872C0();
  }
  else
  {
    return sub_100087160();
  }
}

uint64_t sub_100007BE4()
{
  sub_100088310(91);
  v11._countAndFlagsBits = 0xD00000000000001BLL;
  v11._object = (void *)0x800000010008B6E0;
  sub_100088040(v11);
  unint64_t v1 = (int *)type metadata accessor for CPTimelineEntry();
  if (*(unsigned char *)(v0 + v1[6])) {
    v2._countAndFlagsBits = 1702195828;
  }
  else {
    v2._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + v1[6])) {
    char v3 = (void *)0xE400000000000000;
  }
  else {
    char v3 = (void *)0xE500000000000000;
  }
  v2._object = v3;
  sub_100088040(v2);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x800000010008B700;
  v12._countAndFlagsBits = 0xD000000000000011;
  sub_100088040(v12);
  if (*(unsigned char *)(v0 + v1[7])) {
    v4._countAndFlagsBits = 1702195828;
  }
  else {
    v4._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + v1[7])) {
    uint64_t v5 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v5 = (void *)0xE500000000000000;
  }
  v4._object = v5;
  sub_100088040(v4);
  swift_bridgeObjectRelease();
  v13._object = (void *)0x800000010008B720;
  v13._countAndFlagsBits = 0xD000000000000011;
  sub_100088040(v13);
  if (*(unsigned char *)(v0 + v1[8])) {
    v6._countAndFlagsBits = 1702195828;
  }
  else {
    v6._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + v1[8])) {
    uint64_t v7 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v7 = (void *)0xE500000000000000;
  }
  v6._object = v7;
  sub_100088040(v6);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0xD000000000000015;
  v14._object = (void *)0x800000010008B740;
  sub_100088040(v14);
  if (*(unsigned char *)(v0 + v1[9])) {
    v8._countAndFlagsBits = 1702195828;
  }
  else {
    v8._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + v1[9])) {
    unint64_t v9 = (void *)0xE400000000000000;
  }
  else {
    unint64_t v9 = (void *)0xE500000000000000;
  }
  v8._object = v9;
  sub_100088040(v8);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 41;
  v15._object = (void *)0xE100000000000000;
  sub_100088040(v15);
  return 0;
}

uint64_t sub_100007DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100087220();
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100007E14(uint64_t a1, void (*a2)(char *), uint64_t a3, double a4)
{
  uint64_t v36 = a1;
  uint64_t v7 = (int *)type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100087EC0();
  uint64_t v38 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v11;
  __chkstk_darwin(v13);
  uint64_t v37 = (char *)&v34 - v14;
  double v15 = sub_100009B70();
  if (qword_1000A86F0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100087350();
  sub_10000A5F4(v16, (uint64_t)qword_1000AD9D0);
  char v17 = sub_100087330();
  os_log_type_t v18 = sub_1000881D0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134218240;
    double v39 = a4;
    uint64_t v34 = v9;
    sub_100088240();
    *(_WORD *)(v19 + 12) = 2048;
    double v39 = v15;
    unint64_t v9 = v34;
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Live preview rate is %f, rolled a %f", (uint8_t *)v19, 0x16u);
    swift_slowDealloc();
  }

  uint64_t v20 = sub_100087330();
  os_log_type_t v21 = sub_1000881D0();
  BOOL v22 = os_log_type_enabled(v20, v21);
  if (v15 <= a4)
  {
    if (v22)
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Showing live preview...", v25, 2u);
      swift_slowDealloc();
    }

    uint64_t v26 = type metadata accessor for GameCenterStore();
    uint64_t v27 = v37;
    sub_100087F70();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a2;
    *(void *)(v28 + 24) = a3;
    uint64_t v29 = v38;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v12, v27, v10);
    unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    unint64_t v31 = (v35 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v32 + v30, v12, v10);
    uint64_t v33 = (uint64_t (**)(uint64_t, int))(v32 + v31);
    *uint64_t v33 = sub_10000A93C;
    v33[1] = (uint64_t (*)(uint64_t, int))v28;
    swift_retain();
    swift_retain();
    sub_100040A6C((void (*)(void, void))sub_10000A58C);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v27, v10);
  }
  else
  {
    if (v22)
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Showing placeholder preview...", v23, 2u);
      swift_slowDealloc();
    }

    sub_100087210();
    if (qword_1000A8728 != -1) {
      swift_once();
    }
    *(void *)&v9[v7[5]] = qword_1000ADA38;
    v9[v7[6]] = 1;
    v9[v7[7]] = 0;
    v9[v7[8]] = 1;
    v9[v7[9]] = 1;
    swift_bridgeObjectRetain();
    a2(v9);
    return sub_10000A75C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  }
}

uint64_t sub_100008314(uint64_t a1, int a2, void (*a3)(char *))
{
  unint64_t v31 = a3;
  LODWORD(v30) = a2;
  Swift::String v4 = (int *)type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v4);
  Swift::String v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_100087220();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - v15;
  sub_100087210();
  uint64_t v32 = v16;
  uint64_t v33 = v11;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  char v17 = (void *)sub_100081AD8();
  os_log_type_t v18 = v17;
  if (v17) {

  }
  uint64_t v19 = (void *)sub_100081AD8();
  if (v19)
  {
    uint64_t v20 = v19;
    unsigned __int8 v21 = [v19 hasAcknowledgedLatestGDPR];
  }
  else
  {
    unsigned __int8 v21 = 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v9, v13, v10);
  *(void *)&v9[v4[5]] = a1;
  v9[v4[6]] = v18 != 0;
  v9[v4[7]] = v30 & 1;
  v9[v4[8]] = 0;
  v9[v4[9]] = v21;
  uint64_t v22 = qword_1000A86F0;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100087350();
  sub_10000A5F4(v23, (uint64_t)qword_1000AD9D0);
  sub_10000A6F4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v24 = sub_100087330();
  os_log_type_t v25 = sub_1000881D0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v30 = v10;
    uint64_t v27 = sub_100007BE4();
    uint64_t v34 = sub_100017980(v27, v28, &v35);
    uint64_t v10 = v30;
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_10000A75C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Snapshot entry created: %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000A75C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  }

  v31(v9);
  sub_10000A75C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v32, v10);
}

uint64_t sub_100008720(unint64_t *a1, int a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v129 = a6;
  uint64_t v128 = a5;
  uint64_t v135 = a4;
  int v139 = a2;
  uint64_t v130 = a1;
  uint64_t v7 = sub_100087F60();
  __chkstk_darwin(v7 - 8);
  uint64_t v124 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_100004FB4(&qword_1000A8A68);
  uint64_t v127 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  v114 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v136 = (char *)&v112 - v11;
  __chkstk_darwin(v12);
  uint64_t v137 = (char *)&v112 - v13;
  uint64_t v134 = type metadata accessor for WidgetCreationAttempt(0);
  uint64_t v132 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v122 = (uint64_t)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v142 = (uint64_t)&v112 - v16;
  uint64_t v133 = sub_100087EC0();
  uint64_t v143 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v138 = ((char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_100004FB4(&qword_1000A8A70);
  __chkstk_darwin(v18 - 8);
  uint64_t v113 = (uint64_t)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v115 = (uint64_t)&v112 - v21;
  __chkstk_darwin(v22);
  uint64_t v131 = (char *)&v112 - v23;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v112 - v25;
  uint64_t v140 = type metadata accessor for CPTimelineEntry();
  uint64_t v27 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v29 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v112 - v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v112 - v34;
  uint64_t v36 = sub_100087220();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v121 = (char *)&v112 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v120 = (char *)&v112 - v40;
  __chkstk_darwin(v41);
  long long v43 = (char *)&v112 - v42;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v112 - v45;
  sub_100087210();
  uint64_t v144 = v37;
  long long v47 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v123 = v46;
  uint64_t v145 = v36;
  v47(v43, v46, v36);
  uint64_t v48 = (void *)sub_100081AD8();
  uint64_t v49 = v48;
  if (v48) {

  }
  uint64_t v50 = (unint64_t *)(a3 + 16);
  char v51 = (void *)sub_100081AD8();
  if (v51)
  {
    unint64_t v52 = v51;
    unsigned __int8 v53 = [v51 hasAcknowledgedLatestGDPR];
  }
  else
  {
    unsigned __int8 v53 = 0;
  }
  uint64_t v54 = *(void (**)(uint64_t, char *, uint64_t))(v144 + 32);
  uint64_t v118 = v144 + 32;
  uint64_t v117 = v54;
  v54((uint64_t)v35, v43, v145);
  uint64_t v55 = (int *)v140;
  *(void *)&v35[*(int *)(v140 + 20)] = v130;
  v35[v55[6]] = v49 != 0;
  int v56 = v139 & 1;
  v35[v55[7]] = v139 & 1;
  v35[v55[8]] = 0;
  v35[v55[9]] = v53;
  sub_10000A6F4((uint64_t)v35, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  swift_beginAccess();
  unint64_t v57 = *v50;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v50 = v57;
  int v116 = v56;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v57 = sub_10000F9AC(0, *(void *)(v57 + 16) + 1, 1, v57);
    *uint64_t v50 = v57;
  }
  unint64_t v60 = *(void *)(v57 + 16);
  unint64_t v59 = *(void *)(v57 + 24);
  if (v60 >= v59 >> 1)
  {
    unint64_t v57 = sub_10000F9AC(v59 > 1, v60 + 1, 1, v57);
    *uint64_t v50 = v57;
  }
  *(void *)(v57 + 16) = v60 + 1;
  sub_10000A590((uint64_t)v32, v57+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v60);
  swift_endAccess();
  if (qword_1000A86F0 != -1) {
    swift_once();
  }
  uint64_t v130 = v50;
  uint64_t v61 = sub_100087350();
  uint64_t v62 = sub_10000A5F4(v61, (uint64_t)qword_1000AD9D0);
  sub_10000A6F4((uint64_t)v35, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v119 = v62;
  uint64_t v63 = sub_100087330();
  os_log_type_t v64 = sub_1000881D0();
  BOOL v65 = os_log_type_enabled(v63, v64);
  v125 = v35;
  if (v65)
  {
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    uint64_t v148 = swift_slowAlloc();
    *(_DWORD *)uint64_t v66 = 136315138;
    uint64_t v67 = sub_100007BE4();
    uint64_t v147 = sub_100017980(v67, v68, &v148);
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_10000A75C((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "Timeline entry created: %s", v66, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000A75C((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  }

  uint64_t v69 = v133;
  uint64_t v70 = (int *)v134;
  uint64_t v71 = (uint64_t)v131;
  type metadata accessor for GameCenterStore();
  uint64_t v72 = v138;
  sub_100087F70();
  sub_1000343B4(0x65756E69746E6F43, 0xEF676E6979616C50, v72, (uint64_t)v26);
  uint64_t v73 = *(void (**)(NSObject *, uint64_t))(v143 + 8);
  v143 += 8;
  v73(v72, v69);
  uint64_t v74 = *(uint64_t (**)(char *, uint64_t, int *))(v132 + 48);
  int v75 = v74(v26, 1, v70);
  sub_10000A62C((uint64_t)v26, v71);
  uint64_t v126 = v26;
  if (v75 != 1)
  {
    uint64_t v77 = v115;
    sub_10000A62C(v71, v115);
    uint64_t result = v74((char *)v77, 1, v70);
    if (result != 1)
    {
      sub_10000A694(v71);
      uint64_t v79 = v77;
      char v80 = *(unsigned char *)(v77 + v70[5]);
      sub_10000A75C(v79, type metadata accessor for WidgetCreationAttempt);
      if ((v80 & 1) == 0)
      {
        uint64_t v76 = 120;
        goto LABEL_23;
      }
      uint64_t v81 = v113;
      sub_10000A62C((uint64_t)v26, v113);
      uint64_t result = v74((char *)v81, 1, v70);
      if (result == 1)
      {
LABEL_38:
        __break(1u);
        return result;
      }
      uint64_t v82 = v81;
      uint64_t v83 = *(void *)(v81 + v70[6]);
      uint64_t result = sub_10000A75C(v82, type metadata accessor for WidgetCreationAttempt);
      if (v83 + 0x4000000000000000 >= 0)
      {
        uint64_t v76 = 2 * v83;
        goto LABEL_23;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_38;
  }
  sub_10000A694(v71);
  uint64_t v76 = 120;
LABEL_23:
  if (v76 >= 7200) {
    uint64_t v84 = 7200;
  }
  else {
    uint64_t v84 = v76;
  }
  uint64_t v85 = v120;
  sub_100087210();
  if (v139) {
    uint64_t v86 = v84;
  }
  else {
    uint64_t v86 = 3600;
  }
  uint64_t v87 = v138;
  sub_100087F70();
  uint64_t v88 = sub_100087EB0();
  v73(v87, v69);
  uint64_t v89 = v142;
  v117(v142, v85, v145);
  *(unsigned char *)(v89 + v70[5]) = v116;
  *(void *)(v89 + v70[6]) = v86;
  v90 = (void *)(v89 + v70[7]);
  void *v90 = 0x65756E69746E6F43;
  v90[1] = 0xEF676E6979616C50;
  *(void *)(v89 + v70[8]) = v88;
  uint64_t v91 = v122;
  sub_10000A6F4(v89, v122, type metadata accessor for WidgetCreationAttempt);
  v92 = sub_100087330();
  os_log_type_t v93 = sub_1000881D0();
  if (os_log_type_enabled(v92, v93))
  {
    uint64_t v94 = (uint8_t *)swift_slowAlloc();
    uint64_t v148 = swift_slowAlloc();
    *(_DWORD *)uint64_t v94 = 136315138;
    uint64_t v95 = sub_100036548();
    uint64_t v147 = sub_100017980(v95, v96, &v148);
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_10000A75C(v91, type metadata accessor for WidgetCreationAttempt);
    _os_log_impl((void *)&_mh_execute_header, v92, v93, "Logging widget creation attempt: %s", v94, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000A75C(v91, type metadata accessor for WidgetCreationAttempt);
  }

  uint64_t v97 = v141;
  uint64_t v98 = v127;
  v99 = v121;
  sub_10003532C();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000871E0();
  sub_100087F50();
  uint64_t v100 = *(void (**)(char *, uint64_t))(v144 + 8);
  v144 += 8;
  v100(v99, v145);
  sub_100009B18();
  uint64_t v101 = v137;
  sub_100087F90();
  uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  v102(v136, v101, v97);
  uint64_t v103 = sub_100087330();
  os_log_type_t v104 = sub_1000881D0();
  if (os_log_type_enabled(v103, v104))
  {
    v105 = v136;
    uint64_t v106 = (uint8_t *)swift_slowAlloc();
    uint64_t v143 = swift_slowAlloc();
    uint64_t v147 = v143;
    *(_DWORD *)uint64_t v106 = 136315138;
    uint64_t v140 = (uint64_t)(v106 + 4);
    v102(v114, v105, v141);
    uint64_t v107 = sub_100088010();
    uint64_t v146 = sub_100017980(v107, v108, &v147);
    sub_100088240();
    swift_bridgeObjectRelease();
    v109 = *(void (**)(char *, uint64_t))(v98 + 8);
    v109(v105, v141);
    _os_log_impl((void *)&_mh_execute_header, v103, v104, "Timeline created: %s", v106, 0xCu);
    swift_arrayDestroy();
    uint64_t v97 = v141;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v109 = *(void (**)(char *, uint64_t))(v98 + 8);
    v109(v136, v97);
  }

  uint64_t v110 = v123;
  uint64_t v111 = v137;
  v128(v137);
  v109(v111, v97);
  sub_10000A75C(v142, type metadata accessor for WidgetCreationAttempt);
  sub_10000A75C((uint64_t)v125, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  v100(v110, v145);
  return sub_10000A694((uint64_t)v126);
}

uint64_t sub_100009680@<X0>(uint64_t a1@<X8>)
{
  sub_100087210();
  if (qword_1000A8728 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1000ADA38;
  uint64_t v3 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)(a1 + v3[5]) = v2;
  *(unsigned char *)(a1 + v3[6]) = 1;
  *(unsigned char *)(a1 + v3[7]) = 0;
  *(unsigned char *)(a1 + v3[8]) = 1;
  *(unsigned char *)(a1 + v3[9]) = 1;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100009724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100087F80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v12 = (void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v12 = a2;
  v12[1] = a3;
  swift_retain();
  swift_retain();
  sub_100041118(0xD00000000000002FLL, 0x800000010008B760, (void (*)(double))sub_10000A864);
  return swift_release_n();
}

uint64_t sub_1000098A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000995C;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10000995C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100009A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000AAA4;
  return TimelineProvider.relevance()(a1, a2, a3);
}

ValueMetadata *type metadata accessor for CPProvider()
{
  return &type metadata for CPProvider;
}

unint64_t sub_100009B18()
{
  unint64_t result = qword_1000A8A50[0];
  if (!qword_1000A8A50[0])
  {
    type metadata accessor for CPTimelineEntry();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A8A50);
  }
  return result;
}

double sub_100009B70()
{
  uint64_t v1 = sub_100087220();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100087260();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000870E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FEC8(v13, 0.0, 1.0);
  double v40 = v14;
  uint64_t v15 = (void *)sub_100081AD8();
  if (!v15) {
    goto LABEL_13;
  }
  uint64_t v16 = v15;
  uint64_t v35 = v10;
  uint64_t v36 = v9;
  id v17 = [v15 teamPlayerID];

  sub_100088000();
  uint64_t v37 = v1;

  uint64_t v38 = sub_1000880B0();
  swift_bridgeObjectRelease();
  sub_100087240();
  sub_100004FB4(&qword_1000A8A78);
  uint64_t v18 = sub_100087250();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v5;
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100088EC0;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v22 + v21, enum case for Calendar.Component.hour(_:), v18);
  sub_100011494(v22);
  swift_setDeallocating();
  uint64_t v23 = v12;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_100087210();
  sub_100087230();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v37);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  uint64_t v24 = sub_1000870D0();
  if (v25) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = v24;
  }
  if (__OFADD__(v38, v26))
  {
    __break(1u);
    goto LABEL_15;
  }
  srand48(v38 + v26);
  double v27 = drand48() * 1.84467441e19 + 0.0;
  if ((~*(void *)&v27 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v27 <= -1.0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v27 >= 1.84467441e19)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v0 = (double)((unint64_t)v27 % 0x64) / 99.0;
  double v40 = v0;
  if (qword_1000A86F0 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v28 = sub_100087350();
  sub_10000A5F4(v28, (uint64_t)qword_1000AD9D0);
  uint64_t v29 = sub_100087330();
  os_log_type_t v30 = sub_1000881D0();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = v35;
  if (v31)
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 134217984;
    double v39 = v0;
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Generated rand based on player id = %f", v33, 0xCu);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v36);
LABEL_13:
  swift_beginAccess();
  return v40;
}

uint64_t sub_10000A09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v4 = sub_100087F80();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v27 = sub_100087EC0();
  uint64_t v7 = *(void *)(v27 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v27);
  uint64_t v26 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &_swiftEmptyArrayStorage;
  uint64_t v13 = v12;
  uint64_t v24 = v12;
  uint64_t v25 = type metadata accessor for GameCenterStore();
  sub_100087F70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v16 = (void *)(v15 + ((v6 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = v29;
  *uint64_t v16 = v28;
  v16[1] = v17;
  uint64_t v18 = v26;
  uint64_t v19 = v27;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v26, v11, v27);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v18, v19);
  uint64_t v22 = (uint64_t (**)(unint64_t *, int))(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v22 = sub_10000A4D4;
  v22[1] = (uint64_t (*)(unint64_t *, int))v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100040A6C((void (*)(void, void))sub_10000A58C);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v19);
  return swift_release();
}

uint64_t sub_10000A3B0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000A3E8()
{
  uint64_t v1 = sub_100087F80();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10000A4D4(unint64_t *a1, int a2)
{
  uint64_t v5 = *(void *)(sub_100087F80() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void (**)(char *))v9;
  uint64_t v11 = *(void *)(v9 + 8);

  return sub_100008720(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_10000A590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CPTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000A5F4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10000A62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A8A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000A694(uint64_t a1)
{
  uint64_t v2 = sub_100004FB4(&qword_1000A8A70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000A6F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000A75C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000A7BC()
{
  uint64_t v1 = sub_100087F80();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10000A864(double a1)
{
  uint64_t v3 = *(void *)(sub_100087F80() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void (**)(char *))v6;
  uint64_t v8 = *(void *)(v6 + 8);

  return sub_100007E14(v5, v7, v8, a1);
}

uint64_t sub_10000A904()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000A93C(uint64_t a1, int a2)
{
  return sub_100008314(a1, a2, *(void (**)(char *))(v2 + 16));
}

uint64_t sub_10000A948()
{
  uint64_t v1 = sub_100087EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10000A9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100087EC0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  return sub_10003757C(a1, a2, v7, v8, v10, v11);
}

void sub_10000AAA8()
{
  double v1 = *(double *)(v0 + 16);
  double v2 = v1 + drand48() * (*(double *)(v0 + 24) - v1);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 >= 1.84467441e19) {
LABEL_7:
  }
    __break(1u);
}

uint64_t sub_10000AB18()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SeededRandomNumberGenerator()
{
  return self;
}

void sub_10000AB4C()
{
}

uint64_t sub_10000AB70()
{
  uint64_t result = sub_100087C10();
  qword_1000AD9B0 = result;
  return result;
}

uint64_t sub_10000ABAC()
{
  uint64_t result = sub_100087C10();
  qword_1000AD9B8 = result;
  return result;
}

uint64_t sub_10000ABE8()
{
  uint64_t result = sub_100087C10();
  qword_1000AD9C0 = result;
  return result;
}

uint64_t sub_10000AC24()
{
  uint64_t result = sub_100087C10();
  qword_1000AD9C8 = result;
  return result;
}

uint64_t sub_10000AC60()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GCWUtility()
{
  return self;
}

double sub_10000AC94(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  uint64_t v2 = sub_100087EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v15 = *(void (**)(char *, void, uint64_t, __n128))(v3 + 104);
  v15((char *)&v14 - v8, enum case for WidgetFamily.systemExtraLarge(_:), v2, v7);
  sub_10000B02C(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v11 = v18;
  uint64_t v10 = v19;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v9, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v16, v2);
  if (v10 != v11)
  {
    ((void (*)(char *, void, uint64_t))v15)(v9, enum case for WidgetFamily.systemLarge(_:), v2);
    sub_1000880F0();
    sub_1000880F0();
    v12(v9, v2);
  }
  v12(v5, v2);
  sub_100087410();
  return 16.0;
}

void sub_10000AEC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  sub_10000B074(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10000AF1C(uint64_t a1)
{
  uint64_t v2 = sub_100004FB4(&qword_1000A8BC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000AF7C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10000AFD4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10000B02C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10000B074(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  uint64_t v129 = a4;
  uint64_t v130 = a6;
  uint64_t v128 = a5;
  unint64_t v135 = a1;
  uint64_t v8 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100087170();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v132 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v131 = (char *)&v124 - v15;
  __chkstk_darwin(v16);
  uint64_t v133 = (char *)&v124 - v17;
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v124 - v20;
  __chkstk_darwin(v22);
  int v139 = (char *)&v124 - v23;
  __chkstk_darwin(v24);
  uint64_t v140 = (char *)&v124 - v25;
  __chkstk_darwin(v26);
  v136 = (char *)&v124 - v27;
  __chkstk_darwin(v28);
  uint64_t v137 = (char *)&v124 - v29;
  id v138 = self;
  id v30 = [v138 defaultManager];
  id v31 = [v30 URLsForDirectory:13 inDomains:1];

  uint64_t v32 = sub_100088120();
  if (*(void *)(v32 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v10, v32 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  uint64_t v33 = v12;
  swift_bridgeObjectRelease();
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  uint64_t v35 = v139;
  if (v34 == 1)
  {
    sub_10000AF1C((uint64_t)v10);
    dispatch_group_leave(a7);
    return;
  }
  dispatch_group_t v127 = a7;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v137, v10, v11);
  sub_100087120();
  sub_100087120();
  sub_100087120();
  id v36 = [v138 defaultManager];
  sub_100087150();
  NSString v37 = sub_100087FF0();
  swift_bridgeObjectRelease();
  unsigned __int8 v38 = [v36 fileExistsAtPath:v37];

  uint64_t v134 = v33;
  if (v38)
  {
    uint64_t v39 = sub_100087180();
    unint64_t v41 = v40;
    id v42 = objc_allocWithZone((Class)UIImage);
    sub_10000AFD4(v39, v41);
    long long v43 = (void *)v39;
    Class isa = sub_100087190().super.isa;
    id v45 = [v42 initWithData:isa];
    id v138 = v43;
    unint64_t v135 = v41;
    sub_10000AF7C((uint64_t)v43, v41);

    if (qword_1000A86F8 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_100087350();
    sub_10000A5F4(v46, (uint64_t)qword_1000AD9E8);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v21, v35, v11);
    long long v47 = sub_100087330();
    uint64_t v48 = v33;
    os_log_type_t v49 = sub_1000881D0();
    if (os_log_type_enabled(v47, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      v142[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136315138;
      uint64_t v51 = sub_100087100();
      uint64_t v141 = sub_100017980(v51, v52, (uint64_t *)v142);
      sub_100088240();
      swift_bridgeObjectRelease();
      unsigned __int8 v53 = *(void (**)(char *, uint64_t))(v134 + 8);
      v53(v21, v11);
      _os_log_impl((void *)&_mh_execute_header, v47, v49, "Fetching cached image from %s", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v35 = v139;
      swift_slowDealloc();
    }
    else
    {
      unsigned __int8 v53 = *(void (**)(char *, uint64_t))(v48 + 8);
      v53(v21, v11);
    }

    if (v45)
    {
      uint64_t v112 = v129;
      swift_beginAccess();
      id v113 = v45;
      uint64_t v114 = v130;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v141 = *(void *)(v112 + 16);
      *(void *)(v112 + 16) = 0x8000000000000000;
      sub_10005DA64((uint64_t)v113, v128, v114, isUniquelyReferenced_nonNull_native);
      *(void *)(v112 + 16) = v141;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
    dispatch_group_leave(v127);

    sub_10000AF7C((uint64_t)v138, v135);
    v53(v35, v11);
    v53(v140, v11);
    v53(v136, v11);
    v53(v137, v11);
  }
  else
  {
    uint64_t v125 = 0;
    id v54 = [v138 defaultManager];
    sub_100087150();
    NSString v55 = sub_100087FF0();
    swift_bridgeObjectRelease();
    unsigned __int8 v56 = [v54 fileExistsAtPath:v55];

    unint64_t v57 = v133;
    if ((v56 & 1) == 0)
    {
      uint64_t v58 = v134;
      if (qword_1000A86F8 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_100087350();
      uint64_t v60 = sub_10000A5F4(v59, (uint64_t)qword_1000AD9E8);
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, v140, v11);
      uint64_t v61 = sub_100087330();
      os_log_type_t v62 = sub_1000881D0();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = swift_slowAlloc();
        uint64_t v124 = v60;
        os_log_type_t v64 = (uint8_t *)v63;
        v142[0] = (id)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v64 = 136315138;
        sub_10000B02C(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v65 = sub_1000884E0();
        uint64_t v141 = sub_100017980(v65, v66, (uint64_t *)v142);
        sub_100088240();
        swift_bridgeObjectRelease();
        uint64_t v67 = *(void (**)(char *, uint64_t))(v58 + 8);
        v67(v57, v11);
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "Creating directory for cached images at %s", v64, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v67 = *(void (**)(char *, uint64_t))(v58 + 8);
        v67(v57, v11);
      }

      id v68 = [v138 defaultManager];
      sub_100087110(v69);
      uint64_t v71 = v70;
      v142[0] = 0;
      unsigned int v72 = [v68 createDirectoryAtURL:v70 withIntermediateDirectories:1 attributes:0 error:v142];

      if (!v72)
      {
        id v105 = v142[0];
        uint64_t v106 = sub_1000870F0();

        swift_willThrow();
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v107 = sub_100087330();
        os_log_type_t v108 = sub_1000881D0();
        if (os_log_type_enabled(v107, v108))
        {
          v109 = (uint8_t *)swift_slowAlloc();
          v142[0] = (id)swift_slowAlloc();
          *(_DWORD *)v109 = 136315138;
          uint64_t v141 = v106;
          swift_errorRetain();
          sub_100004FB4(&qword_1000A8BD0);
          uint64_t v110 = sub_100088010();
          uint64_t v141 = sub_100017980(v110, v111, (uint64_t *)v142);
          sub_100088240();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v107, v108, "Unable to create remoteImageDirectory directory %s.", v109, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        dispatch_group_leave(v127);
        swift_errorRelease();
        v67(v139, v11);
        v67(v140, v11);
        v67(v136, v11);
        v67(v137, v11);
        return;
      }
      id v73 = v142[0];
    }
    uint64_t v74 = v134;
    int v75 = v131;
    if (qword_1000A86F8 != -1) {
      swift_once();
    }
    uint64_t v76 = sub_100087350();
    uint64_t v77 = (void *)sub_10000A5F4(v76, (uint64_t)qword_1000AD9E8);
    uint64_t v78 = *(void (**)(char *, unint64_t, uint64_t))(v74 + 16);
    v78(v75, v135, v11);
    uint64_t v79 = v11;
    uint64_t v80 = v74;
    uint64_t v81 = sub_100087330();
    os_log_type_t v82 = sub_1000881D0();
    BOOL v83 = os_log_type_enabled(v81, v82);
    uint64_t v126 = v79;
    if (v83)
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = (void *)swift_slowAlloc();
      id v138 = v77;
      uint64_t v133 = (char *)v78;
      v142[0] = v85;
      *(_DWORD *)uint64_t v84 = 136315138;
      uint64_t v86 = sub_100087100();
      uint64_t v141 = sub_100017980(v86, v87, (uint64_t *)v142);
      sub_100088240();
      swift_bridgeObjectRelease();
      uint64_t v88 = *(void (**)(char *, uint64_t))(v80 + 8);
      uint64_t v89 = v126;
      v88(v75, v126);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "attempting download of image from %s", v84, 0xCu);
      swift_arrayDestroy();
      uint64_t v78 = (void (*)(char *, unint64_t, uint64_t))v133;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v88 = *(void (**)(char *, uint64_t))(v74 + 8);
      v88(v75, v79);

      uint64_t v89 = v79;
    }
    v90 = v132;
    uint64_t v91 = v125;
    uint64_t v92 = sub_100087180();
    if (v91)
    {
      v78(v90, v135, v89);
      swift_errorRetain();
      swift_errorRetain();
      unint64_t v96 = sub_100087330();
      os_log_type_t v97 = sub_1000881D0();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v98 = swift_slowAlloc();
        v142[0] = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v98 = 136315394;
        uint64_t v99 = sub_100087100();
        uint64_t v141 = sub_100017980(v99, v100, (uint64_t *)v142);
        sub_100088240();
        swift_bridgeObjectRelease();
        v88(v90, v89);
        *(_WORD *)(v98 + 12) = 2080;
        uint64_t v141 = v91;
        swift_errorRetain();
        sub_100004FB4(&qword_1000A8BD0);
        uint64_t v101 = sub_100088010();
        uint64_t v141 = sub_100017980(v101, v102, (uint64_t *)v142);
        sub_100088240();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v96, v97, "unable to download of image from %s, error: %s", (uint8_t *)v98, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v88(v90, v89);
        swift_errorRelease();
        swift_errorRelease();
      }

      uint64_t v103 = v139;
      dispatch_group_leave(v127);
      swift_errorRelease();
    }
    else
    {
      uint64_t v94 = v92;
      unint64_t v95 = v93;
      sub_1000871B0();
      id v116 = objc_allocWithZone((Class)UIImage);
      sub_10000AFD4(v94, v95);
      Class v117 = sub_100087190().super.isa;
      id v118 = [v116 initWithData:v117];
      sub_10000AF7C(v94, v95);

      if (v118)
      {
        uint64_t v119 = v129;
        swift_beginAccess();
        id v120 = v118;
        uint64_t v121 = v130;
        swift_bridgeObjectRetain();
        id v122 = v120;
        char v123 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v141 = *(void *)(v119 + 16);
        *(void *)(v119 + 16) = 0x8000000000000000;
        sub_10005DA64((uint64_t)v122, v128, v121, v123);
        *(void *)(v119 + 16) = v141;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
      }
      dispatch_group_leave(v127);

      sub_10000AF7C(v94, v95);
      uint64_t v103 = v139;
    }
    uint64_t v104 = v126;
    v88(v103, v126);
    v88(v140, v104);
    v88(v136, v104);
    v88(v137, v104);
  }
}

void *sub_10000C428(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100087220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10000C520(uint64_t a1)
{
  uint64_t v2 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000C594(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10000C63C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000C6F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10000C79C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000C848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000C85C);
}

uint64_t sub_10000C85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100087220();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10000C91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000C930);
}

uint64_t sub_10000C930(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100087220();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AFTimelineEntry()
{
  uint64_t result = qword_1000A8C38;
  if (!qword_1000A8C38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000CA38()
{
  uint64_t result = sub_100087220();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000CAE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100088200();
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  sub_100004FB4(&qword_1000A8C80);
  sub_10000CD1C();
  sub_1000068F8();
  uint64_t v5 = sub_1000880E0();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v5;
  v9._object = v7;
  sub_100088040(v9);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

int *sub_10000CBBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100087220();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100087210();
  uint64_t v6 = (void *)sub_100081AD8();
  uint64_t v7 = v6;
  if (v6) {

  }
  uint64_t v8 = (void *)sub_100081AD8();
  if (v8)
  {
    Swift::String v9 = v8;
    unsigned __int8 v10 = [v8 hasAcknowledgedLatestGDPR];
  }
  else
  {
    unsigned __int8 v10 = 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
  uint64_t result = (int *)type metadata accessor for AFTimelineEntry();
  *(unsigned char *)(a1 + result[5]) = v7 != 0;
  *(unsigned char *)(a1 + result[6]) = 0;
  *(unsigned char *)(a1 + result[7]) = 1;
  *(unsigned char *)(a1 + result[8]) = v10;
  *(void *)(a1 + result[9]) = &_swiftEmptyArrayStorage;
  return result;
}

void *sub_10000CD10()
{
  return &protocol witness table for String;
}

unint64_t sub_10000CD1C()
{
  unint64_t result = qword_1000A8C88;
  if (!qword_1000A8C88)
  {
    sub_100004FF8(&qword_1000A8C80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8C88);
  }
  return result;
}

uint64_t destroy for AFActivityItemEntry(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t _s9GCWidgets19AFActivityItemEntryVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AFActivityItemEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for AFActivityItemEntry(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AFActivityItemEntry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFActivityItemEntry(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFActivityItemEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AFActivityItemEntry()
{
  return &type metadata for AFActivityItemEntry;
}

ValueMetadata *type metadata accessor for AFTimelineProvider()
{
  return &type metadata for AFTimelineProvider;
}

uint64_t sub_10000CF60()
{
  return sub_100012EB4(qword_1000A8C90, (void (*)(uint64_t))type metadata accessor for AFTimelineEntry);
}

uint64_t sub_10000CFA8(void **a1, uint64_t a2, char **a3)
{
  uint64_t v3 = *a1;
  uint64_t v59 = &_swiftEmptySetSingleton;
  id v4 = [v3 relationships];
  id v5 = [v4 players];

  unsigned __int8 v56 = v3;
  if (!v5) {
    goto LABEL_25;
  }
  sub_100013058(0, &qword_1000A8CD8);
  unint64_t v6 = sub_100088120();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_4:
      if (v7 < 1)
      {
        __break(1u);
        goto LABEL_55;
      }
      uint64_t v9 = 0;
      unsigned __int8 v10 = (char *)&_swiftEmptyArrayStorage;
      do
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v11 = (id)sub_100088340();
        }
        else {
          id v11 = *(id *)(v6 + 8 * v9 + 32);
        }
        uint64_t v12 = v11;
        id v13 = [v11 identifier];
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = sub_100088000();
          uint64_t v17 = v16;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned __int8 v10 = sub_10000FB04(0, *((void *)v10 + 2) + 1, 1, v10);
          }
          unint64_t v19 = *((void *)v10 + 2);
          unint64_t v18 = *((void *)v10 + 3);
          if (v19 >= v18 >> 1) {
            unsigned __int8 v10 = sub_10000FB04((char *)(v18 > 1), v19 + 1, 1, v10);
          }
          *((void *)v10 + 2) = v19 + 1;
          uint64_t v20 = &v10[16 * v19];
          *((void *)v20 + 4) = v15;
          *((void *)v20 + 5) = v17;
        }
        else
        {
        }
        ++v9;
      }
      while (v7 != v9);
      goto LABEL_19;
    }
  }
  unsigned __int8 v10 = (char *)&_swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease_n();
  uint64_t v58 = &_swiftEmptySetSingleton;
  uint64_t v21 = *((void *)v10 + 2);
  if (v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = (Swift::Int *)(v10 + 40);
    do
    {
      Swift::Int v23 = *(v22 - 1);
      Swift::Int v24 = *v22;
      swift_bridgeObjectRetain_n();
      sub_10000FF74(&v57, v23, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 += 2;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease_n();
    uint64_t v25 = v58;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = &_swiftEmptySetSingleton;
  }
  sub_10000D550((uint64_t)v25);
  uint64_t v3 = v56;
LABEL_25:
  id v26 = [v3 relationships];
  id v27 = [v26 games];

  if (v27)
  {
    sub_100013058(0, &qword_1000A8CD0);
    unint64_t v28 = sub_100088120();

    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1000883C0();
      uint64_t v29 = result;
      if (result)
      {
LABEL_28:
        if (v29 >= 1)
        {
          uint64_t v30 = 0;
          id v31 = (char *)&_swiftEmptyArrayStorage;
          do
          {
            if ((v28 & 0xC000000000000001) != 0) {
              id v32 = (id)sub_100088340();
            }
            else {
              id v32 = *(id *)(v28 + 8 * v30 + 32);
            }
            uint64_t v33 = v32;
            id v34 = [v32 identifier];
            if (v34)
            {
              uint64_t v35 = v34;
              uint64_t v36 = sub_100088000();
              uint64_t v38 = v37;

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v31 = sub_10000FB04(0, *((void *)v31 + 2) + 1, 1, v31);
              }
              unint64_t v40 = *((void *)v31 + 2);
              unint64_t v39 = *((void *)v31 + 3);
              if (v40 >= v39 >> 1) {
                id v31 = sub_10000FB04((char *)(v39 > 1), v40 + 1, 1, v31);
              }
              *((void *)v31 + 2) = v40 + 1;
              unint64_t v41 = &v31[16 * v40];
              *((void *)v41 + 4) = v36;
              *((void *)v41 + 5) = v38;
            }
            else
            {
            }
            ++v30;
          }
          while (v29 != v30);
          goto LABEL_43;
        }
LABEL_55:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v29) {
        goto LABEL_28;
      }
    }
    id v31 = (char *)&_swiftEmptyArrayStorage;
LABEL_43:
    swift_bridgeObjectRelease_n();
    uint64_t v58 = &_swiftEmptySetSingleton;
    uint64_t v42 = *((void *)v31 + 2);
    if (v42)
    {
      swift_bridgeObjectRetain();
      long long v43 = (Swift::Int *)(v31 + 40);
      do
      {
        Swift::Int v44 = *(v43 - 1);
        Swift::Int v45 = *v43;
        swift_bridgeObjectRetain_n();
        sub_10000FF74(&v57, v44, v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 += 2;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease_n();
      uint64_t v46 = v58;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v46 = &_swiftEmptySetSingleton;
    }
    sub_10000D550((uint64_t)v46);
    uint64_t v3 = v56;
  }
  uint64_t v47 = swift_bridgeObjectRetain();
  uint64_t v48 = sub_100010124(v47, (uint64_t *)&v59);
  swift_bridgeObjectRelease();
  os_log_type_t v49 = *a3;
  id v50 = v3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v49;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    os_log_type_t v49 = sub_10000F9E0(0, *((void *)v49 + 2) + 1, 1, v49);
    *a3 = v49;
  }
  unint64_t v53 = *((void *)v49 + 2);
  unint64_t v52 = *((void *)v49 + 3);
  if (v53 >= v52 >> 1)
  {
    os_log_type_t v49 = sub_10000F9E0((char *)(v52 > 1), v53 + 1, 1, v49);
    *a3 = v49;
  }
  *((void *)v49 + 2) = v53 + 1;
  id v54 = &v49[24 * v53];
  *((void *)v54 + 4) = v50;
  *((void *)v54 + 5) = v48;
  v54[48] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10000D550(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    unsigned __int8 v10 = (Swift::Int *)(*(void *)(v1 + 48) + 16 * v9);
    Swift::Int v11 = *v10;
    Swift::Int v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_10000FF74(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_10000D6D0(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v6 = sub_100087F80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::Int v12 = (char *)&v23 - v11;
  uint64_t v24 = type metadata accessor for GameCenterStore();
  int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13(v12, a1, v6);
  v13(v9, (uint64_t)v12, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v12, v6);
  swift_retain_n();
  uint64_t v16 = sub_100081AD8();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    id v18 = [self proxyForPlayer:v16];
    id v19 = [v18 utilityServicePrivate];

    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v24;
    v20[3] = sub_100012C88;
    v20[4] = v15;
    aBlock[4] = sub_100012D34;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000374DC;
    aBlock[3] = &unk_1000A66F0;
    uint64_t v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v19 getWidgetStoreBagValueWithHandler:v21];
    _Block_release(v21);
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    sub_100012478(a2, a3, (uint64_t)v9, 1.0);
    swift_release();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10000D9C0(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v85 = a2;
  uint64_t v86 = a6;
  uint64_t v89 = a5;
  v90 = a4;
  uint64_t v8 = sub_100087220();
  uint64_t v87 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int64_t v13 = (char *)&v83 - v12;
  __chkstk_darwin(v14);
  uint64_t v84 = (char *)&v83 - v15;
  uint64_t v16 = (int *)type metadata accessor for AFTimelineEntry();
  __chkstk_darwin(v16);
  id v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v83 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v83 - v23;
  uint64_t v25 = sub_100087EC0();
  __chkstk_darwin(v25);
  id v27 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  id v32 = (char *)&v83 - v31;
  if (a3 || !a1)
  {
    sub_100087210();
    uint64_t v38 = (void *)sub_100081AD8();
    unint64_t v39 = v38;
    if (v38) {

    }
    unint64_t v40 = (void *)sub_100081AD8();
    if (v40)
    {
      unint64_t v41 = v40;
      unsigned __int8 v42 = [v40 hasAcknowledgedLatestGDPR];
    }
    else
    {
      unsigned __int8 v42 = 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v18, v10, v88);
    v18[v16[5]] = v39 != 0;
    uint64_t v43 = v16[6];
    v18[v43] = 0;
    v18[v16[7]] = 1;
    v18[v16[8]] = v42;
    *(void *)&v18[v16[9]] = &_swiftEmptyArrayStorage;
    if (!a3) {
      goto LABEL_27;
    }
    uint64_t v92 = a3;
    swift_errorRetain();
    sub_100004FB4(&qword_1000A8BD0);
    sub_100013058(0, &qword_1000A8CF8);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_27;
    }
    id v44 = v91;
    id v45 = [v91 domain];
    uint64_t v46 = sub_100088000();
    uint64_t v48 = v47;

    if (v46 == 0xD000000000000026 && v48 == 0x800000010008B9A0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v49 = sub_1000884F0();
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0)
      {

LABEL_26:
        v18[v43] = 1;
LABEL_27:
        v90(v18);
        uint64_t v51 = (uint64_t)v18;
        return sub_100011EF0(v51);
      }
    }
    id v50 = [v44 code];

    if (v50 == (id)404) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (!(a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_5;
    }
    goto LABEL_48;
  }
  uint64_t v71 = v29;
  uint64_t v72 = v30;
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_1000883C0();
  swift_bridgeObjectRelease();
  uint64_t v30 = v72;
  uint64_t v29 = v71;
  if (v73 < 1)
  {
LABEL_48:
    if (qword_1000A8708 != -1) {
      swift_once();
    }
    uint64_t v74 = sub_100087350();
    sub_10000A5F4(v74, (uint64_t)qword_1000ADA18);
    int v75 = sub_100087330();
    os_log_type_t v76 = sub_1000881D0();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v77 = 0;
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "getTimeline, showing empty state", v77, 2u);
      swift_slowDealloc();
    }

    sub_100087210();
    uint64_t v78 = (void *)sub_100081AD8();
    uint64_t v79 = v78;
    if (v78) {

    }
    uint64_t v80 = (void *)sub_100081AD8();
    if (v80)
    {
      uint64_t v81 = v80;
      unsigned __int8 v82 = [v80 hasAcknowledgedLatestGDPR];
    }
    else
    {
      unsigned __int8 v82 = 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v21, v13, v88);
    v21[v16[5]] = v79 != 0;
    v21[v16[6]] = 0;
    v21[v16[7]] = 0;
    v21[v16[8]] = v82;
    *(void *)&v21[v16[9]] = &_swiftEmptyArrayStorage;
    v90(v21);
    uint64_t v51 = (uint64_t)v21;
    return sub_100011EF0(v51);
  }
LABEL_5:
  uint64_t v33 = v29;
  uint64_t v34 = v30;
  sub_100087F70();
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v27, v32, v33);
  uint64_t v86 = v34;
  uint64_t v35 = v33;
  int v36 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v27, v33);
  if (v36 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v37 = 1;
    goto LABEL_33;
  }
  if (v36 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v37 = 2;
    goto LABEL_33;
  }
  if (v36 == enum case for WidgetFamily.systemLarge(_:)) {
    goto LABEL_32;
  }
  if (v36 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v37 = 8;
    goto LABEL_33;
  }
  uint64_t v37 = 1;
  if (v36 != enum case for WidgetFamily.accessoryCircular(_:)
    && v36 != enum case for WidgetFamily.accessoryRectangular(_:)
    && v36 != enum case for WidgetFamily.accessoryInline(_:))
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v27, v33);
LABEL_32:
    uint64_t v37 = 4;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_10001293C(v37, a1, &qword_1000A8CB8);
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  unint64_t v58 = v57;
  swift_bridgeObjectRelease();
  if (v58)
  {
    sub_100088500();
    swift_unknownObjectRetain_n();
    uint64_t v60 = (void *)swift_dynamicCastClass();
    if (!v60)
    {
      swift_unknownObjectRelease();
      uint64_t v60 = &_swiftEmptyArrayStorage;
    }
    uint64_t v61 = v60[2];
    swift_release();
    if (__OFSUB__(v58 >> 1, v56))
    {
      __break(1u);
    }
    else if (v61 == (v58 >> 1) - v56)
    {
      uint64_t v59 = (void *)swift_dynamicCastClass();
      if (!v59)
      {
        swift_unknownObjectRelease();
        uint64_t v59 = &_swiftEmptyArrayStorage;
      }
      goto LABEL_41;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v59 = sub_10001117C(v52, v54, v56, v58);
LABEL_41:
  swift_unknownObjectRelease();
  os_log_type_t v62 = v84;
  sub_100087210();
  uint64_t v63 = (void *)sub_100081AD8();
  os_log_type_t v64 = v63;
  if (v63) {

  }
  uint64_t v65 = (void *)sub_100081AD8();
  if (v65)
  {
    unint64_t v66 = v65;
    unsigned __int8 v67 = [v65 hasAcknowledgedLatestGDPR];
  }
  else
  {
    unsigned __int8 v67 = 0;
  }
  BOOL v68 = v64 != 0;
  uint64_t v69 = sub_100011998((unint64_t)v59, v85, (uint64_t)v32);
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v24, v62, v88);
  v24[v16[5]] = v68;
  v24[v16[6]] = 0;
  v24[v16[7]] = 0;
  v24[v16[8]] = v67;
  *(void *)&v24[v16[9]] = v69;
  v90(v24);
  sub_100011EF0((uint64_t)v24);
  return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v32, v35);
}

uint64_t sub_10000E254(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v136 = a7;
  uint64_t v142 = a5;
  uint64_t v143 = a4;
  uint64_t v155 = a2;
  uint64_t v9 = sub_100087F60();
  __chkstk_darwin(v9 - 8);
  int v139 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_100004FB4(&qword_1000A8CA8);
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  v162 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v132 - v13;
  uint64_t v160 = sub_100087220();
  uint64_t v144 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v16 = (uint64_t)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v138 = (char *)&v132 - v18;
  __chkstk_darwin(v19);
  unint64_t v21 = (unint64_t)&v132 - v20;
  __chkstk_darwin(v22);
  uint64_t v147 = (char *)&v132 - v23;
  uint64_t v159 = type metadata accessor for AFTimelineEntry();
  uint64_t v156 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v25 = (char *)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v132 - v27;
  __chkstk_darwin(v29);
  unint64_t v148 = (unint64_t)&v132 - v30;
  __chkstk_darwin(v31);
  v157 = (char *)&v132 - v32;
  uint64_t v33 = sub_100087EC0();
  uint64_t v137 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v35 = (uint64_t)&v132 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  unint64_t v38 = (unint64_t)&v132 - v37;
  __chkstk_darwin(v39);
  uint64_t v158 = (uint64_t)&v132 - v41;
  if (a3 || !a1)
  {
    sub_100004FB4(&qword_1000A8CB0);
    unint64_t v51 = (*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_100088EC0;
    sub_10000CBBC(v52 + v51);
    uint64_t v53 = v138;
    sub_1000871E0();
    sub_100087F50();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v53, v160);
    sub_100012EB4(qword_1000A8C90, (void (*)(uint64_t))type metadata accessor for AFTimelineEntry);
    sub_100087F90();
    v143(v14);
    uint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v140 + 8);
    uint64_t v55 = v14;
    return v54(v55, v141);
  }
  v151 = v25;
  unint64_t v161 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_121;
  }
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v42 < 1)
  {
LABEL_122:
    if (qword_1000A8708 != -1) {
      goto LABEL_140;
    }
    goto LABEL_123;
  }
LABEL_5:
  uint64_t v153 = v42;
  unint64_t v149 = v21;
  uint64_t v134 = v14;
  uint64_t v43 = v158;
  uint64_t v44 = v40;
  sub_100087F70();
  uint64_t v45 = v137;
  uint64_t v46 = *(void (**)(unint64_t, uint64_t, uint64_t))(v137 + 16);
  v46(v38, v43, v44);
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 88);
  uint64_t v16 = v45 + 88;
  uint64_t v47 = v48;
  uint64_t v135 = v44;
  int v49 = v48(v38, v44);
  unint64_t v21 = enum case for WidgetFamily.systemSmall(_:);
  if (v49 == enum case for WidgetFamily.systemSmall(_:)) {
    goto LABEL_6;
  }
  if (v49 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v50 = 2;
    goto LABEL_14;
  }
  if (v49 == enum case for WidgetFamily.systemLarge(_:)) {
    goto LABEL_11;
  }
  if (v49 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v50 = 8;
  }
  else
  {
    if (v49 == enum case for WidgetFamily.accessoryCircular(_:)
      || v49 == enum case for WidgetFamily.accessoryRectangular(_:))
    {
LABEL_6:
      uint64_t v50 = 1;
      goto LABEL_14;
    }
    uint64_t v50 = 1;
    if (v49 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(unint64_t, uint64_t))(v137 + 8))(v38, v135);
LABEL_11:
      uint64_t v50 = 4;
    }
  }
LABEL_14:
  float v56 = ceilf((float)v153 / (float)v50);
  if ((~LODWORD(v56) & 0x7F800000) == 0)
  {
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  if (v56 <= -9.2234e18) {
    goto LABEL_133;
  }
  if (v56 >= 9.2234e18) {
    goto LABEL_134;
  }
  uint64_t v150 = v50;
  v154 = (unint64_t *)(v136 + 16);
  uint64_t v57 = (uint64_t)v56;
  uint64_t v58 = v135;
  v46(v35, v158, v135);
  uint64_t v40 = v47(v35, v58);
  uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t))v143;
  uint64_t v133 = v57;
  if (v40 == v21) {
    goto LABEL_18;
  }
  if (v40 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v152 = 1200;
    if (!v57) {
      goto LABEL_77;
    }
    goto LABEL_19;
  }
  if (v40 == enum case for WidgetFamily.systemLarge(_:)) {
    goto LABEL_82;
  }
  if (v40 != enum case for WidgetFamily.systemExtraLarge(_:))
  {
    if (v40 == enum case for WidgetFamily.accessoryCircular(_:)
      || v40 == enum case for WidgetFamily.accessoryRectangular(_:)
      || v40 == enum case for WidgetFamily.accessoryInline(_:))
    {
LABEL_18:
      uint64_t v152 = 600;
      if (!v57) {
        goto LABEL_77;
      }
      goto LABEL_19;
    }
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v137 + 8))(v35, v135);
LABEL_82:
    uint64_t v152 = 2400;
    if (!v57) {
      goto LABEL_77;
    }
    goto LABEL_19;
  }
  uint64_t v152 = 4800;
  if (v57)
  {
LABEL_19:
    if (__OFSUB__(v57, 1)) {
      goto LABEL_138;
    }
    int64_t v59 = v153;
    uint64_t v60 = v150;
    if (v57 - 1 < 0) {
      goto LABEL_139;
    }
    uint64_t v16 = 0;
    unint64_t v148 = a1 & 0xC000000000000001;
    if ((a1 & 0x8000000000000000) != 0) {
      uint64_t v61 = a1;
    }
    else {
      uint64_t v61 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    v157 = (char *)v61;
    v162 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
    uint64_t v145 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v146 = (void (**)(char *, unint64_t, uint64_t))(v144 + 32);
    uint64_t v14 = (char *)v150;
    uint64_t v147 = (char *)(v57 - 1);
    while (1)
    {
      if (v59 >= (uint64_t)v14) {
        unint64_t v38 = (unint64_t)v14;
      }
      else {
        unint64_t v38 = v59;
      }
      uint64_t v35 = v16 * v60;
      if ((unsigned __int128)(v16 * (__int128)v60) >> 64 != (v16 * v60) >> 63)
      {
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        uint64_t v114 = v40;
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_1000883C0();
        swift_bridgeObjectRelease();
        uint64_t v40 = v114;
        if (v42 < 1) {
          goto LABEL_122;
        }
        goto LABEL_5;
      }
      int64_t v62 = v35 + v60;
      if (__OFADD__(v35, v60)) {
        goto LABEL_109;
      }
      if (v59 < v62) {
        int64_t v62 = v59;
      }
      BOOL v63 = __OFSUB__(v62, 1);
      uint64_t v64 = v62 - 1;
      if (v63) {
        goto LABEL_110;
      }
      if (v64 < v35) {
        goto LABEL_111;
      }
      unint64_t v21 = v64 + 1;
      if (__OFADD__(v64, 1)) {
        goto LABEL_112;
      }
      if (v161)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v67 = sub_1000883C0();
        uint64_t v40 = swift_bridgeObjectRelease();
        if (v67 < v35) {
          goto LABEL_113;
        }
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_1000883C0();
        uint64_t v40 = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v65 = *((void *)v162 + 2);
        uint64_t v40 = swift_bridgeObjectRetain();
        if (v65 < v35) {
          goto LABEL_113;
        }
        uint64_t v66 = *((void *)v162 + 2);
      }
      if (v66 < (uint64_t)v21) {
        goto LABEL_114;
      }
      if ((v21 & 0x8000000000000000) != 0) {
        goto LABEL_115;
      }
      if (!v148) {
        goto LABEL_49;
      }
      if (v21 < v35) {
        goto LABEL_118;
      }
      if (v35 != v21)
      {
        if (v35 >= v21) {
          goto LABEL_120;
        }
        sub_100013058(0, &qword_1000A8CB8);
        Swift::Int v68 = v35;
        do
        {
          Swift::Int v69 = v68 + 1;
          sub_100088330(v68);
          Swift::Int v68 = v69;
        }
        while (v38 != v69);
      }
      if (v161)
      {
        swift_bridgeObjectRetain();
        unint64_t v21 = sub_1000883D0();
        uint64_t v71 = v72;
        uint64_t v35 = v73;
        unint64_t v70 = v74;
        swift_bridgeObjectRelease_n();
        if ((v70 & 1) == 0) {
          goto LABEL_52;
        }
      }
      else
      {
LABEL_49:
        unint64_t v70 = (2 * v21) | 1;
        unint64_t v21 = (unint64_t)v162;
        uint64_t v71 = v145;
        if ((v70 & 1) == 0) {
          goto LABEL_52;
        }
      }
      unint64_t v38 = sub_100088500();
      swift_unknownObjectRetain_n();
      os_log_type_t v76 = (void *)swift_dynamicCastClass();
      if (!v76)
      {
        swift_unknownObjectRelease();
        os_log_type_t v76 = &_swiftEmptyArrayStorage;
      }
      uint64_t v77 = v76[2];
      uint64_t v40 = swift_release();
      if (__OFSUB__(v70 >> 1, v35)) {
        goto LABEL_119;
      }
      if (v77 != (v70 >> 1) - v35)
      {
        swift_unknownObjectRelease();
LABEL_52:
        int v75 = sub_10001117C(v21, v71, v35, v70);
        goto LABEL_59;
      }
      int v75 = (void *)swift_dynamicCastClass();
      if (!v75)
      {
        swift_unknownObjectRelease();
        int v75 = &_swiftEmptyArrayStorage;
      }
LABEL_59:
      uint64_t v40 = swift_unknownObjectRelease();
      if ((unsigned __int128)(v16 * (__int128)v152) >> 64 != (v16 * v152) >> 63) {
        goto LABEL_116;
      }
      unint64_t v21 = v149;
      sub_1000871E0();
      uint64_t v78 = (void *)sub_100081AD8();
      uint64_t v79 = v78;
      if (v78) {

      }
      uint64_t v80 = (void *)sub_100081AD8();
      if (v80)
      {
        uint64_t v81 = v80;
        unsigned __int8 v82 = [v80 hasAcknowledgedLatestGDPR];
      }
      else
      {
        unsigned __int8 v82 = 0;
      }
      int64_t v59 = v153;
      BOOL v83 = v79 != 0;
      uint64_t v84 = sub_100011998((unint64_t)v75, v155, v158);
      swift_release();
      (*v146)(v28, v21, v160);
      uint64_t v85 = (int *)v159;
      v28[*(int *)(v159 + 20)] = v83;
      v28[v85[6]] = 0;
      v28[v85[7]] = 0;
      v28[v85[8]] = v82;
      *(void *)&v28[v85[9]] = v84;
      uint64_t v86 = (uint64_t)v151;
      sub_100011E28((uint64_t)v28, (uint64_t)v151);
      uint64_t v87 = v154;
      swift_beginAccess();
      unint64_t v88 = *v87;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v87 = v88;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v88 = sub_10000FC14(0, *(void *)(v88 + 16) + 1, 1, v88, &qword_1000A8CB0, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
        unint64_t *v154 = v88;
      }
      unint64_t v38 = *(void *)(v88 + 16);
      unint64_t v90 = *(void *)(v88 + 24);
      uint64_t v35 = v38 + 1;
      if (v38 >= v90 >> 1)
      {
        unint64_t v88 = sub_10000FC14(v90 > 1, v38 + 1, 1, v88, &qword_1000A8CB0, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
        unint64_t *v154 = v88;
      }
      *(void *)(v88 + 16) = v35;
      sub_100011E8C(v86, v88+ ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))+ *(void *)(v156 + 72) * v38);
      swift_endAccess();
      uint64_t v40 = sub_100011EF0((uint64_t)v28);
      if ((char *)v16 == v147)
      {
        uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t))v143;
        goto LABEL_90;
      }
      uint64_t v60 = v150;
      v14 += v150;
      BOOL v63 = __OFADD__(v16++, 1);
      if (v63) {
        goto LABEL_117;
      }
    }
  }
LABEL_77:
  id v91 = v147;
  sub_100087210();
  uint64_t v92 = (void *)sub_100081AD8();
  unint64_t v93 = v92;
  if (v92) {

  }
  uint64_t v94 = (void *)sub_100081AD8();
  if (v94)
  {
    unint64_t v95 = v94;
    unsigned __int8 v96 = [v94 hasAcknowledgedLatestGDPR];
  }
  else
  {
    unsigned __int8 v96 = 0;
  }
  BOOL v97 = v93 != 0;
  uint64_t v98 = sub_100011998(a1, v155, v158);
  uint64_t v99 = (uint64_t)v157;
  (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v157, v91, v160);
  unint64_t v100 = (int *)v159;
  *(unsigned char *)(v99 + *(int *)(v159 + 20)) = v97;
  *(unsigned char *)(v99 + v100[6]) = 0;
  *(unsigned char *)(v99 + v100[7]) = 0;
  *(unsigned char *)(v99 + v100[8]) = v96;
  *(void *)(v99 + v100[9]) = v98;
  uint64_t v101 = v148;
  sub_100011E28(v99, v148);
  unint64_t v102 = v154;
  swift_beginAccess();
  unint64_t v103 = *v102;
  char v104 = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v102 = v103;
  if ((v104 & 1) == 0)
  {
    unint64_t v103 = sub_10000FC14(0, *(void *)(v103 + 16) + 1, 1, v103, &qword_1000A8CB0, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    unint64_t *v154 = v103;
  }
  unint64_t v106 = *(void *)(v103 + 16);
  unint64_t v105 = *(void *)(v103 + 24);
  if (v106 >= v105 >> 1)
  {
    unint64_t v103 = sub_10000FC14(v105 > 1, v106 + 1, 1, v103, &qword_1000A8CB0, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    unint64_t *v154 = v103;
  }
  *(void *)(v103 + 16) = v106 + 1;
  sub_100011E8C(v101, v103+ ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))+ *(void *)(v156 + 72) * v106);
  swift_endAccess();
  sub_100011EF0(v99);
LABEL_90:
  uint64_t v16 = v136;
  if (qword_1000A8708 != -1) {
LABEL_135:
  }
    swift_once();
  uint64_t v107 = sub_100087350();
  sub_10000A5F4(v107, (uint64_t)qword_1000ADA18);
  swift_retain();
  os_log_type_t v108 = sub_100087330();
  os_log_type_t v109 = sub_1000881D0();
  if (os_log_type_enabled(v108, v109))
  {
    uint64_t v110 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v110 = 134217984;
    swift_beginAccess();
    uint64_t v163 = *(void *)(*(void *)(v16 + 16) + 16);
    sub_100088240();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v108, v109, "getTimeline, constructed %ld timelineEntries", v110, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  if (__OFADD__(v133, 1))
  {
    __break(1u);
  }
  else if ((unsigned __int128)((v133 + 1) * (__int128)v152) >> 64 == ((v133 + 1) * v152) >> 63)
  {
    unint64_t v111 = v138;
    sub_1000871E0();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100087F50();
    sub_100012EB4(qword_1000A8C90, (void (*)(uint64_t))type metadata accessor for AFTimelineEntry);
    uint64_t v112 = v134;
    sub_100087F90();
    ((void (*)(char *))v47)(v112);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v112, v141);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v111, v160);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v137 + 8))(v158, v135);
  }
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  swift_once();
LABEL_123:
  uint64_t v115 = sub_100087350();
  sub_10000A5F4(v115, (uint64_t)qword_1000ADA18);
  id v116 = sub_100087330();
  os_log_type_t v117 = sub_1000881D0();
  if (os_log_type_enabled(v116, v117))
  {
    id v118 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v118 = 0;
    _os_log_impl((void *)&_mh_execute_header, v116, v117, "getTimeline, showing empty state", v118, 2u);
    swift_slowDealloc();
  }

  sub_100004FB4(&qword_1000A8CB0);
  unint64_t v119 = (*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80);
  uint64_t v120 = swift_allocObject();
  *(_OWORD *)(v120 + 16) = xmmword_100088EC0;
  unint64_t v121 = v120 + v119;
  sub_100087210();
  id v122 = (void *)sub_100081AD8();
  char v123 = v122;
  if (v122) {

  }
  uint64_t v124 = (void *)sub_100081AD8();
  if (v124)
  {
    uint64_t v125 = v124;
    unsigned __int8 v126 = [v124 hasAcknowledgedLatestGDPR];
  }
  else
  {
    unsigned __int8 v126 = 0;
  }
  uint64_t v127 = v144;
  uint64_t v128 = v160;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v144 + 32))(v121, v16, v160);
  uint64_t v129 = (int *)v159;
  *(unsigned char *)(v121 + *(int *)(v159 + 20)) = v123 != 0;
  *(unsigned char *)(v121 + v129[6]) = 0;
  *(unsigned char *)(v121 + v129[7]) = 0;
  *(unsigned char *)(v121 + v129[8]) = v126;
  *(void *)(v121 + v129[9]) = &_swiftEmptyArrayStorage;
  uint64_t v130 = v138;
  sub_1000871E0();
  sub_100087F50();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v130, v128);
  sub_100012EB4(qword_1000A8C90, (void (*)(uint64_t))type metadata accessor for AFTimelineEntry);
  uint64_t v131 = v162;
  sub_100087F90();
  v143(v131);
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v140 + 8);
  uint64_t v55 = v131;
  return v54(v55, v141);
}

uint64_t sub_10000F62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100087F80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &_swiftEmptyArrayStorage;
  type metadata accessor for GameCenterStore();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v9;
  swift_retain();
  swift_retain();
  sub_10003623C((uint64_t)sub_10000F8F4, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_10000F7D4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000F80C()
{
  uint64_t v1 = sub_100087F80();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10000F8F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_100087F80() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void (**)(char *))(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t v11 = *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10000E254(a1, a2, a3, v9, v10, v3 + v8, v11);
}

uint64_t sub_10000F9AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10000FC14(a1, a2, a3, a4, &qword_1000A8D28, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
}

char *sub_10000F9E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004FB4(&qword_1000A8CC8);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[24 * v8 + 32]) {
          memmove(v12, a4 + 32, 24 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000118A0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10000FB04(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004FB4(&qword_1000A8CE0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000117AC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000FC14(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004FB4(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1000883B0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100012EFC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_10000FE94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10000FC14(a1, a2, a3, a4, &qword_1000A8D18, (uint64_t (*)(void))type metadata accessor for AppMetadata, (uint64_t (*)(void))type metadata accessor for AppMetadata);
}

uint64_t sub_10000FEC8(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = swift_stdlib_random();
  if (v5 * ((double)0 * 1.11022302e-16) + a2 == a3) {
    return sub_10000FEC8(v6, a2, a3);
  }
  return result;
}

uint64_t sub_10000FF74(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_100088530();
  swift_bridgeObjectRetain();
  sub_100088030();
  Swift::Int v8 = sub_100088550();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1000884F0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1000884F0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100010B7C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t *sub_100010124(uint64_t isStackAllocationSafe, uint64_t *a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_100010290((uint64_t)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      return (uint64_t *)v8;
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    a2 = (uint64_t *)sub_100010290((uint64_t)v9, v6, v4, a2);
    swift_slowDealloc();
  }
  return a2;
}

uint64_t sub_100010290(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a3;
  uint64_t v35 = (unint64_t *)result;
  uint64_t v36 = 0;
  int64_t v5 = 0;
  uint64_t v38 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v39 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_20;
    }
    BOOL v11 = __OFADD__(v5++, 1);
    if (v11)
    {
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v5 >= v39) {
      return sub_100010600(v35, a2, v36, v4);
    }
    unint64_t v12 = *(void *)(v38 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_19:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
LABEL_20:
    uint64_t v14 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v10);
    uint64_t v15 = v14[1];
    uint64_t v16 = *a4;
    if (!*(void *)(*a4 + 16))
    {
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    int64_t v43 = v5;
    uint64_t v17 = *v14;
    unint64_t v41 = v10;
    uint64_t v18 = *(void **)(*(void *)(v4 + 56) + 8 * v10);
    sub_100088530();
    swift_bridgeObjectRetain();
    id v19 = v18;
    swift_bridgeObjectRetain();
    sub_100088030();
    Swift::Int v20 = sub_100088550();
    uint64_t v21 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v22 = v20 & ~v21;
    uint64_t v23 = v16 + 56;
    if ((*(void *)(v16 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
    {
      unint64_t v40 = v8;
      uint64_t v24 = v19;
      uint64_t v25 = *(void *)(v16 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v17 && v26[1] == v15;
      if (v27 || (sub_1000884F0() & 1) != 0)
      {

LABEL_38:
        swift_bridgeObjectRelease();
        uint64_t v4 = a3;
        int64_t v5 = v43;
        unint64_t v8 = v40;
        uint64_t result = swift_bridgeObjectRelease();
        *(unint64_t *)((char *)v35 + ((v41 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v41;
        BOOL v11 = __OFADD__(v36++, 1);
        if (v11) {
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v28 = ~v21;
        unint64_t v29 = (v22 + 1) & v28;
        if ((*(void *)(v23 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
        {
          uint64_t v30 = v24;
          while (1)
          {
            uint64_t v31 = (void *)(v25 + 16 * v29);
            if (*v31 == v17 && v31[1] == v15) {
              break;
            }
            char v33 = sub_1000884F0();
            uint64_t v30 = v24;
            if (v33) {
              break;
            }
            unint64_t v29 = (v29 + 1) & v28;
            if (((*(void *)(v23 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
              goto LABEL_41;
            }
          }

          goto LABEL_38;
        }
LABEL_41:
        swift_bridgeObjectRelease();

        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = a3;
        int64_t v5 = v43;
        unint64_t v8 = v40;
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      int64_t v5 = v43;
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v39) {
    return sub_100010600(v35, a2, v36, v4);
  }
  unint64_t v12 = *(void *)(v38 + 8 * v13);
  if (v12) {
    goto LABEL_18;
  }
  int64_t v13 = v5 + 2;
  if (v5 + 2 >= v39) {
    return sub_100010600(v35, a2, v36, v4);
  }
  unint64_t v12 = *(void *)(v38 + 8 * v13);
  if (v12) {
    goto LABEL_18;
  }
  int64_t v13 = v5 + 3;
  if (v5 + 3 >= v39) {
    return sub_100010600(v35, a2, v36, v4);
  }
  unint64_t v12 = *(void *)(v38 + 8 * v13);
  if (v12)
  {
LABEL_18:
    int64_t v5 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v39) {
      return sub_100010600(v35, a2, v36, v4);
    }
    unint64_t v12 = *(void *)(v38 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_19;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_100010600(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100004FB4(&qword_1000A8CF0);
  uint64_t result = sub_100088400();
  uint64_t v9 = result;
  char v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v34) {
        return v9;
      }
      unint64_t v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v34) {
          return v9;
        }
        unint64_t v16 = v33[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v34) {
            return v9;
          }
          unint64_t v16 = v33[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v34) {
              return v9;
            }
            unint64_t v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v34) {
                  return v9;
                }
                unint64_t v16 = v33[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void **)(*(void *)(v4 + 56) + 8 * v14);
    sub_100088530();
    swift_bridgeObjectRetain();
    id v22 = v21;
    sub_100088030();
    uint64_t result = sub_100088550();
    uint64_t v23 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = (void *)(*(void *)(v9 + 48) + 16 * v26);
    *uint64_t v31 = v20;
    v31[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v26) = v22;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10001089C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004FB4(&qword_1000A8CE8);
  uint64_t v3 = sub_1000882F0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_100088530();
      sub_100088030();
      uint64_t result = sub_100088550();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_100010B7C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10001089C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100010D18();
      goto LABEL_22;
    }
    sub_100010ECC();
  }
  uint64_t v11 = *v4;
  sub_100088530();
  sub_100088030();
  uint64_t result = sub_100088550();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1000884F0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_100088510();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1000884F0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_100010D18()
{
  uint64_t v1 = v0;
  sub_100004FB4(&qword_1000A8CE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000882E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100010ECC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004FB4(&qword_1000A8CE8);
  uint64_t v3 = sub_1000882F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_100088530();
    swift_bridgeObjectRetain();
    sub_100088030();
    uint64_t result = sub_100088550();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void *sub_10001117C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return &_swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = &_swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_100013058(0, &qword_1000A8CB8);
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_100004FB4(&qword_1000A8CC0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)sub_100088410();
  __break(1u);
  return result;
}

void *sub_100011310(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return &_swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = &_swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        type metadata accessor for AppDisplayData();
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_100004FB4(&qword_1000A8CC0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)sub_100088410();
  __break(1u);
  return result;
}

void *sub_100011494(uint64_t a1)
{
  uint64_t v2 = sub_100087250();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100004FB4(&qword_1000A8D00);
    uint64_t v9 = sub_100088300();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100012EB4(&qword_1000A8D08, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_100087FD0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100012EB4(&qword_1000A8D10, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_100087FE0();
          unint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        char v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1000117AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100088410();
  __break(1u);
  return result;
}

uint64_t sub_1000118A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100088410();
  __break(1u);
  return result;
}

char *sub_100011998(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v5 = sub_100087EC0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v35 = (char *)&_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (char *)sub_1000883C0();
    uint64_t v12 = (uint64_t)result;
    if (result) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v17 = (char *)&_swiftEmptyArrayStorage;
    goto LABEL_12;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = (char *)swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_11;
  }
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v32 = v6;
  uint64_t v14 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v15 = (id)sub_100088340();
    }
    else {
      id v15 = *(id *)(a1 + 8 * v14 + 32);
    }
    uint64_t v16 = v15;
    ++v14;
    uint64_t v34 = v15;
    sub_10000CFA8(&v34, a2, &v35);
  }
  while (v12 != v14);
  swift_bridgeObjectRelease();
  uint64_t v17 = v35;
  uint64_t v6 = v32;
LABEL_12:
  unint64_t v18 = *((void *)v17 + 2);
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v19(v11, v33, v5);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t))(v6 + 88);
  int v21 = v20(v11, v5);
  int v22 = enum case for WidgetFamily.systemSmall(_:);
  if (v21 == enum case for WidgetFamily.systemSmall(_:)) {
    goto LABEL_13;
  }
  if (v21 != enum case for WidgetFamily.systemMedium(_:))
  {
    if (v21 != enum case for WidgetFamily.systemLarge(_:))
    {
      if (v21 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
        if (v18 >= 8) {
          return v35;
        }
        goto LABEL_27;
      }
      if (v21 == enum case for WidgetFamily.accessoryCircular(_:)
        || v21 == enum case for WidgetFamily.accessoryRectangular(_:)
        || v21 == enum case for WidgetFamily.accessoryInline(_:))
      {
LABEL_13:
        if (!v18) {
          goto LABEL_27;
        }
        return v35;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    if (v18 < 4) {
      goto LABEL_27;
    }
    return v35;
  }
  if (v18 > 1) {
    return v35;
  }
LABEL_27:
  unint64_t v23 = *((void *)v35 + 2);
  v19(v8, v33, v5);
  uint64_t result = (char *)v20(v8, v5);
  if (result == v22)
  {
    unint64_t v24 = 1;
    goto LABEL_39;
  }
  if (result == enum case for WidgetFamily.systemMedium(_:))
  {
    unint64_t v24 = 2;
    goto LABEL_39;
  }
  if (result == enum case for WidgetFamily.systemLarge(_:)) {
    goto LABEL_38;
  }
  if (result == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    unint64_t v24 = 8;
    goto LABEL_39;
  }
  unint64_t v24 = 1;
  if (result != enum case for WidgetFamily.accessoryCircular(_:)
    && result != enum case for WidgetFamily.accessoryRectangular(_:)
    && result != enum case for WidgetFamily.accessoryInline(_:))
  {
    uint64_t result = (char *)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_38:
    unint64_t v24 = 4;
  }
LABEL_39:
  if (v24 < v23)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v24 == v23) {
    return v35;
  }
  unint64_t v25 = v24 - v23;
  if (v24 > v23)
  {
    unint64_t v26 = v35;
    do
    {
      id v27 = [objc_allocWithZone((Class)GKPlayerActivityItemInternal) init];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_10000F9E0(0, *((void *)v26 + 2) + 1, 1, v26);
      }
      unint64_t v29 = *((void *)v26 + 2);
      unint64_t v28 = *((void *)v26 + 3);
      if (v29 >= v28 >> 1) {
        unint64_t v26 = sub_10000F9E0((char *)(v28 > 1), v29 + 1, 1, v26);
      }
      *((void *)v26 + 2) = v29 + 1;
      uint64_t v30 = &v26[24 * v29];
      *((void *)v30 + 4) = v27;
      *((void *)v30 + 5) = &_swiftEmptyDictionarySingleton;
      v30[48] = 1;
      --v25;
    }
    while (v25);
    return v26;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_100011E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100011E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100011EF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AFTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_100011F4C()
{
  uint64_t v1 = sub_100087220();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100087260();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000870E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FEC8(v13, 0.0, 1.0);
  double v40 = v14;
  id v15 = (void *)sub_100081AD8();
  if (!v15) {
    goto LABEL_13;
  }
  uint64_t v16 = v15;
  uint64_t v35 = v10;
  uint64_t v36 = v9;
  id v17 = [v15 teamPlayerID];

  sub_100088000();
  uint64_t v37 = v1;

  uint64_t v38 = sub_1000880B0();
  swift_bridgeObjectRelease();
  sub_100087240();
  sub_100004FB4(&qword_1000A8A78);
  uint64_t v18 = sub_100087250();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = v5;
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100088EC0;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v22 + v21, enum case for Calendar.Component.hour(_:), v18);
  sub_100011494(v22);
  swift_setDeallocating();
  unint64_t v23 = v12;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_100087210();
  sub_100087230();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v37);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  uint64_t v24 = sub_1000870D0();
  if (v25) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = v24;
  }
  if (__OFADD__(v38, v26))
  {
    __break(1u);
    goto LABEL_15;
  }
  srand48(v38 + v26);
  double v27 = drand48() * 1.84467441e19 + 0.0;
  if ((~*(void *)&v27 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v27 <= -1.0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v27 >= 1.84467441e19)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v0 = (double)((unint64_t)v27 % 0x64) / 99.0;
  double v40 = v0;
  if (qword_1000A8708 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v28 = sub_100087350();
  sub_10000A5F4(v28, (uint64_t)qword_1000ADA18);
  unint64_t v29 = sub_100087330();
  os_log_type_t v30 = sub_1000881D0();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = v35;
  if (v31)
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 134217984;
    double v39 = v0;
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Generated rand based on player id = %f", v33, 0xCu);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v36);
LABEL_13:
  swift_beginAccess();
  return v40;
}

uint64_t sub_100012478(void (*a1)(char *), uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = sub_100087220();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v41 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for AFTimelineEntry();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100087F80();
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v40 = v14;
  __chkstk_darwin(v14);
  v37[2] = v15;
  uint64_t v38 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = sub_100011F4C();
  if (qword_1000A8708 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100087350();
  v37[1] = sub_10000A5F4(v17, (uint64_t)qword_1000ADA18);
  uint64_t v18 = sub_100087330();
  os_log_type_t v19 = sub_1000881D0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (_DWORD *)swift_slowAlloc();
    v37[0] = v8;
    unint64_t v21 = v20;
    *uint64_t v20 = 134218240;
    double v42 = a4;
    sub_100088240();
    *((_WORD *)v21 + 6) = 2048;
    double v42 = v16;
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "AFTimelineProvider.getSnapshot: Live preview rate is %f, rolled a %f", (uint8_t *)v21, 0x16u);
    uint64_t v8 = v37[0];
    swift_slowDealloc();
  }

  if (v16 <= a4)
  {
    type metadata accessor for GameCenterStore();
    BOOL v31 = v38;
    uint64_t v30 = v39;
    uint64_t v32 = a3;
    uint64_t v33 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v32, v40);
    unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = a1;
    *(void *)(v35 + 24) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v35 + v34, v31, v33);
    swift_retain();
    sub_10003623C((uint64_t)sub_100012E28, v35);
    return swift_release();
  }
  else
  {
    uint64_t v22 = sub_100087330();
    os_log_type_t v23 = sub_1000881D0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "AFTimelineProvider.getSnapshot: Showing placeholder preview...", v24, 2u);
      swift_slowDealloc();
    }

    sub_100087210();
    char v25 = (void *)sub_100081AD8();
    uint64_t v26 = v25;
    if (v25) {

    }
    double v27 = (void *)sub_100081AD8();
    if (v27)
    {
      uint64_t v28 = v27;
      unsigned __int8 v29 = [v27 hasAcknowledgedLatestGDPR];
    }
    else
    {
      unsigned __int8 v29 = 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v41, v8);
    v13[v11[5]] = v26 != 0;
    v13[v11[6]] = 0;
    v13[v11[7]] = 1;
    v13[v11[8]] = v29;
    *(void *)&v13[v11[9]] = &_swiftEmptyArrayStorage;
    a1(v13);
    return sub_100011EF0((uint64_t)v13);
  }
}

uint64_t sub_100012928(uint64_t a1, unint64_t a2)
{
  return sub_10001293C(a1, a2, &qword_1000A8D20);
}

uint64_t sub_10001293C(uint64_t result, unint64_t a2, unint64_t *a3)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = a3;
    unint64_t v3 = a2;
    uint64_t v4 = result;
    unint64_t v6 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1000883C0();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v7 >= v4) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v7;
  }
  if (v7 < 0) {
    uint64_t v8 = v4;
  }
  if (v4) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1000883C0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000883C0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v3 & 0xC000000000000001) != 0 && v9)
  {
    sub_100013058(0, v5);
    Swift::Int v12 = 0;
    do
    {
      Swift::Int v13 = v12 + 1;
      sub_100088330(v12);
      Swift::Int v12 = v13;
    }
    while (v9 != v13);
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1000883D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_100012AEC(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000883C0();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000883C0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1000883C0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for AppDisplayData();
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      sub_100088330(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1000883D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_100012C88(double a1)
{
  uint64_t v3 = *(void *)(sub_100087F80() - 8);
  unint64_t v4 = *(void (**)(char *))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100012478(v4, v5, v6, a1);
}

uint64_t sub_100012CFC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100012D34(uint64_t a1, void *a2, void *a3)
{
  return sub_10003719C(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(void, __n128))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_100012D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100012D50()
{
  return swift_release();
}

uint64_t sub_100012D5C()
{
  uint64_t v1 = sub_100087F80();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100012E28(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_100087F80() - 8);
  uint64_t v8 = *(void (**)(char *))(v3 + 16);
  uint64_t v9 = *(void *)(v3 + 24);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10000D9C0(a1, a2, a3, v8, v9, v10);
}

uint64_t sub_100012EB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100012EFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_100088410();
  __break(1u);
  return result;
}

uint64_t sub_100013058(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t *sub_100013094(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087EC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100087220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    unint64_t v13 = (int *)type metadata accessor for AFTimelineEntry();
    v10[v13[5]] = v11[v13[5]];
    v10[v13[6]] = v11[v13[6]];
    v10[v13[7]] = v11[v13[7]];
    v10[v13[8]] = v11[v13[8]];
    *(void *)&v10[v13[9]] = *(void *)&v11[v13[9]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100013234(uint64_t a1, uint64_t a2)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for AFTimelineEntry();

  return swift_bridgeObjectRelease();
}

void *sub_10001331C(void *a1, void *a2, uint64_t a3)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for AFTimelineEntry();
  v8[v11[5]] = v9[v11[5]];
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  *(void *)&v8[v11[9]] = *(void *)&v9[v11[9]];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10001346C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for AFTimelineEntry();
  v8[v11[5]] = v9[v11[5]];
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  *(void *)&v8[v11[9]] = *(void *)&v9[v11[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1000135E0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for AFTimelineEntry();
  v9[v12[5]] = v10[v12[5]];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  return a1;
}

char *sub_100013734(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    uint64_t v6 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for AFTimelineEntry();
  v9[v12[5]] = v10[v12[5]];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000138A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000138BC);
}

uint64_t sub_1000138BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for AFTimelineEntry();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000139B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000139CC);
}

uint64_t sub_1000139CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for AFTimelineEntry();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for AFEntryView()
{
  uint64_t result = qword_1000A8D88;
  if (!qword_1000A8D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100013B20()
{
  sub_100013BE8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AFTimelineEntry();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100013BE8()
{
  if (!qword_1000A8838)
  {
    sub_100087EC0();
    unint64_t v0 = sub_100087390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A8838);
    }
  }
}

uint64_t sub_100013C40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100013C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100016EA8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100013C88()
{
  uint64_t v0 = sub_100087280();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for GKFeatureFlags.GameOverlayUI(_:), v0, v2);
  char v5 = sub_100087270();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if ((v5 & 1) != 0
    && (id v6 = [self currentDevice],
        id v7 = [v6 userInterfaceIdiom],
        v6,
        !v7))
  {
    return sub_1000872C0();
  }
  else
  {
    return sub_100087160();
  }
}

uint64_t sub_100013DE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v4 - 8);
  id v6 = (uint64_t *)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100087430();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v12);
  sub_100087310();
  uint64_t v15 = (void *)sub_1000872F0();
  char v16 = sub_100087300();

  unint64_t v17 = 0x5F4E495F4E474953;
  if (v16) {
    unint64_t v17 = 0xD000000000000015;
  }
  unint64_t v29 = v17;
  if (v16) {
    unint64_t v18 = 0x800000010008BCB0;
  }
  else {
    unint64_t v18 = 0xEF4547415353454DLL;
  }
  os_log_type_t v19 = (void *)sub_1000872F0();
  char v20 = sub_100087300();

  BOOL v21 = (v20 & 1) == 0;
  if (v20) {
    unint64_t v22 = 0;
  }
  else {
    unint64_t v22 = 0xD000000000000016;
  }
  if (v21) {
    unint64_t v23 = 0x800000010008BC90;
  }
  else {
    unint64_t v23 = 0;
  }
  *uint64_t v9 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  *id v6 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  *a2 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (int *)type metadata accessor for MessageView();
  sub_100006C4C((uint64_t)v9, (uint64_t)a2 + v24[5], &qword_1000A87C0);
  sub_100006C4C((uint64_t)v6, (uint64_t)a2 + v24[6], &qword_1000A88C0);
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))((char *)a2 + v24[7], v14, v10);
  uint64_t v26 = (unint64_t *)((char *)a2 + v24[8]);
  *uint64_t v26 = v29;
  v26[1] = v18;
  double v27 = (unint64_t *)((char *)a2 + v24[9]);
  *double v27 = v22;
  v27[1] = v23;
  *((unsigned char *)a2 + v24[10]) = 0;
  return result;
}

uint64_t sub_100014100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v95 = a3;
  uint64_t v96 = a2;
  uint64_t v90 = a1;
  uint64_t v84 = type metadata accessor for AFExtraLargeContentView();
  __chkstk_darwin(v84);
  BOOL v83 = (uint64_t *)((char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = type metadata accessor for AFLargeContentView();
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t *)((char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = type metadata accessor for AFMediumContentView();
  __chkstk_darwin(v88);
  uint64_t v87 = (uint64_t *)((char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100087430();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AFSmallContentView();
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = type metadata accessor for AFTimelineEntry();
  __chkstk_darwin(v89);
  __n128 v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v82 - v14;
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v82 - v17;
  __chkstk_darwin(v19);
  uint64_t v91 = (uint64_t)&v82 - v20;
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)&v82 - v22;
  uint64_t v24 = sub_100087EC0();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  double v27 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100017230(&qword_1000A87B0, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v27);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v27, v24);
  if (v28 == enum case for WidgetFamily.systemSmall(_:))
  {
    if (qword_1000A8708 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_100087350();
    sub_10000A5F4(v29, (uint64_t)qword_1000ADA18);
    uint64_t v30 = v96;
    sub_1000177B0(v96, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    BOOL v31 = sub_100087330();
    os_log_type_t v32 = sub_1000881A0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 134217984;
      uint64_t v34 = *(void *)(*(void *)&v23[*(int *)(v89 + 36)] + 16);
      sub_100017750((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
      uint64_t v97 = v34;
      sub_100088240();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "AFSmallContentView: Showing %ld items", v33, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_100017750((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    }

    int64_t v43 = v92;
    uint64_t v42 = v93;
    uint64_t v44 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v90, v94);
    uint64_t v45 = v91;
    sub_1000177B0(v30, v91, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    *uint64_t v10 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))((char *)v10 + *(int *)(v8 + 20), v43, v44);
    sub_100017818(v45, (uint64_t)v10 + *(int *)(v8 + 24), (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    sub_100018130(&qword_1000A8E78, (void (*)(uint64_t))type metadata accessor for AFSmallContentView);
    goto LABEL_34;
  }
  int v35 = v28;
  if (v28 == enum case for WidgetFamily.systemMedium(_:))
  {
    if (qword_1000A8708 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_100087350();
    sub_10000A5F4(v36, (uint64_t)qword_1000ADA18);
    uint64_t v37 = v96;
    sub_1000177B0(v96, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    uint64_t v38 = sub_100087330();
    os_log_type_t v39 = sub_1000881A0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 134217984;
      uint64_t v41 = *(void *)(*(void *)&v18[*(int *)(v89 + 36)] + 16);
      sub_100017750((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
      uint64_t v97 = v41;
      sub_100088240();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "AFMediumContentView: Showing %ld items", v40, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_100017750((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    }

    uint64_t v52 = v92;
    uint64_t v51 = v93;
    uint64_t v53 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v90, v94);
    uint64_t v54 = v91;
    sub_1000177B0(v37, v91, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    uint64_t KeyPath = swift_getKeyPath();
    float v56 = v87;
    *uint64_t v87 = KeyPath;
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = v88;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))((char *)v56 + *(int *)(v88 + 20), v52, v53);
    sub_100017818(v54, (uint64_t)v56 + *(int *)(v57 + 24), (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    uint64_t v58 = (unint64_t *)&unk_1000A8E70;
    int64_t v59 = type metadata accessor for AFMediumContentView;
LABEL_33:
    sub_100018130(v58, (void (*)(uint64_t))v59);
LABEL_34:
    uint64_t result = sub_100087CF0();
    *unint64_t v95 = result;
    return result;
  }
  if (v28 == enum case for WidgetFamily.systemLarge(_:))
  {
    if (qword_1000A8708 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_100087350();
    sub_10000A5F4(v46, (uint64_t)qword_1000ADA18);
    sub_1000177B0(v96, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    uint64_t v47 = sub_100087330();
    os_log_type_t v48 = sub_1000881A0();
    if (os_log_type_enabled(v47, v48))
    {
      int v49 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v49 = 134217984;
      uint64_t v50 = *(void *)(*(void *)&v15[*(int *)(v89 + 36)] + 16);
      sub_100017750((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
      uint64_t v97 = v50;
      sub_100088240();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "AFLargeContentView: Showing %ld items", v49, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_100017750((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    }

    uint64_t v67 = v92;
    uint64_t v66 = v93;
    uint64_t v68 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v90, v94);
    uint64_t v69 = v91;
    sub_1000177B0(v96, v91, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    uint64_t v70 = swift_getKeyPath();
    uint64_t v71 = v85;
    *uint64_t v85 = v70;
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    uint64_t v72 = v86;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))((char *)v71 + *(int *)(v86 + 20), v67, v68);
    sub_100017818(v69, (uint64_t)v71 + *(int *)(v72 + 24), (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    uint64_t v58 = (unint64_t *)&unk_1000A8E68;
    int64_t v59 = type metadata accessor for AFLargeContentView;
    goto LABEL_33;
  }
  uint64_t v60 = v96;
  if (v28 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    if (qword_1000A8708 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_100087350();
    sub_10000A5F4(v61, (uint64_t)qword_1000ADA18);
    sub_1000177B0(v60, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    int64_t v62 = sub_100087330();
    os_log_type_t v63 = sub_1000881A0();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 134217984;
      uint64_t v65 = *(void *)(*(void *)&v12[*(int *)(v89 + 36)] + 16);
      sub_100017750((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
      uint64_t v97 = v65;
      sub_100088240();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "AFExtraLargeContentView: Showing %ld items", v64, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_100017750((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    }

    os_log_type_t v76 = v92;
    uint64_t v75 = v93;
    uint64_t v77 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v90, v94);
    uint64_t v78 = v91;
    sub_1000177B0(v60, v91, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    uint64_t v79 = swift_getKeyPath();
    uint64_t v80 = v83;
    *BOOL v83 = v79;
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    uint64_t v81 = v84;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))((char *)v80 + *(int *)(v84 + 20), v76, v77);
    sub_100017818(v78, (uint64_t)v80 + *(int *)(v81 + 24), (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    uint64_t v58 = (unint64_t *)&unk_1000A8E60;
    int64_t v59 = type metadata accessor for AFExtraLargeContentView;
    goto LABEL_33;
  }
  int v73 = enum case for WidgetFamily.accessoryCircular(_:);
  uint64_t result = sub_100087CF0();
  *unint64_t v95 = result;
  if (v35 != v73
    && v35 != enum case for WidgetFamily.accessoryRectangular(_:)
    && v35 != enum case for WidgetFamily.accessoryInline(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  }
  return result;
}

uint64_t sub_100014EB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v110 = a1;
  os_log_type_t v108 = a2;
  uint64_t v95 = sub_100004FB4(&qword_1000A8E18);
  __chkstk_darwin(v95);
  uint64_t v94 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for AFEmptyStateView();
  __chkstk_darwin(v92);
  uint64_t v86 = (uint64_t *)((char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v87 = (uint64_t)&v82 - v5;
  uint64_t v93 = sub_100004FB4(&qword_1000A8E20);
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v89 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100004FB4(&qword_1000A8E28);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AFEntryView();
  __chkstk_darwin(v8);
  uint64_t v105 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100087EC0();
  uint64_t v98 = *(void *)(v10 - 8);
  uint64_t v99 = v10;
  __chkstk_darwin(v10);
  uint64_t v97 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v12 - 8);
  char v104 = (uint64_t *)((char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v14 - 8);
  uint64_t v96 = (uint64_t *)((char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100087430();
  uint64_t v102 = *(void *)(v16 - 8);
  uint64_t v103 = v16;
  __chkstk_darwin(v16);
  uint64_t v101 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for MessageView();
  __chkstk_darwin(v109);
  uint64_t v19 = (uint64_t *)((char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v107 = sub_100004FB4(&qword_1000A8E30);
  __chkstk_darwin(v107);
  unint64_t v106 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v21 - 8);
  unint64_t v23 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000874A0();
  uint64_t v100 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v27 = (int *)type metadata accessor for AFTimelineEntry();
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100004FB4(&qword_1000A8E38);
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v82 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100004FB4(&qword_1000A8E40);
  __n128 v38 = __chkstk_darwin(v34);
  uint64_t v39 = v36 + *(int *)(v8 + 20);
  if (*(unsigned char *)(v39 + v27[5]) != 1)
  {
    sub_100013DE8(v110, v19);
    sub_100087160();
    uint64_t v47 = sub_100018130(&qword_1000A8E48, (void (*)(uint64_t))type metadata accessor for MessageView);
    os_log_type_t v48 = (int *)v109;
    sub_100087A90();
    sub_100006AE0((uint64_t)v23, &qword_1000A8BC8);
    sub_100017750((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MessageView);
    uint64_t v112 = v48;
    id v113 = (void *)v47;
    swift_getOpaqueTypeConformance2();
    goto LABEL_5;
  }
  uint64_t v82 = v33;
  uint64_t v83 = v31;
  uint64_t v84 = (int *)v30;
  uint64_t v40 = v104;
  uint64_t v41 = v105;
  uint64_t v42 = (int *)v109;
  uint64_t v85 = v23;
  if (*(unsigned char *)(v39 + v27[6]) == 1)
  {
    uint64_t v109 = v35;
    sub_100087210();
    v29[v27[5]] = 1;
    v29[v27[6]] = 0;
    v29[v27[7]] = 1;
    v29[v27[8]] = 0;
    *(void *)&v29[v27[9]] = &_swiftEmptyArrayStorage;
    sub_100014100(v110, (uint64_t)v29, (uint64_t *)&v112);
    sub_100017750((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for AFTimelineEntry);
    unint64_t v111 = v112;
    sub_100087490();
    int64_t v43 = v82;
    sub_100087B60();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v26, v24);
    swift_release();
    uint64_t v44 = (uint64_t)v85;
    sub_100013C88();
    uint64_t v112 = (int *)&type metadata for AnyView;
    id v113 = &protocol witness table for AnyView;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v46 = v84;
    sub_100087A90();
    sub_100006AE0(v44, &qword_1000A8BC8);
    (*(void (**)(char *, int *))(v83 + 8))(v43, v46);
    uint64_t v112 = v46;
    id v113 = (void *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
LABEL_5:
    uint64_t result = sub_100087CF0();
    uint64_t v50 = result;
    uint64_t v51 = v108;
    goto LABEL_6;
  }
  if ((*(unsigned char *)(v39 + v27[8]) & 1) == 0)
  {
    uint64_t v58 = v102;
    int64_t v59 = v101;
    uint64_t v60 = v103;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v102 + 16))(v101, v110, v103, v38);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v62 = (uint64_t)v96;
    uint64_t *v96 = KeyPath;
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    *uint64_t v40 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A88D0);
    swift_storeEnumTagMultiPayload();
    uint64_t v63 = (uint64_t)v19;
    uint64_t *v19 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87A8);
    swift_storeEnumTagMultiPayload();
    uint64_t v64 = v42;
    sub_100006C4C(v62, v63 + v42[5], &qword_1000A87C0);
    sub_100006C4C((uint64_t)v40, v63 + v42[6], &qword_1000A88C0);
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v63 + v42[7], v59, v60);
    uint64_t v65 = (void *)(v63 + v42[8]);
    void *v65 = 0xD000000000000019;
    v65[1] = 0x800000010008B9F0;
    uint64_t v66 = (void *)(v63 + v42[9]);
    *uint64_t v66 = 0;
    v66[1] = 0;
    *(unsigned char *)(v63 + v42[10]) = 0;
    uint64_t v67 = v97;
    sub_100017230(&qword_1000A87B0, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v97);
    sub_100018130(&qword_1000A8E50, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v68 = v99;
    sub_1000884E0();
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v67, v68);
    uint64_t v69 = (uint64_t)v85;
    sub_1000872D0();
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_100018130(&qword_1000A8E48, (void (*)(uint64_t))type metadata accessor for MessageView);
    sub_100087A90();
    sub_100006AE0(v69, &qword_1000A8BC8);
    sub_100017750(v63, (uint64_t (*)(void))type metadata accessor for MessageView);
    uint64_t v112 = v64;
    id v113 = (void *)v70;
    swift_getOpaqueTypeConformance2();
    goto LABEL_5;
  }
  uint64_t v52 = v37;
  uint64_t v53 = *(void *)(*(void *)(v39 + v27[9]) + 16);
  sub_1000177B0(v36, v105, (uint64_t (*)(void))type metadata accessor for AFEntryView);
  if (v53)
  {
    sub_100017750(v41, (uint64_t (*)(void))type metadata accessor for AFEntryView);
    uint64_t v51 = v108;
    uint64_t v54 = (uint64_t)v85;
    uint64_t v56 = v98;
    uint64_t v55 = v99;
    uint64_t v57 = v97;
  }
  else
  {
    uint64_t v71 = *(unsigned __int8 *)(v41 + *(int *)(v52 + 20) + v27[7]);
    sub_100017750(v41, (uint64_t (*)(void))type metadata accessor for AFEntryView);
    uint64_t v51 = v108;
    uint64_t v54 = (uint64_t)v85;
    uint64_t v56 = v98;
    uint64_t v55 = v99;
    uint64_t v57 = v97;
    if ((v71 & 1) == 0)
    {
      uint64_t v72 = swift_getKeyPath();
      uint64_t v73 = (uint64_t)v86;
      *uint64_t v86 = v72;
      sub_100004FB4(&qword_1000A88D0);
      swift_storeEnumTagMultiPayload();
      unint64_t v74 = (int *)v92;
      uint64_t v75 = (uint64_t *)(v73 + *(int *)(v92 + 20));
      *uint64_t v75 = swift_getKeyPath();
      sub_100004FB4(&qword_1000A87B0);
      swift_storeEnumTagMultiPayload();
      os_log_type_t v76 = (uint64_t *)(v73 + v74[6]);
      *os_log_type_t v76 = swift_getKeyPath();
      sub_100004FB4(&qword_1000A87A8);
      swift_storeEnumTagMultiPayload();
      uint64_t v77 = v87;
      sub_100017818(v73, v87, (uint64_t (*)(void))type metadata accessor for AFEmptyStateView);
      sub_100017230(&qword_1000A87B0, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v57);
      sub_100018130(&qword_1000A8E50, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      sub_1000884E0();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
      sub_1000872D0();
      swift_bridgeObjectRelease();
      uint64_t v78 = sub_100018130(&qword_1000A8E58, (void (*)(uint64_t))type metadata accessor for AFEmptyStateView);
      uint64_t v79 = v89;
      sub_100087A90();
      sub_100006AE0(v54, &qword_1000A8BC8);
      sub_100017750(v77, (uint64_t (*)(void))type metadata accessor for AFEmptyStateView);
      uint64_t v112 = v74;
      id v113 = (void *)v78;
      uint64_t v80 = swift_getOpaqueTypeConformance2();
      uint64_t v81 = (int *)v93;
      sub_100087AD0();
      (*(void (**)(char *, int *))(v91 + 8))(v79, v81);
      uint64_t v112 = v81;
      id v113 = (void *)v80;
      swift_getOpaqueTypeConformance2();
      uint64_t result = sub_100087CF0();
      uint64_t v50 = result;
      goto LABEL_6;
    }
  }
  sub_100014100(v110, v39, (uint64_t *)&v112);
  sub_100017230(&qword_1000A87B0, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v57);
  sub_100018130(&qword_1000A8E50, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000884E0();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
  sub_1000872D0();
  swift_bridgeObjectRelease();
  sub_100087A90();
  sub_100006AE0(v54, &qword_1000A8BC8);
  uint64_t v112 = (int *)&type metadata for AnyView;
  id v113 = &protocol witness table for AnyView;
  swift_getOpaqueTypeConformance2();
  uint64_t v50 = sub_100087CF0();
  uint64_t result = swift_release();
LABEL_6:
  *uint64_t v51 = v50;
  return result;
}

uint64_t sub_100015FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v33 = a3;
  uint64_t v32 = sub_100004FB4(&qword_1000A8DC0);
  __chkstk_darwin(v32);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000874A0();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FB4(&qword_1000A8DC8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000A8DD0);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100004FB4(&qword_1000A8DD8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v28 - v20;
  uint64_t *v15 = sub_100087D90();
  v15[1] = v22;
  uint64_t v23 = sub_100004FB4(&qword_1000A8DE0);
  sub_100016428(a2, v31, (uint64_t)v15 + *(int *)(v23 + 44));
  uint64_t v24 = a2 + *(int *)(type metadata accessor for AFEntryView() + 20);
  if (*(unsigned char *)(v24 + *(int *)(type metadata accessor for AFTimelineEntry() + 28)) == 1)
  {
    sub_100087490();
    uint64_t v25 = sub_100006A8C(&qword_1000A8DE8, &qword_1000A8DD0);
    sub_100087B60();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v12, v9);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v13;
    uint64_t v35 = v25;
    swift_getOpaqueTypeConformance2();
    sub_1000877E0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    sub_100006B3C((uint64_t)v15, (uint64_t)v5, &qword_1000A8DD0);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = sub_100006A8C(&qword_1000A8DE8, &qword_1000A8DD0);
    uint64_t v34 = v13;
    uint64_t v35 = v26;
    swift_getOpaqueTypeConformance2();
    sub_1000877E0();
  }
  sub_100006C4C((uint64_t)v18, (uint64_t)v21, &qword_1000A8DD8);
  sub_100006AE0((uint64_t)v15, &qword_1000A8DD0);
  return sub_100006C4C((uint64_t)v21, v33, &qword_1000A8DD8);
}

uint64_t sub_100016428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v54 = a3;
  uint64_t v58 = sub_100004FB4(&qword_1000A8DF0);
  __chkstk_darwin(v58);
  uint64_t v53 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000874A0();
  uint64_t v50 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  int v49 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for AFBackgroundView(0);
  __chkstk_darwin(v52);
  uint64_t v7 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v55 = (uint64_t)&v46 - v9;
  uint64_t v57 = sub_100004FB4(&qword_1000A8DF8);
  uint64_t v51 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = type metadata accessor for AFEntryView();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004FB4(&qword_1000A8E00);
  __chkstk_darwin(v18 - 8);
  uint64_t v56 = (uint64_t)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v46 - v21;
  uint64_t v23 = a1 + *(int *)(v15 + 20);
  uint64_t v24 = type metadata accessor for AFTimelineEntry();
  LODWORD(v23) = *(unsigned __int8 *)(v23 + *(int *)(v24 + 20));
  sub_1000177B0(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AFEntryView);
  if (v23 != 1)
  {
    sub_100017750((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AFEntryView);
    uint64_t v27 = (uint64_t)v53;
    uint64_t v26 = v54;
    uint64_t v28 = v59;
    uint64_t v29 = v52;
    goto LABEL_5;
  }
  uint64_t v46 = v11;
  uint64_t v47 = v14;
  char v25 = v17[*(int *)(v15 + 20) + *(int *)(v24 + 24)];
  sub_100017750((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AFEntryView);
  uint64_t v27 = (uint64_t)v53;
  uint64_t v26 = v54;
  uint64_t v28 = v59;
  uint64_t v29 = v52;
  if ((v25 & 1) == 0)
  {
LABEL_5:
    *uint64_t v7 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87A8);
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = (char *)v7 + *(int *)(v29 + 20);
    *(void *)uint64_t v39 = swift_getKeyPath();
    v39[8] = 0;
    uint64_t v40 = (uint64_t)v7;
    uint64_t v41 = v55;
    sub_100017818(v40, v55, type metadata accessor for AFBackgroundView);
    sub_1000177B0(v41, v27, type metadata accessor for AFBackgroundView);
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = sub_100018130(&qword_1000A8E08, (void (*)(uint64_t))type metadata accessor for AFBackgroundView);
    uint64_t v60 = v29;
    uint64_t v61 = v42;
    swift_getOpaqueTypeConformance2();
    sub_1000877E0();
    sub_100017750(v41, type metadata accessor for AFBackgroundView);
    goto LABEL_6;
  }
  *uint64_t v7 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (char *)v7 + *(int *)(v29 + 20);
  *(void *)uint64_t v30 = swift_getKeyPath();
  v30[8] = 0;
  uint64_t v31 = v55;
  sub_100017818((uint64_t)v7, v55, type metadata accessor for AFBackgroundView);
  uint64_t v32 = v49;
  sub_100087490();
  uint64_t v33 = sub_100018130(&qword_1000A8E08, (void (*)(uint64_t))type metadata accessor for AFBackgroundView);
  uint64_t v34 = v46;
  sub_100087B60();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v48);
  sub_100017750(v31, type metadata accessor for AFBackgroundView);
  uint64_t v35 = v51;
  uint64_t v36 = v47;
  uint64_t v37 = v34;
  uint64_t v28 = v59;
  uint64_t v38 = v57;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v47, v37, v57);
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v27, v36, v38);
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = v29;
  uint64_t v61 = v33;
  swift_getOpaqueTypeConformance2();
  sub_1000877E0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v38);
LABEL_6:
  sub_100014EB0(v28, &v60);
  uint64_t v43 = v60;
  uint64_t v44 = v56;
  sub_100006B3C((uint64_t)v22, v56, &qword_1000A8E00);
  sub_100006B3C(v44, v26, &qword_1000A8E00);
  *(void *)(v26 + *(int *)(sub_100004FB4(&qword_1000A8E10) + 48)) = v43;
  swift_retain();
  sub_100006AE0((uint64_t)v22, &qword_1000A8E00);
  swift_release();
  return sub_100006AE0(v44, &qword_1000A8E00);
}

uint64_t sub_100016B38@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_1000177B0(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AFEntryView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_100017818((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for AFEntryView);
  *a2 = sub_100016DB4;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_100016C4C()
{
  uint64_t v1 = type metadata accessor for AFEntryView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v7 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for AFTimelineEntry();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100016DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AFEntryView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100015FDC(a1, v6, a2);
}

uint64_t sub_100016E34()
{
  return sub_100087630();
}

uint64_t sub_100016E58()
{
  return sub_100087630();
}

uint64_t sub_100016E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100016EA8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100016EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100016F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100016EA8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100016FB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100017230(&qword_1000A87B0, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_100016FF4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100087670();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1000881C0();
  uint64_t v9 = sub_100087870();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100017980(1819242306, 0xE400000000000000, &v14);
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100087660();
  swift_getAtKeyPath();
  sub_100005720(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_1000171F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100017230(&qword_1000A87A8, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x800000010008BCD0, a1);
}

uint64_t sub_100017230@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_100087670();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004FB4(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006B3C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_1000881C0();
    uint64_t v21 = sub_100087870();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_100017980(v27, v25, &v29);
      sub_100088240();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100087660();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1000174E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100017230(&qword_1000A88D0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_100017524@<X0>(uint64_t a1@<X8>)
{
  return sub_100017230(&qword_1000A88D8, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x800000010008BD10, a1);
}

uint64_t sub_10001755C@<X0>(uint64_t a1@<X8>)
{
  return sub_100017230(&qword_1000A8EA0, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x800000010008BCF0, a1);
}

uint64_t sub_100017594()
{
  return sub_100087620();
}

uint64_t sub_1000175B8()
{
  sub_100087610();
  sub_100018130(&qword_1000A8E88, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  sub_100087680();
  return v1;
}

uint64_t sub_100017634@<X0>(unsigned char *a1@<X8>)
{
  sub_100087610();
  sub_100018130(&qword_1000A8E88, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  uint64_t result = sub_100087680();
  *a1 = v3;
  return result;
}

uint64_t sub_1000176C8()
{
  return sub_100087620();
}

uint64_t sub_1000176EC()
{
  return sub_100087510();
}

uint64_t sub_100017710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100016EA8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100017750(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000177B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100017818(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100017880(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_100017890(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unsigned char **sub_1000178CC(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void *sub_1000178DC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_100088410();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_100017980(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100017A54(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000180D4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000180D4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100018084((uint64_t)v12);
  return v7;
}

uint64_t sub_100017A54(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_100088250();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100017C10(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_100088360();
  if (!v8)
  {
    sub_1000883B0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_100088410();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100017C10(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100017CA8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100017F04(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100017F04(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100017CA8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100017E20(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_100088320();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1000883B0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_100088050();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_100088410();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1000883B0();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100017E20(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100004FB4(&qword_1000A8E80);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100017E88(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1000880A0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_100088070();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_100017F04(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004FB4(&qword_1000A8E80);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_100088410();
  __break(1u);
  return result;
}

uint64_t sub_100018054@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_100018084(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000180D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100018130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100018178()
{
  return sub_100006A8C(&qword_1000A8E90, &qword_1000A8E98);
}

uint64_t *sub_1000181B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087EC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    size_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100087430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100087220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = (int *)type metadata accessor for AFTimelineEntry();
    v14[v17[5]] = v15[v17[5]];
    v14[v17[6]] = v15[v17[6]];
    v14[v17[7]] = v15[v17[7]];
    v14[v17[8]] = v15[v17[8]];
    *(void *)&v14[v17[9]] = *(void *)&v15[v17[9]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000183A4(uint64_t a1, uint64_t a2)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for AFTimelineEntry();

  return swift_bridgeObjectRelease();
}

void *sub_1000184D4(void *a1, void *a2, uint64_t a3)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for AFTimelineEntry();
  v12[v15[5]] = v13[v15[5]];
  v12[v15[6]] = v13[v15[6]];
  v12[v15[7]] = v13[v15[7]];
  v12[v15[8]] = v13[v15[8]];
  *(void *)&v12[v15[9]] = *(void *)&v13[v15[9]];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100018674(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for AFTimelineEntry();
  v12[v15[5]] = v13[v15[5]];
  v12[v15[6]] = v13[v15[6]];
  v12[v15[7]] = v13[v15[7]];
  v12[v15[8]] = v13[v15[8]];
  *(void *)&v12[v15[9]] = *(void *)&v13[v15[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100018838(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for AFTimelineEntry();
  v13[v16[5]] = v14[v16[5]];
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  *(void *)&v13[v16[9]] = *(void *)&v14[v16[9]];
  return a1;
}

char *sub_1000189DC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    uint64_t v6 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for AFTimelineEntry();
  v13[v16[5]] = v14[v16[5]];
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  *(void *)&v13[v16[9]] = *(void *)&v14[v16[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100018BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100018BB4);
}

uint64_t sub_100018BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100087430();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for AFTimelineEntry();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_100018D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100018D18);
}

uint64_t sub_100018D18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100087430();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for AFTimelineEntry();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for AFLargeContentView()
{
  uint64_t result = qword_1000A8F00;
  if (!qword_1000A8F00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100018EC0()
{
  sub_100013BE8();
  if (v0 <= 0x3F)
  {
    sub_100087430();
    if (v1 <= 0x3F)
    {
      type metadata accessor for AFTimelineEntry();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100018FC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100018FE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = sub_100004FB4(&qword_1000A8F40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004FB4(&qword_1000A8F48);
  __chkstk_darwin(v45);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100004FB4(&qword_1000A8F50);
  __chkstk_darwin(v46);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087EC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AFLargeContentView();
  uint64_t v14 = v1 + *(int *)(v13 + 20);
  sub_100016FB8((uint64_t)v12);
  double v15 = sub_10000AC94(v14, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_100087410();
  uint64_t v17 = v1 + *(int *)(v13 + 24);
  double v18 = (v16 + -28.0 - (v15 + v15))
      / (double)*(uint64_t *)(*(void *)(v17 + *(int *)(type metadata accessor for AFTimelineEntry() + 36)) + 16);
  *(void *)uint64_t v4 = sub_100087730();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v19 = sub_100004FB4(&qword_1000A8F58);
  sub_1000193E4(v1, (uint64_t)&v4[*(int *)(v19 + 44)], v15, v18);
  LOBYTE(v12) = sub_1000878B0();
  unsigned __int8 v20 = sub_1000878D0();
  unsigned __int8 v21 = sub_1000878A0();
  char v22 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v12) {
    char v22 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v20) {
    char v22 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v21) {
    char v22 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_100006B3C((uint64_t)v4, (uint64_t)v6, &qword_1000A8F40);
  uint64_t v31 = &v6[*(int *)(v45 + 36)];
  *uint64_t v31 = v22;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_100006AE0((uint64_t)v4, &qword_1000A8F40);
  unsigned __int8 v32 = sub_100087890();
  char v33 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v32) {
    char v33 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_100006B3C((uint64_t)v6, (uint64_t)v8, &qword_1000A8F48);
  uint64_t v42 = &v8[*(int *)(v46 + 36)];
  *uint64_t v42 = v33;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  sub_100006AE0((uint64_t)v6, &qword_1000A8F48);
  return sub_10001AC44((uint64_t)v8, v47);
}

uint64_t sub_1000193E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v94 = a2;
  uint64_t v102 = sub_100004FB4(&qword_1000A8F60);
  uint64_t v97 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v88 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v87 = (char *)&v83 - v9;
  uint64_t v107 = sub_100087EC0();
  uint64_t v10 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v90 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v100 = (uint64_t)&v83 - v13;
  __chkstk_darwin(v14);
  uint64_t v101 = (char *)&v83 - v15;
  __chkstk_darwin(v16);
  uint64_t v99 = (uint64_t)&v83 - v17;
  uint64_t v18 = sub_100004FB4(&qword_1000A8F68);
  __chkstk_darwin(v18 - 8);
  uint64_t v96 = (uint64_t)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v95 = (char *)&v83 - v21;
  uint64_t v22 = type metadata accessor for AFLargeContentView();
  uint64_t v23 = v22 - 8;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  __chkstk_darwin(v22);
  uint64_t v92 = sub_100004FB4(&qword_1000A8F70);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v27 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = (void *)sub_100004FB4(&qword_1000A8F78);
  uint64_t v28 = *(v98 - 1);
  __chkstk_darwin(v98);
  uint64_t v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100004FB4(&qword_1000A8F80);
  __chkstk_darwin(v31 - 8);
  uint64_t v93 = (uint64_t)&v83 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v83 - v34;
  uint64_t v36 = a1 + *(int *)(v23 + 32);
  uint64_t v103 = *(int *)(type metadata accessor for AFTimelineEntry() + 36);
  uint64_t v104 = v36;
  uint64_t v37 = *(void *)(v36 + v103);
  uint64_t v38 = *(void *)(v37 + 16);
  uint64_t v105 = a1;
  unint64_t v106 = v35;
  uint64_t v86 = (uint64_t)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = v25;
  uint64_t v85 = v24;
  if (v38)
  {
    uint64_t v110 = v37;
    sub_10001ACAC(a1, (uint64_t)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v39 = *(unsigned __int8 *)(v24 + 80);
    uint64_t v40 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v41 = (v39 + 16) & ~v39;
    unint64_t v42 = (v25 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v84 = v10;
    uint64_t v43 = swift_allocObject();
    sub_10001AD14((uint64_t)v40, v43 + v41);
    *(double *)(v43 + v42) = a3;
    *(double *)(v43 + ((v42 + 15) & 0xFFFFFFFFFFFFFFF8)) = a4;
    swift_bridgeObjectRetain();
    sub_100004FB4(&qword_1000A8FC0);
    sub_100004FB4(&qword_1000A8FC8);
    sub_100006A8C(&qword_1000A8FD0, &qword_1000A8FC0);
    sub_10001B178();
    sub_10001B330();
    uint64_t v44 = (uint64_t)v106;
    uint64_t v10 = v84;
    sub_100087D20();
    sub_10001B384();
    uint64_t v45 = v92;
    sub_100087AD0();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v27, v45);
    uint64_t v46 = v98;
    (*(void (**)(uint64_t, char *, void *))(v28 + 32))(v44, v30, v98);
    (*(void (**)(uint64_t, void, uint64_t, void *))(v28 + 56))(v44, 0, 1, v46);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v28 + 56))(v35, 1, 1, v98);
  }
  uint64_t v47 = *(void *)(*(void *)(v104 + v103) + 16);
  uint64_t v48 = v99;
  sub_100016FB8(v99);
  int v49 = v101;
  uint64_t v50 = v107;
  uint64_t v98 = *(void **)(v10 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v98)(v101, v48, v107);
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v52 = v51(v49, v50);
  int v53 = enum case for WidgetFamily.systemSmall(_:);
  if (v52 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v54 = 1;
    goto LABEL_12;
  }
  if (v52 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v54 = 2;
    goto LABEL_12;
  }
  if (v52 == enum case for WidgetFamily.systemLarge(_:)) {
    goto LABEL_9;
  }
  if (v52 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v54 = 8;
  }
  else
  {
    uint64_t v54 = 1;
    if (v52 != enum case for WidgetFamily.accessoryCircular(_:)
      && v52 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v52 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v101, v107);
LABEL_9:
      uint64_t v54 = 4;
    }
  }
LABEL_12:
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v56 = v107;
  v55(v48, v107);
  if (v47 >= v54)
  {
    uint64_t v63 = 1;
    uint64_t v64 = v97;
    uint64_t v65 = (uint64_t)v95;
LABEL_28:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v65, v63, 1, v102);
    uint64_t v78 = (uint64_t)v106;
    uint64_t v79 = v93;
    sub_100006B3C((uint64_t)v106, v93, &qword_1000A8F80);
    uint64_t v80 = v96;
    sub_100006B3C(v65, v96, &qword_1000A8F68);
    uint64_t v81 = v94;
    sub_100006B3C(v79, v94, &qword_1000A8F80);
    uint64_t v82 = sub_100004FB4(&qword_1000A8F88);
    sub_100006B3C(v80, v81 + *(int *)(v82 + 48), &qword_1000A8F68);
    sub_100006AE0(v65, &qword_1000A8F68);
    sub_100006AE0(v78, &qword_1000A8F80);
    sub_100006AE0(v80, &qword_1000A8F68);
    return sub_100006AE0(v79, &qword_1000A8F80);
  }
  uint64_t v57 = *(void *)(*(void *)(v104 + v103) + 16);
  uint64_t v58 = v100;
  sub_100016FB8(v100);
  uint64_t v59 = v90;
  ((void (*)(char *, uint64_t, uint64_t))v98)(v90, v58, v56);
  int v60 = v51(v59, v56);
  if (v60 == v53)
  {
    uint64_t v61 = 1;
    uint64_t v62 = v89;
    goto LABEL_26;
  }
  uint64_t v62 = v89;
  if (v60 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v61 = 2;
    goto LABEL_26;
  }
  if (v60 == enum case for WidgetFamily.systemLarge(_:)) {
    goto LABEL_19;
  }
  if (v60 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v61 = 8;
  }
  else
  {
    uint64_t v61 = 1;
    if (v60 != enum case for WidgetFamily.accessoryCircular(_:)
      && v60 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v60 != enum case for WidgetFamily.accessoryInline(_:))
    {
      v55((uint64_t)v90, v56);
LABEL_19:
      uint64_t v61 = 4;
    }
  }
LABEL_26:
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v55)(v100, v56);
  if (v61 >= v57)
  {
    uint64_t v110 = v57;
    uint64_t v111 = v61;
    swift_getKeyPath();
    uint64_t v67 = v86;
    sub_10001ACAC(v105, v86);
    unint64_t v68 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    unint64_t v69 = (v62 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v70 = swift_allocObject();
    sub_10001AD14(v67, v70 + v68);
    *(double *)(v70 + v69) = a3;
    *(double *)(v70 + ((v69 + 15) & 0xFFFFFFFFFFFFFFF8)) = a4;
    sub_100004FB4(&qword_1000A8F90);
    sub_100004FB4(&qword_1000A8F98);
    sub_10001AE30();
    uint64_t v71 = sub_100004FF8(&qword_1000A8FB0);
    uint64_t v72 = sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
    uint64_t v108 = v71;
    uint64_t v109 = v72;
    swift_getOpaqueTypeConformance2();
    uint64_t v73 = v88;
    sub_100087D10();
    uint64_t v64 = v97;
    unint64_t v74 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
    uint64_t v75 = v87;
    os_log_type_t v76 = v73;
    uint64_t v77 = v102;
    v74(v87, v76, v102);
    uint64_t v65 = (uint64_t)v95;
    v74(v95, v75, v77);
    uint64_t v63 = 0;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_100019F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v67 = a3;
  uint64_t v57 = sub_1000874A0();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v54 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100004FB4(&qword_1000A9000);
  uint64_t v5 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  int v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100004FB4(&qword_1000A8FB0);
  __chkstk_darwin(v65);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100004FB4(&qword_1000A8F98);
  uint64_t v58 = *(char **)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v51 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)&v49 - v11;
  uint64_t v63 = sub_100004FB4(&qword_1000A9008);
  __chkstk_darwin(v63);
  uint64_t v64 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100087EC0();
  uint64_t v13 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100004FB4(&qword_1000A9010);
  uint64_t v19 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100004FB4(&qword_1000A8FE0);
  __chkstk_darwin(v61);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FB4(&qword_1000A9018);
  __chkstk_darwin(v62);
  uint64_t v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_100016FB8((uint64_t)v15);
    uint64_t v29 = v52;
    sub_1000872B0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v59);
    type metadata accessor for AFLargeContentView();
    sub_100087410();
    sub_100087D90();
    sub_100087400();
    uint64_t v30 = v53;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v29, v53);
    uint64_t v31 = v65;
    uint64_t v32 = &v8[*(int *)(v65 + 36)];
    long long v33 = v71;
    *(_OWORD *)uint64_t v32 = v70;
    *((_OWORD *)v32 + 1) = v33;
    *((_OWORD *)v32 + 2) = v72;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v30);
    uint64_t v34 = v54;
    sub_100087490();
    uint64_t v35 = sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
    uint64_t v36 = v51;
    sub_100087B60();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
    sub_100006AE0((uint64_t)v8, &qword_1000A8FB0);
    uint64_t v37 = (void (**)(char *, char *, uint64_t))v58;
    uint64_t v38 = v55;
    uint64_t v39 = v66;
    (*((void (**)(char *, char *, uint64_t))v58 + 4))(v55, v36, v66);
    v37[2](v64, v38, v39);
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = sub_10001B2AC(&qword_1000A8FE8, &qword_1000A8FE0);
    uint64_t v68 = v61;
    uint64_t v69 = v40;
    swift_getOpaqueTypeConformance2();
    uint64_t v68 = v31;
    uint64_t v69 = v35;
  }
  else
  {
    uint64_t v57 = v28;
    uint64_t v58 = (char *)&v49 - v27;
    sub_100016FB8((uint64_t)v15);
    sub_1000872A0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v59);
    sub_100006AE0((uint64_t)v18, &qword_1000A8BC8);
    type metadata accessor for AFLargeContentView();
    sub_100087410();
    sub_100087D90();
    sub_100087400();
    uint64_t v41 = v50;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v21, v50);
    uint64_t v42 = v61;
    uint64_t v43 = &v23[*(int *)(v61 + 36)];
    long long v44 = v71;
    *(_OWORD *)uint64_t v43 = v70;
    *((_OWORD *)v43 + 1) = v44;
    *((_OWORD *)v43 + 2) = v72;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v41);
    uint64_t v45 = sub_10001B2AC(&qword_1000A8FE8, &qword_1000A8FE0);
    sub_100087AD0();
    sub_100006AE0((uint64_t)v23, &qword_1000A8FE0);
    uint64_t v46 = v57;
    uint64_t v38 = v58;
    uint64_t v39 = v62;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v58, v25, v62);
    uint64_t v37 = (void (**)(char *, char *, uint64_t))v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v64, v38, v39);
    swift_storeEnumTagMultiPayload();
    uint64_t v68 = v42;
    uint64_t v69 = v45;
    swift_getOpaqueTypeConformance2();
    uint64_t v47 = sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
    uint64_t v68 = v65;
    uint64_t v69 = v47;
  }
  swift_getOpaqueTypeConformance2();
  sub_1000877E0();
  return ((uint64_t (*)(char *, uint64_t))v37[1])(v38, v39);
}

uint64_t sub_10001A8F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v20 = sub_1000874A0();
  uint64_t v18 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100087EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000A9000);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FB4(&qword_1000A8FB0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016FB8((uint64_t)v6);
  sub_1000872B0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for AFLargeContentView();
  sub_100087410();
  sub_100087D90();
  sub_100087400();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  uint64_t v14 = &v13[*(int *)(v11 + 36)];
  long long v15 = v22;
  *(_OWORD *)uint64_t v14 = v21;
  *((_OWORD *)v14 + 1) = v15;
  *((_OWORD *)v14 + 2) = v23;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100087490();
  sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
  sub_100087B60();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v20);
  return sub_100006AE0((uint64_t)v13, &qword_1000A8FB0);
}

uint64_t sub_10001AC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A8F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001ACAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFLargeContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001AD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFLargeContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001AD78@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AFLargeContentView();

  return sub_10001A8F0(a1);
}

unint64_t sub_10001AE30()
{
  unint64_t result = qword_1000A8FA0;
  if (!qword_1000A8FA0)
  {
    sub_100004FF8(&qword_1000A8F90);
    sub_10001AEAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8FA0);
  }
  return result;
}

unint64_t sub_10001AEAC()
{
  unint64_t result = qword_1000A8FA8;
  if (!qword_1000A8FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8FA8);
  }
  return result;
}

uint64_t sub_10001AF04()
{
  uint64_t v1 = type metadata accessor for AFLargeContentView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  unint64_t v7 = ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v8 = v5 + *(int *)(v1 + 20);
  uint64_t v9 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v5 + *(int *)(v1 + 24);
  uint64_t v11 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  type metadata accessor for AFTimelineEntry();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v2 | 7);
}

uint64_t sub_10001B0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AFLargeContentView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100019F2C(a1, v6, a2);
}

unint64_t sub_10001B178()
{
  unint64_t result = qword_1000A8FD8;
  if (!qword_1000A8FD8)
  {
    sub_100004FF8(&qword_1000A8FC8);
    sub_100004FF8(&qword_1000A8FE0);
    sub_10001B2AC(&qword_1000A8FE8, &qword_1000A8FE0);
    swift_getOpaqueTypeConformance2();
    sub_100004FF8(&qword_1000A8FB0);
    sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8FD8);
  }
  return result;
}

uint64_t sub_10001B2AC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    swift_getOpaqueTypeConformance2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001B330()
{
  unint64_t result = qword_1000A8FF0;
  if (!qword_1000A8FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8FF0);
  }
  return result;
}

unint64_t sub_10001B384()
{
  unint64_t result = qword_1000A8FF8;
  if (!qword_1000A8FF8)
  {
    sub_100004FF8(&qword_1000A8F70);
    sub_10001B178();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8FF8);
  }
  return result;
}

unint64_t sub_10001B3FC()
{
  unint64_t result = qword_1000A9020;
  if (!qword_1000A9020)
  {
    sub_100004FF8(&qword_1000A8F50);
    sub_10001B478();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9020);
  }
  return result;
}

unint64_t sub_10001B478()
{
  unint64_t result = qword_1000A9028;
  if (!qword_1000A9028)
  {
    sub_100004FF8(&qword_1000A8F48);
    sub_100006A8C(&qword_1000A9030, &qword_1000A8F40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9028);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ContinuePlayingWidget(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ContinuePlayingWidget()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ContinuePlayingWidget(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ContinuePlayingWidget(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContinuePlayingWidget(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContinuePlayingWidget(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContinuePlayingWidget()
{
  return &type metadata for ContinuePlayingWidget;
}

uint64_t sub_10001B65C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001B678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v72 = a2;
  uint64_t v2 = sub_100004FB4(&qword_1000A8758);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FB4(&qword_1000A8750);
  uint64_t v59 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FB4(&qword_1000A8748);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  uint64_t v62 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000A8740);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v65 = v13;
  uint64_t v66 = v14;
  __chkstk_darwin(v13);
  uint64_t v60 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FB4(&qword_1000A8738);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v67 = v16;
  uint64_t v68 = v17;
  __chkstk_darwin(v16);
  uint64_t v63 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100004FB4(&qword_1000A9038);
  uint64_t v69 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v64 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004FB4(&qword_1000A9040);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v70 = v20;
  uint64_t v71 = v21;
  __chkstk_darwin(v20);
  unint64_t v74 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CPEntryView();
  sub_10001C164();
  sub_10001C1BC();
  swift_bridgeObjectRetain();
  sub_100087F40();
  unint64_t v23 = sub_10001C210();
  sub_100087780();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000876C0();
  uint64_t v75 = v2;
  unint64_t v76 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000877A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v8, v6);
  sub_1000876C0();
  uint64_t v75 = v6;
  unint64_t v76 = OpaqueTypeConformance2;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = v60;
  uint64_t v26 = v61;
  sub_100087740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v12, v26);
  uint64_t v62 = sub_100004FB4(&qword_1000A9058);
  uint64_t v28 = sub_100087EC0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 72);
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = (v31 + 32) & ~v31;
  uint64_t v57 = v32;
  uint64_t v58 = v31 | 7;
  uint64_t v59 = v32 + 4 * v30;
  uint64_t v33 = swift_allocObject();
  long long v56 = xmmword_100089330;
  *(_OWORD *)(v33 + 16) = xmmword_100089330;
  uint64_t v34 = v33 + v32;
  unsigned int v55 = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v35 = *(void (**)(uint64_t))(v29 + 104);
  v35(v34);
  unsigned int v54 = enum case for WidgetFamily.systemMedium(_:);
  v35(v34 + v30);
  uint64_t v50 = 2 * v30;
  unsigned int v53 = enum case for WidgetFamily.systemLarge(_:);
  v35(v34 + 2 * v30);
  uint64_t v52 = 3 * v30;
  unsigned int v51 = enum case for WidgetFamily.systemExtraLarge(_:);
  v35(v34 + 3 * v30);
  uint64_t v75 = v26;
  unint64_t v76 = v25;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v63;
  uint64_t v38 = v65;
  sub_100087760();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v38);
  uint64_t v75 = v38;
  unint64_t v76 = v36;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = v64;
  uint64_t v41 = v67;
  sub_1000877D0();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v41);
  uint64_t v75 = v41;
  unint64_t v76 = v39;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v73;
  sub_100087790();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v43);
  sub_100004FB4(&qword_1000A9060);
  sub_100087F00();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100089340;
  sub_100087EF0();
  sub_100087ED0();
  sub_100087EE0();
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v56;
  uint64_t v45 = v44 + v57;
  ((void (*)(uint64_t, void, uint64_t))v35)(v44 + v57, v55, v28);
  ((void (*)(uint64_t, void, uint64_t))v35)(v45 + v30, v54, v28);
  ((void (*)(uint64_t, void, uint64_t))v35)(v45 + v50, v53, v28);
  ((void (*)(uint64_t, void, uint64_t))v35)(v45 + v52, v51, v28);
  uint64_t v75 = v73;
  unint64_t v76 = v42;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v70;
  uint64_t v47 = v74;
  sub_100087770();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v47, v46);
}

uint64_t sub_10001C078@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C26C(a1, (uint64_t)v6);
  *a2 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for CPEntryView();
  return sub_10000A590((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 20));
}

void sub_10001C13C(void *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000100089340;
}

uint64_t sub_10001C15C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001B678(*v1, a1);
}

unint64_t sub_10001C164()
{
  unint64_t result = qword_1000A9048;
  if (!qword_1000A9048)
  {
    type metadata accessor for CPEntryView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9048);
  }
  return result;
}

unint64_t sub_10001C1BC()
{
  unint64_t result = qword_1000A9050;
  if (!qword_1000A9050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9050);
  }
  return result;
}

unint64_t sub_10001C210()
{
  unint64_t result = qword_1000A8760;
  if (!qword_1000A8760)
  {
    sub_100004FF8(&qword_1000A8758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8760);
  }
  return result;
}

uint64_t sub_10001C26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CPTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001C2D4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ActivityFeedWidget()
{
  return &type metadata for ActivityFeedWidget;
}

uint64_t sub_10001C494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001C4B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v71 = sub_100087E70();
  uint64_t v1 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v3 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FB4(&qword_1000A8790);
  uint64_t v70 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000A8788);
  uint64_t v73 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FB4(&qword_1000A8780);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  uint64_t v75 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FB4(&qword_1000A8778);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v76 = v14;
  uint64_t v77 = v15;
  __chkstk_darwin(v14);
  *(void *)&long long v72 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004FB4(&qword_1000A8770);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v81 = v17;
  uint64_t v82 = v18;
  __chkstk_darwin(v17);
  uint64_t v89 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004FB4(&qword_1000A8768);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v83 = v20;
  uint64_t v84 = v21;
  __chkstk_darwin(v20);
  uint64_t v78 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100004FB4(&qword_1000A9068);
  uint64_t v85 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v79 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004FB4(&qword_1000A9070);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v86 = v24;
  uint64_t v87 = v25;
  __chkstk_darwin(v24);
  uint64_t v80 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AFEntryView();
  sub_10001D1A8();
  sub_10001D200();
  sub_100087F40();
  uint64_t v27 = v71;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for WidgetBackgroundStyle.blur(_:), v71);
  unint64_t v28 = sub_10001D254();
  sub_1000877C0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v27);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v6, v4);
  uint64_t v91 = v4;
  unint64_t v92 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100087780();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v9, v7);
  sub_1000876C0();
  uint64_t v30 = sub_100087A60();
  uint64_t v32 = v31;
  LOBYTE(v3) = v33 & 1;
  uint64_t v91 = v7;
  unint64_t v92 = OpaqueTypeConformance2;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v72;
  uint64_t v36 = v74;
  sub_1000877B0();
  sub_100006AD0(v30, v32, (char)v3);
  swift_bridgeObjectRelease();
  uint64_t v37 = v36;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v13, v36);
  sub_1000876C0();
  uint64_t v38 = sub_100087A60();
  uint64_t v40 = v39;
  LOBYTE(v32) = v41 & 1;
  uint64_t v91 = v37;
  unint64_t v92 = v34;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v76;
  sub_100087750();
  sub_100006AD0(v38, v40, v32);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v35, v43);
  uint64_t v77 = sub_100004FB4(&qword_1000A9058);
  uint64_t v44 = sub_100087EC0();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(void *)(v45 + 72);
  uint64_t v47 = *(unsigned __int8 *)(v45 + 80);
  uint64_t v75 = ((v47 + 32) & ~v47) + 4 * v46;
  uint64_t v48 = (v47 + 32) & ~v47;
  uint64_t v73 = v48;
  uint64_t v74 = v47 | 7;
  uint64_t v49 = swift_allocObject();
  long long v72 = xmmword_100089330;
  *(_OWORD *)(v49 + 16) = xmmword_100089330;
  uint64_t v50 = v49 + v48;
  LODWORD(v71) = enum case for WidgetFamily.systemSmall(_:);
  unsigned int v51 = *(void (**)(uint64_t))(v45 + 104);
  v51(v49 + v48);
  LODWORD(v70) = enum case for WidgetFamily.systemMedium(_:);
  v51(v50 + v46);
  uint64_t v66 = 2 * v46;
  unsigned int v69 = enum case for WidgetFamily.systemLarge(_:);
  v51(v50 + 2 * v46);
  uint64_t v68 = 3 * v46;
  unsigned int v67 = enum case for WidgetFamily.systemExtraLarge(_:);
  v51(v50 + 3 * v46);
  uint64_t v91 = v43;
  unint64_t v92 = v42;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  unsigned int v53 = v78;
  uint64_t v54 = v81;
  unsigned int v55 = v89;
  sub_100087760();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v55, v54);
  uint64_t v91 = v54;
  unint64_t v92 = v52;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  uint64_t v57 = v79;
  uint64_t v58 = v83;
  sub_1000877D0();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v58);
  uint64_t v91 = v58;
  unint64_t v92 = v56;
  uint64_t v59 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = v80;
  uint64_t v61 = v90;
  sub_100087790();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v57, v61);
  sub_100004FB4(&qword_1000A9060);
  sub_100087F00();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000893F0;
  sub_100087ED0();
  sub_100087EE0();
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = v72;
  uint64_t v63 = v62 + v73;
  ((void (*)(uint64_t, void, uint64_t))v51)(v62 + v73, v71, v44);
  ((void (*)(uint64_t, void, uint64_t))v51)(v63 + v46, v70, v44);
  ((void (*)(uint64_t, void, uint64_t))v51)(v63 + v66, v69, v44);
  ((void (*)(uint64_t, void, uint64_t))v51)(v63 + v68, v67, v44);
  uint64_t v91 = v90;
  unint64_t v92 = v59;
  swift_getOpaqueTypeConformance2();
  uint64_t v64 = v86;
  sub_100087770();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v60, v64);
}

uint64_t sub_10001D0DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AFTimelineEntry();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011E28(a1, (uint64_t)v6);
  *a2 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for AFEntryView();
  return sub_100011E8C((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 20));
}

unint64_t sub_10001D1A8()
{
  unint64_t result = qword_1000A9078;
  if (!qword_1000A9078)
  {
    type metadata accessor for AFEntryView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9078);
  }
  return result;
}

unint64_t sub_10001D200()
{
  unint64_t result = qword_1000A9080;
  if (!qword_1000A9080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9080);
  }
  return result;
}

unint64_t sub_10001D254()
{
  unint64_t result = qword_1000A8798;
  if (!qword_1000A8798)
  {
    sub_100004FF8(&qword_1000A8790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8798);
  }
  return result;
}

uint64_t sub_10001D2B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001D494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001D4A8);
}

uint64_t sub_10001D4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100087430();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for AFTimelineEntry();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_10001D5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001D60C);
}

uint64_t sub_10001D60C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100087430();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for AFTimelineEntry();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for AFMediumContentView()
{
  uint64_t result = qword_1000A90E0;
  if (!qword_1000A90E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001D7B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001D7D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = sub_100004FB4(&qword_1000A8F40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004FB4(&qword_1000A8F48);
  __chkstk_darwin(v45);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100004FB4(&qword_1000A8F50);
  __chkstk_darwin(v46);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087EC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AFMediumContentView();
  uint64_t v14 = v1 + *(int *)(v13 + 20);
  sub_100016FB8((uint64_t)v12);
  double v15 = sub_10000AC94(v14, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_100087410();
  uint64_t v17 = v1 + *(int *)(v13 + 24);
  double v18 = (v16 + -28.0 - (v15 + v15))
      / (double)*(uint64_t *)(*(void *)(v17 + *(int *)(type metadata accessor for AFTimelineEntry() + 36)) + 16);
  *(void *)uint64_t v4 = sub_100087730();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v19 = sub_100004FB4(&qword_1000A8F58);
  sub_10001DBD4(v1, (uint64_t)&v4[*(int *)(v19 + 44)], v15, v18);
  LOBYTE(v12) = sub_1000878B0();
  unsigned __int8 v20 = sub_1000878D0();
  unsigned __int8 v21 = sub_1000878A0();
  char v22 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v12) {
    char v22 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v20) {
    char v22 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v21) {
    char v22 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_100006B3C((uint64_t)v4, (uint64_t)v6, &qword_1000A8F40);
  uint64_t v31 = &v6[*(int *)(v45 + 36)];
  *uint64_t v31 = v22;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_100006AE0((uint64_t)v4, &qword_1000A8F40);
  unsigned __int8 v32 = sub_100087890();
  char v33 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v32) {
    char v33 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_100006B3C((uint64_t)v6, (uint64_t)v8, &qword_1000A8F48);
  uint64_t v42 = &v8[*(int *)(v46 + 36)];
  *uint64_t v42 = v33;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  sub_100006AE0((uint64_t)v6, &qword_1000A8F48);
  return sub_10001AC44((uint64_t)v8, v47);
}

uint64_t sub_10001DBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v94 = a2;
  uint64_t v102 = sub_100004FB4(&qword_1000A8F60);
  uint64_t v97 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v88 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v87 = (char *)&v83 - v9;
  uint64_t v107 = sub_100087EC0();
  uint64_t v10 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v90 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v100 = (uint64_t)&v83 - v13;
  __chkstk_darwin(v14);
  uint64_t v101 = (char *)&v83 - v15;
  __chkstk_darwin(v16);
  uint64_t v99 = (uint64_t)&v83 - v17;
  uint64_t v18 = sub_100004FB4(&qword_1000A8F68);
  __chkstk_darwin(v18 - 8);
  uint64_t v96 = (uint64_t)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v95 = (char *)&v83 - v21;
  uint64_t v22 = type metadata accessor for AFMediumContentView();
  uint64_t v23 = v22 - 8;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  __chkstk_darwin(v22);
  uint64_t v92 = sub_100004FB4(&qword_1000A8F70);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v27 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = (void *)sub_100004FB4(&qword_1000A8F78);
  uint64_t v28 = *(v98 - 1);
  __chkstk_darwin(v98);
  uint64_t v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100004FB4(&qword_1000A8F80);
  __chkstk_darwin(v31 - 8);
  uint64_t v93 = (uint64_t)&v83 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v83 - v34;
  uint64_t v36 = a1 + *(int *)(v23 + 32);
  uint64_t v103 = *(int *)(type metadata accessor for AFTimelineEntry() + 36);
  uint64_t v104 = v36;
  uint64_t v37 = *(void *)(v36 + v103);
  uint64_t v38 = *(void *)(v37 + 16);
  uint64_t v105 = a1;
  unint64_t v106 = v35;
  uint64_t v86 = (uint64_t)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = v25;
  uint64_t v85 = v24;
  if (v38)
  {
    uint64_t v110 = v37;
    sub_10001F434(a1, (uint64_t)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v39 = *(unsigned __int8 *)(v24 + 80);
    uint64_t v40 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v41 = (v39 + 16) & ~v39;
    unint64_t v42 = (v25 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v84 = v10;
    uint64_t v43 = swift_allocObject();
    sub_10001F49C((uint64_t)v40, v43 + v41);
    *(double *)(v43 + v42) = a3;
    *(double *)(v43 + ((v42 + 15) & 0xFFFFFFFFFFFFFFF8)) = a4;
    swift_bridgeObjectRetain();
    sub_100004FB4(&qword_1000A8FC0);
    sub_100004FB4(&qword_1000A8FC8);
    sub_100006A8C(&qword_1000A8FD0, &qword_1000A8FC0);
    sub_10001B178();
    sub_10001B330();
    uint64_t v44 = (uint64_t)v106;
    uint64_t v10 = v84;
    sub_100087D20();
    sub_10001B384();
    uint64_t v45 = v92;
    sub_100087AD0();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v27, v45);
    uint64_t v46 = v98;
    (*(void (**)(uint64_t, char *, void *))(v28 + 32))(v44, v30, v98);
    (*(void (**)(uint64_t, void, uint64_t, void *))(v28 + 56))(v44, 0, 1, v46);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v28 + 56))(v35, 1, 1, v98);
  }
  uint64_t v47 = *(void *)(*(void *)(v104 + v103) + 16);
  uint64_t v48 = v99;
  sub_100016FB8(v99);
  uint64_t v49 = v101;
  uint64_t v50 = v107;
  uint64_t v98 = *(void **)(v10 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v98)(v101, v48, v107);
  unsigned int v51 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v52 = v51(v49, v50);
  int v53 = enum case for WidgetFamily.systemSmall(_:);
  if (v52 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v54 = 1;
    goto LABEL_12;
  }
  if (v52 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v54 = 2;
    goto LABEL_12;
  }
  if (v52 == enum case for WidgetFamily.systemLarge(_:)) {
    goto LABEL_9;
  }
  if (v52 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v54 = 8;
  }
  else
  {
    uint64_t v54 = 1;
    if (v52 != enum case for WidgetFamily.accessoryCircular(_:)
      && v52 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v52 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v101, v107);
LABEL_9:
      uint64_t v54 = 4;
    }
  }
LABEL_12:
  unsigned int v55 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v56 = v107;
  v55(v48, v107);
  if (v47 >= v54)
  {
    uint64_t v63 = 1;
    uint64_t v64 = v97;
    uint64_t v65 = (uint64_t)v95;
LABEL_28:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v65, v63, 1, v102);
    uint64_t v78 = (uint64_t)v106;
    uint64_t v79 = v93;
    sub_100006B3C((uint64_t)v106, v93, &qword_1000A8F80);
    uint64_t v80 = v96;
    sub_100006B3C(v65, v96, &qword_1000A8F68);
    uint64_t v81 = v94;
    sub_100006B3C(v79, v94, &qword_1000A8F80);
    uint64_t v82 = sub_100004FB4(&qword_1000A8F88);
    sub_100006B3C(v80, v81 + *(int *)(v82 + 48), &qword_1000A8F68);
    sub_100006AE0(v65, &qword_1000A8F68);
    sub_100006AE0(v78, &qword_1000A8F80);
    sub_100006AE0(v80, &qword_1000A8F68);
    return sub_100006AE0(v79, &qword_1000A8F80);
  }
  uint64_t v57 = *(void *)(*(void *)(v104 + v103) + 16);
  uint64_t v58 = v100;
  sub_100016FB8(v100);
  uint64_t v59 = v90;
  ((void (*)(char *, uint64_t, uint64_t))v98)(v90, v58, v56);
  int v60 = v51(v59, v56);
  if (v60 == v53)
  {
    uint64_t v61 = 1;
    uint64_t v62 = v89;
    goto LABEL_26;
  }
  uint64_t v62 = v89;
  if (v60 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v61 = 2;
    goto LABEL_26;
  }
  if (v60 == enum case for WidgetFamily.systemLarge(_:)) {
    goto LABEL_19;
  }
  if (v60 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v61 = 8;
  }
  else
  {
    uint64_t v61 = 1;
    if (v60 != enum case for WidgetFamily.accessoryCircular(_:)
      && v60 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v60 != enum case for WidgetFamily.accessoryInline(_:))
    {
      v55((uint64_t)v90, v56);
LABEL_19:
      uint64_t v61 = 4;
    }
  }
LABEL_26:
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v55)(v100, v56);
  if (v61 >= v57)
  {
    uint64_t v110 = v57;
    uint64_t v111 = v61;
    swift_getKeyPath();
    uint64_t v67 = v86;
    sub_10001F434(v105, v86);
    unint64_t v68 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    unint64_t v69 = (v62 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v70 = swift_allocObject();
    sub_10001F49C(v67, v70 + v68);
    *(double *)(v70 + v69) = a3;
    *(double *)(v70 + ((v69 + 15) & 0xFFFFFFFFFFFFFFF8)) = a4;
    sub_100004FB4(&qword_1000A8F90);
    sub_100004FB4(&qword_1000A8F98);
    sub_10001AE30();
    uint64_t v71 = sub_100004FF8(&qword_1000A8FB0);
    uint64_t v72 = sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
    uint64_t v108 = v71;
    uint64_t v109 = v72;
    swift_getOpaqueTypeConformance2();
    uint64_t v73 = v88;
    sub_100087D10();
    uint64_t v64 = v97;
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
    uint64_t v75 = v87;
    uint64_t v76 = v73;
    uint64_t v77 = v102;
    v74(v87, v76, v102);
    uint64_t v65 = (uint64_t)v95;
    v74(v95, v75, v77);
    uint64_t v63 = 0;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001E71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v67 = a3;
  uint64_t v57 = sub_1000874A0();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v54 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100004FB4(&qword_1000A9000);
  uint64_t v5 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  int v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100004FB4(&qword_1000A8FB0);
  __chkstk_darwin(v65);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100004FB4(&qword_1000A8F98);
  uint64_t v58 = *(char **)(v66 - 8);
  __chkstk_darwin(v66);
  unsigned int v51 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unsigned int v55 = (char *)&v49 - v11;
  uint64_t v63 = sub_100004FB4(&qword_1000A9008);
  __chkstk_darwin(v63);
  uint64_t v64 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100087EC0();
  uint64_t v13 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100004FB4(&qword_1000A9010);
  uint64_t v19 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100004FB4(&qword_1000A8FE0);
  __chkstk_darwin(v61);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FB4(&qword_1000A9018);
  __chkstk_darwin(v62);
  uint64_t v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_100016FB8((uint64_t)v15);
    uint64_t v29 = v52;
    sub_1000872B0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v59);
    type metadata accessor for AFMediumContentView();
    sub_100087410();
    sub_100087D90();
    sub_100087400();
    uint64_t v30 = v53;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v29, v53);
    uint64_t v31 = v65;
    uint64_t v32 = &v8[*(int *)(v65 + 36)];
    long long v33 = v71;
    *(_OWORD *)uint64_t v32 = v70;
    *((_OWORD *)v32 + 1) = v33;
    *((_OWORD *)v32 + 2) = v72;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v30);
    uint64_t v34 = v54;
    sub_100087490();
    uint64_t v35 = sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
    uint64_t v36 = v51;
    sub_100087B60();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
    sub_100006AE0((uint64_t)v8, &qword_1000A8FB0);
    uint64_t v37 = (void (**)(char *, char *, uint64_t))v58;
    uint64_t v38 = v55;
    uint64_t v39 = v66;
    (*((void (**)(char *, char *, uint64_t))v58 + 4))(v55, v36, v66);
    v37[2](v64, v38, v39);
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = sub_10001B2AC(&qword_1000A8FE8, &qword_1000A8FE0);
    uint64_t v68 = v61;
    uint64_t v69 = v40;
    swift_getOpaqueTypeConformance2();
    uint64_t v68 = v31;
    uint64_t v69 = v35;
  }
  else
  {
    uint64_t v57 = v28;
    uint64_t v58 = (char *)&v49 - v27;
    sub_100016FB8((uint64_t)v15);
    sub_1000872A0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v59);
    sub_100006AE0((uint64_t)v18, &qword_1000A8BC8);
    type metadata accessor for AFMediumContentView();
    sub_100087410();
    sub_100087D90();
    sub_100087400();
    uint64_t v41 = v50;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v21, v50);
    uint64_t v42 = v61;
    uint64_t v43 = &v23[*(int *)(v61 + 36)];
    long long v44 = v71;
    *(_OWORD *)uint64_t v43 = v70;
    *((_OWORD *)v43 + 1) = v44;
    *((_OWORD *)v43 + 2) = v72;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v41);
    uint64_t v45 = sub_10001B2AC(&qword_1000A8FE8, &qword_1000A8FE0);
    sub_100087AD0();
    sub_100006AE0((uint64_t)v23, &qword_1000A8FE0);
    uint64_t v46 = v57;
    uint64_t v38 = v58;
    uint64_t v39 = v62;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v58, v25, v62);
    uint64_t v37 = (void (**)(char *, char *, uint64_t))v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v64, v38, v39);
    swift_storeEnumTagMultiPayload();
    uint64_t v68 = v42;
    uint64_t v69 = v45;
    swift_getOpaqueTypeConformance2();
    uint64_t v47 = sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
    uint64_t v68 = v65;
    uint64_t v69 = v47;
  }
  swift_getOpaqueTypeConformance2();
  sub_1000877E0();
  return ((uint64_t (*)(char *, uint64_t))v37[1])(v38, v39);
}

uint64_t sub_10001F0E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v20 = sub_1000874A0();
  uint64_t v18 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100087EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000A9000);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FB4(&qword_1000A8FB0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016FB8((uint64_t)v6);
  sub_1000872B0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for AFMediumContentView();
  sub_100087410();
  sub_100087D90();
  sub_100087400();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  uint64_t v14 = &v13[*(int *)(v11 + 36)];
  long long v15 = v22;
  *(_OWORD *)uint64_t v14 = v21;
  *((_OWORD *)v14 + 1) = v15;
  *((_OWORD *)v14 + 2) = v23;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100087490();
  sub_10001B2AC(&qword_1000A8FB8, &qword_1000A8FB0);
  sub_100087B60();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v20);
  return sub_100006AE0((uint64_t)v13, &qword_1000A8FB0);
}

uint64_t sub_10001F434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFMediumContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001F49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFMediumContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001F500@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AFMediumContentView();

  return sub_10001F0E0(a1);
}

uint64_t sub_10001F5BC()
{
  uint64_t v1 = type metadata accessor for AFMediumContentView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  unint64_t v7 = ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v8 = v5 + *(int *)(v1 + 20);
  uint64_t v9 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v5 + *(int *)(v1 + 24);
  uint64_t v11 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  type metadata accessor for AFTimelineEntry();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v2 | 7);
}

uint64_t sub_10001F778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AFMediumContentView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10001E71C(a1, v6, a2);
}

uint64_t *sub_10001F834(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100087220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for CPTimelineEntry();
    *(void *)&v10[v13[5]] = *(void *)&v11[v13[5]];
    v10[v13[6]] = v11[v13[6]];
    v10[v13[7]] = v11[v13[7]];
    v10[v13[8]] = v11[v13[8]];
    v10[v13[9]] = v11[v13[9]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10001F9E0(uint64_t a1, uint64_t a2)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for CPTimelineEntry();

  return swift_bridgeObjectRelease();
}

void *sub_10001FAC8(void *a1, void *a2, uint64_t a3)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v8[v11[5]] = *(void *)&v9[v11[5]];
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10001FC24(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[v14[6]] = v12[v14[6]];
  v11[v14[7]] = v12[v14[7]];
  v11[v14[8]] = v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  return a1;
}

char *sub_10001FDC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087E60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v9[v12[5]] = *(void *)&v10[v12[5]];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v9[v12[9]] = v10[v12[9]];
  return a1;
}

char *sub_10001FF1C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v9[v12[5]] = *(void *)&v10[v12[5]];
  swift_bridgeObjectRelease();
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v9[v12[9]] = v10[v12[9]];
  return a1;
}

uint64_t sub_10002009C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000200B0);
}

uint64_t sub_1000200B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for CPTimelineEntry();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000201AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000201C0);
}

uint64_t sub_1000201C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for CPTimelineEntry();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for CPTitleGradientView()
{
  uint64_t result = qword_1000A9178;
  if (!qword_1000A9178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100020314()
{
  sub_1000203E4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CPTimelineEntry();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000203E4()
{
  if (!qword_1000A8830)
  {
    sub_100087E60();
    unint64_t v0 = sub_100087390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A8830);
    }
  }
}

uint64_t sub_10002043C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100020458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v3 = sub_100087380();
  uint64_t v61 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FB4(&qword_1000A91B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100004FB4(&qword_1000A91C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FB4(&qword_1000A91C8);
  __chkstk_darwin(v62);
  uint64_t v64 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000A91D0);
  __chkstk_darwin(v13);
  uint64_t v63 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v66 = sub_100004FB4(&qword_1000A91D8);
  __chkstk_darwin(v66);
  uint64_t v67 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CPTitleGradientView();
  uint64_t v20 = v2 + *(int *)(v19 + 24);
  if (*(unsigned char *)(v20 + *(int *)(type metadata accessor for CPTimelineEntry() + 32)) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_100021860();
    return sub_1000877E0();
  }
  else
  {
    *uint64_t v8 = sub_100087D90();
    v8[1] = v22;
    uint64_t v23 = sub_100004FB4(&qword_1000A91E0);
    sub_100020A88(v2, (uint64_t)v8 + *(int *)(v23 + 44));
    uint64_t v24 = (double *)(v2 + *(int *)(v19 + 20));
    double v25 = *v24;
    double v26 = v24[1];
    uint64_t v27 = sub_100087D90();
    uint64_t v60 = v3;
    uint64_t v28 = (uint64_t)v11;
    sub_10007753C(v25, 0, 0.0, 1, v25, 0, v26, 0, (uint64_t)v11, 0.0, 1, v26, 0, v27, v29);
    sub_100006AE0((uint64_t)v8, &qword_1000A91B8);
    double v30 = *v24;
    double v31 = v24[1];
    sub_100087D90();
    sub_100077598(v30, 0, 0.0, 1, v30, 0, v31, 0, &v68, 0.0, 1, v31, 0);
    uint64_t v56 = v68;
    int v55 = BYTE8(v68);
    uint64_t v32 = v69;
    LOBYTE(v24) = v70;
    uint64_t v33 = v61;
    uint64_t v57 = v5;
    uint64_t v34 = v71;
    uint64_t v59 = v17;
    char v35 = v72;
    uint64_t v54 = v73;
    uint64_t v58 = v13;
    char v36 = v74;
    uint64_t v37 = v75;
    char v38 = v76;
    uint64_t v53 = v77;
    int v52 = v78;
    uint64_t v51 = v79;
    uint64_t v50 = v80;
    uint64_t v39 = v64;
    sub_100006B3C(v28, v64, &qword_1000A91C0);
    uint64_t v40 = v39 + *(int *)(v62 + 36);
    *(void *)uint64_t v40 = v56;
    *(unsigned char *)(v40 + 8) = v55;
    *(void *)(v40 + 16) = v32;
    *(unsigned char *)(v40 + 24) = (_BYTE)v24;
    *(void *)(v40 + 32) = v34;
    *(unsigned char *)(v40 + 40) = v35;
    *(void *)(v40 + 48) = v54;
    *(unsigned char *)(v40 + 56) = v36;
    *(void *)(v40 + 64) = v37;
    *(unsigned char *)(v40 + 72) = v38;
    *(void *)(v40 + 80) = v53;
    *(unsigned char *)(v40 + 88) = v52;
    uint64_t v41 = v50;
    *(void *)(v40 + 96) = v51;
    *(void *)(v40 + 104) = v41;
    sub_100006AE0(v28, &qword_1000A91C0);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v43 = v57;
    uint64_t v44 = v60;
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v57, enum case for ColorScheme.light(_:), v60);
    uint64_t v45 = (uint64_t)v63;
    uint64_t v46 = (uint64_t *)&v63[*(int *)(v58 + 36)];
    uint64_t v47 = sub_100004FB4(&qword_1000A8950);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))((char *)v46 + *(int *)(v47 + 28), v43, v44);
    *uint64_t v46 = KeyPath;
    sub_100006B3C(v39, v45, &qword_1000A91C8);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v43, v44);
    sub_100006AE0(v39, &qword_1000A91C8);
    uint64_t v48 = (uint64_t)v59;
    sub_100006C4C(v45, (uint64_t)v59, &qword_1000A91D0);
    sub_100006B3C(v48, v67, &qword_1000A91D0);
    swift_storeEnumTagMultiPayload();
    sub_100021860();
    sub_1000877E0();
    return sub_100006AE0(v48, &qword_1000A91D0);
  }
}

uint64_t sub_100020A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v123 = a1;
  uint64_t v119 = a2;
  uint64_t v2 = sub_1000874D0();
  __chkstk_darwin(v2 - 8);
  id v116 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100087DA0();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  id v113 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100004FB4(&qword_1000A9218);
  __chkstk_darwin(v112);
  id v118 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v117 = (uint64_t)&v109 - v7;
  *(void *)&long long v126 = sub_100087E60();
  double v127 = *(double *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v125 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v124 = (uint64_t)&v109 - v10;
  uint64_t v11 = sub_100004FB4(&qword_1000A9220);
  __chkstk_darwin(v11 - 8);
  uint64_t v128 = (uint64_t *)((char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v129 = (uint64_t)&v109 - v14;
  uint64_t v15 = sub_100004FB4(&qword_1000A9228);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100087D60();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004FB4(&qword_1000A9230);
  __chkstk_darwin(v23 - 8);
  double v25 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004FB4(&qword_1000A9238);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v121 = (uint64_t)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v122 = sub_100004FB4(&qword_1000A9240) - 8;
  __chkstk_darwin(v122);
  double v30 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v109 - v32;
  sub_100087D50();
  char v34 = sub_100087880();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v18, v22, v19);
  v18[*(int *)(v16 + 44)] = v34;
  uint64_t v35 = (uint64_t)v30;
  sub_100006B3C((uint64_t)v18, (uint64_t)v25, &qword_1000A9228);
  sub_100006AE0((uint64_t)v18, &qword_1000A9228);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v36 = (uint64_t)v33;
  sub_100087BA0();
  uint64_t v37 = sub_100087BD0();
  swift_release();
  LOBYTE(v18) = sub_100087880();
  uint64_t v38 = v121;
  sub_100006B3C((uint64_t)v25, v121, &qword_1000A9230);
  uint64_t v39 = v38 + *(int *)(v27 + 44);
  *(void *)uint64_t v39 = v37;
  uint64_t v40 = v123;
  *(unsigned char *)(v39 + 8) = (_BYTE)v18;
  sub_100006AE0((uint64_t)v25, &qword_1000A9230);
  sub_100004FB4(&qword_1000A9248);
  uint64_t v41 = swift_allocObject();
  long long v111 = xmmword_1000893F0;
  *(_OWORD *)(v41 + 16) = xmmword_1000893F0;
  *(void *)(v41 + 32) = sub_100087BA0();
  *(void *)(v41 + 40) = sub_100087BB0();
  uint64_t v138 = v41;
  sub_100088140();
  sub_100087D40();
  sub_100087DE0();
  sub_100087DD0();
  sub_100087460();
  uint64_t v42 = v130;
  long long v120 = v131;
  uint64_t v43 = v132;
  uint64_t v44 = v133;
  sub_100087DB0();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_100087E00();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  sub_100006B3C(v38, v35, &qword_1000A9238);
  uint64_t v53 = v35 + *(int *)(v122 + 44);
  *(void *)uint64_t v53 = v42;
  *(_OWORD *)(v53 + 8) = v120;
  *(void *)(v53 + 24) = v43;
  *(void *)(v53 + 32) = v44;
  *(void *)(v53 + 40) = 0x3FD1DF46A2529D39;
  *(void *)(v53 + 48) = v46;
  *(void *)(v53 + 56) = v48;
  long long v122 = xmmword_100089570;
  *(_OWORD *)(v53 + 64) = xmmword_100089570;
  *(void *)(v53 + 80) = v50;
  *(void *)(v53 + 88) = v52;
  sub_100006AE0(v38, &qword_1000A9238);
  sub_100006C4C(v35, v36, &qword_1000A9240);
  uint64_t v54 = v124;
  sub_1000171F8(v124);
  int v55 = v125;
  sub_100087E50();
  sub_100021A40();
  uint64_t v56 = v126;
  LOBYTE(v38) = sub_100087FE0();
  uint64_t v57 = *(void (**)(char *, uint64_t))(*(void *)&v127 + 8);
  v57(v55, v56);
  uint64_t v58 = v56;
  uint64_t v59 = v129;
  v57((char *)v54, v58);
  if (v38) {
    goto LABEL_19;
  }
  uint64_t v60 = v40 + *(int *)(type metadata accessor for CPTitleGradientView() + 24);
  unint64_t v61 = *(void *)(v60 + *(int *)(type metadata accessor for CPTimelineEntry() + 20));
  if (!(v61 >> 62))
  {
    uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v62) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000883C0();
  if (!result)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v59 = v129;
LABEL_19:
    uint64_t v105 = sub_100004FB4(&qword_1000A9258);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v59, 1, 1, v105);
LABEL_20:
    sub_100006B3C(v36, v35, &qword_1000A9240);
    unint64_t v106 = v128;
    sub_100006B3C(v59, (uint64_t)v128, &qword_1000A9220);
    uint64_t v107 = v119;
    sub_100006B3C(v35, v119, &qword_1000A9240);
    uint64_t v108 = sub_100004FB4(&qword_1000A9260);
    sub_100006B3C((uint64_t)v106, v107 + *(int *)(v108 + 48), &qword_1000A9220);
    sub_100006AE0(v59, &qword_1000A9220);
    sub_100006AE0(v36, &qword_1000A9240);
    sub_100006AE0((uint64_t)v106, &qword_1000A9220);
    return sub_100006AE0(v35, &qword_1000A9240);
  }
LABEL_4:
  if ((v61 & 0xC000000000000001) != 0)
  {
    uint64_t v64 = sub_100088340();
    goto LABEL_7;
  }
  if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v64 = *(void *)(v61 + 32);
    swift_retain();
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v65 = *(void **)(v64 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor);
    uint64_t v110 = v35;
    uint64_t v109 = v36;
    if (v65)
    {
      uint64_t v66 = v65;
    }
    else
    {
      uint64_t v67 = *(void **)(v64 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor);
      if (v67) {
        id v68 = v67;
      }
      else {
        id v68 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.431372549 blue:0.62745098 alpha:1.0];
      }
      uint64_t v66 = v68;
    }
    id v69 = v65;
    swift_release();
    id v70 = v66;
    uint64_t v71 = sub_100087B80();
    [v70 _luminance];
    if (v72 <= 0.8) {
      double v73 = -0.2;
    }
    else {
      double v73 = (v72 + -0.8) / -0.2 * 0.2 + -0.2;
    }
    double v127 = v73;
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_100089330;
    *(void *)(v74 + 32) = v71;
    *(void *)(v74 + 40) = v71;
    swift_retain_n();
    *(void *)(v74 + 48) = sub_100087BD0();
    *(void *)(v74 + 56) = sub_100087BB0();
    uint64_t v138 = v74;
    sub_100088140();
    sub_100087D40();
    sub_100087DE0();
    sub_100087DD0();
    sub_100087460();
    uint64_t v75 = v134;
    long long v126 = v135;
    uint64_t v125 = v136;
    uint64_t v124 = v137;
    sub_100087DB0();
    uint64_t v123 = v76;
    uint64_t v121 = v77;
    sub_100087E00();
    uint64_t v79 = v78;
    uint64_t v81 = v80;
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = v111;
    *(void *)(v82 + 32) = v71;
    swift_retain();
    *(void *)(v82 + 40) = sub_100087BB0();
    uint64_t v138 = v82;
    sub_100088140();
    sub_100087D40();
    sub_100087DE0();
    sub_100087DD0();
    sub_100087460();
    uint64_t v83 = v138;
    long long v120 = v139;
    uint64_t v84 = v140;
    uint64_t v85 = v141;
    sub_100087DB0();
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    sub_100087E00();
    uint64_t v91 = v90;
    uint64_t v93 = v92;
    uint64_t v94 = v114;
    uint64_t v95 = v113;
    uint64_t v96 = v115;
    (*(void (**)(char *, void, uint64_t))(v114 + 104))(v113, enum case for BlendMode.color(_:), v115);
    uint64_t v97 = (uint64_t)v116;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v116, v95, v96);
    uint64_t v98 = (uint64_t)v118;
    sub_100021A98(v97, (uint64_t)&v118[*(int *)(v112 + 36)]);
    *(void *)uint64_t v98 = v83;
    *(_OWORD *)(v98 + 8) = v120;
    *(void *)(v98 + 24) = v84;
    *(void *)(v98 + 32) = v85;
    *(void *)(v98 + 40) = 0x3FD1DF46A2529D39;
    *(void *)(v98 + 48) = v87;
    *(void *)(v98 + 56) = v89;
    *(_OWORD *)(v98 + 64) = v122;
    *(void *)(v98 + 80) = v91;
    *(void *)(v98 + 88) = v93;
    swift_bridgeObjectRetain();
    sub_100021AFC(v97);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v96);
    sub_100021B58((uint64_t)&v138);
    uint64_t v99 = v117;
    sub_100006C4C(v98, v117, &qword_1000A9218);
    sub_100006B3C(v99, v98, &qword_1000A9218);
    uint64_t v100 = v128;
    *uint64_t v128 = v75;
    *(_OWORD *)(v100 + 1) = v126;
    uint64_t v101 = v124;
    v100[3] = v125;
    v100[4] = v101;
    v100[5] = 0x3FD1DF46A2529D39;
    uint64_t v102 = v121;
    v100[6] = v123;
    v100[7] = v102;
    *((_OWORD *)v100 + 4) = v122;
    v100[10] = v79;
    v100[11] = v81;
    *((double *)v100 + 12) = v127;
    uint64_t v103 = sub_100004FB4(&qword_1000A9250);
    sub_100006B3C(v98, (uint64_t)v100 + *(int *)(v103 + 48), &qword_1000A9218);
    swift_bridgeObjectRetain();

    swift_release();
    sub_100006AE0(v99, &qword_1000A9218);
    sub_100006AE0(v98, &qword_1000A9218);
    swift_bridgeObjectRelease();
    uint64_t v104 = sub_100004FB4(&qword_1000A9258);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v100, 0, 1, v104);
    uint64_t v59 = v129;
    sub_100006C4C((uint64_t)v100, v129, &qword_1000A9220);
    uint64_t v35 = v110;
    uint64_t v36 = v109;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

unint64_t sub_100021860()
{
  unint64_t result = qword_1000A91E8;
  if (!qword_1000A91E8)
  {
    sub_100004FF8(&qword_1000A91D0);
    sub_100021900();
    sub_100006A8C(&qword_1000A8978, &qword_1000A8950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A91E8);
  }
  return result;
}

unint64_t sub_100021900()
{
  unint64_t result = qword_1000A91F0;
  if (!qword_1000A91F0)
  {
    sub_100004FF8(&qword_1000A91C8);
    sub_1000219A0();
    sub_100006A8C(&qword_1000A9208, &qword_1000A9210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A91F0);
  }
  return result;
}

unint64_t sub_1000219A0()
{
  unint64_t result = qword_1000A91F8;
  if (!qword_1000A91F8)
  {
    sub_100004FF8(&qword_1000A91C0);
    sub_100006A8C(&qword_1000A9200, &qword_1000A91B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A91F8);
  }
  return result;
}

unint64_t sub_100021A40()
{
  unint64_t result = qword_1000A8990;
  if (!qword_1000A8990)
  {
    sub_100087E60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8990);
  }
  return result;
}

uint64_t sub_100021A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000874D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100021AFC(uint64_t a1)
{
  uint64_t v2 = sub_1000874D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100021B58(uint64_t a1)
{
  return a1;
}

unint64_t sub_100021B88()
{
  unint64_t result = qword_1000A9268;
  if (!qword_1000A9268)
  {
    sub_100004FF8(&qword_1000A9270);
    sub_100021860();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9268);
  }
  return result;
}

uint64_t *sub_100021C04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087380();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100021E4C(uint64_t a1, uint64_t a2)
{
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100087E60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100021FD8(void *a1, void *a2, uint64_t a3)
{
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087380();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000221D0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A88D0);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100006AE0((uint64_t)a1 + v7, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_100006AE0((uint64_t)a1 + v11, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100022400(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087380();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_100087E60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

char *sub_100022610(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A88D0);
    uint64_t v6 = sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087380();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100006AE0((uint64_t)&a1[v8], &qword_1000A87B0);
    uint64_t v11 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_100006AE0((uint64_t)&a1[v13], &qword_1000A87A8);
    uint64_t v16 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_100087E60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100022858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002286C);
}

uint64_t sub_10002286C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A88C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1000229C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000229D8);
}

uint64_t sub_1000229D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A88C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for AFEmptyStateView()
{
  uint64_t result = qword_1000A92D0;
  if (!qword_1000A92D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100022B88()
{
  sub_100022CE0(319, (unint64_t *)&unk_1000A92E0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100022CE0(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_100022CE0(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100022CE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100087390();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100022D34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100022D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = sub_100087380();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  type metadata accessor for AFEmptyStateView();
  uint64_t v26 = v1;
  sub_1000171F8((uint64_t)v15);
  sub_100087E50();
  sub_1000250E8((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v16 = sub_100087FE0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  if (v16)
  {
    uint64_t v18 = enum case for BlendMode.normal(_:);
    uint64_t v19 = sub_100087DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v27, v18, v19);
  }
  else
  {
    uint64_t v21 = v27;
    sub_1000174E8((uint64_t)v8);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v2);
    char v22 = sub_100087370();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
    v23(v5, v2);
    v23(v8, v2);
    uint64_t v24 = sub_100087DA0();
    if (v22) {
      double v25 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    }
    else {
      double v25 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v21, *v25, v24);
  }
}

void sub_100023070()
{
  NSString v0 = sub_100087FF0();
  id v1 = [self _systemImageNamed:v0];

  if (v1)
  {
    id v2 = [self preferredFontForTextStyle:UIFontTextStyleTitle1];
    id v3 = [self configurationWithFont:v2];

    [v1 imageWithConfiguration:v3];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100023170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004FB4(&qword_1000A9318);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000A9320);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FB4(&qword_1000A9328);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FB4(&qword_1000A9330);
  __chkstk_darwin(v14);
  char v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_100087720();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v17 = sub_100004FB4(&qword_1000A9338);
  sub_10002349C(v2, (uint64_t *)&v6[*(int *)(v17 + 44)]);
  LOBYTE(v2) = sub_100087890();
  sub_100087360();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_100006B3C((uint64_t)v6, (uint64_t)v10, &qword_1000A9318);
  uint64_t v26 = &v10[*(int *)(v8 + 44)];
  *uint64_t v26 = v2;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  v26[40] = 0;
  sub_100006AE0((uint64_t)v6, &qword_1000A9318);
  LOBYTE(v2) = sub_1000878B0();
  unsigned __int8 v27 = sub_1000878D0();
  char v28 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v2) {
    char v28 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v27) {
    char v28 = sub_1000878C0();
  }
  sub_100006B3C((uint64_t)v10, (uint64_t)v13, &qword_1000A9320);
  uint64_t v29 = &v13[*(int *)(v11 + 36)];
  *uint64_t v29 = v28;
  *(_OWORD *)(v29 + 8) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  v29[40] = 1;
  sub_100006AE0((uint64_t)v10, &qword_1000A9320);
  char v30 = sub_1000878A0();
  sub_100087360();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_100006B3C((uint64_t)v13, (uint64_t)v16, &qword_1000A9328);
  uint64_t v39 = &v16[*(int *)(v14 + 36)];
  *uint64_t v39 = v30;
  *((void *)v39 + 1) = v32;
  *((void *)v39 + 2) = v34;
  *((void *)v39 + 3) = v36;
  *((void *)v39 + 4) = v38;
  v39[40] = 0;
  sub_100006AE0((uint64_t)v13, &qword_1000A9328);
  return sub_100006C4C((uint64_t)v16, a1, &qword_1000A9330);
}

uint64_t sub_10002349C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v180 = a2;
  uint64_t v177 = sub_100004FB4(&qword_1000A9340);
  __chkstk_darwin(v177);
  uint64_t v179 = (uint64_t)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_100004FB4(&qword_1000A9348);
  __chkstk_darwin(v178);
  uint64_t v134 = (uint64_t)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_100004FB4(&qword_1000A9350);
  __chkstk_darwin(v175);
  uint64_t v176 = (uint64_t)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100087860();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v130 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100004FB4(&qword_1000A9358);
  __chkstk_darwin(v169);
  uint64_t v126 = (uint64_t)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_100004FB4(&qword_1000A9360);
  uint64_t v128 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  double v127 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_100004FB4(&qword_1000A9368);
  uint64_t v131 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v129 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100087DA0();
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v149 = (uint64_t)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for DynamicTypeFont();
  __chkstk_darwin(v139);
  uint64_t v137 = (uint64_t *)((char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100004FB4(&qword_1000A9370);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v126 - v16;
  uint64_t v135 = sub_100004FB4(&qword_1000A9378);
  __chkstk_darwin(v135);
  uint64_t v141 = (char *)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_100004FB4(&qword_1000A9380);
  __chkstk_darwin(v140);
  uint64_t v145 = (uint64_t)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_100004FB4(&qword_1000A9388);
  __chkstk_darwin(v138);
  uint64_t v142 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100004FB4(&qword_1000A9390);
  __chkstk_darwin(v146);
  uint64_t v144 = (uint64_t)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100004FB4(&qword_1000A9398);
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v143 = (char *)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_100004FB4(&qword_1000A93A0);
  __chkstk_darwin(v163);
  v165 = (char *)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_100004FB4(&qword_1000A93A8);
  __chkstk_darwin(v168);
  v162 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v170 = (uint64_t)&v126 - v26;
  uint64_t v27 = sub_100004FB4(&qword_1000A93B0);
  __chkstk_darwin(v27 - 8);
  uint64_t v172 = (uint64_t)&v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v166 = (char *)&v126 - v30;
  __chkstk_darwin(v31);
  uint64_t v167 = (uint64_t)&v126 - v32;
  __chkstk_darwin(v33);
  uint64_t v171 = (uint64_t)&v126 - v34;
  uint64_t v35 = sub_100004FB4(&qword_1000A93B8);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)&v126 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100087EC0();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v126 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v126 - v43;
  uint64_t v45 = *(int *)(type metadata accessor for AFEmptyStateView() + 20);
  uint64_t v161 = a1;
  uint64_t v185 = a1 + v45;
  sub_100016FB8((uint64_t)v44);
  uint64_t v46 = *(void (**)(void))(v39 + 104);
  unsigned int v184 = enum case for WidgetFamily.systemSmall(_:);
  v182 = (void (*)(char *, void, uint64_t))v46;
  uint64_t v183 = v39 + 104;
  v46(v41);
  uint64_t v152 = sub_1000250E8(&qword_1000A93C0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  LOBYTE(a1) = sub_100087FE0();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v39 + 8);
  v187 = v41;
  v47(v41, v38);
  v186 = v44;
  uint64_t v136 = v38;
  uint64_t v188 = v39 + 8;
  v181 = (void (*)(uint64_t, uint64_t))v47;
  v47(v44, v38);
  uint64_t v48 = 0;
  uint64_t KeyPath = 0;
  uint64_t v50 = 0;
  if ((a1 & 1) == 0)
  {
    sub_100023070();
    sub_100087C30();
    uint64_t v51 = enum case for Image.TemplateRenderingMode.template(_:);
    uint64_t v52 = sub_100087C80();
    uint64_t v53 = *(void *)(v52 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 104))(v37, v51, v52);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v37, 0, 1, v52);
    uint64_t v48 = sub_100087C60();
    swift_release();
    sub_100006AE0((uint64_t)v37, &qword_1000A93B8);
    sub_100087BE0();
    uint64_t v50 = sub_100087BD0();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
  }
  uint64_t v159 = KeyPath;
  uint64_t v160 = v50;
  uint64_t v164 = v48;
  sub_100087D90();
  sub_100087400();
  uint64_t v158 = v192;
  int v157 = v193;
  uint64_t v156 = v194;
  int v155 = v195;
  uint64_t v154 = v196;
  uint64_t v153 = v197;
  sub_1000876C0();
  uint64_t v54 = sub_100087A60();
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  char v60 = v59 & 1;
  uint64_t v61 = sub_100087A00();
  uint64_t v62 = enum case for ContentSizeCategory.extraLarge(_:);
  uint64_t v63 = sub_100087710();
  uint64_t v64 = *(void *)(v63 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 104))(v17, v62, v63);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v17, 0, 1, v63);
  sub_100087940();
  uint64_t v66 = v65;
  sub_100006B3C((uint64_t)v17, (uint64_t)v14, &qword_1000A9370);
  uint64_t v67 = swift_getKeyPath();
  uint64_t v68 = (uint64_t)v137;
  *uint64_t v137 = v67;
  sub_100004FB4(&qword_1000A8EA0);
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = v139;
  *(void *)(v68 + *(int *)(v139 + 20)) = v61;
  sub_100006C4C((uint64_t)v14, v68 + *(int *)(v69 + 24), &qword_1000A9370);
  *(void *)(v68 + *(int *)(v69 + 28)) = v66;
  uint64_t v70 = (uint64_t)v141;
  sub_100024B34(v68, (uint64_t)&v141[*(int *)(v135 + 36)]);
  *(void *)uint64_t v70 = v54;
  *(void *)(v70 + 8) = v56;
  *(unsigned char *)(v70 + 16) = v60;
  *(void *)(v70 + 24) = v58;
  sub_100024B98(v54, v56, v60);
  swift_bridgeObjectRetain();
  sub_100024BA8(v68);
  sub_100006AE0((uint64_t)v17, &qword_1000A9370);
  sub_100006AD0(v54, v56, v60);
  swift_bridgeObjectRelease();
  sub_100087BE0();
  uint64_t v71 = sub_100087BD0();
  swift_release();
  uint64_t v72 = swift_getKeyPath();
  uint64_t v73 = v145;
  sub_100006B3C(v70, v145, &qword_1000A9378);
  uint64_t v74 = (uint64_t *)(v73 + *(int *)(v140 + 36));
  *uint64_t v74 = v72;
  v74[1] = v71;
  sub_100006AE0(v70, &qword_1000A9378);
  uint64_t v75 = v149;
  sub_100022D50(v149);
  uint64_t v76 = (uint64_t)v142;
  uint64_t v77 = v150;
  uint64_t v78 = v151;
  (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(&v142[*(int *)(v138 + 36)], v75, v151);
  sub_100006B3C(v73, v76, &qword_1000A9380);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v78);
  sub_100006AE0(v73, &qword_1000A9380);
  uint64_t v79 = v144;
  sub_100006B3C(v76, v144, &qword_1000A9388);
  *(_WORD *)(v79 + *(int *)(v146 + 36)) = 256;
  sub_100006AE0(v76, &qword_1000A9388);
  sub_1000251A4(&qword_1000A93C8, &qword_1000A9390, (void (*)(void))sub_100024C04);
  uint64_t v80 = v143;
  sub_100087AD0();
  sub_100006AE0(v79, &qword_1000A9390);
  uint64_t v81 = swift_getKeyPath();
  uint64_t v82 = v147;
  uint64_t v83 = (uint64_t)v165;
  uint64_t v84 = v148;
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v165, v80, v148);
  uint64_t v85 = v83 + *(int *)(v163 + 36);
  *(void *)uint64_t v85 = v81;
  *(unsigned char *)(v85 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v84);
  uint64_t v86 = (uint64_t)v186;
  sub_100016FB8((uint64_t)v186);
  uint64_t v87 = v187;
  uint64_t v88 = v136;
  v182(v187, v184, v136);
  sub_1000250E8(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v89 = v191;
  uint64_t v90 = v189;
  uint64_t v91 = v181;
  v181((uint64_t)v87, v88);
  v91(v86, v88);
  if (v90 == v89)
  {
    uint64_t v92 = swift_getKeyPath();
    uint64_t v93 = v126;
    sub_100006B3C(v83, v126, &qword_1000A93A0);
    uint64_t v94 = v169;
    uint64_t v95 = v93 + *(int *)(v169 + 36);
    *(void *)uint64_t v95 = v92;
    *(unsigned char *)(v95 + 8) = 0;
    uint64_t v96 = sub_100024E98(&qword_1000A9400, &qword_1000A9358, (void (*)(void))sub_100024D88);
    uint64_t v97 = v127;
    sub_100087B70();
    sub_100006AE0(v93, &qword_1000A9358);
    uint64_t v98 = v130;
    sub_100087850();
    uint64_t v189 = v94;
    uint64_t v190 = v96;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v100 = v129;
    uint64_t v101 = v173;
    sub_100087B50();
    (*(void (**)(char *, uint64_t))(v132 + 8))(v98, v133);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v97, v101);
    uint64_t v102 = v131;
    uint64_t v103 = v174;
    (*(void (**)(uint64_t, char *, uint64_t))(v131 + 16))(v176, v100, v174);
    swift_storeEnumTagMultiPayload();
    uint64_t v189 = v101;
    uint64_t v190 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_100024D88();
    uint64_t v104 = (uint64_t)v162;
    sub_1000877E0();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v103);
  }
  else
  {
    sub_100006B3C(v83, v176, &qword_1000A93A0);
    swift_storeEnumTagMultiPayload();
    uint64_t v105 = sub_100024E98(&qword_1000A9400, &qword_1000A9358, (void (*)(void))sub_100024D88);
    uint64_t v189 = v169;
    uint64_t v190 = v105;
    uint64_t v106 = swift_getOpaqueTypeConformance2();
    uint64_t v189 = v173;
    uint64_t v190 = v106;
    swift_getOpaqueTypeConformance2();
    sub_100024D88();
    uint64_t v104 = (uint64_t)v162;
    sub_1000877E0();
  }
  uint64_t v107 = v170;
  sub_100006C4C(v104, v170, &qword_1000A93A8);
  sub_100006AE0(v83, &qword_1000A93A0);
  uint64_t v108 = (uint64_t)v186;
  sub_100016FB8((uint64_t)v186);
  uint64_t v109 = v187;
  v182(v187, v184, v88);
  char v110 = sub_100087FE0();
  long long v111 = v109;
  uint64_t v112 = v181;
  v181((uint64_t)v111, v88);
  v112(v108, v88);
  uint64_t v113 = (uint64_t)v166;
  if (v110)
  {
    sub_100006B3C(v107, v179, &qword_1000A93A8);
    swift_storeEnumTagMultiPayload();
    sub_100024E98(&qword_1000A9430, &qword_1000A9348, (void (*)(void))sub_100024F3C);
    sub_100024F3C();
    sub_1000877E0();
  }
  else
  {
    uint64_t v114 = swift_getKeyPath();
    uint64_t v115 = v134;
    sub_100006B3C(v107, v134, &qword_1000A93A8);
    uint64_t v116 = v115 + *(int *)(v178 + 36);
    *(void *)uint64_t v116 = v114;
    *(unsigned char *)(v116 + 8) = 1;
    sub_100006B3C(v115, v179, &qword_1000A9348);
    swift_storeEnumTagMultiPayload();
    sub_100024E98(&qword_1000A9430, &qword_1000A9348, (void (*)(void))sub_100024F3C);
    sub_100024F3C();
    sub_1000877E0();
    sub_100006AE0(v115, &qword_1000A9348);
  }
  uint64_t v117 = v167;
  sub_100006C4C(v113, v167, &qword_1000A93B0);
  sub_100006AE0(v107, &qword_1000A93A8);
  uint64_t v118 = v171;
  sub_100006C4C(v117, v171, &qword_1000A93B0);
  uint64_t v119 = v172;
  sub_100006B3C(v118, v172, &qword_1000A93B0);
  long long v120 = v180;
  uint64_t v121 = v164;
  uint64_t v122 = v159;
  uint64_t *v180 = v164;
  v120[1] = v122;
  v120[2] = v160;
  v120[3] = 0;
  *((unsigned char *)v120 + 32) = 1;
  v120[5] = v158;
  *((unsigned char *)v120 + 48) = v157;
  v120[7] = v156;
  *((unsigned char *)v120 + 64) = v155;
  uint64_t v123 = v153;
  v120[9] = v154;
  v120[10] = v123;
  uint64_t v124 = sub_100004FB4(&qword_1000A9440);
  sub_100006B3C(v119, (uint64_t)v120 + *(int *)(v124 + 64), &qword_1000A93B0);
  sub_10002504C(v121);
  sub_100006AE0(v118, &qword_1000A93B0);
  sub_100006AE0(v119, &qword_1000A93B0);
  return sub_10002509C(v121);
}

uint64_t sub_100024B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DynamicTypeFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100024B98(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100024BA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DynamicTypeFont();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100024C04()
{
  return sub_1000251A4(&qword_1000A93D0, &qword_1000A9388, (void (*)(void))sub_100024C34);
}

unint64_t sub_100024C34()
{
  unint64_t result = qword_1000A93D8;
  if (!qword_1000A93D8)
  {
    sub_100004FF8(&qword_1000A9380);
    sub_100024CD4();
    sub_100006A8C(&qword_1000A93F0, &qword_1000A93F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A93D8);
  }
  return result;
}

unint64_t sub_100024CD4()
{
  unint64_t result = qword_1000A93E0;
  if (!qword_1000A93E0)
  {
    sub_100004FF8(&qword_1000A9378);
    sub_1000250E8(&qword_1000A93E8, (void (*)(uint64_t))type metadata accessor for DynamicTypeFont);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A93E0);
  }
  return result;
}

unint64_t sub_100024D88()
{
  unint64_t result = qword_1000A9408;
  if (!qword_1000A9408)
  {
    sub_100004FF8(&qword_1000A93A0);
    sub_100004FF8(&qword_1000A9390);
    sub_1000251A4(&qword_1000A93C8, &qword_1000A9390, (void (*)(void))sub_100024C04);
    swift_getOpaqueTypeConformance2();
    sub_100006A8C(&qword_1000A9410, &qword_1000A9418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9408);
  }
  return result;
}

uint64_t sub_100024E98(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    sub_100006A8C(&qword_1000A9420, &qword_1000A9428);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100024F3C()
{
  unint64_t result = qword_1000A9438;
  if (!qword_1000A9438)
  {
    sub_100004FF8(&qword_1000A93A8);
    sub_100004FF8(&qword_1000A9360);
    sub_100004FF8(&qword_1000A9358);
    sub_100024E98(&qword_1000A9400, &qword_1000A9358, (void (*)(void))sub_100024D88);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100024D88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9438);
  }
  return result;
}

uint64_t sub_10002504C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10002509C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000250E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100025130()
{
  return sub_1000251A4(&qword_1000A9448, &qword_1000A9330, (void (*)(void))sub_100025174);
}

uint64_t sub_100025174()
{
  return sub_1000251A4(&qword_1000A9450, &qword_1000A9328, (void (*)(void))sub_100025220);
}

uint64_t sub_1000251A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100025220()
{
  unint64_t result = qword_1000A9458;
  if (!qword_1000A9458)
  {
    sub_100004FF8(&qword_1000A9320);
    sub_100006A8C(&qword_1000A9460, &qword_1000A9318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9458);
  }
  return result;
}

void *sub_1000252C0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100087EC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v8 = 0x6867696C68676968;
    uint64_t v9 = 0xE900000000000074;
  }
  else
  {
    uint64_t v8 = 0x6C616D726F6ELL;
    uint64_t v9 = 0xE600000000000000;
  }
  uint64_t v10 = (void *)sub_10005C1C4(v8, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v11 == enum case for WidgetFamily.systemSmall(_:))
  {
    if (v10)
    {
      id v12 = v10;
      [v12 size];
      double v14 = v13 * 0.0375;
      [v12 scale];
      double v16 = v14 * v15;
      [v12 size];
      double v18 = v17 * 0.0375;
      [v12 scale];
      double v20 = v18 * v19;
      [v12 size];
      double v22 = 0.925;
LABEL_7:
      double v23 = v21 * v22;
      [v12 scale];
      double v25 = v23 * v24;
      [v12 size];
      double v27 = v26 * v22;
LABEL_8:
      [v12 scale];
      double v29 = v27 * v28;
      [v12 size];
      double v31 = v30;
      [v12 size];
      uint64_t v10 = sub_1000342B8(v16, v20, v25, v29, v31, v32);
    }
  }
  else
  {
    if (v11 == enum case for WidgetFamily.systemMedium(_:)) {
      return v10;
    }
    if (v11 == enum case for WidgetFamily.systemLarge(_:))
    {
      if (!v10) {
        return v10;
      }
      id v12 = v10;
      [v12 size];
      double v35 = round(v34 * 0.0);
      [v12 scale];
      double v16 = v36 * v35;
      [v12 size];
      double v38 = round(v37 * 0.213576159);
      [v12 scale];
      double v20 = v39 * v38;
      [v12 size];
      double v41 = v40;
      [v12 scale];
      double v25 = v41 * v42;
      [v12 size];
      double v27 = v43 * 0.572847682;
      goto LABEL_8;
    }
    if (v11 != enum case for WidgetFamily.systemExtraLarge(_:))
    {
      uint64_t v50 = sub_10005C1C4(0x6C616D726F6ELL, 0xE600000000000000);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return (void *)v50;
    }
    if (v10)
    {
      id v12 = v10;
      [v12 size];
      double v45 = round(v44 * 0.07145);
      [v12 scale];
      double v16 = v46 * v45;
      [v12 size];
      double v48 = round(v47 * 0.07145);
      [v12 scale];
      double v20 = v49 * v48;
      [v12 size];
      double v22 = 0.8571;
      goto LABEL_7;
    }
  }
  return v10;
}

uint64_t sub_10002568C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000256A0);
}

uint64_t sub_1000256A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100087430();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for AFTimelineEntry();
  double v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1000257F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100025804);
}

uint64_t sub_100025804(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100087430();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for AFTimelineEntry();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for AFExtraLargeContentView()
{
  uint64_t result = qword_1000A94C0;
  if (!qword_1000A94C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000259AC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000259C8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v28 = a2;
  uint64_t v29 = a1;
  uint64_t v3 = sub_1000874A0();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FB4(&qword_1000A9000);
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004FB4(&qword_1000A9550);
  __chkstk_darwin(v24);
  v23[1] = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100087EC0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = sub_100004FB4(&qword_1000A9010);
  __chkstk_darwin(v23[0]);
  uint64_t v17 = v2 + *(int *)(type metadata accessor for AFExtraLargeContentView() + 24);
  uint64_t v18 = *(void *)(v17 + *(int *)(type metadata accessor for AFTimelineEntry() + 36));
  if (*(void *)(v18 + 16) <= v29) {
    goto LABEL_4;
  }
  if ((v29 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v18 + 24 * v29;
    if ((*(unsigned char *)(v19 + 48) & 1) == 0)
    {
      id v22 = *(id *)(v19 + 32);
      swift_bridgeObjectRetain();
      sub_100016FB8((uint64_t)v13);
      sub_1000872A0();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      sub_100006AE0((uint64_t)v16, &qword_1000A8BC8);
      swift_getOpaqueTypeConformance2();
      uint64_t v21 = sub_100087CF0();
      swift_bridgeObjectRelease();

      goto LABEL_6;
    }
LABEL_4:
    sub_100016FB8((uint64_t)v13);
    sub_1000872B0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_100087490();
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_100087B60();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v27);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
    uint64_t v30 = v6;
    uint64_t v31 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v21 = sub_100087CF0();
LABEL_6:
    *double v28 = v21;
    return;
  }
  __break(1u);
}

uint64_t sub_100025E58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v2 = sub_100004FB4(&qword_1000A9500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100004FB4(&qword_1000A9508);
  __chkstk_darwin(v50);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100004FB4(&qword_1000A9510);
  __chkstk_darwin(v51);
  uint64_t v52 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100087EC0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AFExtraLargeContentView();
  uint64_t v13 = v1 + *(int *)(v12 + 20);
  sub_100016FB8((uint64_t)v11);
  sub_10000AC94(v13, (uint64_t)v11);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  sub_100016FB8((uint64_t)v11);
  double v15 = sub_10000AC94(v13, (uint64_t)v11);
  v14(v11, v8);
  sub_100087410();
  double v16 = v15 + v15;
  double v18 = v17 - v16 + -32.0;
  sub_100087410();
  double v20 = v19 + -28.0 - v16;
  double v21 = v18 * 0.5;
  uint64_t v22 = v1 + *(int *)(v12 + 24);
  double v23 = v20
      / (double)(*(void *)(*(void *)(v22 + *(int *)(type metadata accessor for AFTimelineEntry() + 36)) + 16) >> 1);
  *(void *)uint64_t v4 = sub_1000876A0();
  *((void *)v4 + 1) = 0x402F000000000000;
  v4[16] = 0;
  uint64_t v24 = sub_100004FB4(&qword_1000A9518);
  sub_1000262B4(v1, (uint64_t)&v4[*(int *)(v24 + 44)], v21, v23);
  LOBYTE(v11) = sub_1000878B0();
  unsigned __int8 v25 = sub_1000878D0();
  unsigned __int8 v26 = sub_1000878A0();
  char v27 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v11) {
    char v27 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v25) {
    char v27 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v26) {
    char v27 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_100006B3C((uint64_t)v4, (uint64_t)v6, &qword_1000A9500);
  double v36 = &v6[*(int *)(v50 + 36)];
  *double v36 = v27;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_100006AE0((uint64_t)v4, &qword_1000A9500);
  unsigned __int8 v37 = sub_100087890();
  char v38 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v37) {
    char v38 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v47 = v52;
  sub_100006B3C((uint64_t)v6, v52, &qword_1000A9508);
  uint64_t v48 = v47 + *(int *)(v51 + 36);
  *(unsigned char *)uint64_t v48 = v38;
  *(void *)(v48 + 8) = v40;
  *(void *)(v48 + 16) = v42;
  *(void *)(v48 + 24) = v44;
  *(void *)(v48 + 32) = v46;
  *(unsigned char *)(v48 + 40) = 0;
  sub_100006AE0((uint64_t)v6, &qword_1000A9508);
  return sub_100027048(v47, v53);
}

uint64_t sub_1000262B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A9520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v14);
  double v16 = (char *)&v40 - v15;
  __chkstk_darwin(v17);
  double v19 = (char *)&v40 - v18;
  *(void *)double v19 = sub_100087730();
  *((void *)v19 + 1) = 0;
  v19[16] = 0;
  uint64_t v20 = sub_100004FB4(&qword_1000A9528);
  uint64_t v21 = (uint64_t)&v19[*(int *)(v20 + 44)];
  uint64_t v46 = a1;
  sub_100026624(a1, v21, a3, a4);
  id v22 = [self labelColor];
  id v23 = [v22 colorWithAlphaComponent:0.12];

  uint64_t v24 = sub_100087C20();
  sub_100087D90();
  sub_100087400();
  uint64_t v45 = v47;
  int v44 = v48;
  uint64_t v43 = v49;
  int v42 = v50;
  uint64_t v40 = v52;
  uint64_t v41 = v51;
  LOBYTE(v22) = sub_100087890();
  unsigned __int8 v25 = sub_1000878A0();
  char v26 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v22) {
    char v26 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v25) {
    char v26 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  *(void *)double v16 = sub_100087730();
  *((void *)v16 + 1) = 0;
  v16[16] = 0;
  sub_100026A10(v46, (uint64_t)&v16[*(int *)(v20 + 44)], a3, a4);
  sub_100006B3C((uint64_t)v19, (uint64_t)v13, &qword_1000A9520);
  sub_100006B3C((uint64_t)v16, (uint64_t)v10, &qword_1000A9520);
  sub_100006B3C((uint64_t)v13, a2, &qword_1000A9520);
  uint64_t v35 = sub_100004FB4(&qword_1000A9530);
  uint64_t v36 = a2 + *(int *)(v35 + 48);
  uint64_t v37 = v45;
  *(void *)uint64_t v36 = v24;
  *(void *)(v36 + 8) = v37;
  *(unsigned char *)(v36 + 16) = v44;
  *(void *)(v36 + 24) = v43;
  *(unsigned char *)(v36 + 32) = v42;
  uint64_t v38 = v40;
  *(void *)(v36 + 40) = v41;
  *(void *)(v36 + 48) = v38;
  *(unsigned char *)(v36 + 56) = v26;
  *(void *)(v36 + 64) = v28;
  *(void *)(v36 + 72) = v30;
  *(void *)(v36 + 80) = v32;
  *(void *)(v36 + 88) = v34;
  *(unsigned char *)(v36 + 96) = 0;
  sub_100006B3C((uint64_t)v10, a2 + *(int *)(v35 + 64), &qword_1000A9520);
  swift_retain();
  sub_100006AE0((uint64_t)v16, &qword_1000A9520);
  sub_100006AE0((uint64_t)v19, &qword_1000A9520);
  sub_100006AE0((uint64_t)v10, &qword_1000A9520);
  swift_release();
  return sub_100006AE0((uint64_t)v13, &qword_1000A9520);
}

uint64_t sub_100026624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v30 = a2;
  uint64_t v7 = type metadata accessor for AFExtraLargeContentView();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v28 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = sub_100087EC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v29 = sub_100004FB4(&qword_1000A9538);
  uint64_t v16 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016FB8((uint64_t)v15);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  uint64_t v20 = 0;
  if (v19 != enum case for WidgetFamily.systemSmall(_:))
  {
    if (v19 != enum case for WidgetFamily.systemMedium(_:))
    {
      if (v19 != enum case for WidgetFamily.systemLarge(_:))
      {
        if (v19 == enum case for WidgetFamily.systemExtraLarge(_:))
        {
          uint64_t v20 = 4;
          goto LABEL_17;
        }
        if (v19 == enum case for WidgetFamily.accessoryCircular(_:)
          || v19 == enum case for WidgetFamily.accessoryRectangular(_:)
          || v19 == enum case for WidgetFamily.accessoryInline(_:))
        {
          uint64_t v20 = 0;
          goto LABEL_17;
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      }
      uint64_t v20 = 2;
      goto LABEL_17;
    }
    uint64_t v20 = 1;
  }
LABEL_17:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  uint64_t v31 = 0;
  uint64_t v32 = v20;
  swift_getKeyPath();
  sub_1000270B0(a1, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v23 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v24 = swift_allocObject();
  sub_100027118((uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
  unsigned __int8 v25 = (double *)(v24 + ((v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unsigned __int8 v25 = a3;
  v25[1] = a4;
  sub_100004FB4(&qword_1000A8F90);
  sub_100004FB4(&qword_1000A9540);
  sub_10001AE30();
  sub_100027180();
  sub_100087D10();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v30, v18, v29);
}

uint64_t sub_100026A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v43 = a2;
  uint64_t v7 = type metadata accessor for AFExtraLargeContentView();
  uint64_t v38 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v40 = v8;
  uint64_t v42 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087EC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v46 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v47 = (char *)&v36 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v36 - v15;
  __chkstk_darwin(v17);
  int v19 = (char *)&v36 - v18;
  uint64_t v41 = sub_100004FB4(&qword_1000A9538);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v37 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016FB8((uint64_t)v19);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v45(v16, v19, v9);
  int v44 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v21 = v44(v16, v9);
  unint64_t v22 = 0;
  int v23 = enum case for WidgetFamily.systemSmall(_:);
  if (v21 != enum case for WidgetFamily.systemSmall(_:))
  {
    if (v21 == enum case for WidgetFamily.systemMedium(_:))
    {
      unint64_t v22 = 1;
      goto LABEL_8;
    }
    if (v21 == enum case for WidgetFamily.systemLarge(_:)) {
      goto LABEL_5;
    }
    if (v21 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      unint64_t v22 = 4;
    }
    else
    {
      unint64_t v22 = 0;
      if (v21 != enum case for WidgetFamily.accessoryCircular(_:)
        && v21 != enum case for WidgetFamily.accessoryRectangular(_:)
        && v21 != enum case for WidgetFamily.accessoryInline(_:))
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_5:
        unint64_t v22 = 2;
      }
    }
  }
LABEL_8:
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v19, v9);
  uint64_t v25 = (uint64_t)v47;
  sub_100016FB8((uint64_t)v47);
  char v26 = v46;
  v45(v46, (char *)v25, v9);
  int v27 = v44(v26, v9);
  if (v27 == v23)
  {
    unint64_t v28 = 1;
  }
  else
  {
    if (v27 != enum case for WidgetFamily.systemMedium(_:)) {
      goto LABEL_14;
    }
    unint64_t v28 = 2;
  }
  while (1)
  {
    int v27 = ((uint64_t (*)(char *, uint64_t))v24)(v47, v9);
    if (v28 >= v22) {
      break;
    }
    __break(1u);
LABEL_14:
    if (v27 == enum case for WidgetFamily.systemLarge(_:)) {
      goto LABEL_15;
    }
    if (v27 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      unint64_t v28 = 8;
      goto LABEL_18;
    }
    unint64_t v28 = 1;
    if (v27 != enum case for WidgetFamily.accessoryCircular(_:)
      && v27 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v27 != enum case for WidgetFamily.accessoryInline(_:))
    {
      v24(v46, v9);
LABEL_15:
      unint64_t v28 = 4;
LABEL_18:
      v24(v47, v9);
      break;
    }
  }
  unint64_t v48 = v22;
  unint64_t v49 = v28;
  swift_getKeyPath();
  uint64_t v29 = v42;
  sub_1000270B0(a1, v42);
  unint64_t v30 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v31 = (v40 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  sub_100027118(v29, v32 + v30);
  uint64_t v33 = (double *)(v32 + v31);
  *uint64_t v33 = a3;
  v33[1] = a4;
  sub_100004FB4(&qword_1000A8F90);
  sub_100004FB4(&qword_1000A9540);
  sub_10001AE30();
  sub_100027180();
  uint64_t v34 = v37;
  sub_100087D10();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v43, v34, v41);
}

double sub_100026F9C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000259C8(*a1, v9);
  uint64_t v3 = v9[0];
  sub_100087D90();
  sub_100087400();
  uint64_t v4 = v9[1];
  char v5 = v10;
  uint64_t v6 = v11;
  char v7 = v12;
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v7;
  double result = *(double *)&v13;
  *(_OWORD *)(a2 + 40) = v13;
  return result;
}

uint64_t sub_100027048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A9510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000270B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFExtraLargeContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100027118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFExtraLargeContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100027180()
{
  unint64_t result = qword_1000A9548;
  if (!qword_1000A9548)
  {
    sub_100004FF8(&qword_1000A9540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9548);
  }
  return result;
}

uint64_t sub_1000271F8()
{
  uint64_t v1 = type metadata accessor for AFExtraLargeContentView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  unint64_t v7 = ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v8 = v5 + *(int *)(v1 + 20);
  uint64_t v9 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v5 + *(int *)(v1 + 24);
  uint64_t v11 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  type metadata accessor for AFTimelineEntry();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v2 | 7);
}

double sub_1000273AC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100026F9C(a1, a2);
}

uint64_t sub_100027450()
{
  return sub_1000274B4(&qword_1000A9558, &qword_1000A9510, (void (*)(void))sub_10002748C);
}

uint64_t sub_10002748C()
{
  return sub_1000274B4(&qword_1000A9560, &qword_1000A9508, (void (*)(void))sub_100027534);
}

uint64_t sub_1000274B4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100027534()
{
  unint64_t result = qword_1000A9568;
  if (!qword_1000A9568)
  {
    sub_100004FF8(&qword_1000A9500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9568);
  }
  return result;
}

uint64_t sub_100027590()
{
  uint64_t v0 = sub_100087EC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CPTitleView();
  sub_100016FB8((uint64_t)v3);
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for WidgetFamily.systemSmall(_:)) {
    return sub_1000879F0();
  }
  int v5 = v4;
  if (v4 == enum case for WidgetFamily.systemMedium(_:)) {
    return sub_1000879F0();
  }
  if (v4 == enum case for WidgetFamily.systemLarge(_:) || v4 == enum case for WidgetFamily.systemExtraLarge(_:)) {
    return sub_100087A00();
  }
  int v9 = enum case for WidgetFamily.accessoryCircular(_:);
  int v10 = enum case for WidgetFamily.accessoryRectangular(_:);
  int v11 = enum case for WidgetFamily.accessoryInline(_:);
  uint64_t v7 = sub_1000879F0();
  if (v5 != v9 && v5 != v10 && v5 != v11) {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v7;
}

uint64_t sub_100027734@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  unint64_t v22 = a2;
  uint64_t v21 = sub_100087EC0();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  int v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100087170();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FB4(&qword_1000A9640);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v21 - v14;
  type metadata accessor for CPTitleView();
  sub_100016FB8((uint64_t)v5);
  sub_10005BE90(0xD000000000000015, 0x800000010008B6C0, (uint64_t)v5, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  uint64_t v23 = a1;
  sub_100004FB4(&qword_1000A9648);
  sub_10002CD18();
  sub_100087A20();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v16(v12, v15, v9);
  uint64_t v17 = v22;
  v16(v22, v12, v9);
  uint64_t v18 = &v17[*(int *)(sub_100004FB4(&qword_1000A9668) + 48)];
  *(void *)uint64_t v18 = 0;
  v18[8] = 0;
  int v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v15, v9);
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v9);
}

uint64_t sub_100027A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100087380();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FB4(&qword_1000A9660);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_1000876B0();
  *((void *)v10 + 1) = 0x4024000000000000;
  v10[16] = 0;
  uint64_t v11 = sub_100004FB4(&qword_1000A9670);
  sub_100027BE4(a1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
  uint64_t v13 = (uint64_t *)(a2 + *(int *)(sub_100004FB4(&qword_1000A9648) + 36));
  uint64_t v14 = sub_100004FB4(&qword_1000A8950);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v13 + *(int *)(v14 + 28), v7, v4);
  *uint64_t v13 = KeyPath;
  sub_100006B3C((uint64_t)v10, a2, &qword_1000A9660);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_100006AE0((uint64_t)v10, &qword_1000A9660);
}

uint64_t sub_100027BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v149 = a2;
  uint64_t v3 = type metadata accessor for ViewGeometryAnalyzer();
  __chkstk_darwin(v3 - 8);
  uint64_t v136 = (char *)v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000A9678);
  __chkstk_darwin(v5 - 8);
  uint64_t v134 = (char *)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_100004FB4(&qword_1000A9680);
  __chkstk_darwin(v144);
  uint64_t v145 = (uint64_t)v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100004FB4(&qword_1000A9688);
  __chkstk_darwin(v135);
  uint64_t v148 = (char *)v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_100004FB4(&qword_1000A9690);
  __chkstk_darwin(v147);
  uint64_t v138 = (char *)v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v146 = (uint64_t)v115 - v11;
  __chkstk_darwin(v12);
  uint64_t v137 = (char *)v115 - v13;
  uint64_t v14 = sub_100004FB4(&qword_1000A9698);
  __chkstk_darwin(v14 - 8);
  uint64_t v118 = (void *)((char *)v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v117 = sub_100004FB4(&qword_1000A96A0);
  __chkstk_darwin(v117);
  uint64_t v123 = (char *)v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100004FB4(&qword_1000A96A8);
  __chkstk_darwin(v121);
  uint64_t v122 = (uint64_t)v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100004FB4(&qword_1000A96B0);
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v120 = (uint64_t)v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v119 = (uint64_t)v115 - v20;
  uint64_t v133 = sub_100004FB4(&qword_1000A96B8);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v128 = (uint64_t)v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = (int *)type metadata accessor for CPTitleView();
  uint64_t v141 = *((void *)v22 - 1);
  __chkstk_darwin(v22);
  uint64_t v143 = (uint64_t)v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = v23;
  __chkstk_darwin(v24);
  uint64_t v139 = (uint64_t)v115 - v25;
  uint64_t v26 = sub_100087EC0();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v131 = (char *)v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v126 = (uint64_t)v115 - v30;
  __chkstk_darwin(v31);
  uint64_t v116 = (uint64_t)v115 - v32;
  __chkstk_darwin(v33);
  uint64_t v125 = (uint64_t)v115 - v34;
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)v115 - v36;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)v115 - v39;
  uint64_t v41 = sub_100004FB4(&qword_1000A96C0);
  __chkstk_darwin(v41 - 8);
  uint64_t v140 = (uint64_t)v115 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v154 = (uint64_t)v115 - v44;
  uint64_t v150 = v22;
  uint64_t v155 = a1 + v22[6];
  sub_100016FB8((uint64_t)v40);
  uint64_t v45 = *(void (**)(void))(v27 + 104);
  int v153 = enum case for WidgetFamily.systemLarge(_:);
  uint64_t v124 = (void (*)(char *, void, uint64_t))v45;
  v45(v37);
  sub_10002D1D0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v47 = v156;
  uint64_t v46 = v157;
  uint64_t v151 = v27;
  unint64_t v48 = *(void (**)(char *, uint64_t))(v27 + 8);
  v48(v37, v26);
  v48(v40, v26);
  uint64_t v152 = a1;
  uint64_t v49 = a1;
  uint64_t v50 = v139;
  sub_10002D230(v49, v139, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  v115[1] = v27 + 8;
  double v127 = (void (*)(uint64_t, uint64_t))v48;
  if (v46 == v47)
  {
    uint64_t v51 = v26;
    sub_10002D298(v50, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  }
  else
  {
    sub_100016FB8((uint64_t)v40);
    v124(v37, enum case for WidgetFamily.systemExtraLarge(_:), v26);
    sub_1000880F0();
    sub_1000880F0();
    uint64_t v53 = v156;
    uint64_t v52 = v157;
    v48(v37, v26);
    uint64_t v51 = v26;
    v48(v40, v26);
    sub_10002D298(v50, (uint64_t (*)(void))type metadata accessor for CPTitleView);
    if (v52 != v53)
    {
      uint64_t v76 = 1;
      uint64_t v70 = (uint64_t)v138;
      uint64_t v71 = (uint64_t)v137;
      uint64_t v68 = (uint64_t)v136;
      uint64_t v72 = v135;
      uint64_t v77 = v154;
      uint64_t v78 = v133;
      uint64_t v79 = v132;
      uint64_t v73 = (uint64_t)v131;
      uint64_t v62 = v51;
      goto LABEL_38;
    }
  }
  uint64_t v54 = sub_10005C1C4(0x6C616D726F6ELL, 0xE600000000000000);
  if (v54)
  {
    uint64_t v55 = (int *)v54;
    uint64_t v56 = sub_100087D90();
    uint64_t v57 = (uint64_t)v118;
    *uint64_t v118 = v56;
    *(void *)(v57 + 8) = v58;
    uint64_t v59 = v57 + *(int *)(sub_100004FB4(&qword_1000A96E0) + 44);
    uint64_t v150 = v55;
    sub_100028E00(v55, v59);
    uint64_t v60 = v125;
    sub_100016FB8(v125);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v151 + 88);
    uint64_t v62 = v51;
    int v63 = v61(v60, v51);
    int v64 = enum case for WidgetFamily.systemSmall(_:);
    int v65 = enum case for WidgetFamily.systemMedium(_:);
    uint64_t v66 = 0x4048000000000000;
    if (v63 == enum case for WidgetFamily.systemSmall(_:))
    {
      uint64_t v68 = (uint64_t)v136;
      uint64_t v67 = (uint64_t)v123;
    }
    else
    {
      uint64_t v67 = (uint64_t)v123;
      if (v63 == enum case for WidgetFamily.systemMedium(_:))
      {
        uint64_t v68 = (uint64_t)v136;
      }
      else
      {
        uint64_t v68 = (uint64_t)v136;
        if (v63 != v153)
        {
          if (v63 == enum case for WidgetFamily.systemExtraLarge(_:))
          {
            uint64_t v66 = 0x4053800000000000;
          }
          else
          {
            uint64_t v66 = 0;
            if (v63 != enum case for WidgetFamily.accessoryCircular(_:)
              && v63 != enum case for WidgetFamily.accessoryRectangular(_:)
              && v63 != enum case for WidgetFamily.accessoryInline(_:))
            {
              v127(v125, v62);
            }
          }
        }
      }
    }
    sub_100006B3C(v57, v67, &qword_1000A9698);
    *(void *)(v67 + *(int *)(v117 + 36)) = v66;
    sub_100006AE0(v57, &qword_1000A9698);
    uint64_t v80 = v116;
    sub_100016FB8(v116);
    int v81 = v61(v80, v62);
    if (v81 != v64
      && v81 != v65
      && v81 != v153
      && v81 != enum case for WidgetFamily.systemExtraLarge(_:)
      && v81 != enum case for WidgetFamily.accessoryCircular(_:)
      && v81 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v81 != enum case for WidgetFamily.accessoryInline(_:))
    {
      v127(v80, v62);
    }
    uint64_t v82 = v126;
    sub_100016FB8(v126);
    int v83 = v61(v82, v62);
    if (v83 == v64)
    {
      uint64_t v70 = (uint64_t)v138;
      uint64_t v71 = (uint64_t)v137;
      uint64_t v72 = v135;
      uint64_t v73 = (uint64_t)v131;
      uint64_t v74 = v130;
    }
    else
    {
      uint64_t v70 = (uint64_t)v138;
      uint64_t v72 = v135;
      uint64_t v73 = (uint64_t)v131;
      uint64_t v74 = v130;
      if (v83 == v65)
      {
        uint64_t v71 = (uint64_t)v137;
      }
      else
      {
        uint64_t v71 = (uint64_t)v137;
        if (v83 != v153
          && v83 != enum case for WidgetFamily.systemExtraLarge(_:)
          && v83 != enum case for WidgetFamily.accessoryCircular(_:)
          && v83 != enum case for WidgetFamily.accessoryRectangular(_:)
          && v83 != enum case for WidgetFamily.accessoryInline(_:))
        {
          v127(v126, v62);
        }
      }
    }
    sub_100087D90();
    sub_100087400();
    uint64_t v84 = v122;
    sub_100006B3C(v67, v122, &qword_1000A96A0);

    uint64_t v85 = (_OWORD *)(v84 + *(int *)(v121 + 36));
    long long v86 = v158;
    *uint64_t v85 = v157;
    v85[1] = v86;
    v85[2] = v159;
    sub_100006AE0(v67, &qword_1000A96A0);
    uint64_t v87 = v120;
    sub_100006B3C(v84, v120, &qword_1000A96A8);
    *(void *)(v87 + *(int *)(v74 + 36)) = 0x3FF0000000000000;
    sub_100006AE0(v84, &qword_1000A96A8);
    uint64_t v88 = v119;
    sub_100006C4C(v87, v119, &qword_1000A96B0);
    uint64_t v89 = v88;
    uint64_t v75 = v128;
    sub_100006C4C(v89, v128, &qword_1000A96B0);
    uint64_t v69 = 0;
  }
  else
  {
    uint64_t v69 = 1;
    uint64_t v70 = (uint64_t)v138;
    uint64_t v71 = (uint64_t)v137;
    uint64_t v68 = (uint64_t)v136;
    uint64_t v72 = v135;
    uint64_t v73 = (uint64_t)v131;
    uint64_t v74 = v130;
    uint64_t v75 = v128;
    uint64_t v62 = v51;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v75, v69, 1, v74);
  uint64_t v77 = v154;
  sub_100006C4C(v75, v154, &qword_1000A96B8);
  uint64_t v76 = 0;
  uint64_t v78 = v133;
  uint64_t v79 = v132;
LABEL_38:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v77, v76, 1, v78);
  uint64_t v90 = sub_100087730();
  sub_100016FB8(v73);
  int v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 88))(v73, v62);
  uint64_t v92 = 0x3FF0000000000000;
  if (v91 == enum case for WidgetFamily.systemSmall(_:) || v91 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v93 = v152;
    uint64_t v94 = (uint64_t)v134;
  }
  else
  {
    uint64_t v93 = v152;
    uint64_t v94 = (uint64_t)v134;
    if (v91 != v153)
    {
      if (v91 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
        uint64_t v92 = 0x4010000000000000;
      }
      else
      {
        uint64_t v92 = 0x3FF0000000000000;
        if (v91 != enum case for WidgetFamily.accessoryCircular(_:)
          && v91 != enum case for WidgetFamily.accessoryRectangular(_:)
          && v91 != enum case for WidgetFamily.accessoryInline(_:))
        {
          v127(v73, v62);
          uint64_t v92 = 0x3FF0000000000000;
        }
      }
    }
  }
  *(void *)uint64_t v94 = v90;
  *(void *)(v94 + 8) = v92;
  *(unsigned char *)(v94 + 16) = 0;
  uint64_t v95 = sub_100004FB4(&qword_1000A96C8);
  sub_100029A38(v93, v94 + *(int *)(v95 + 44));
  uint64_t v96 = v145;
  sub_100006B3C(v94, v145, &qword_1000A9678);
  *(void *)(v96 + *(int *)(v144 + 36)) = 0x4000000000000000;
  sub_100006AE0(v94, &qword_1000A9678);
  uint64_t v97 = enum case for CoordinateSpace.global(_:);
  uint64_t v98 = sub_100087470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 104))(v68, v97, v98);
  uint64_t v99 = sub_100087D90();
  uint64_t v101 = v100;
  uint64_t v102 = (uint64_t)v148;
  uint64_t v103 = (uint64_t)&v148[*(int *)(v72 + 36)];
  sub_10002D230(v68, v103, (uint64_t (*)(void))type metadata accessor for ViewGeometryAnalyzer);
  uint64_t v104 = (uint64_t *)(v103 + *(int *)(sub_100004FB4(&qword_1000A96D0) + 36));
  *uint64_t v104 = v99;
  v104[1] = v101;
  sub_100006B3C(v96, v102, &qword_1000A9680);
  sub_10002D298(v68, (uint64_t (*)(void))type metadata accessor for ViewGeometryAnalyzer);
  sub_100006AE0(v96, &qword_1000A9680);
  uint64_t v105 = v143;
  sub_10002D230(v93, v143, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  unint64_t v106 = (*(unsigned __int8 *)(v141 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
  uint64_t v107 = swift_allocObject();
  sub_10002D0FC(v105, v107 + v106);
  uint64_t v108 = v146;
  sub_100006B3C(v102, v146, &qword_1000A9688);
  uint64_t v109 = (uint64_t (**)())(v108 + *(int *)(v147 + 36));
  char *v109 = sub_10002D160;
  v109[1] = (uint64_t (*)())v107;
  sub_100006AE0(v102, &qword_1000A9688);
  sub_100006C4C(v108, v71, &qword_1000A9690);
  uint64_t v110 = v154;
  uint64_t v111 = v140;
  sub_100006B3C(v154, v140, &qword_1000A96C0);
  sub_100006B3C(v71, v70, &qword_1000A9690);
  uint64_t v112 = v149;
  sub_100006B3C(v111, v149, &qword_1000A96C0);
  uint64_t v113 = sub_100004FB4(&qword_1000A96D8);
  sub_100006B3C(v70, v112 + *(int *)(v113 + 48), &qword_1000A9690);
  sub_100006AE0(v71, &qword_1000A9690);
  sub_100006AE0(v110, &qword_1000A96C0);
  sub_100006AE0(v70, &qword_1000A9690);
  return sub_100006AE0(v111, &qword_1000A96C0);
}

uint64_t sub_100028E00@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  id v103 = a1;
  uint64_t v100 = sub_100004FB4(&qword_1000A96E8);
  __chkstk_darwin(v100);
  uint64_t v101 = (uint64_t *)((char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_100004FB4(&qword_1000A96F0);
  __chkstk_darwin(v99);
  uint64_t v95 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FB4(&qword_1000A96F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v89 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100004FB4(&qword_1000A9700);
  uint64_t v91 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v90 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v92 = (char *)&v77 - v8;
  uint64_t v84 = sub_100087DA0();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100087C50();
  uint64_t v98 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v97 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100004FB4(&qword_1000A9708);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v85 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100004FB4(&qword_1000A9710);
  uint64_t v93 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v79 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000874A0();
  uint64_t v88 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v87 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v86 = (uint64_t)&v77 - v16;
  uint64_t v17 = sub_100004FB4(&qword_1000A9718);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v22 = (char *)&v77 - v21;
  uint64_t v23 = sub_100087E60();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v77 - v28;
  type metadata accessor for CPTitleView();
  sub_1000171F8((uint64_t)v29);
  sub_100087E50();
  char v30 = sub_100087E40();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
  v31(v26, v23);
  v31(v29, v23);
  if (v30)
  {
    uint64_t v32 = v85;
    uint64_t v77 = v19;
    uint64_t v33 = v97;
    uint64_t v78 = v22;
    uint64_t v34 = v98;
    uint64_t v35 = v86;
    sub_100017524(v86);
    sub_10002D1D0(&qword_1000A9728, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    uint64_t v36 = v87;
    sub_100088280();
    sub_10002D1D0(&qword_1000A9730, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v37 = sub_100087FE0();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v88 + 8);
    v38(v36, v13);
    v38((char *)v35, v13);
    uint64_t v39 = (uint64_t)v95;
    uint64_t v40 = v89;
    id v41 = v103;
    if (v37)
    {
      id v42 = v103;
      sub_100087C30();
      LODWORD(v88) = enum case for Image.ResizingMode.stretch(_:);
      uint64_t v43 = v104;
      (*(void (**)(char *))(v34 + 104))(v33);
      uint64_t v44 = sub_100087CB0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v43);
      uint64_t v105 = v44;
      uint64_t v45 = v32;
      sub_100087A80();
      swift_release();
      uint64_t v46 = v83;
      uint64_t v47 = v82;
      uint64_t v48 = v84;
      (*(void (**)(char *, void, uint64_t))(v83 + 104))(v82, enum case for BlendMode.destinationOut(_:), v84);
      uint64_t v49 = v79;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v79[*(int *)(v96 + 36)], v47, v48);
      uint64_t v50 = v80;
      uint64_t v51 = v40;
      uint64_t v52 = v81;
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v49, v45, v81);
      uint64_t v53 = v47;
      uint64_t v39 = (uint64_t)v95;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v53, v48);
      uint64_t v54 = v45;
      uint64_t v55 = v104;
      uint64_t v56 = v52;
      uint64_t v40 = v51;
      uint64_t v57 = v88;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v54, v56);
      id v41 = v103;
      uint64_t v58 = (uint64_t)v49;
      uint64_t v59 = (uint64_t)v78;
      sub_100006C4C(v58, (uint64_t)v78, &qword_1000A9710);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v59, 0, 1, v96);
      uint64_t v60 = v94;
    }
    else
    {
      uint64_t v59 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v78, 1, 1, v96);
      uint64_t v57 = enum case for Image.ResizingMode.stretch(_:);
      uint64_t v60 = v94;
      uint64_t v55 = v104;
    }
    id v67 = v41;
    sub_100087C30();
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 104))(v33, v57, v55);
    sub_100087CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v55);
    sub_100087E90();
    uint64_t v68 = sub_100087EA0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v40, 0, 1, v68);
    uint64_t v69 = (uint64_t)v40;
    uint64_t v70 = v90;
    sub_100087CA0();
    swift_release();
    sub_100006AE0(v69, &qword_1000A96F8);
    uint64_t v71 = v91;
    uint64_t v72 = v92;
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v92, v70, v60);
    uint64_t v73 = (uint64_t)v77;
    sub_100006B3C(v59, (uint64_t)v77, &qword_1000A9718);
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
    v74(v70, v72, v60);
    sub_100006B3C(v73, v39, &qword_1000A9718);
    uint64_t v75 = sub_100004FB4(&qword_1000A9738);
    v74((char *)(v39 + *(int *)(v75 + 48)), v70, v60);
    uint64_t v76 = *(void (**)(char *, uint64_t))(v71 + 8);
    v76(v70, v60);
    sub_100006AE0(v73, &qword_1000A9718);
    sub_100006B3C(v39, (uint64_t)v101, &qword_1000A96F0);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000A9720, &qword_1000A96F0);
    sub_1000877E0();
    sub_100006AE0(v39, &qword_1000A96F0);
    v76(v72, v60);
    return sub_100006AE0(v59, &qword_1000A9718);
  }
  else
  {
    id v61 = v103;
    sub_100087C30();
    int v63 = v97;
    uint64_t v62 = v98;
    uint64_t v64 = v104;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, enum case for Image.ResizingMode.stretch(_:), v104);
    uint64_t v65 = sub_100087CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
    *uint64_t v101 = v65;
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000A9720, &qword_1000A96F0);
    return sub_1000877E0();
  }
}

uint64_t sub_100029A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v175 = a2;
  uint64_t v168 = sub_100004FB4(&qword_1000A9748);
  __chkstk_darwin(v168);
  uint64_t v170 = (char *)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_100004FB4(&qword_1000A9750);
  uint64_t v141 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v140 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000874D0();
  __chkstk_darwin(v5 - 8);
  uint64_t v161 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_100087DA0();
  uint64_t v160 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v179 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v157 = (uint64_t (**)(void))sub_100087E60();
  uint64_t v156 = (uint64_t)*(v157 - 1);
  __chkstk_darwin(v157);
  uint64_t v155 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v154 = (uint64_t)&v140 - v10;
  uint64_t v11 = sub_1000879B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v188 = v11;
  uint64_t v189 = v12;
  __chkstk_darwin(v11);
  v187 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100087EC0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v140 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v140 - v22;
  uint64_t v180 = sub_100004FB4(&qword_1000A9758);
  __chkstk_darwin(v180);
  uint64_t v150 = (char *)&v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_100004FB4(&qword_1000A9760);
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v164 = (char *)&v140 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004FB4(&qword_1000A9768);
  __chkstk_darwin(v26 - 8);
  uint64_t v174 = (uint64_t)&v140 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v162 = (char *)&v140 - v29;
  __chkstk_darwin(v30);
  uint64_t v163 = (uint64_t)&v140 - v31;
  __chkstk_darwin(v32);
  uint64_t v186 = (uint64_t)&v140 - v33;
  uint64_t v34 = type metadata accessor for CPTitleView();
  uint64_t v183 = a1 + *(int *)(v34 + 24);
  sub_100016FB8((uint64_t)v23);
  uint64_t v35 = *(void (**)(void))(v15 + 104);
  unsigned int v184 = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v153 = v15 + 104;
  uint64_t v152 = (void (*)(char *, void, uint64_t))v35;
  v35(v20);
  uint64_t v36 = sub_10002D1D0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  uint64_t v151 = v36;
  sub_1000880F0();
  uint64_t v37 = v190;
  uint64_t v38 = v192;
  uint64_t v169 = v15;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v15 + 8);
  long long v159 = v20;
  v39(v20, v14);
  long long v158 = v23;
  uint64_t v173 = v14;
  uint64_t v176 = (void (*)(uint64_t, uint64_t))v39;
  v39(v23, v14);
  uint64_t v172 = v17;
  uint64_t v167 = v15 + 8;
  uint64_t v182 = v34;
  if (v37 != v38) {
    sub_10005BC60();
  }
  sub_1000876D0();
  uint64_t v40 = sub_100087A60();
  uint64_t v42 = v41;
  char v44 = v43 & 1;
  sub_100087960();
  uint64_t v45 = sub_100087A30();
  uint64_t v47 = v46;
  char v49 = v48 & 1;
  sub_100006AD0(v40, v42, v44);
  swift_bridgeObjectRelease();
  sub_100027590();
  uint64_t v50 = v189;
  uint64_t v51 = *(void (**)(void))(v189 + 104);
  uint64_t v185 = a1;
  uint64_t v52 = v187;
  unsigned int v144 = enum case for Font.Leading.tight(_:);
  uint64_t v53 = v188;
  uint64_t v145 = v189 + 104;
  uint64_t v143 = (void (*)(char *, void, uint64_t))v51;
  v51(v187);
  sub_1000879E0();
  swift_release();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v189 = v50 + 8;
  uint64_t v142 = v54;
  v54(v52, v53);
  uint64_t v149 = sub_100087A50();
  uint64_t v148 = v55;
  int v146 = v56;
  uint64_t v178 = v57;
  swift_release();
  sub_100006AD0(v45, v47, v49);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v177 = swift_getKeyPath();
  uint64_t v58 = v154;
  sub_1000171F8(v154);
  uint64_t v59 = v155;
  sub_100087E50();
  LOBYTE(v45) = sub_100087E40();
  uint64_t v60 = *(void (**)(char *, uint64_t (**)(void)))(v156 + 8);
  id v61 = v157;
  v60(v59, v157);
  v60((char *)v58, v61);
  if (v45) {
    uint64_t v62 = sub_100087BE0();
  }
  else {
    uint64_t v62 = sub_100087BF0();
  }
  uint64_t v156 = v62;
  uint64_t v63 = swift_getKeyPath();
  sub_1000171F8(v58);
  sub_100087E50();
  char v64 = sub_100087E40();
  v60(v59, v61);
  v60((char *)v58, v61);
  uint64_t v65 = v160;
  uint64_t v66 = (unsigned int *)&enum case for BlendMode.normal(_:);
  if ((v64 & 1) == 0) {
    uint64_t v66 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  id v67 = v179;
  uint64_t v68 = v181;
  (*(void (**)(char *, void, uint64_t))(v160 + 104))(v179, *v66, v181);
  uint64_t v69 = (uint64_t)v161;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v161, v67, v68);
  uint64_t v70 = (uint64_t)v150;
  uint64_t v71 = (uint64_t)&v150[*(int *)(v180 + 36)];
  long long v157 = &type metadata accessor for _BlendModeEffect;
  sub_10002D230(v69, v71, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v72 = v149;
  uint64_t v73 = v148;
  *(void *)uint64_t v70 = v149;
  *(void *)(v70 + 8) = v73;
  char v74 = v146 & 1;
  *(unsigned char *)(v70 + 16) = v146 & 1;
  uint64_t v75 = v177;
  uint64_t v76 = KeyPath;
  *(void *)(v70 + 24) = v178;
  *(void *)(v70 + 32) = v76;
  *(unsigned char *)(v70 + 40) = 1;
  *(void *)(v70 + 48) = v75;
  *(void *)(v70 + 56) = 1;
  *(unsigned char *)(v70 + 64) = 0;
  uint64_t v77 = v156;
  *(void *)(v70 + 72) = v63;
  *(void *)(v70 + 80) = v77;
  sub_100024B98(v72, v73, v74);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v78 = v69;
  uint64_t v79 = v180;
  sub_10002D298(v78, (uint64_t (*)(void))v157);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v179, v181);
  sub_100006AD0(v72, v73, v74);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v80 = sub_10002D2F8();
  uint64_t v81 = v164;
  sub_100087A80();
  sub_100006AE0(v70, &qword_1000A9758);
  uint64_t v82 = (uint64_t)v158;
  sub_100016FB8((uint64_t)v158);
  uint64_t v83 = v159;
  uint64_t v84 = v173;
  v152(v159, v184, v173);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v85 = v190;
  uint64_t v86 = v192;
  uint64_t v87 = v83;
  uint64_t v88 = v176;
  v176((uint64_t)v87, v84);
  v88(v82, v84);
  if (v85 == v86)
  {
    uint64_t v190 = v79;
    unint64_t v191 = v80;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v90 = v140;
    uint64_t v91 = v166;
    sub_100087AD0();
    uint64_t v92 = v141;
    uint64_t v93 = v171;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v170, v90, v171);
    swift_storeEnumTagMultiPayload();
    uint64_t v190 = v91;
    unint64_t v191 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v94 = (uint64_t)v162;
    sub_1000877E0();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v90, v93);
    uint64_t v95 = v185;
    uint64_t v96 = v165;
  }
  else
  {
    uint64_t v96 = v165;
    uint64_t v91 = v166;
    (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v170, v81, v166);
    swift_storeEnumTagMultiPayload();
    uint64_t v190 = v79;
    unint64_t v191 = v80;
    uint64_t v97 = swift_getOpaqueTypeConformance2();
    uint64_t v190 = v91;
    unint64_t v191 = v97;
    swift_getOpaqueTypeConformance2();
    uint64_t v94 = (uint64_t)v162;
    sub_1000877E0();
    uint64_t v95 = v185;
  }
  uint64_t v98 = v163;
  sub_100006C4C(v94, v163, &qword_1000A9768);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v81, v91);
  sub_100006C4C(v98, v186, &qword_1000A9768);
  uint64_t v99 = *(void *)(v95 + *(int *)(v182 + 40));
  unint64_t v100 = *(void *)(v99 + 48);
  uint64_t v190 = *(void *)(v99 + 40);
  unint64_t v191 = v100;
  sub_1000068F8();
  swift_bridgeObjectRetain();
  uint64_t v101 = sub_100087A70();
  uint64_t v103 = v102;
  char v105 = v104 & 1;
  sub_100087960();
  uint64_t v106 = sub_100087A30();
  uint64_t v108 = v107;
  char v110 = v109;
  sub_100006AD0(v101, v103, v105);
  swift_bridgeObjectRelease();
  uint64_t v111 = (uint64_t)v172;
  sub_100016FB8((uint64_t)v172);
  int v112 = (*(uint64_t (**)(uint64_t, uint64_t))(v169 + 88))(v111, v84);
  if (v112 == v184 || (int v113 = v112, v112 == enum case for WidgetFamily.systemMedium(_:)))
  {
    sub_100087A00();
  }
  else if (v112 == enum case for WidgetFamily.systemLarge(_:))
  {
    sub_1000879C0();
  }
  else if (v112 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    sub_100087990();
  }
  else
  {
    int v139 = enum case for WidgetFamily.accessoryCircular(_:);
    sub_1000879F0();
    if (v113 != v139
      && v113 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v113 != enum case for WidgetFamily.accessoryInline(_:))
    {
      v176(v111, v84);
    }
  }
  uint64_t v114 = v142;
  char v115 = v110 & 1;
  uint64_t v116 = v187;
  uint64_t v117 = v188;
  v143(v187, v144, v188);
  sub_1000879E0();
  swift_release();
  v114(v116, v117);
  uint64_t v188 = sub_100087A50();
  uint64_t v189 = v118;
  uint64_t v120 = v119;
  LOBYTE(v116) = v121;
  swift_release();
  char v122 = v116 & 1;
  sub_100006AD0(v106, v108, v115);
  swift_bridgeObjectRelease();
  uint64_t v123 = swift_getKeyPath();
  uint64_t v124 = sub_100087BE0();
  uint64_t v125 = swift_getKeyPath();
  uint64_t v126 = swift_getKeyPath();
  uint64_t v127 = v186;
  uint64_t v128 = v174;
  sub_100006B3C(v186, v174, &qword_1000A9768);
  uint64_t v129 = v175;
  sub_100006B3C(v128, v175, &qword_1000A9768);
  uint64_t v130 = v129 + *(int *)(sub_100004FB4(&qword_1000A97B8) + 48);
  uint64_t v131 = v188;
  uint64_t v132 = v189;
  *(void *)uint64_t v130 = v188;
  *(void *)(v130 + 8) = v120;
  *(unsigned char *)(v130 + 16) = v122;
  *(void *)(v130 + 24) = v132;
  *(void *)(v130 + 32) = v123;
  *(void *)(v130 + 40) = 1;
  *(unsigned char *)(v130 + 48) = 0;
  *(void *)(v130 + 56) = v125;
  *(void *)(v130 + 64) = v124;
  *(void *)(v130 + 72) = v126;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v130 + 80) = _Q0;
  sub_100024B98(v131, v120, v122);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100006AE0(v127, &qword_1000A9768);
  sub_100006AD0(v131, v120, v122);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100006AE0(v128, &qword_1000A9768);
}

uint64_t sub_10002ABCC()
{
  return sub_100087D00();
}

uint64_t sub_10002AC50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004FB4(&qword_1000A9628);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1000876B0();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_100004FB4(&qword_1000A9630);
  sub_100027734(v2, &v6[*(int *)(v7 + 44)]);
  LOBYTE(v2) = sub_100087880();
  sub_100006B3C((uint64_t)v6, a1, &qword_1000A9628);
  uint64_t v8 = a1 + *(int *)(sub_100004FB4(&qword_1000A9638) + 36);
  *(unsigned char *)uint64_t v8 = v2;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(unsigned char *)(v8 + 40) = 1;
  return sub_100006AE0((uint64_t)v6, &qword_1000A9628);
}

double sub_10002AD44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100087EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a2, v3, v5);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == enum case for WidgetFamily.systemSmall(_:)) {
    goto LABEL_4;
  }
  int v9 = v8;
  if (v8 == enum case for WidgetFamily.systemMedium(_:)) {
    goto LABEL_6;
  }
  if (v8 == enum case for WidgetFamily.systemLarge(_:))
  {
LABEL_4:
    sub_100087410();
    return v10;
  }
  if (v8 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
LABEL_6:
    sub_100087410();
    return v12;
  }
  int v14 = enum case for WidgetFamily.accessoryCircular(_:);
  int v15 = enum case for WidgetFamily.accessoryRectangular(_:);
  int v16 = enum case for WidgetFamily.accessoryInline(_:);
  sub_100087410();
  double v11 = v17 * 0.4085;
  if (v9 != v14 && v9 != v15 && v9 != v16) {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return v11;
}

uint64_t *sub_10002AF0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100004FB4(&qword_1000A88D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000874A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    double v10 = (uint64_t *)((char *)v4 + v9);
    double v11 = (uint64_t *)((char *)a2 + v9);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *double v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    int v14 = (uint64_t *)((char *)v4 + v13);
    int v15 = (uint64_t *)((char *)a2 + v13);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *int v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)v4 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_100087430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[9];
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_100087220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = (int *)type metadata accessor for CPTimelineEntry();
    *(void *)&v26[v29[5]] = *(void *)&v27[v29[5]];
    v26[v29[6]] = v27[v29[6]];
    v26[v29[7]] = v27[v29[7]];
    v26[v29[8]] = v27[v29[8]];
    v26[v29[9]] = v27[v29[9]];
    uint64_t v30 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    long long v34 = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 1) = *((_OWORD *)v32 + 1);
    *((_OWORD *)v31 + 2) = v34;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10002B300(uint64_t a1, int *a2)
{
  sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000874A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_10002B598(void *a1, void *a2, int *a3)
{
  sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000874A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_100087380();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v24[v27[5]] = *(void *)&v25[v27[5]];
  v24[v27[6]] = v25[v27[6]];
  v24[v27[7]] = v25[v27[7]];
  v24[v27[8]] = v25[v27[8]];
  v24[v27[9]] = v25[v27[9]];
  uint64_t v28 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  long long v32 = *((_OWORD *)v30 + 2);
  *((_OWORD *)v29 + 1) = *((_OWORD *)v30 + 1);
  *((_OWORD *)v29 + 2) = v32;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_10002B940(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A88D8);
    sub_100004FB4(&qword_1000A88D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000874A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100006AE0((uint64_t)a1 + v7, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_100006AE0((uint64_t)a1 + v11, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    sub_100006AE0((uint64_t)a1 + v15, &qword_1000A88D0);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v24[v27[5]] = *(void *)&v25[v27[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24[v27[6]] = v25[v27[6]];
  v24[v27[7]] = v25[v27[7]];
  v24[v27[8]] = v25[v27[8]];
  v24[v27[9]] = v25[v27[9]];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_retain();
  swift_release();
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  swift_retain();
  swift_release();
  v29[1] = v30[1];
  swift_retain();
  swift_release();
  v29[2] = v30[2];
  v29[3] = v30[3];
  v29[4] = v30[4];
  v29[5] = v30[5];
  return a1;
}

char *sub_10002BD80(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000874A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087E60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_100087380();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[9];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v28[v31[5]] = *(void *)&v29[v31[5]];
  v28[v31[6]] = v29[v31[6]];
  v28[v31[7]] = v29[v31[7]];
  v28[v31[8]] = v29[v31[8]];
  v28[v31[9]] = v29[v31[9]];
  uint64_t v32 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  uint64_t v33 = &a1[v32];
  long long v34 = &a2[v32];
  long long v35 = *((_OWORD *)v34 + 2);
  long long v36 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = *((_OWORD *)v34 + 1);
  *((_OWORD *)v33 + 2) = v35;
  *(_OWORD *)uint64_t v33 = v36;
  return a1;
}

char *sub_10002C128(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A88D8);
    uint64_t v6 = sub_100004FB4(&qword_1000A88D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000874A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100006AE0((uint64_t)&a1[v8], &qword_1000A87A8);
    uint64_t v11 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087E60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_100006AE0((uint64_t)&a1[v13], &qword_1000A87B0);
    uint64_t v16 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    sub_100006AE0((uint64_t)&a1[v18], &qword_1000A88D0);
    uint64_t v21 = sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_100087380();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[9];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v28[v31[5]] = *(void *)&v29[v31[5]];
  swift_bridgeObjectRelease();
  v28[v31[6]] = v29[v31[6]];
  v28[v31[7]] = v29[v31[7]];
  v28[v31[8]] = v29[v31[8]];
  v28[v31[9]] = v29[v31[9]];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_release();
  uint64_t v32 = a3[11];
  uint64_t v33 = &a1[v32];
  long long v34 = &a2[v32];
  *(void *)&a1[v32] = *(void *)v34;
  swift_release();
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_release();
  long long v35 = *((_OWORD *)v34 + 2);
  *((_OWORD *)v33 + 1) = *((_OWORD *)v34 + 1);
  *((_OWORD *)v33 + 2) = v35;
  return a1;
}

uint64_t sub_10002C548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002C55C);
}

uint64_t sub_10002C55C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A9570);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FB4(&qword_1000A87B8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  uint64_t v14 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  uint64_t v15 = sub_100004FB4(&qword_1000A88C0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  uint64_t v16 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  uint64_t v17 = type metadata accessor for CPTimelineEntry();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  unint64_t v19 = *(void *)(a1 + a3[10]);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

uint64_t sub_10002C7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002C7C4);
}

uint64_t sub_10002C7C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A9570);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A87B8);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100004FB4(&qword_1000A87C0);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t v17 = sub_100004FB4(&qword_1000A88C0);
        if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = *(void *)(v17 - 8);
          uint64_t v15 = a4[7];
        }
        else
        {
          uint64_t v18 = sub_100087430();
          if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
          {
            uint64_t v10 = v18;
            uint64_t v14 = *(void *)(v18 - 8);
            uint64_t v15 = a4[8];
          }
          else
          {
            uint64_t result = type metadata accessor for CPTimelineEntry();
            if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
            {
              *(void *)(a1 + a4[10]) = (a2 - 1);
              return result;
            }
            uint64_t v10 = result;
            uint64_t v14 = *(void *)(result - 8);
            uint64_t v15 = a4[9];
          }
        }
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CPTitleView()
{
  uint64_t result = qword_1000A95D0;
  if (!qword_1000A95D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002CA60()
{
  sub_10002CCA0(319, (unint64_t *)&unk_1000A95E0, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  if (v0 <= 0x3F)
  {
    sub_10002CCA0(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      sub_10002CCA0(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      if (v2 <= 0x3F)
      {
        sub_10002CCA0(319, (unint64_t *)&unk_1000A92E0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
        if (v3 <= 0x3F)
        {
          sub_100087430();
          if (v4 <= 0x3F)
          {
            type metadata accessor for CPTimelineEntry();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_10002CCA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100087390();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10002CCF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002CD10@<X0>(uint64_t a1@<X8>)
{
  return sub_100027A00(*(void *)(v1 + 16), a1);
}

unint64_t sub_10002CD18()
{
  unint64_t result = qword_1000A9650;
  if (!qword_1000A9650)
  {
    sub_100004FF8(&qword_1000A9648);
    sub_100006A8C(&qword_1000A9658, &qword_1000A9660);
    sub_100006A8C(&qword_1000A8978, &qword_1000A8950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9650);
  }
  return result;
}

uint64_t sub_10002CDE4()
{
  uint64_t v1 = (int *)type metadata accessor for CPTitleView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000874A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + v1[6];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v5 + v1[7];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v2 | 7;
  uint64_t v14 = v3 + v4;
  uint64_t v15 = v5 + v1[8];
  uint64_t v16 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v5 + v1[9];
  uint64_t v18 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v14, v13);
}

uint64_t sub_10002D0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CPTitleView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D160()
{
  type metadata accessor for CPTitleView();

  return sub_10002ABCC();
}

uint64_t sub_10002D1D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002D230(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002D298(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10002D2F8()
{
  unint64_t result = qword_1000A9770;
  if (!qword_1000A9770)
  {
    sub_100004FF8(&qword_1000A9758);
    sub_10002D374();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9770);
  }
  return result;
}

unint64_t sub_10002D374()
{
  unint64_t result = qword_1000A9778;
  if (!qword_1000A9778)
  {
    sub_100004FF8(&qword_1000A9780);
    sub_10002D414();
    sub_100006A8C(&qword_1000A93F0, &qword_1000A93F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9778);
  }
  return result;
}

unint64_t sub_10002D414()
{
  unint64_t result = qword_1000A9788;
  if (!qword_1000A9788)
  {
    sub_100004FF8(&qword_1000A9790);
    sub_10002D4B4();
    sub_100006A8C(&qword_1000A97A8, &qword_1000A97B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9788);
  }
  return result;
}

unint64_t sub_10002D4B4()
{
  unint64_t result = qword_1000A9798;
  if (!qword_1000A9798)
  {
    sub_100004FF8(&qword_1000A97A0);
    sub_100006A8C(&qword_1000A9410, &qword_1000A9418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9798);
  }
  return result;
}

unint64_t sub_10002D560()
{
  unint64_t result = qword_1000A97C0;
  if (!qword_1000A97C0)
  {
    sub_100004FF8(&qword_1000A9638);
    sub_100006A8C(&qword_1000A97C8, &qword_1000A9628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A97C0);
  }
  return result;
}

uint64_t sub_10002D600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002D614);
}

uint64_t sub_10002D614(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9] + 32);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_10002D7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002D7EC);
}

uint64_t sub_10002D7EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A87C0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100087430();
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[7];
      }
      else
      {
        uint64_t result = type metadata accessor for CPTimelineEntry();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9] + 32) = a2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[8];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CPExtraLargeContentView()
{
  uint64_t result = qword_1000A9828;
  if (!qword_1000A9828) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002D9EC()
{
  sub_100006754(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_100006754(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_100087430();
      if (v2 <= 0x3F)
      {
        type metadata accessor for CPTimelineEntry();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10002DB74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002DB90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A9888);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = a1 + *(int *)(type metadata accessor for CPExtraLargeContentView() + 24);
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_100005554(*(void *)v16, v18);
  char v19 = sub_100016FF4(v17, v18);
  sub_100005720(v17, v18);
  uint64_t v20 = 0;
  if (v19)
  {
    sub_1000171F8((uint64_t)v15);
    sub_100087E50();
    sub_100021A40();
    char v21 = sub_100087FE0();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v21)
    {
      uint64_t v20 = 0;
    }
    else
    {
      if (qword_1000A86D8 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1000AD9C0;
      swift_retain();
    }
  }
  *(void *)uint64_t v8 = sub_1000876B0();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v23 = sub_100004FB4(&qword_1000A9890);
  sub_10002DE60(a1, (uint64_t)&v8[*(int *)(v23 + 44)]);
  sub_100006B3C((uint64_t)v8, (uint64_t)v5, &qword_1000A9888);
  uint64_t v24 = v28;
  *uint64_t v28 = v20;
  uint64_t v25 = sub_100004FB4(&qword_1000A9898);
  sub_100006B3C((uint64_t)v5, (uint64_t)v24 + *(int *)(v25 + 48), &qword_1000A9888);
  swift_retain();
  sub_100006AE0((uint64_t)v8, &qword_1000A9888);
  sub_100006AE0((uint64_t)v5, &qword_1000A9888);
  return swift_release();
}

uint64_t sub_10002DE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A98A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CPAppGridView();
  __chkstk_darwin(v5 - 8);
  uint64_t v59 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100004FB4(&qword_1000A98A8) - 8;
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v62 = (uint64_t)&v54 - v9;
  uint64_t v10 = sub_100087EC0();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000A98B0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FB4(&qword_1000A98B8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  char v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = sub_100004FB4(&qword_1000A98C0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004FB4(&qword_1000A98C8);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v55 = (uint64_t)&v54 - v31;
  sub_10002E454((uint64_t)v25);
  sub_10002F6E0(a1, (uint64_t)v15);
  uint64_t v32 = *(int *)(type metadata accessor for CPExtraLargeContentView() + 28);
  uint64_t v54 = a1;
  uint64_t v33 = a1 + v32;
  sub_100016FB8((uint64_t)v12);
  sub_10002AD44(v33, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);
  sub_100087D90();
  sub_100087400();
  sub_100006B3C((uint64_t)v15, (uint64_t)v19, &qword_1000A98B0);
  long long v34 = &v19[*(int *)(v17 + 44)];
  long long v35 = v65;
  *(_OWORD *)long long v34 = v64;
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v66;
  sub_100006AE0((uint64_t)v15, &qword_1000A98B0);
  sub_100006C4C((uint64_t)v19, (uint64_t)v22, &qword_1000A98B8);
  uint64_t v36 = sub_100087D90();
  uint64_t v38 = v37;
  uint64_t v39 = (uint64_t)&v29[*(int *)(v27 + 44)];
  sub_100006B3C((uint64_t)v22, v39, &qword_1000A98B8);
  uint64_t v40 = (uint64_t *)(v39 + *(int *)(sub_100004FB4(&qword_1000A98D0) + 36));
  *uint64_t v40 = v36;
  v40[1] = v38;
  sub_100006B3C((uint64_t)v25, (uint64_t)v29, &qword_1000A98C0);
  sub_100006AE0((uint64_t)v22, &qword_1000A98B8);
  sub_100006AE0((uint64_t)v25, &qword_1000A98C0);
  uint64_t v41 = v55;
  sub_100006C4C((uint64_t)v29, v55, &qword_1000A98C8);
  uint64_t v42 = v59;
  sub_10002EBC4(v59);
  uint64_t v43 = v61;
  sub_10002EF04(v61);
  uint64_t v44 = sub_100087D90();
  uint64_t v46 = v45;
  uint64_t v47 = (uint64_t)v58;
  uint64_t v48 = (uint64_t)&v58[*(int *)(v60 + 44)];
  sub_100006B3C(v43, v48, &qword_1000A98A0);
  char v49 = (uint64_t *)(v48 + *(int *)(sub_100004FB4(&qword_1000A98D8) + 36));
  *char v49 = v44;
  v49[1] = v46;
  sub_100032100(v42, v47, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  sub_100006AE0(v43, &qword_1000A98A0);
  sub_100032168(v42, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  uint64_t v50 = v62;
  sub_100006C4C(v47, v62, &qword_1000A98A8);
  sub_100006B3C(v41, (uint64_t)v29, &qword_1000A98C8);
  sub_100006B3C(v50, v47, &qword_1000A98A8);
  uint64_t v51 = v63;
  sub_100006B3C((uint64_t)v29, v63, &qword_1000A98C8);
  uint64_t v52 = sub_100004FB4(&qword_1000A98E0);
  sub_100006B3C(v47, v51 + *(int *)(v52 + 48), &qword_1000A98A8);
  sub_100006AE0(v50, &qword_1000A98A8);
  sub_100006AE0(v41, &qword_1000A98C8);
  sub_100006AE0(v47, &qword_1000A98A8);
  return sub_100006AE0((uint64_t)v29, &qword_1000A98C8);
}

uint64_t sub_10002E454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100087820();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  __chkstk_darwin(v3);
  uint64_t v56 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004FB4(&qword_1000A9A20);
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v50 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100004FB4(&qword_1000A9A28);
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000A9A30);
  uint64_t v64 = *(void *)(v7 - 8);
  uint64_t v65 = v7;
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100087EC0();
  uint64_t v9 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100087170();
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v60 = (char *)v47 - v18;
  uint64_t v19 = type metadata accessor for CPExtraLargeContentView();
  uint64_t v20 = v1;
  uint64_t v21 = v1 + *(int *)(v19 + 32);
  unint64_t v22 = *(void *)(v21 + *(int *)(type metadata accessor for CPTimelineEntry() + 20));
  if (!(v22 >> 62))
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000883C0();
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v49 = a1;
  if ((v22 & 0xC000000000000001) != 0)
  {
    uint64_t v59 = sub_100088340();
    goto LABEL_6;
  }
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v59 = *(void *)(v22 + 32);
    swift_retain();
LABEL_6:
    uint64_t v48 = v20;
    swift_bridgeObjectRelease();
    sub_100016FB8((uint64_t)v11);
    sub_100007910((uint64_t)v11, (uint64_t)v14);
    uint64_t v27 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v25 = v9 + 8;
    uint64_t v26 = v27;
    v27(v11, v62);
    uint64_t v28 = v63;
    uint64_t v29 = v61;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v14, 1, v61) != 1)
    {
      uint64_t v31 = *(void (**)(void))(v28 + 32);
      v47[2] = v25;
      uint64_t v32 = v60;
      v31();
      uint64_t v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 16))(v16, v32, v29);
      v47[1] = v47;
      __chkstk_darwin(v33);
      uint64_t v34 = v48;
      uint64_t v35 = v59;
      v47[-2] = v48;
      v47[-1] = v35;
      sub_100004FB4(&qword_1000A9A38);
      sub_100006A8C(&qword_1000A9A40, &qword_1000A9A38);
      uint64_t v36 = v50;
      sub_100087A20();
      uint64_t v37 = v34 + *(int *)(v19 + 28);
      sub_100016FB8((uint64_t)v11);
      sub_10002AD44(v37, (uint64_t)v11);
      v26(v11, v62);
      sub_100087D90();
      sub_100087400();
      uint64_t v39 = v53;
      uint64_t v38 = (uint64_t)v54;
      uint64_t v40 = v55;
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v54, v36, v55);
      uint64_t v41 = (_OWORD *)(v38 + *(int *)(v52 + 36));
      long long v42 = v67;
      *uint64_t v41 = v66;
      v41[1] = v42;
      v41[2] = v68;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v40);
      uint64_t v43 = v56;
      sub_100087810();
      sub_100031FF8();
      uint64_t v44 = v51;
      sub_100087B40();
      swift_release();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v58);
      sub_100006AE0(v38, &qword_1000A9A28);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v29);
      uint64_t v46 = v64;
      uint64_t v45 = v65;
      a1 = v49;
      (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v49, v44, v65);
      uint64_t v30 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(a1, v30, 1, v45);
    }
    swift_release();
    sub_100006AE0((uint64_t)v14, &qword_1000A8BC8);
    uint64_t v30 = 1;
    a1 = v49;
LABEL_11:
    uint64_t v46 = v64;
    uint64_t v45 = v65;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(a1, v30, 1, v45);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002EBC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100087430();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CPExtraLargeContentView();
  sub_100032100(v1 + *(int *)(v16 + 32), (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1 + *(int *)(v16 + 28), v9);
  *uint64_t v8 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v5 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  sub_100032098((uint64_t)v15, a1, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v17 = (int *)type metadata accessor for CPAppGridView();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1 + v17[5], v12, v9);
  *(void *)(a1 + v17[6]) = 2;
  *(void *)(a1 + v17[7]) = 3;
  *(unsigned char *)(a1 + v17[8]) = 0;
  uint64_t v18 = (uint64_t *)(a1 + v17[9]);
  *uint64_t v18 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (uint64_t *)(a1 + v17[10]);
  uint64_t *v19 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v8, a1 + v17[11], &qword_1000A87C0);
  return sub_100006C4C((uint64_t)v5, a1 + v17[12], &qword_1000A88C0);
}

uint64_t sub_10002EF04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v27 = a1;
  uint64_t v3 = sub_100004FB4(&qword_1000A98E8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004FB4(&qword_1000A98F0);
  uint64_t v6 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  sub_1000171F8((uint64_t)&v26 - v14);
  sub_100087E50();
  sub_100021A40();
  char v16 = sub_100087FE0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  if (v16)
  {
    uint64_t v18 = 1;
    uint64_t v20 = v26;
    uint64_t v19 = v27;
  }
  else
  {
    sub_100030C50(v2, (uint64_t)v5);
    type metadata accessor for CPExtraLargeContentView();
    sub_100087410();
    sub_100087D90();
    sub_100087400();
    sub_100006B3C((uint64_t)v5, (uint64_t)v8, &qword_1000A98E8);
    uint64_t v21 = v26;
    unint64_t v22 = &v8[*(int *)(v26 + 36)];
    long long v23 = v29;
    *(_OWORD *)unint64_t v22 = v28;
    *((_OWORD *)v22 + 1) = v23;
    *((_OWORD *)v22 + 2) = v30;
    sub_100006AE0((uint64_t)v5, &qword_1000A98E8);
    uint64_t v24 = v27;
    sub_100006C4C((uint64_t)v8, v27, &qword_1000A98F0);
    uint64_t v18 = 0;
    uint64_t v19 = v24;
    uint64_t v20 = v21;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v19, v18, 1, v20);
}

uint64_t sub_10002F1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_100087720();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v6 = sub_100004FB4(&qword_1000A9A58);
  return sub_10002F238(a1, a2, (void *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_10002F238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v4 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v4 - 8);
  long long v42 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100087430();
  uint64_t v41 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CPTitleView();
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  unint64_t v22 = (char *)&v39 - v21;
  long long v23 = (int *)type metadata accessor for CPExtraLargeContentView();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1 + v23[7], v12);
  sub_100032100(a1 + v23[8], (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v24 = (long long *)(a1 + v23[9]);
  uint64_t v25 = *((void *)v24 + 4);
  long long v26 = v24[1];
  long long v45 = *v24;
  long long v46 = v26;
  uint64_t v47 = v25;
  swift_retain();
  sub_100004FB4(&qword_1000A88C8);
  sub_100087CE0();
  uint64_t v27 = v48;
  uint64_t v40 = v49;
  long long v39 = v50;
  uint64_t v28 = v51;
  uint64_t v29 = v52;
  *uint64_t v8 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = (uint64_t)v42;
  *long long v42 = KeyPath;
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  uint64_t *v19 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (uint64_t *)((char *)v19 + v17[7]);
  *uint64_t v32 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v8, (uint64_t)v19 + v17[8], &qword_1000A87C0);
  sub_100006C4C(v31, (uint64_t)v19 + v17[9], &qword_1000A88C0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v19 + v17[10], v15, v41);
  sub_100032098((uint64_t)v11, (uint64_t)v19 + v17[11], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  *(uint64_t *)((char *)v19 + v17[12]) = v44;
  uint64_t v33 = (char *)v19 + v17[13];
  uint64_t v34 = v40;
  *(void *)uint64_t v33 = v27;
  *((void *)v33 + 1) = v34;
  *((_OWORD *)v33 + 1) = v39;
  *((void *)v33 + 4) = v28;
  *((void *)v33 + 5) = v29;
  sub_100032098((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  sub_100032100((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  uint64_t v35 = v43;
  *uint64_t v43 = 0;
  *((unsigned char *)v35 + 8) = 0;
  uint64_t v36 = v35;
  uint64_t v37 = sub_100004FB4(&qword_1000A9A60);
  sub_100032100((uint64_t)v19, (uint64_t)v36 + *(int *)(v37 + 48), (uint64_t (*)(void))type metadata accessor for CPTitleView);
  sub_100032168((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  return sub_100032168((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPTitleView);
}

uint64_t sub_10002F6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A9990);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004FB4(&qword_1000A9998);
  __chkstk_darwin(v35);
  uint64_t v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100087EC0();
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v33 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004FB4(&qword_1000A99A0);
  __chkstk_darwin(v36);
  uint64_t v37 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CPExtraLargeContentView();
  uint64_t v12 = a1 + *(int *)(v11 + 32);
  uint64_t v13 = type metadata accessor for CPTimelineEntry();
  if (*(unsigned char *)(v12 + *(int *)(v13 + 32)) == 1)
  {
    uint64_t v14 = a1 + *(int *)(v11 + 24);
    uint64_t v15 = *(void *)v14;
    uint64_t v32 = v8;
    char v16 = *(unsigned char *)(v14 + 8);
    sub_100005554(v15, v16);
    char v17 = sub_100016FF4(v15, v16);
    char v18 = v16;
    uint64_t v8 = v32;
    sub_100005720(v15, v18);
    if ((v17 & 1) == 0)
    {
      swift_storeEnumTagMultiPayload();
      sub_100006A8C(&qword_1000A99B8, &qword_1000A9998);
      uint64_t v25 = v38;
      sub_1000877E0();
      uint64_t v26 = sub_100004FB4(&qword_1000A99A8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
    }
  }
  unint64_t v19 = *(void *)(v12 + *(int *)(v13 + 20));
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    if (result) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_15;
  }
LABEL_5:
  if ((v19 & 0xC000000000000001) != 0)
  {
    uint64_t v22 = sub_100088340();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = *(void *)(v19 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v22 + 32) && (uint64_t v24 = (void *)sub_10005C1C4(0xD00000000000001ELL, 0x800000010008BE20)) != 0
    || (uint64_t v23 = v33,
        sub_100016FB8(v33),
        uint64_t v24 = sub_1000252C0(v23, 1),
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v23, v8),
        v24))
  {
    *uint64_t v7 = sub_100087D90();
    v7[1] = v27;
    uint64_t v28 = sub_100004FB4(&qword_1000A99B0);
    sub_10002FC08(v24, a1, (uint64_t)v7 + *(int *)(v28 + 44));
    sub_100006B3C((uint64_t)v7, v37, &qword_1000A9998);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000A99B8, &qword_1000A9998);
    sub_1000877E0();

    swift_release();
    sub_100006AE0((uint64_t)v7, &qword_1000A9998);
    uint64_t v29 = sub_100004FB4(&qword_1000A99A8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v5, 0, 1, v29);
    return sub_100006C4C((uint64_t)v5, v38, &qword_1000A9990);
  }
  swift_release();
LABEL_16:
  uint64_t v30 = sub_100004FB4(&qword_1000A99A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
}

uint64_t sub_10002FC08@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v115 = a3;
  uint64_t v4 = sub_100087E60();
  uint64_t v113 = *(void *)(v4 - 8);
  uint64_t v114 = v4;
  __chkstk_darwin(v4);
  char v109 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v106 = (uint64_t)&v89 - v7;
  uint64_t v8 = sub_100087DA0();
  uint64_t v111 = *(void *)(v8 - 8);
  uint64_t v112 = v8;
  __chkstk_darwin(v8);
  char v110 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100004FB4(&qword_1000A99C0);
  __chkstk_darwin(v102);
  uint64_t v99 = (uint64_t *)((char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v108 = sub_100004FB4(&qword_1000A99C8);
  uint64_t v105 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  unint64_t v100 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100004FB4(&qword_1000A99D0) - 8;
  __chkstk_darwin(v103);
  uint64_t v107 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v101 = (char *)&v89 - v14;
  __chkstk_darwin(v15);
  uint64_t v104 = (uint64_t)&v89 - v16;
  uint64_t v97 = sub_100087380();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100087EC0();
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  unint64_t v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100087C50();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004FB4(&qword_1000A88F8);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (uint64_t *)((char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_100004FB4(&qword_1000A8900);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100004FB4(&qword_1000A99D8);
  __chkstk_darwin(v31 - 8);
  uint64_t v89 = (uint64_t)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100004FB4(&qword_1000A99E0);
  __chkstk_darwin(v90);
  uint64_t v34 = (char *)&v89 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004FB4(&qword_1000A99E8);
  __chkstk_darwin(v35 - 8);
  uint64_t v92 = (char *)&v89 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v94 = (uint64_t)&v89 - v38;
  id v39 = a1;
  sub_100087C30();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for Image.ResizingMode.stretch(_:), v20);
  sub_100087CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  *uint64_t v26 = sub_100087D90();
  v26[1] = v40;
  uint64_t v41 = sub_100004FB4(&qword_1000A8948);
  sub_100064EF8((char *)v26 + *(int *)(v41 + 44), 0.3);
  swift_release();
  sub_100006B3C((uint64_t)v26, (uint64_t)v30, &qword_1000A88F8);
  long long v42 = &v30[*(int *)(v28 + 44)];
  *(void *)long long v42 = 0;
  *((_WORD *)v42 + 4) = 257;
  sub_100006AE0((uint64_t)v26, &qword_1000A88F8);
  uint64_t v43 = type metadata accessor for CPExtraLargeContentView();
  uint64_t v44 = v98;
  uint64_t v45 = v98 + *(int *)(v43 + 28);
  sub_100016FB8((uint64_t)v19);
  double v46 = sub_10002AD44(v45, (uint64_t)v19);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v91 + 8);
  uint64_t v48 = v93;
  v47(v19, v93);
  double v49 = v46;
  sub_100016FB8((uint64_t)v19);
  double v50 = sub_10002AD44(v45, (uint64_t)v19);
  v47(v19, v48);
  double v51 = v50;
  sub_100087410();
  double v53 = v52;
  sub_100087410();
  double v55 = v54;
  uint64_t v56 = sub_100087D90();
  uint64_t v57 = v89;
  sub_100077724(0.0, 1, v49, 0, v51, 0, 0.0, 1, v89, v53, 0, v55, 0, v56, v58);
  sub_100006AE0((uint64_t)v30, &qword_1000A8900);
  uint64_t v59 = v96;
  uint64_t v60 = v95;
  uint64_t v61 = v97;
  (*(void (**)(char *, void, uint64_t))(v96 + 104))(v95, enum case for ColorScheme.light(_:), v97);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v63 = (uint64_t *)&v34[*(int *)(v90 + 36)];
  uint64_t v64 = sub_100004FB4(&qword_1000A8950);
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))((char *)v63 + *(int *)(v64 + 28), v60, v61);
  *uint64_t v63 = KeyPath;
  sub_100006B3C(v57, (uint64_t)v34, &qword_1000A99D8);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  sub_100006AE0(v57, &qword_1000A99D8);
  sub_100031ED0(&qword_1000A99F0, &qword_1000A99E0, (void (*)(void))sub_100031F74);
  uint64_t v65 = (uint64_t)v92;
  sub_100087AF0();
  sub_100006AE0((uint64_t)v34, &qword_1000A99E0);
  uint64_t v66 = v94;
  sub_100006C4C(v65, v94, &qword_1000A99E8);
  uint64_t v67 = sub_100087720();
  uint64_t v68 = (uint64_t)v99;
  uint64_t *v99 = v67;
  *(void *)(v68 + 8) = 0;
  *(unsigned char *)(v68 + 16) = 1;
  uint64_t v69 = sub_100004FB4(&qword_1000A9A00);
  sub_10003079C(v44, v68 + *(int *)(v69 + 44));
  sub_100006A8C(&qword_1000A9A08, &qword_1000A99C0);
  uint64_t v70 = v100;
  sub_100087A80();
  sub_100006AE0(v68, &qword_1000A99C0);
  uint64_t v71 = v106;
  sub_1000171F8(v106);
  uint64_t v72 = v109;
  sub_100087E50();
  uint64_t v73 = v72;
  LOBYTE(v72) = sub_100087E40();
  char v74 = *(void (**)(char *, uint64_t))(v113 + 8);
  uint64_t v75 = v73;
  uint64_t v76 = v114;
  v74(v75, v114);
  v74((char *)v71, v76);
  uint64_t v78 = v110;
  uint64_t v77 = v111;
  uint64_t v79 = (unsigned int *)&enum case for BlendMode.destinationOut(_:);
  if ((v72 & 1) == 0) {
    uint64_t v79 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v80 = v112;
  (*(void (**)(char *, void, uint64_t))(v111 + 104))(v110, *v79, v112);
  uint64_t v81 = (uint64_t)v101;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(&v101[*(int *)(v103 + 44)], v78, v80);
  uint64_t v82 = v105;
  uint64_t v83 = v108;
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 16))(v81, v70, v108);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v80);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v70, v83);
  uint64_t v84 = v104;
  sub_100006C4C(v81, v104, &qword_1000A99D0);
  sub_100006B3C(v66, v65, &qword_1000A99E8);
  uint64_t v85 = v107;
  sub_100006B3C(v84, v107, &qword_1000A99D0);
  uint64_t v86 = v115;
  sub_100006B3C(v65, v115, &qword_1000A99E8);
  uint64_t v87 = sub_100004FB4(&qword_1000A9A10);
  sub_100006B3C(v85, v86 + *(int *)(v87 + 48), &qword_1000A99D0);
  sub_100006AE0(v84, &qword_1000A99D0);
  sub_100006AE0(v66, &qword_1000A99E8);
  sub_100006AE0(v85, &qword_1000A99D0);
  return sub_100006AE0(v65, &qword_1000A99E8);
}

uint64_t sub_10003079C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v47 = type metadata accessor for CPTitleGradientView() - 8;
  __chkstk_darwin(v47);
  uint64_t v4 = (uint64_t *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v48 = (uint64_t)&v40 - v6;
  uint64_t v7 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v7 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087EC0();
  uint64_t v43 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CPHeaderGradientView();
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v45 = (uint64_t)&v40 - v18;
  unint64_t v19 = (int *)type metadata accessor for CPExtraLargeContentView();
  uint64_t v20 = a1 + v19[7];
  uint64_t v44 = a1 + v19[5];
  sub_100016FB8((uint64_t)v12);
  double v21 = sub_10002AD44(v20, (uint64_t)v12);
  long long v42 = *(void (**)(char *, uint64_t))(v10 + 8);
  v42(v12, v9);
  sub_100087410();
  double v23 = v22 * 0.20625;
  uint64_t v24 = a1 + v19[8];
  uint64_t v40 = type metadata accessor for CPTimelineEntry;
  uint64_t v41 = v24;
  uint64_t v25 = v46;
  sub_100032100(v24, v46, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  *uint64_t v16 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (double *)((char *)v16 + *(int *)(v14 + 28));
  *uint64_t v26 = v21;
  v26[1] = v23;
  sub_100032098(v25, (uint64_t)v16 + *(int *)(v14 + 32), (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v27 = v45;
  sub_100032098((uint64_t)v16, v45, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  sub_100016FB8((uint64_t)v12);
  double v28 = sub_10002AD44(v20, (uint64_t)v12);
  v42(v12, v43);
  sub_100087410();
  double v30 = v29 * 0.4;
  sub_100032100(v41, v25, (uint64_t (*)(void))v40);
  *uint64_t v4 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = v47;
  uint64_t v32 = (double *)((char *)v4 + *(int *)(v47 + 28));
  *uint64_t v32 = v28;
  v32[1] = v30;
  sub_100032098(v25, (uint64_t)v4 + *(int *)(v31 + 32), (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v33 = v48;
  sub_100032098((uint64_t)v4, v48, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  uint64_t v34 = v27;
  sub_100032100(v27, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  uint64_t v35 = v33;
  sub_100032100(v33, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  uint64_t v36 = v49;
  sub_100032100((uint64_t)v16, v49, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  uint64_t v37 = sub_100004FB4(&qword_1000A9A18);
  uint64_t v38 = v36 + *(int *)(v37 + 48);
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 0;
  sub_100032100((uint64_t)v4, v36 + *(int *)(v37 + 64), (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  sub_100032168(v35, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  sub_100032168(v34, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  sub_100032168((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  return sub_100032168((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
}

uint64_t sub_100030C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A98F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004FB4(&qword_1000A9900);
  __chkstk_darwin(v35);
  uint64_t v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100087EC0();
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v33 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004FB4(&qword_1000A9908);
  __chkstk_darwin(v36);
  uint64_t v37 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CPExtraLargeContentView();
  uint64_t v12 = a1 + *(int *)(v11 + 32);
  uint64_t v13 = type metadata accessor for CPTimelineEntry();
  if (*(unsigned char *)(v12 + *(int *)(v13 + 32)) == 1)
  {
    uint64_t v14 = a1 + *(int *)(v11 + 24);
    uint64_t v15 = *(void *)v14;
    uint64_t v32 = v8;
    char v16 = *(unsigned char *)(v14 + 8);
    sub_100005554(v15, v16);
    char v17 = sub_100016FF4(v15, v16);
    char v18 = v16;
    uint64_t v8 = v32;
    sub_100005720(v15, v18);
    if ((v17 & 1) == 0)
    {
      swift_storeEnumTagMultiPayload();
      sub_100006A8C(&qword_1000A9920, &qword_1000A9900);
      uint64_t v25 = v38;
      sub_1000877E0();
      uint64_t v26 = sub_100004FB4(&qword_1000A9910);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
    }
  }
  unint64_t v19 = *(void *)(v12 + *(int *)(v13 + 20));
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    if (result) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_15;
  }
LABEL_5:
  if ((v19 & 0xC000000000000001) != 0)
  {
    uint64_t v22 = sub_100088340();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = *(void *)(v19 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v22 + 32) && (uint64_t v24 = (void *)sub_10005C1C4(0xD00000000000001ELL, 0x800000010008BE20)) != 0
    || (uint64_t v23 = v33,
        sub_100016FB8(v33),
        uint64_t v24 = sub_1000252C0(v23, 1),
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v23, v8),
        v24))
  {
    *uint64_t v7 = sub_100087D90();
    v7[1] = v27;
    uint64_t v28 = sub_100004FB4(&qword_1000A9918);
    sub_10003117C(v24, a1, v22, (uint64_t)v7 + *(int *)(v28 + 44));
    sub_100006B3C((uint64_t)v7, v37, &qword_1000A9900);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000A9920, &qword_1000A9900);
    sub_1000877E0();

    swift_release();
    sub_100006AE0((uint64_t)v7, &qword_1000A9900);
    uint64_t v29 = sub_100004FB4(&qword_1000A9910);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v5, 0, 1, v29);
    return sub_100006C4C((uint64_t)v5, v38, &qword_1000A98F8);
  }
  swift_release();
LABEL_16:
  uint64_t v30 = sub_100004FB4(&qword_1000A9910);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
}

uint64_t sub_10003117C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v68 = a3;
  uint64_t v73 = a2;
  uint64_t v78 = sub_100004FB4(&qword_1000A9928);
  __chkstk_darwin(v78);
  uint64_t v79 = (uint64_t *)((char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100087380();
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v72 = v7;
  __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100004FB4(&qword_1000A9228);
  __chkstk_darwin(v64);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100087D60();
  uint64_t v11 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FB4(&qword_1000A9230);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FB4(&qword_1000A9238);
  __chkstk_darwin(v62);
  char v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100004FB4(&qword_1000A9930);
  __chkstk_darwin(v65);
  uint64_t v67 = (uint64_t)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100004FB4(&qword_1000A9938);
  __chkstk_darwin(v75);
  uint64_t v66 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v69 = (uint64_t)&v61 - v22;
  uint64_t v23 = sub_100004FB4(&qword_1000A9940);
  __chkstk_darwin(v23 - 8);
  uint64_t v77 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v76 = (char *)&v61 - v26;
  uint64_t v27 = sub_100087C50();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = a1;
  sub_100087C30();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, enum case for Image.ResizingMode.stretch(_:), v27);
  uint64_t v74 = sub_100087CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  sub_100087DF0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  type metadata accessor for CPExtraLargeContentView();
  if (sub_100007644())
  {
    sub_100087D50();
    char v36 = sub_100087880();
    uint64_t v37 = v63;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v10, v13, v63);
    v10[*(int *)(v64 + 36)] = v36;
    sub_100006B3C((uint64_t)v10, (uint64_t)v16, &qword_1000A9228);
    sub_100006AE0((uint64_t)v10, &qword_1000A9228);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v37);
    sub_100087BA0();
    uint64_t v38 = sub_100087BD0();
    swift_release();
    char v39 = sub_100087880();
    sub_100006B3C((uint64_t)v16, (uint64_t)v18, &qword_1000A9230);
    uint64_t v40 = &v18[*(int *)(v62 + 36)];
    *(void *)uint64_t v40 = v38;
    v40[8] = v39;
    sub_100006AE0((uint64_t)v16, &qword_1000A9230);
    uint64_t v41 = *(void **)(v68 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor);
    if (!v41)
    {
      uint64_t v43 = *(void **)(v68 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor);
      if (v43) {
        id v44 = v43;
      }
      else {
        [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.431372549 blue:0.62745098 alpha:1.0];
      }
    }
    id v45 = v41;
    sub_100087B80();
    uint64_t v46 = sub_100087BD0();
    swift_release();
    char v47 = sub_100087880();
    uint64_t v48 = v67;
    sub_100006B3C((uint64_t)v18, v67, &qword_1000A9238);
    uint64_t v49 = v48 + *(int *)(v65 + 36);
    *(void *)uint64_t v49 = v46;
    *(unsigned char *)(v49 + 8) = v47;
    sub_100006AE0((uint64_t)v18, &qword_1000A9238);
    uint64_t KeyPath = swift_getKeyPath();
    double v52 = v70;
    uint64_t v51 = v71;
    uint64_t v53 = v72;
    (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, enum case for ColorScheme.light(_:), v72);
    uint64_t v54 = (uint64_t)v66;
    double v55 = (uint64_t *)&v66[*(int *)(v75 + 36)];
    uint64_t v56 = sub_100004FB4(&qword_1000A8950);
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))((char *)v55 + *(int *)(v56 + 28), v52, v53);
    *double v55 = KeyPath;
    sub_100006B3C(v48, v54, &qword_1000A9930);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    sub_100006AE0(v48, &qword_1000A9930);
    uint64_t v57 = v69;
    sub_100006C4C(v54, v69, &qword_1000A9938);
    sub_100006B3C(v57, (uint64_t)v79, &qword_1000A9938);
    swift_storeEnumTagMultiPayload();
    sub_100031ED0((unint64_t *)&qword_1000A9948, &qword_1000A9938, (void (*)(void))sub_100031C78);
    uint64_t v42 = (uint64_t)v76;
    sub_1000877E0();
    sub_100006AE0(v57, &qword_1000A9938);
  }
  else
  {
    if (qword_1000A86E0 != -1) {
      swift_once();
    }
    *uint64_t v79 = qword_1000AD9C8;
    swift_storeEnumTagMultiPayload();
    sub_100031ED0((unint64_t *)&qword_1000A9948, &qword_1000A9938, (void (*)(void))sub_100031C78);
    swift_retain();
    uint64_t v42 = (uint64_t)v76;
    sub_1000877E0();
  }
  uint64_t v58 = v77;
  sub_100006B3C(v42, v77, &qword_1000A9940);
  *(void *)a4 = v74;
  *(_OWORD *)(a4 + 8) = xmmword_1000899D0;
  *(void *)(a4 + 24) = 0x3FF0000000000000;
  *(void *)(a4 + 32) = v33;
  *(void *)(a4 + 40) = v35;
  uint64_t v59 = sub_100004FB4(&qword_1000A9988);
  sub_100006B3C(v58, a4 + *(int *)(v59 + 48), &qword_1000A9940);
  swift_retain();
  sub_100006AE0(v42, &qword_1000A9940);
  sub_100006AE0(v58, &qword_1000A9940);
  return swift_release();
}

uint64_t sub_100031A94()
{
  uint64_t v1 = sub_100087840();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000A9870);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_100087D90();
  v7[1] = v8;
  uint64_t v9 = sub_100004FB4(&qword_1000A9878);
  sub_10002DB90(v0, (uint64_t *)((char *)v7 + *(int *)(v9 + 44)));
  sub_100087830();
  sub_100087D90();
  sub_100006A8C(&qword_1000A9880, &qword_1000A9870);
  sub_100087B30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100006AE0((uint64_t)v7, &qword_1000A9870);
}

unint64_t sub_100031C78()
{
  unint64_t result = qword_1000A9950;
  if (!qword_1000A9950)
  {
    sub_100004FF8(&qword_1000A9930);
    sub_100031D18();
    sub_100006A8C(&qword_1000A9978, &qword_1000A9980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9950);
  }
  return result;
}

unint64_t sub_100031D18()
{
  unint64_t result = qword_1000A9958;
  if (!qword_1000A9958)
  {
    sub_100004FF8(&qword_1000A9238);
    sub_100031DB8();
    sub_100006A8C(&qword_1000A9978, &qword_1000A9980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9958);
  }
  return result;
}

unint64_t sub_100031DB8()
{
  unint64_t result = qword_1000A9960;
  if (!qword_1000A9960)
  {
    sub_100004FF8(&qword_1000A9230);
    sub_100031E58();
    sub_100006A8C(&qword_1000A9970, &qword_1000A9228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9960);
  }
  return result;
}

unint64_t sub_100031E58()
{
  unint64_t result = qword_1000A9968;
  if (!qword_1000A9968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9968);
  }
  return result;
}

uint64_t sub_100031ED0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    sub_100006A8C(&qword_1000A8978, &qword_1000A8950);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100031F74()
{
  unint64_t result = qword_1000A99F8;
  if (!qword_1000A99F8)
  {
    sub_100004FF8(&qword_1000A99D8);
    sub_1000069EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A99F8);
  }
  return result;
}

uint64_t sub_100031FF0@<X0>(uint64_t a1@<X8>)
{
  return sub_10002F1D8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100031FF8()
{
  unint64_t result = qword_1000A9A48;
  if (!qword_1000A9A48)
  {
    sub_100004FF8(&qword_1000A9A28);
    sub_100006A8C(&qword_1000A9A50, &qword_1000A9A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9A48);
  }
  return result;
}

uint64_t sub_100032098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100032100(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100032168(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000321C8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10003225C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (!v2)
  {
    unint64_t v7 = 0xE900000000000072;
    uint64_t v5 = 0x6567676F6C637767;
    goto LABEL_5;
  }

  id v3 = [v0 mainBundle];
  id v4 = [v3 bundleIdentifier];

  if (v4)
  {
    uint64_t v5 = sub_100088000();
    unint64_t v7 = v6;

LABEL_5:
    qword_1000A9A68 = v5;
    unk_1000A9A70 = v7;
    return;
  }
  __break(1u);
}

uint64_t sub_100032348(uint64_t a1)
{
  return sub_1000323C4(a1, qword_1000AD9D0);
}

uint64_t sub_100032368(uint64_t a1)
{
  return sub_1000323C4(a1, qword_1000AD9E8);
}

uint64_t sub_100032384(uint64_t a1)
{
  return sub_1000323C4(a1, qword_1000ADA00);
}

uint64_t sub_10003239C(uint64_t a1)
{
  return sub_1000323C4(a1, qword_1000ADA18);
}

uint64_t sub_1000323C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100087350();
  sub_10003247C(v3, a2);
  sub_10000A5F4(v3, (uint64_t)a2);
  if (qword_1000A86E8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  return sub_100087340();
}

uint64_t *sub_10003247C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *sub_1000324E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A8EA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087710();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100087710();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_retain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100004FB4(&qword_1000A9370);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1000326FC(uint64_t a1, uint64_t a2)
{
  sub_100004FB4(&qword_1000A8EA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087710();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_100087710();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

void *sub_100032834(void *a1, void *a2, int *a3)
{
  sub_100004FB4(&qword_1000A8EA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087710();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087710();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A9370);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *sub_100032A00(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A8EA0);
    sub_100004FB4(&qword_1000A8EA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087710();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087710();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_11;
  }
  if (v14)
  {
LABEL_11:
    uint64_t v15 = sub_100004FB4(&qword_1000A9370);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_12:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

char *sub_100032C4C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A8EA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087710();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087710();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A9370);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_100032E10(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A8EA0);
    uint64_t v6 = sub_100004FB4(&qword_1000A8EA0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087710();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_release();
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087710();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    uint64_t v16 = sub_100004FB4(&qword_1000A9370);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_11:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_10003305C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100033070);
}

uint64_t sub_100033070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A9A78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_100004FB4(&qword_1000A9370);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1000331B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000331C4);
}

uint64_t sub_1000331C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004FB4(&qword_1000A9A78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  else
  {
    uint64_t v11 = sub_100004FB4(&qword_1000A9370);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for DynamicTypeFont()
{
  uint64_t result = qword_1000A9AD8;
  if (!qword_1000A9AD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100033344()
{
  sub_100033458(319, &qword_1000A9AE8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100033458(319, (unint64_t *)&unk_1000A9AF0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100033458(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_100087710();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1000334B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000334D4(uint64_t a1)
{
  uint64_t v3 = sub_100004FB4(&qword_1000A9B38);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FB4(&qword_1000A9370);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087710();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v33 - v14;
  if (!a1) {
    return 0;
  }
  uint64_t v16 = type metadata accessor for DynamicTypeFont();
  sub_100033D70(v1 + *(int *)(v16 + 24), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_retain();
    sub_100006AE0((uint64_t)v8, &qword_1000A9370);
LABEL_9:
    uint64_t v17 = sub_1000879A0();
    swift_release();
    return v17;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  swift_retain();
  sub_10001755C((uint64_t)v12);
  BOOL v18 = sub_100033DD8((uint64_t)v12, (uint64_t)v15);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v12, v9);
  if (!v18)
  {
    v19(v15, v9);
    goto LABEL_9;
  }
  swift_retain();
  sub_1000878E0();
  char v20 = sub_100087900();
  swift_release();
  swift_release();
  if (v20) {
    goto LABEL_17;
  }
  swift_retain();
  sub_100087920();
  char v21 = sub_100087900();
  swift_release();
  swift_release();
  if (v21) {
    goto LABEL_17;
  }
  swift_retain();
  sub_100087980();
  char v22 = sub_100087900();
  swift_release();
  swift_release();
  if (v22) {
    goto LABEL_17;
  }
  swift_retain();
  sub_100087990();
  char v23 = sub_100087900();
  swift_release();
  swift_release();
  if (v23) {
    goto LABEL_17;
  }
  swift_retain();
  sub_100087A10();
  char v24 = sub_100087900();
  swift_release();
  swift_release();
  if (v24) {
    goto LABEL_17;
  }
  swift_retain();
  sub_1000878F0();
  char v25 = sub_100087900();
  swift_release();
  swift_release();
  if (v25) {
    goto LABEL_17;
  }
  swift_retain();
  sub_100087910();
  char v28 = sub_100087900();
  swift_release();
  swift_release();
  if (v28) {
    goto LABEL_17;
  }
  swift_retain();
  sub_1000879C0();
  char v29 = sub_100087900();
  swift_release();
  swift_release();
  if (v29) {
    goto LABEL_17;
  }
  swift_retain();
  sub_100087A00();
  char v30 = sub_100087900();
  swift_release();
  swift_release();
  if (v30) {
    goto LABEL_17;
  }
  swift_retain();
  sub_1000879D0();
  char v31 = sub_100087900();
  swift_release();
  swift_release();
  if ((v31 & 1) != 0
    || (swift_retain(), sub_1000879F0(), char v32 = sub_100087900(), swift_release(), swift_release(), (v32 & 1) != 0))
  {
LABEL_17:
    uint64_t v26 = sub_100087930();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 1, 1, v26);
    sub_100087970();
    sub_100006AE0((uint64_t)v5, &qword_1000A9B38);
  }
  else
  {
    swift_retain();
  }
  swift_retain();
  uint64_t v17 = sub_1000879A0();
  swift_release();
  swift_release_n();
  v19(v15, v9);
  return v17;
}

uint64_t sub_100033CA8()
{
  return sub_1000873E0();
}

uint64_t sub_100033CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000334D4(*(void *)(v3 + *(int *)(a2 + 20)));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = sub_100004FB4(&qword_1000A9B28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a3, a1, v8);
  uint64_t result = sub_100004FB4(&qword_1000A9B30);
  uint64_t v10 = (uint64_t *)(a3 + *(int *)(result + 36));
  *uint64_t v10 = KeyPath;
  v10[1] = v6;
  return result;
}

uint64_t sub_100033D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A9370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_100033DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v3 = sub_100087710();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v19 - v9, a1, v3, v8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v13 = v12(v10, v3);
  unint64_t v14 = 0;
  int v15 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v13 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v13 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v14 = 1;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v14 = 2;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v13 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v14 = 4;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v14 = 5;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v14 = 6;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v14 = 7;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v14 = 8;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v14 = 9;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v14 = 10;
    }
    else
    {
      if (v13 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
LABEL_7:
        unint64_t v14 = 3;
        goto LABEL_24;
      }
      unint64_t v14 = 11;
    }
  }
LABEL_24:
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v20, v3);
  int v16 = v12(v6, v3);
  if (v16 == v15)
  {
    unint64_t v17 = 0;
  }
  else if (v16 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v17 = 1;
  }
  else if (v16 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v17 = 2;
  }
  else
  {
    if (v16 != enum case for ContentSizeCategory.large(_:))
    {
      if (v16 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v17 = 4;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v17 = 5;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v17 = 6;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v17 = 7;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v17 = 8;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v17 = 9;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v17 = 10;
        return v14 >= v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v17 = 11;
        return v14 >= v17;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    unint64_t v17 = 3;
  }
  return v14 >= v17;
}

unint64_t sub_1000341F4()
{
  unint64_t result = qword_1000A9B40;
  if (!qword_1000A9B40)
  {
    sub_100004FF8(&qword_1000A9B30);
    sub_100006A8C(&qword_1000A9B48, &qword_1000A9B28);
    sub_100006A8C(&qword_1000A9B50, &qword_1000A9B58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9B40);
  }
  return result;
}

CGImage *sub_1000342B8(double a1, double a2, double a3, double a4, double a5, double a6)
{
  [v6 size];
  double v14 = v13;
  [v6 size];
  double v16 = v15;
  unint64_t v17 = (CGImage *)[v6 CGImage];
  BOOL v18 = v17;
  if (v17)
  {
    double v19 = v14 / a5;
    if (v14 / a5 <= v16 / a6) {
      double v19 = v16 / a6;
    }
    v22.size.height = v19 * a4;
    v22.size.width = v19 * a3;
    v22.origin.y = v19 * a2;
    v22.origin.x = v19 * a1;
    CGImageRef v20 = CGImageCreateWithImageInRect(v17, v22);

    if (v20)
    {
      BOOL v18 = (CGImage *)[objc_allocWithZone((Class)UIImage) initWithCGImage:v20];
    }
    else
    {
      return 0;
    }
  }
  return v18;
}

uint64_t sub_1000343B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v104 = (uint8_t *)a1;
  uint64_t v102 = a4;
  uint64_t v103 = type metadata accessor for WidgetCreationAttempt(0);
  uint64_t v99 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v85 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v84 - v8;
  uint64_t v10 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v10 - 8);
  unint64_t v100 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100087170();
  double v13 = *(void (***)(char *, unint64_t, uint64_t))(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v92 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v96 = (char *)&v84 - v16;
  __chkstk_darwin(v17);
  uint64_t v97 = (char *)&v84 - v18;
  __chkstk_darwin(v19);
  uint64_t v98 = (char *)&v84 - v20;
  uint64_t v21 = sub_100087EC0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v89 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v84 - v25;
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v101 = v13;
  uint64_t v27 = sub_100087350();
  uint64_t v28 = sub_10000A5F4(v27, (uint64_t)qword_1000AD9E8);
  char v29 = *(void (**)(char *, os_log_t, uint64_t))(v22 + 16);
  os_log_t v94 = a3;
  uint64_t v88 = v22 + 16;
  uint64_t v87 = v29;
  v29(v26, a3, v21);
  swift_bridgeObjectRetain_n();
  uint64_t v93 = v28;
  char v30 = sub_100087330();
  os_log_type_t v31 = sub_1000881D0();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v86 = v9;
  unint64_t v95 = a2;
  uint64_t v90 = v22;
  uint64_t v91 = v21;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v84 = v12;
    v106[0] = v34;
    *(_DWORD *)uint64_t v33 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v105 = sub_100017980((uint64_t)v104, a2, v106);
    sub_100088240();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v33 + 12) = 2080;
    sub_1000461C8(&qword_1000A8E50, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v35 = sub_1000884E0();
    uint64_t v105 = sub_100017980(v35, v36, v106);
    sub_100088240();
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void (***)(char *, unint64_t, uint64_t))(v22 + 8);
    ((void (*)(char *, uint64_t))v37)(v26, v21);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Fetch last widget attempt for %s, widgetFamily: %s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    uint64_t v12 = v84;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v37 = *(void (***)(char *, unint64_t, uint64_t))(v22 + 8);
    ((void (*)(char *, uint64_t))v37)(v26, v21);
  }

  uint64_t v38 = self;
  id v39 = [v38 defaultManager];
  uint64_t v40 = 1;
  id v41 = [v39 URLsForDirectory:13 inDomains:1];

  uint64_t v42 = sub_100088120();
  uint64_t v43 = (uint64_t)v100;
  id v44 = v101;
  if (*(void *)(v42 + 16))
  {
    v101[2](v100, v42 + ((*((unsigned __int8 *)v101 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v101 + 80)), v12);
    uint64_t v40 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v44[7])(v43, v40, 1, v12);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v44[6])(v43, 1, v12) == 1)
  {
    sub_100006AE0(v43, &qword_1000A8BC8);
LABEL_15:
    uint64_t v72 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v102, v72, 1, v103);
  }
  uint64_t v101 = v37;
  v44[4](v98, v43, v12);
  unint64_t v45 = v95;
  sub_100087120();
  v106[0] = 0;
  v106[1] = 0xE000000000000000;
  sub_100088310(20);
  swift_bridgeObjectRelease();
  strcpy((char *)v106, "last_attempt_");
  HIWORD(v106[1]) = -4864;
  os_log_t v46 = v94;
  uint64_t v105 = sub_100087EB0();
  v107._countAndFlagsBits = sub_1000884E0();
  sub_100088040(v107);
  swift_bridgeObjectRelease();
  v108._countAndFlagsBits = 0x6E6F736A2ELL;
  v108._object = (void *)0xE500000000000000;
  sub_100088040(v108);
  char v47 = v96;
  sub_100087130();
  swift_bridgeObjectRelease();
  id v48 = [v38 defaultManager];
  sub_100087150();
  NSString v49 = sub_100087FF0();
  swift_bridgeObjectRelease();
  unsigned __int8 v50 = [v48 fileExistsAtPath:v49];

  if ((v50 & 1) == 0)
  {
    double v55 = v89;
    uint64_t v56 = v91;
    v87(v89, v46, v91);
    uint64_t v57 = v92;
    v44[2](v92, (unint64_t)v47, v12);
    swift_bridgeObjectRetain_n();
    uint64_t v58 = sub_100087330();
    os_log_type_t v59 = sub_1000881D0();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      unint64_t v100 = (char *)swift_slowAlloc();
      v106[0] = (uint64_t)v100;
      *(_DWORD *)uint64_t v60 = 136315650;
      os_log_t v94 = v58;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_100017980((uint64_t)v104, v45, v106);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      uint64_t v61 = v55;
      uint64_t v62 = v44;
      *(_WORD *)(v60 + 12) = 2080;
      sub_1000461C8(&qword_1000A8E50, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      os_log_type_t v63 = v59;
      uint64_t v64 = sub_1000884E0();
      uint64_t v105 = sub_100017980(v64, v65, v106);
      sub_100088240();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v101)(v61, v56);
      *(_WORD *)(v60 + 22) = 2080;
      uint64_t v66 = v92;
      uint64_t v67 = sub_100087150();
      uint64_t v105 = sub_100017980(v67, v68, v106);
      sub_100088240();
      swift_bridgeObjectRelease();
      uint64_t v69 = v62[1];
      ((void (*)(char *, uint64_t))v69)(v66, v12);
      os_log_t v70 = v94;
      _os_log_impl((void *)&_mh_execute_header, v94, v63, "Last widget attempt does not exist for %s, widgetFamily: %s at %s", (uint8_t *)v60, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v69)(v96, v12);
      ((void (*)(char *, uint64_t))v69)(v97, v12);
      ((void (*)(char *, uint64_t))v69)(v98, v12);
    }
    else
    {

      uint64_t v71 = v44[1];
      ((void (*)(char *, uint64_t))v71)(v57, v12);
      ((void (*)(char *, uint64_t))v101)(v55, v56);
      swift_bridgeObjectRelease_n();
      ((void (*)(char *, uint64_t))v71)(v47, v12);
      ((void (*)(char *, uint64_t))v71)(v97, v12);
      ((void (*)(char *, uint64_t))v71)(v98, v12);
    }
    goto LABEL_15;
  }
  uint64_t v51 = sub_100087180();
  unint64_t v53 = v52;
  sub_100087090();
  swift_allocObject();
  sub_100087080();
  sub_1000461C8(&qword_1000A9CB8, (void (*)(uint64_t))type metadata accessor for WidgetCreationAttempt);
  uint64_t v54 = (uint64_t)v86;
  sub_100087070();
  swift_release();
  uint64_t v74 = v85;
  sub_10004665C(v54, v85, type metadata accessor for WidgetCreationAttempt);
  uint64_t v75 = sub_100087330();
  os_log_type_t v76 = sub_1000881D0();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v78 = (uint8_t *)swift_slowAlloc();
    v106[0] = swift_slowAlloc();
    uint64_t v84 = v12;
    *(_DWORD *)uint64_t v78 = 136315138;
    uint64_t v104 = v78 + 4;
    uint64_t v79 = sub_100036548();
    uint64_t v105 = sub_100017980(v79, v80, v106);
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_1000466C4(v74, type metadata accessor for WidgetCreationAttempt);
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "Decoded widget attempt -> %s", v78, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v54 = (uint64_t)v86;
    swift_slowDealloc();
    sub_10000AF7C(v51, v53);

    uint64_t v81 = v44[1];
    uint64_t v82 = v84;
    ((void (*)(char *, uint64_t))v81)(v96, v84);
    ((void (*)(char *, uint64_t))v81)(v97, v82);
    ((void (*)(char *, uint64_t))v81)(v98, v82);
  }
  else
  {
    sub_10000AF7C(v51, v53);

    sub_1000466C4(v74, type metadata accessor for WidgetCreationAttempt);
    uint64_t v83 = v44[1];
    ((void (*)(char *, uint64_t))v83)(v47, v12);
    ((void (*)(char *, uint64_t))v83)(v97, v12);
    ((void (*)(char *, uint64_t))v83)(v98, v12);
  }
  sub_100047104(v54, v102, type metadata accessor for WidgetCreationAttempt);
  uint64_t v72 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v102, v72, 1, v103);
}

uint64_t sub_10003532C()
{
  uint64_t v1 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100087170();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v84 - v9;
  __chkstk_darwin(v11);
  uint64_t v87 = (char *)&v84 - v12;
  __chkstk_darwin(v13);
  uint64_t v92 = (char *)&v84 - v14;
  __chkstk_darwin(v15);
  uint64_t v93 = (char *)&v84 - v16;
  os_log_t v94 = (os_log_t)type metadata accessor for WidgetCreationAttempt(0);
  __chkstk_darwin(v94);
  uint64_t v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v84 - v20;
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100087350();
  uint64_t v23 = sub_10000A5F4(v22, (uint64_t)qword_1000AD9E8);
  sub_10004665C(v0, (uint64_t)v21, type metadata accessor for WidgetCreationAttempt);
  uint64_t v90 = v0;
  sub_10004665C(v0, (uint64_t)v18, type metadata accessor for WidgetCreationAttempt);
  uint64_t v91 = (uint8_t *)v23;
  uint64_t v24 = sub_100087330();
  os_log_type_t v25 = sub_1000881D0();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v88 = v10;
  uint64_t v86 = v7;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v85 = v4;
    uint64_t v28 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v89 = v5;
    v96[0] = v29;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v84 = v3;
    os_log_t v30 = v94;
    os_log_type_t v31 = (uint64_t *)&v21[SHIDWORD(v94[3].isa)];
    uint64_t v33 = *v31;
    unint64_t v32 = v31[1];
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_100017980(v33, v32, v96);
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_1000466C4((uint64_t)v21, type metadata accessor for WidgetCreationAttempt);
    *(_WORD *)(v28 + 12) = 2048;
    uint64_t isa_low = SLODWORD(v30[4].isa);
    uint64_t v3 = v84;
    uint64_t v35 = *(void *)&v18[isa_low];
    sub_1000466C4((uint64_t)v18, type metadata accessor for WidgetCreationAttempt);
    uint64_t v95 = v35;
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Write widget creation attempt for %s, widgetFamily: %ld", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    uint64_t v5 = v89;
    swift_slowDealloc();
    uint64_t v4 = v85;
    swift_slowDealloc();
  }
  else
  {
    sub_1000466C4((uint64_t)v18, type metadata accessor for WidgetCreationAttempt);
    sub_1000466C4((uint64_t)v21, type metadata accessor for WidgetCreationAttempt);
  }

  unint64_t v36 = self;
  uint64_t v37 = &SeededRandomNumberGenerator;
  id v38 = [v36 defaultManager];
  uint64_t v39 = 1;
  id v40 = [v38 URLsForDirectory:13 inDomains:1];

  uint64_t v41 = sub_100088120();
  if (*(void *)(v41 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v3, v41 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4);
    uint64_t v39 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v39, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_100006AE0((uint64_t)v3, &qword_1000A8BC8);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v93, v3, v4);
  os_log_t v43 = v94;
  uint64_t v44 = v90;
  unint64_t v45 = v92;
  sub_100087120();
  id v46 = [v36 defaultManager];
  sub_100087150();
  NSString v47 = sub_100087FF0();
  swift_bridgeObjectRelease();
  unsigned __int8 v48 = [v46 fileExistsAtPath:v47];

  if (v48) {
    goto LABEL_16;
  }
  NSString v49 = v87;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v87, v45, v4);
  unsigned __int8 v50 = sub_100087330();
  os_log_type_t v51 = sub_1000881D0();
  if (os_log_type_enabled(v50, v51))
  {
    unint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v89 = v5;
    v96[0] = v53;
    *(_DWORD *)unint64_t v52 = 136315138;
    sub_1000461C8(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v54 = sub_1000884E0();
    uint64_t v95 = sub_100017980(v54, v55, v96);
    sub_100088240();
    swift_bridgeObjectRelease();
    uint64_t v37 = &SeededRandomNumberGenerator;
    uint64_t v87 = *(char **)(v89 + 8);
    ((void (*)(char *, uint64_t))v87)(v49, v4);
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Creating directory for app metadata at %s", v52, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v89;
    swift_slowDealloc();
    unint64_t v45 = v92;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v87 = *(char **)(v5 + 8);
    ((void (*)(char *, uint64_t))v87)(v49, v4);
  }

  id v56 = [v36 *(SEL *)&v37[14].ivar_base_size];
  sub_100087110(v57);
  os_log_type_t v59 = v58;
  v96[0] = 0;
  unsigned int v60 = [v56 createDirectoryAtURL:v58 withIntermediateDirectories:1 attributes:0 error:v96];

  os_log_t v43 = v94;
  if (v60)
  {
    id v61 = (id)v96[0];
    uint64_t v44 = v90;
LABEL_16:
    v96[0] = 0;
    v96[1] = 0xE000000000000000;
    sub_100088310(20);
    swift_bridgeObjectRelease();
    strcpy((char *)v96, "last_attempt_");
    HIWORD(v96[1]) = -4864;
    uint64_t v95 = *(void *)(v44 + SLODWORD(v43[4].isa));
    v97._countAndFlagsBits = sub_1000884E0();
    sub_100088040(v97);
    swift_bridgeObjectRelease();
    v98._countAndFlagsBits = 0x6E6F736A2ELL;
    v98._object = (void *)0xE500000000000000;
    sub_100088040(v98);
    uint64_t v62 = v88;
    sub_100087130();
    swift_bridgeObjectRelease();
    sub_1000870C0();
    swift_allocObject();
    sub_1000870B0();
    sub_1000461C8(&qword_1000A9CB0, (void (*)(uint64_t))type metadata accessor for WidgetCreationAttempt);
    uint64_t v63 = sub_1000870A0();
    unint64_t v65 = v64;
    swift_release();
    sub_1000871B0();
    uint64_t v74 = v86;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v86, v62, v4);
    uint64_t v75 = sub_100087330();
    os_log_type_t v76 = sub_1000881D0();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      v96[0] = swift_slowAlloc();
      os_log_t v94 = v75;
      *(_DWORD *)uint64_t v78 = 136315138;
      uint64_t v91 = v78 + 4;
      sub_1000461C8(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v79 = sub_1000884E0();
      uint64_t v95 = sub_100017980(v79, v80, v96);
      sub_100088240();
      swift_bridgeObjectRelease();
      uint64_t v81 = *(void (**)(char *, uint64_t))(v5 + 8);
      v81(v74, v4);
      os_log_t v82 = v94;
      _os_log_impl((void *)&_mh_execute_header, v94, v76, "Wrote widget creation attempt to %s", v78, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_10000AF7C(v63, v65);

      v81(v88, v4);
      uint64_t v83 = v92;
    }
    else
    {
      sub_10000AF7C(v63, v65);

      uint64_t v81 = *(void (**)(char *, uint64_t))(v5 + 8);
      v81(v74, v4);
      v81(v62, v4);
      uint64_t v83 = v45;
    }
    v81(v83, v4);
    return ((uint64_t (*)(char *, uint64_t))v81)(v93, v4);
  }
  id v66 = (id)v96[0];
  uint64_t v67 = sub_1000870F0();

  swift_willThrow();
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v68 = sub_100087330();
  os_log_type_t v69 = sub_1000881D0();
  if (os_log_type_enabled(v68, v69))
  {
    os_log_t v70 = (uint8_t *)swift_slowAlloc();
    v96[0] = swift_slowAlloc();
    *(_DWORD *)os_log_t v70 = 136315138;
    uint64_t v95 = v67;
    swift_errorRetain();
    sub_100004FB4(&qword_1000A8BD0);
    uint64_t v71 = sub_100088010();
    uint64_t v89 = v5;
    uint64_t v95 = sub_100017980(v71, v72, v96);
    sub_100088240();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "Unable to create metadata directory %s.", v70, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v73 = v87;
  ((void (*)(char *, uint64_t))v87)(v92, v4);
  return ((uint64_t (*)(char *, uint64_t))v73)(v93, v4);
}

uint64_t sub_10003623C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1000A86F0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100087350();
  sub_10000A5F4(v6, (uint64_t)qword_1000AD9D0);
  uint64_t v7 = sub_100087330();
  os_log_type_t v8 = sub_1000881D0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "fetchActivityFeedData...", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v3;
  v10[3] = a1;
  v10[4] = a2;
  swift_retain_n();
  uint64_t v11 = sub_100081AD8();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    id v13 = [self proxyForPlayer:v11];
    id v14 = [v13 utilityServicePrivate];

    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v3;
    v15[3] = sub_10003FC90;
    v15[4] = v10;
    v19[4] = sub_100012D34;
    v19[5] = v15;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_1000374DC;
    v19[3] = &unk_1000A6998;
    uint64_t v16 = _Block_copy(v19);
    swift_retain();
    swift_release();
    [v14 getWidgetStoreBagValueWithHandler:v16];
    _Block_release(v16);
    swift_release();
    swift_release();

    return swift_unknownObjectRelease();
  }
  else
  {
    sub_10004403C(86400, 0xD000000000000011, 0x800000010008BE60, 0x7974697669746341, 0xEC00000064656546);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    *(void *)(v18 + 24) = a2;
    swift_retain();
    sub_10003EB50((void (*)(void *, unint64_t, id))sub_1000443A0, v18);
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100036548()
{
  sub_100088310(95);
  v8._countAndFlagsBits = 0xD00000000000001DLL;
  v8._object = (void *)0x800000010008C070;
  sub_100088040(v8);
  sub_100087220();
  sub_1000461C8(&qword_1000A9C48, (void (*)(uint64_t))&type metadata accessor for Date);
  v9._countAndFlagsBits = sub_1000884E0();
  sub_100088040(v9);
  swift_bridgeObjectRelease();
  v10._object = (void *)0x800000010008C090;
  v10._countAndFlagsBits = 0xD000000000000011;
  sub_100088040(v10);
  uint64_t v1 = type metadata accessor for WidgetCreationAttempt(0);
  if (*(unsigned char *)(v0 + *(int *)(v1 + 20))) {
    v2._countAndFlagsBits = 1702195828;
  }
  else {
    v2._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + *(int *)(v1 + 20))) {
    uint64_t v3 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v3 = (void *)0xE500000000000000;
  }
  v2._object = v3;
  sub_100088040(v2);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x547972746572202CLL;
  v11._object = (void *)0xEC0000003A656D69;
  sub_100088040(v11);
  v12._countAndFlagsBits = sub_1000884E0();
  sub_100088040(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x6568636163202C73;
  v13._object = (void *)0xEB000000003A4449;
  sub_100088040(v13);
  uint64_t v4 = (uint64_t *)(v0 + *(int *)(v1 + 28));
  uint64_t v5 = *v4;
  uint64_t v6 = (void *)v4[1];
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v5;
  v14._object = v6;
  sub_100088040(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x746567646977202CLL;
  v15._object = (void *)0xEF3A796C696D6146;
  sub_100088040(v15);
  v16._countAndFlagsBits = sub_1000884E0();
  sub_100088040(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 62;
  v17._object = (void *)0xE100000000000000;
  sub_100088040(v17);
  return 0;
}

BOOL sub_1000367BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000367D0()
{
  Swift::UInt v1 = *v0;
  sub_100088530();
  sub_100088540(v1);
  return sub_100088550();
}

void sub_100036818()
{
  sub_100088540(*v0);
}

Swift::Int sub_100036844()
{
  Swift::UInt v1 = *v0;
  sub_100088530();
  sub_100088540(v1);
  return sub_100088550();
}

uint64_t sub_100036888()
{
  uint64_t result = 1702125924;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646944726F727265;
      break;
    case 2:
      uint64_t result = 0x6D69547972746572;
      break;
    case 3:
      uint64_t result = 0x44496568636163;
      break;
    case 4:
      uint64_t result = 0x6146746567646977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100036944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100044438(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10003696C()
{
  return 0;
}

void sub_100036978(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100036984(uint64_t a1)
{
  unint64_t v2 = sub_100048040();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000369C0(uint64_t a1)
{
  unint64_t v2 = sub_100048040();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000369FC(void *a1)
{
  uint64_t v3 = sub_100004FB4(&qword_1000A9E00);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100047FFC(a1, a1[3]);
  sub_100048040();
  sub_100088570();
  v8[15] = 0;
  sub_100087220();
  sub_1000461C8(&qword_1000A9C38, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1000884D0();
  if (!v1)
  {
    type metadata accessor for WidgetCreationAttempt(0);
    v8[14] = 1;
    sub_1000884B0();
    v8[13] = 2;
    sub_1000884C0();
    v8[12] = 3;
    sub_1000884A0();
    v8[11] = 4;
    sub_1000884C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100036C3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_100087220();
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v25 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004FB4(&qword_1000A9E10);
  uint64_t v23 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v8 = (int *)type metadata accessor for WidgetCreationAttempt(0);
  __chkstk_darwin(v8);
  Swift::String v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047FFC(a1, a1[3]);
  sub_100048040();
  uint64_t v27 = v7;
  sub_100088560();
  if (v2) {
    return sub_100018084((uint64_t)a1);
  }
  uint64_t v21 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v24;
  char v32 = 0;
  sub_1000461C8(&qword_1000A9C40, (void (*)(uint64_t))&type metadata accessor for Date);
  Swift::String v13 = v25;
  uint64_t v14 = v26;
  sub_100088480();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v13, v4);
  char v31 = 1;
  *(unsigned char *)(v11 + v8[5]) = sub_100088460() & 1;
  char v30 = 2;
  *(void *)(v11 + v8[6]) = sub_100088470();
  char v29 = 3;
  uint64_t v15 = sub_100088450();
  Swift::String v16 = (uint64_t *)(v11 + v8[7]);
  *Swift::String v16 = v15;
  v16[1] = v17;
  char v28 = 4;
  uint64_t v18 = sub_100088470();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v14);
  *(void *)(v11 + v8[8]) = v18;
  sub_10004665C(v11, v22, type metadata accessor for WidgetCreationAttempt);
  sub_100018084((uint64_t)v21);
  return sub_1000466C4(v11, type metadata accessor for WidgetCreationAttempt);
}

uint64_t sub_10003706C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100036C3C(a1, a2);
}

uint64_t sub_100037084(void *a1)
{
  return sub_1000369FC(a1);
}

uint64_t sub_1000370A0()
{
  return 1;
}

Swift::Int sub_1000370A8()
{
  return sub_100088550();
}

void sub_1000370EC()
{
}

Swift::Int sub_100037114()
{
  return sub_100088550();
}

NSNumber sub_100037154()
{
  sub_100013058(0, &qword_1000A9CA8);
  result.super.super.Class isa = sub_100088230(20).super.super.isa;
  qword_1000A9B60 = (uint64_t)result.super.super.isa;
  return result;
}

uint64_t sub_10003719C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t (*a5)(void, __n128), uint64_t a6)
{
  if (qword_1000A8708 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100087350();
  sub_10000A5F4(v11, (uint64_t)qword_1000ADA18);
  swift_errorRetain();
  id v12 = a2;
  id v13 = a3;
  swift_errorRetain();
  id v14 = v12;
  id v15 = v13;
  Swift::String v16 = sub_100087330();
  os_log_type_t v17 = sub_1000881D0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v27 = a6;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 138412802;
    char v28 = a5;
    if (a1)
    {
      swift_errorRetain();
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_100088240();
    }
    else
    {
      sub_100088240();
      uint64_t v20 = 0;
    }
    void *v19 = v20;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v18 + 12) = 2112;
    id v21 = v14;
    sub_100088240();
    v19[1] = v14;

    *(_WORD *)(v18 + 22) = 2112;
    id v22 = v15;
    sub_100088240();
    v19[2] = v15;

    _os_log_impl((void *)&_mh_execute_header, v16, v17, "activityFeedStoreBagValue error %@, activityFeedWidgetTTL %@, activityFeedWidgetLivePreview %@", (uint8_t *)v18, 0x20u);
    sub_100004FB4(&qword_1000A9C00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a5 = v28;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  if (objc_msgSend(v14, "integerValue", v27)) {
    uint64_t v23 = (uint64_t)[v14 integerValue];
  }
  else {
    uint64_t v23 = 86400;
  }
  [v15 doubleValue];
  double v24 = v25.n128_f64[0];
  v25.n128_u64[0] = 1.0;
  if (v24 != 0.0) {
    [v15 doubleValue:1.0];
  }
  return a5(v23, v25);
}

void sub_1000374DC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(void *, id, id))(a1 + 32);
  swift_retain();
  id v8 = a2;
  id v10 = a3;
  id v9 = a4;
  v7(a2, v10, v9);
  swift_release();
}

uint64_t sub_10003757C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a1;
  uint64_t v22 = a5;
  uint64_t v10 = sub_100087EC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __n128 v13 = __chkstk_darwin(v10);
  id v14 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a4, v10, v13);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v15, v14, v10);
  uint64_t v18 = (void *)(v17 + v16);
  *uint64_t v18 = v21;
  v18[1] = a2;
  uint64_t v19 = (void *)(v17 + ((v16 + 23) & 0xFFFFFFFFFFFFFFF8));
  void *v19 = v22;
  v19[1] = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100044690(0xD000000000000020, 0x800000010008BEF0, (void (*)(id))sub_10004631C);
  return swift_release_n();
}

uint64_t sub_100037734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *, uint64_t), uint64_t a7)
{
  sub_10004403C(a1, 0xD000000000000014, 0x800000010008BF20, 0x65756E69746E6F43, 0xEF676E6979616C50);
  swift_retain();
  sub_100044C94(a3, a4, a5, a2, a6, a7);

  return swift_release();
}

uint64_t sub_1000377EC(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v178 = a6;
  uint64_t v14 = sub_100004FB4(&qword_1000A9C58);
  __chkstk_darwin(v14 - 8);
  uint64_t v175 = ((char *)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v179 = type metadata accessor for AppMetadata();
  uint64_t v173 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v166 = (uint64_t)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v177 = (uint64_t)&v146 - v18;
  __chkstk_darwin(v19);
  uint64_t v176 = (uint64_t)&v146 - v20;
  uint64_t v21 = sub_100087EC0();
  unint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v27 = __chkstk_darwin(v25);
  unint64_t v29 = (unint64_t)&v146 - v28;
  unint64_t v172 = a1;
  if (a1 >> 62)
  {
LABEL_110:
    uint64_t v141 = a1 & 0xFFFFFFFFFFFFFF8;
    if ((a1 & 0x8000000000000000) != 0) {
      uint64_t v141 = a1;
    }
    unint64_t v174 = v141;
    uint64_t v157 = v26;
    swift_bridgeObjectRetain();
    a1 = sub_1000883C0();
    swift_bridgeObjectRelease();
    uint64_t v26 = v157;
    if (a1) {
      goto LABEL_3;
    }
LABEL_113:
    if (qword_1000A86F8 != -1) {
      swift_once();
    }
    uint64_t v142 = sub_100087350();
    sub_10000A5F4(v142, (uint64_t)qword_1000AD9E8);
    uint64_t v143 = sub_100087330();
    os_log_type_t v144 = sub_1000881D0();
    if (os_log_type_enabled(v143, v144))
    {
      uint64_t v145 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v145 = 0;
      _os_log_impl((void *)&_mh_execute_header, v143, v144, "retreived no summaries", v145, 2u);
      swift_slowDealloc();
    }

    return ((uint64_t (*)(void *, void))a3)(&_swiftEmptyArrayStorage, 0);
  }
  a1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!a1) {
    goto LABEL_113;
  }
LABEL_3:
  uint64_t v157 = v26;
  char v30 = *(void (**)(uint64_t, void *, uint64_t))(v22 + 16);
  unint64_t v148 = v22 + 16;
  uint64_t v147 = v30;
  ((void (*)(unint64_t, void *, uint64_t, __n128))v30)(v29, a5, v21, v27);
  int v31 = (*(uint64_t (**)(unint64_t, uint64_t))(v22 + 88))(v29, v21);
  uint64_t v151 = v21;
  uint64_t v156 = a4;
  unint64_t v155 = a3;
  uint64_t v154 = a8;
  uint64_t v153 = a7;
  uint64_t v152 = a5;
  unint64_t v150 = v22;
  uint64_t v149 = v24;
  if (v31 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v32 = 3;
  }
  else if (v31 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v32 = 6;
  }
  else if (v31 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v32 = 8;
  }
  else
  {
    if (v31 != enum case for WidgetFamily.systemExtraLarge(_:)) {
      (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v29, v21);
    }
    uint64_t v32 = 14;
  }
  uint64_t v159 = v32;
  v180[0] = (unint64_t)&_swiftEmptyArrayStorage;
  a5 = self;
  a7 = v172;
  unint64_t v174 = v172 & 0xC000000000000001;
  unint64_t v171 = v172 & 0xFFFFFFFFFFFFFF8;
  uint64_t v170 = v172 + 32;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  a4 = 40;
  do
  {
    if (v174)
    {
      id v33 = (id)sub_100088340();
    }
    else
    {
      if ((unint64_t)v24 >= *(void *)(v171 + 16)) {
        goto LABEL_108;
      }
      id v33 = *(id *)(v170 + 8 * v24);
    }
    a3 = (unint64_t)v33;
    if (__OFADD__(v24++, 1))
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    a8 = a1;
    id v35 = [v33 compatiblePlatforms];
    uint64_t v36 = sub_100088180();

    unint64_t v29 = (unint64_t)[a5 currentPlatformServerString];
    unint64_t v22 = sub_100088000();
    uint64_t v21 = v37;

    uint64_t v183 = (void *)v22;
    uint64_t v184 = v21;
    sub_1000882D0();
    if (!*(void *)(v36 + 16)
      || (unint64_t v29 = (unint64_t)&v185,
          Swift::Int v38 = sub_1000882B0(*(void *)(v36 + 40)),
          uint64_t v39 = -1 << *(unsigned char *)(v36 + 32),
          unint64_t v22 = v38 & ~v39,
          uint64_t v21 = v36 + 56,
          ((*(void *)(v36 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_100046608((uint64_t)&v185);
LABEL_14:

      goto LABEL_15;
    }
    uint64_t v40 = ~v39;
    while (1)
    {
      sub_1000465AC(*(void *)(v36 + 48) + 40 * v22, (uint64_t)&v183);
      unint64_t v29 = sub_1000882C0();
      sub_100046608((uint64_t)&v183);
      if (v29) {
        break;
      }
      unint64_t v22 = (v22 + 1) & v40;
      if (((*(void *)(v21 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_100046608((uint64_t)&v185);

        a7 = v172;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    sub_100046608((uint64_t)&v185);
    unint64_t v29 = (unint64_t)[(id)a3 adamID];

    a7 = v172;
    if (!v29) {
      goto LABEL_14;
    }

    unint64_t v29 = (unint64_t)v180;
    sub_100088370();
    sub_100088390();
    sub_1000883A0();
    sub_100088380();
LABEL_15:
    a1 = a8;
  }
  while (v24 != a8);
  swift_bridgeObjectRelease();
  unint64_t v29 = v180[0];
  uint64_t v146 = sub_100012928(v159, v180[0]);
  uint64_t v169 = v41;
  a3 = v42;
  a1 = v43;
  swift_release();
  a8 = swift_allocObject();
  unint64_t v44 = sub_10005B5B4((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(a8 + 16) = v44;
  unint64_t v172 = a8 + 16;
  uint64_t v170 = a3;
  unint64_t v171 = a1 >> 1;
  uint64_t v46 = (a1 >> 1) - a3;
  if (__OFSUB__(a1 >> 1, a3))
  {
    __break(1u);
  }
  else if ((v46 & 0x8000000000000000) == 0)
  {
    uint64_t v158 = a8;
    if (v46)
    {
      a4 = 0;
      uint64_t v161 = &v184;
      *(void *)&long long v45 = 136315394;
      long long v167 = v45;
      uint64_t v165 = (char *)&type metadata for Any + 8;
      *(void *)&long long v45 = 136315650;
      long long v160 = v45;
      unint64_t v168 = (a1 >> 1) - a3;
      do
      {
        a3 = a4 + 1;
        if (__OFADD__(a4, 1)) {
          goto LABEL_105;
        }
        if (a4 >= v171 || v170 > 0 || a4 >= v46) {
          goto LABEL_106;
        }
        uint64_t v51 = qword_1000A86F8;
        id v52 = *(id *)(v169 + 8 * a4);
        if (v51 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_100087350();
        uint64_t v21 = sub_10000A5F4(v53, (uint64_t)qword_1000AD9E8);
        a1 = (unint64_t)v52;
        uint64_t v54 = sub_100087330();
        os_log_type_t v55 = sub_1000881D0();
        unint64_t v22 = v55;
        BOOL v56 = os_log_type_enabled(v54, v55);
        unint64_t v174 = a4 + 1;
        if (v56)
        {
          a3 = swift_slowAlloc();
          uint64_t v24 = swift_slowAlloc();
          uint64_t v185 = v24;
          *(_DWORD *)a3 = v167;
          a7 = (uint64_t)[(id)a1 bundleID];
          a5 = (void *)sub_100088000();
          unint64_t v58 = v57;

          *(void *)(a3 + 4) = sub_100017980((uint64_t)a5, v58, &v185);
          swift_bridgeObjectRelease();
          *(_WORD *)(a3 + 12) = 2048;
          *(void *)(a3 + 14) = a4;
          _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v22, "received the following summary: %s with %ld", (uint8_t *)a3, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        id v59 = [(id)a1 adamID];
        if (v59)
        {
          a3 = (unint64_t)v59;
          id v60 = [v59 stringValue];
          uint64_t v24 = sub_100088000();
          unint64_t v22 = v61;

          unint64_t v29 = *(void *)v172;
          if (*(void *)(*(void *)v172 + 16) && (sub_10005CB90(v24, v22), (v62 & 1) != 0))
          {
          }
          else
          {
            swift_bridgeObjectRelease();
            id v63 = (id)a1;
            id v64 = (id)a3;
            a3 = (unint64_t)v63;
            a1 = (unint64_t)v64;
            unint64_t v65 = sub_100087330();
            os_log_type_t v66 = sub_1000881D0();
            int v67 = v66;
            if (os_log_type_enabled(v65, v66))
            {
              uint64_t v68 = swift_slowAlloc();
              uint64_t v164 = swift_slowAlloc();
              uint64_t v185 = v164;
              *(_DWORD *)uint64_t v68 = v160;
              int v163 = v67;
              id v69 = [(id)a3 bundleID];
              uint64_t v70 = sub_100088000();
              unint64_t v72 = v71;

              uint64_t v183 = (void *)sub_100017980(v70, v72, &v185);
              unint64_t v22 = (unint64_t)v161;
              sub_100088240();

              swift_bridgeObjectRelease();
              *(_WORD *)(v68 + 12) = 2080;
              uint64_t v162 = v68 + 14;
              id v73 = (id)a1;
              id v74 = [v73 description];
              uint64_t v24 = sub_100088000();
              unint64_t v76 = v75;

              uint64_t v183 = (void *)sub_100017980(v24, v76, &v185);
              sub_100088240();

              swift_bridgeObjectRelease();
              *(_WORD *)(v68 + 22) = 2048;
              uint64_t v183 = (void *)a4;
              sub_100088240();
              _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v163, "adding the following summary: %s, %s with %ld", (uint8_t *)v68, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            id v47 = [(id)a1 stringValue];
            a7 = sub_100088000();
            a5 = v48;

            uint64_t v21 = v172;
            uint64_t v49 = *(void *)v172;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v185 = v49;
            *(void *)uint64_t v21 = 0x8000000000000000;
            unint64_t v29 = (unint64_t)&v185;
            sub_10005D8DC(a3, a4, a7, (uint64_t)a5, isUniquelyReferenced_nonNull_native);
            *(void *)uint64_t v21 = v185;

            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          a1 = (unint64_t)(id)a1;
          unint64_t v29 = sub_100087330();
          os_log_type_t v77 = sub_1000881D0();
          uint64_t v21 = v77;
          if (os_log_type_enabled((os_log_t)v29, v77))
          {
            a3 = swift_slowAlloc();
            unint64_t v22 = swift_slowAlloc();
            uint64_t v185 = v22;
            *(_DWORD *)a3 = v167;
            id v78 = [(id)a1 bundleID];
            a7 = sub_100088000();
            a5 = v79;

            *(void *)(a3 + 4) = sub_100017980(a7, (unint64_t)a5, &v185);
            swift_bridgeObjectRelease();
            *(_WORD *)(a3 + 12) = 2048;
            *(void *)(a3 + 14) = a4;
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v29, (os_log_type_t)v21, "received nil adamID for: %s with %ld", (uint8_t *)a3, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
        }
        a8 = (uint64_t)v175;
        uint64_t v46 = v168;
        ++a4;
      }
      while (v174 != v168);
      a4 = *(void *)v172;
    }
    else
    {
      a4 = v44;
      a8 = (uint64_t)v175;
    }
    uint64_t v181 = &_swiftEmptyArrayStorage;
    uint64_t v182 = &_swiftEmptyArrayStorage;
    uint64_t v80 = *(void *)(a4 + 64);
    unint64_t v174 = a4 + 64;
    uint64_t v81 = 1 << *(unsigned char *)(a4 + 32);
    uint64_t v82 = -1;
    if (v81 < 64) {
      uint64_t v82 = ~(-1 << v81);
    }
    a7 = v82 & v80;
    a5 = (void *)((unint64_t)(v81 + 63) >> 6);
    unint64_t v22 = v173 + 48;
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    while (1)
    {
      if (a7)
      {
        unint64_t v83 = __clz(__rbit64(a7));
        a7 &= a7 - 1;
        unint64_t v84 = v83 | (v24 << 6);
      }
      else
      {
        uint64_t v85 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_107;
        }
        if (v85 >= (uint64_t)a5)
        {
LABEL_87:
          swift_release();
          if (qword_1000A86F8 != -1) {
            goto LABEL_120;
          }
          goto LABEL_88;
        }
        unint64_t v86 = *(void *)(v174 + 8 * v85);
        ++v24;
        if (!v86)
        {
          uint64_t v24 = v85 + 1;
          if (v85 + 1 >= (uint64_t)a5) {
            goto LABEL_87;
          }
          unint64_t v86 = *(void *)(v174 + 8 * v24);
          if (!v86)
          {
            uint64_t v24 = v85 + 2;
            if (v85 + 2 >= (uint64_t)a5) {
              goto LABEL_87;
            }
            unint64_t v86 = *(void *)(v174 + 8 * v24);
            if (!v86)
            {
              uint64_t v87 = v85 + 3;
              if (v87 >= (uint64_t)a5) {
                goto LABEL_87;
              }
              unint64_t v86 = *(void *)(v174 + 8 * v87);
              if (!v86)
              {
                while (1)
                {
                  uint64_t v24 = v87 + 1;
                  if (__OFADD__(v87, 1)) {
                    goto LABEL_109;
                  }
                  if (v24 >= (uint64_t)a5) {
                    goto LABEL_87;
                  }
                  unint64_t v86 = *(void *)(v174 + 8 * v24);
                  ++v87;
                  if (v86) {
                    goto LABEL_75;
                  }
                }
              }
              uint64_t v24 = v87;
            }
          }
        }
LABEL_75:
        a7 = (v86 - 1) & v86;
        unint64_t v84 = __clz(__rbit64(v86)) + (v24 << 6);
      }
      uint64_t v88 = (unint64_t *)(*(void *)(a4 + 48) + 16 * v84);
      a3 = *v88;
      a1 = v88[1];
      swift_bridgeObjectRetain();
      sub_1000390AC(0x65756E69746E6F43, 0xEF676E6979616C50, a3, a1, a8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v22)(a8, 1, v179) == 1)
      {
        sub_100006AE0(a8, &qword_1000A9C58);
        unint64_t v29 = (unint64_t)v182;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v29 = (unint64_t)sub_10000FB04(0, *(void *)(v29 + 16) + 1, 1, (char *)v29);
        }
        unint64_t v90 = *(void *)(v29 + 16);
        unint64_t v89 = *(void *)(v29 + 24);
        uint64_t v21 = v90 + 1;
        if (v90 >= v89 >> 1) {
          unint64_t v29 = (unint64_t)sub_10000FB04((char *)(v89 > 1), v90 + 1, 1, (char *)v29);
        }
        *(void *)(v29 + 16) = v21;
        unint64_t v91 = v29 + 16 * v90;
        *(void *)(v91 + 32) = a3;
        *(void *)(v91 + 40) = a1;
        uint64_t v182 = (void *)v29;
        a8 = (uint64_t)v175;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v92 = v176;
        sub_100047104(a8, v176, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        sub_10004665C(v92, v177, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        unint64_t v29 = (unint64_t)v181;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v29 = sub_10000FE94(0, *(void *)(v29 + 16) + 1, 1, v29);
        }
        a3 = *(void *)(v29 + 16);
        unint64_t v93 = *(void *)(v29 + 24);
        a1 = a3 + 1;
        if (a3 >= v93 >> 1) {
          unint64_t v29 = sub_10000FE94(v93 > 1, a3 + 1, 1, v29);
        }
        *(void *)(v29 + 16) = a1;
        sub_100047104(v177, v29+ ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(void *)(v173 + 72) * a3, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        uint64_t v181 = (void *)v29;
        sub_1000466C4(v176, (uint64_t (*)(void))type metadata accessor for AppMetadata);
      }
    }
  }
  __break(1u);
LABEL_120:
  swift_once();
LABEL_88:
  uint64_t v94 = sub_100087350();
  uint64_t v95 = sub_10000A5F4(v94, (uint64_t)qword_1000AD9E8);
  swift_retain_n();
  uint64_t v96 = sub_100087330();
  os_log_type_t v97 = sub_1000881D0();
  if (os_log_type_enabled(v96, v97))
  {
    Swift::String v98 = (uint8_t *)swift_slowAlloc();
    uint64_t v99 = swift_slowAlloc();
    uint64_t v177 = v95;
    uint64_t v185 = v99;
    *(_DWORD *)Swift::String v98 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100004FB4(&qword_1000A9C60);
    uint64_t v100 = sub_100087FC0();
    unint64_t v102 = v101;
    swift_bridgeObjectRelease();
    uint64_t v183 = (void *)sub_100017980(v100, v102, &v185);
    sub_100088240();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v96, v97, "Need app metadata for the following adam IDs: %s", v98, 0xCu);
    swift_arrayDestroy();
    uint64_t v95 = v177;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v103 = sub_100087330();
  int v104 = sub_1000881D0();
  if (os_log_type_enabled(v103, (os_log_type_t)v104))
  {
    uint64_t v105 = (uint8_t *)swift_slowAlloc();
    uint64_t v176 = swift_slowAlloc();
    uint64_t v185 = v176;
    *(_DWORD *)uint64_t v105 = 136315138;
    swift_beginAccess();
    uint64_t v106 = v181;
    int64_t v107 = v181[2];
    if (v107)
    {
      LODWORD(v172) = v104;
      unint64_t v174 = (unint64_t)v105;
      uint64_t v175 = v103;
      uint64_t v177 = v95;
      uint64_t v183 = &_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10004007C(0, v107, 0);
      uint64_t v108 = (uint64_t)v106
           + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
      uint64_t v109 = *(void *)(v173 + 72);
      char v110 = v183;
      do
      {
        uint64_t v111 = v166;
        sub_10004665C(v108, v166, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        uint64_t v112 = (uint64_t *)(v111 + *(int *)(v179 + 20));
        uint64_t v113 = *v112;
        uint64_t v114 = v112[1];
        swift_bridgeObjectRetain();
        sub_1000466C4(v111, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10004007C(0, v110[2] + 1, 1);
          char v110 = v183;
        }
        unint64_t v116 = v110[2];
        unint64_t v115 = v110[3];
        if (v116 >= v115 >> 1)
        {
          sub_10004007C(v115 > 1, v116 + 1, 1);
          char v110 = v183;
        }
        v110[2] = v116 + 1;
        uint64_t v117 = (char *)&v110[2 * v116];
        *((void *)v117 + 4) = v113;
        *((void *)v117 + 5) = v114;
        v108 += v109;
        --v107;
      }
      while (v107);
      swift_bridgeObjectRelease();
      uint64_t v103 = v175;
      uint64_t v105 = (uint8_t *)v174;
      LOBYTE(v104) = v172;
    }
    uint64_t v118 = sub_100088130();
    unint64_t v120 = v119;
    swift_bridgeObjectRelease();
    uint64_t v183 = (void *)sub_100017980(v118, v120, &v185);
    sub_100088240();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v103, (os_log_type_t)v104, "Found cached app metadata for: %s", v105, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  char v121 = sub_100087330();
  os_log_type_t v122 = sub_1000881D0();
  if (os_log_type_enabled(v121, v122))
  {
    uint64_t v123 = (uint8_t *)swift_slowAlloc();
    uint64_t v185 = swift_slowAlloc();
    *(_DWORD *)uint64_t v123 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v124 = sub_100088130();
    unint64_t v126 = v125;
    swift_bridgeObjectRelease();
    v180[3] = sub_100017980(v124, v126, &v185);
    sub_100088240();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v121, v122, "Reaching out to MAPI to retrieve app metadata for: %s", v123, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v127 = v147;
  swift_beginAccess();
  uint64_t v128 = v149;
  uint64_t v129 = v151;
  v127(v149, v152, v151);
  unint64_t v130 = v150;
  unint64_t v131 = (*(unsigned __int8 *)(v150 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
  unint64_t v132 = (v157 + v131 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v133 = (v132 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v134 = (char *)swift_allocObject();
  *((void *)v134 + 2) = v159;
  *((void *)v134 + 3) = &v181;
  *((void *)v134 + 4) = v178;
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(&v134[v131], v128, v129);
  *(void *)&v134[v132] = v158;
  uint64_t v135 = (uint64_t *)&v134[v133];
  uint64_t v136 = v154;
  uint64_t *v135 = v153;
  v135[1] = v136;
  uint64_t v137 = (unint64_t *)&v134[(v133 + 23) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v138 = v156;
  *uint64_t v137 = v155;
  v137[1] = v138;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v139 = swift_bridgeObjectRetain();
  sub_10003CB30(v139, sub_1000467F8, (uint64_t)v134);
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000390AC@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v77 = a3;
  uint64_t v68 = a1;
  os_log_t v69 = a2;
  uint64_t v75 = a5;
  uint64_t v76 = type metadata accessor for AppMetadata();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v64 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v9 = (char *)&v63 - v8;
  __chkstk_darwin(v10);
  os_log_type_t v66 = (char *)&v63 - v11;
  uint64_t v12 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100087170();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v70 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v71 = (char *)&v63 - v19;
  __chkstk_darwin(v20);
  unint64_t v72 = (char *)&v63 - v21;
  __chkstk_darwin(v22);
  id v73 = (char *)&v63 - v23;
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_100087350();
  uint64_t v25 = sub_10000A5F4(v24, (uint64_t)qword_1000AD9E8);
  swift_bridgeObjectRetain_n();
  uint64_t v67 = v25;
  uint64_t v26 = sub_100087330();
  os_log_type_t v27 = sub_1000881D0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  unint64_t v65 = v9;
  if (v28)
  {
    unint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    *(_DWORD *)unint64_t v29 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v78 = sub_100017980(v77, a4, &v79);
    sub_100088240();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Fetch cached metadata for %s", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  char v30 = self;
  id v31 = [v30 defaultManager];
  uint64_t v32 = 1;
  id v33 = [v31 URLsForDirectory:13 inDomains:1];

  uint64_t v34 = sub_100088120();
  uint64_t v35 = v16;
  if (*(void *)(v34 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v14, v34 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    uint64_t v32 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v32, 1, v15);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100006AE0((uint64_t)v14, &qword_1000A8BC8);
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v73, v14, v15);
  sub_100087120();
  swift_bridgeObjectRetain();
  sub_100087120();
  swift_bridgeObjectRelease();
  uint64_t v36 = v70;
  sub_100087130();
  id v37 = [v30 defaultManager];
  sub_100087150();
  NSString v38 = sub_100087FF0();
  swift_bridgeObjectRelease();
  unsigned __int8 v39 = [v37 fileExistsAtPath:v38];

  if ((v39 & 1) == 0)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v44 = sub_100087330();
    os_log_type_t v45 = sub_1000881D0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_100017980(v77, a4, &v79);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Cached metadata does not exist for %s", v46, 0xCu);
      uint64_t v47 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unsigned __int8 v48 = *(void (**)(char *, uint64_t))(v35 + 8);
      v48(v36, v15);
      v48(v71, v15);
      v48(v72, v15);
      v48(v73, v15);
LABEL_16:
      uint64_t v50 = v75;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v50, v47, 1, v76);
    }
    swift_bridgeObjectRelease_n();

    uint64_t v49 = *(void (**)(char *, uint64_t))(v35 + 8);
    v49(v36, v15);
    v49(v71, v15);
    v49(v72, v15);
    v49(v73, v15);
LABEL_15:
    uint64_t v47 = 1;
    goto LABEL_16;
  }
  uint64_t v40 = sub_100087180();
  unint64_t v42 = v41;
  sub_100087090();
  swift_allocObject();
  sub_100087080();
  sub_1000461C8(&qword_1000A9CA0, (void (*)(uint64_t))type metadata accessor for AppMetadata);
  uint64_t v43 = (uint64_t)v66;
  sub_100087070();
  swift_release();
  uint64_t v52 = (uint64_t)v65;
  sub_10004665C(v43, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for AppMetadata);
  swift_bridgeObjectRetain_n();
  uint64_t v53 = sub_100087330();
  os_log_type_t v54 = sub_1000881D0();
  int v55 = v54;
  os_log_t v69 = v53;
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v57 = swift_slowAlloc();
    LODWORD(v67) = v55;
    uint64_t v58 = v57;
    uint64_t v68 = swift_slowAlloc();
    uint64_t v79 = v68;
    *(_DWORD *)uint64_t v58 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v78 = sub_100017980(v77, a4, &v79);
    sub_100088240();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v58 + 12) = 2080;
    sub_10004665C(v52, v64, (uint64_t (*)(void))type metadata accessor for AppMetadata);
    uint64_t v59 = sub_100088010();
    uint64_t v78 = sub_100017980(v59, v60, &v79);
    uint64_t v43 = (uint64_t)v66;
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_1000466C4(v52, (uint64_t (*)(void))type metadata accessor for AppMetadata);
    os_log_t v61 = v69;
    _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v67, "Decoded metadata with adamID %s -> %s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_10000AF7C(v40, v42);

    char v62 = *(void (**)(char *, uint64_t))(v35 + 8);
    v62(v70, v15);
  }
  else
  {
    sub_10000AF7C(v40, v42);

    sub_1000466C4(v52, (uint64_t (*)(void))type metadata accessor for AppMetadata);
    swift_bridgeObjectRelease_n();
    char v62 = *(void (**)(char *, uint64_t))(v35 + 8);
    v62(v36, v15);
  }
  v62(v71, v15);
  v62(v72, v15);
  v62(v73, v15);
  uint64_t v50 = v75;
  sub_100047104(v43, v75, (uint64_t (*)(void))type metadata accessor for AppMetadata);
  uint64_t v47 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v50, v47, 1, v76);
}

void sub_100039D50(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, NSObject *a9, uint64_t a10)
{
  uint64_t v115 = a8;
  uint64_t v114 = a7;
  uint64_t v119 = a6;
  uint64_t v15 = type metadata accessor for AppMetadata();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v117 = (uint64_t)v96 - v20;
  unint64_t v133 = v21;
  __chkstk_darwin(v22);
  uint64_t v129 = (uint64_t)v96 - v23;
  uint64_t v102 = sub_100087E10();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v99 = (char *)v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100087E30();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  os_log_type_t v97 = (char *)v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_100087EC0();
  uint64_t v121 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  dispatch_group_t v134 = v26;
  os_log_type_t v27 = (char *)v96 - (((unint64_t)&v26[1].isa + 7) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_t v120 = dispatch_group_create();
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = sub_10003ABC4(0, a2);
  uint64_t v118 = v28;
  *(void *)(v28 + 16) = v29;
  uint64_t v30 = *(void *)(a1 + 16);
  uint64_t v131 = a4;
  unint64_t v132 = v27;
  uint64_t v130 = a5;
  if (v30)
  {
    unint64_t v31 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v32 = a1 + v31;
    uint64_t v135 = v16;
    uint64_t v33 = *(void *)(v16 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10005ED64(0x65756E69746E6F43, 0xEF676E6979616C50);
      sub_10004665C(v32, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AppMetadata);
      swift_beginAccess();
      unint64_t v34 = *a3;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a3 = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v34 = sub_10000FE94(0, *(void *)(v34 + 16) + 1, 1, v34);
        *a3 = v34;
      }
      unint64_t v37 = *(void *)(v34 + 16);
      unint64_t v36 = *(void *)(v34 + 24);
      if (v37 >= v36 >> 1)
      {
        unint64_t v34 = sub_10000FE94(v36 > 1, v37 + 1, 1, v34);
        *a3 = v34;
      }
      *(void *)(v34 + 16) = v37 + 1;
      sub_100047104((uint64_t)v18, v34 + v31 + v37 * v33, (uint64_t (*)(void))type metadata accessor for AppMetadata);
      swift_endAccess();
      v32 += v33;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    a5 = v130;
    a4 = v131;
    os_log_type_t v27 = v132;
    uint64_t v16 = v135;
  }
  swift_beginAccess();
  unint64_t v38 = *a3;
  uint64_t v39 = *(void *)(*a3 + 16);
  if (v39)
  {
    id v110 = self;
    uint64_t v40 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v41 = v16;
    uint64_t v42 = v38 + ((v40 + 32) & ~v40);
    uint64_t v109 = *(void *)(v41 + 72);
    uint64_t v43 = v40 | 7;
    uint64_t v125 = (v40 + 24) & ~v40;
    unint64_t v127 = ((unint64_t)v133 + v125 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v126 = (v127 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v128 = v126 + 8;
    unsigned int v113 = enum case for WidgetFamily.systemLarge(_:);
    uint64_t v112 = (void (**)(char *, void, uint64_t))(v121 + 104);
    uint64_t v111 = (void (**)(char *, uint64_t))(v121 + 8);
    unsigned int v103 = enum case for WidgetFamily.systemExtraLarge(_:);
    uint64_t v108 = v121 + 16;
    unint64_t v107 = (v126 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v106 = (v107 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v105 = v106 + 16;
    unint64_t v116 = (char *)&v134->isa + 7;
    uint64_t v104 = v121 + 32;
    v96[1] = v38;
    swift_bridgeObjectRetain();
    uint64_t v44 = v136;
    uint64_t v45 = v117;
    uint64_t v46 = v129;
    uint64_t v135 = v43;
    while (1)
    {
      uint64_t v124 = v39;
      uint64_t v123 = v42;
      sub_10004665C(v42, v46, (uint64_t (*)(void))type metadata accessor for AppMetadata);
      aBlock[0] = sub_10005B374((uint64_t)&_swiftEmptyArrayStorage);
      dispatch_group_t v47 = v120;
      dispatch_group_enter(v120);
      sub_10004665C(v46, v45, (uint64_t (*)(void))type metadata accessor for AppMetadata);
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = a4;
      sub_100047104(v45, v48 + v125, (uint64_t (*)(void))type metadata accessor for AppMetadata);
      *(void *)(v48 + v127) = aBlock;
      *(void *)(v48 + v126) = v47;
      dispatch_group_t v134 = v47;
      sub_10005FB14(0x65756E69746E6F43, 0xEF676E6979616C50, 350, 350, 0, (void (*)(void))sub_100046938, v48);
      swift_release();
      uint64_t v49 = *v112;
      (*v112)(v27, v113, v44);
      sub_1000461C8(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      sub_1000880F0();
      sub_1000880F0();
      uint64_t v51 = v138;
      uint64_t v50 = v139;
      uint64_t v52 = *v111;
      (*v111)(v27, v44);
      if (v50 == v51)
      {
        int v53 = 1;
        double v54 = 430.0;
        double v55 = 246.324503;
      }
      else
      {
        v49(v27, v103, v44);
        sub_1000880F0();
        sub_1000880F0();
        BOOL v56 = v139 == v138;
        v52(v27, v44);
        int v53 = 2 * v56;
        double v55 = 350.0;
        double v54 = 350.0;
      }
      dispatch_group_enter(v134);
      double v57 = round(v54);
      uint64_t v45 = v117;
      if ((~*(void *)&v57 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v57 <= -9.22337204e18) {
        goto LABEL_28;
      }
      if (v57 >= 9.22337204e18) {
        goto LABEL_29;
      }
      double v58 = round(v55);
      if ((~*(void *)&v58 & 0x7FF0000000000000) == 0) {
        goto LABEL_30;
      }
      if (v58 <= -9.22337204e18) {
        goto LABEL_31;
      }
      if (v58 >= 9.22337204e18) {
        goto LABEL_32;
      }
      uint64_t v59 = (uint64_t)v57;
      uint64_t v60 = (uint64_t)v58;
      unint64_t v133 = type metadata accessor for AppMetadata;
      uint64_t v61 = v129;
      sub_10004665C(v129, v117, (uint64_t (*)(void))type metadata accessor for AppMetadata);
      uint64_t v62 = swift_allocObject();
      uint64_t v63 = v125;
      *(void *)(v62 + 16) = v131;
      os_log_type_t v122 = type metadata accessor for AppMetadata;
      sub_100047104(v45, v62 + v63, (uint64_t (*)(void))type metadata accessor for AppMetadata);
      unint64_t v64 = v127;
      *(void *)(v62 + v127) = aBlock;
      unint64_t v65 = v126;
      dispatch_group_t v66 = v134;
      *(void *)(v62 + v126) = v134;
      uint64_t v67 = v66;
      uint64_t v68 = v60;
      uint64_t v69 = v61;
      sub_10005FB14(0x65756E69746E6F43, 0xEF676E6979616C50, v59, v68, v53, (void (*)(void))sub_100046AAC, v62);
      swift_release();
      uint64_t v70 = v67;
      dispatch_group_enter(v67);
      id v71 = [v110 currentDevice];
      id v72 = [v71 userInterfaceIdiom];

      if (v72 == (id)1) {
        uint64_t v73 = 110;
      }
      else {
        uint64_t v73 = 95;
      }
      sub_10004665C(v69, v45, (uint64_t (*)(void))v133);
      uint64_t v74 = v121;
      (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v132, v130, v136);
      unint64_t v75 = (v105 + *(unsigned __int8 *)(v74 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      unint64_t v76 = (unint64_t)&v116[v75] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = v73;
      sub_100047104(v45, v77 + v63, (uint64_t (*)(void))v122);
      *(void *)(v77 + v64) = v70;
      *(void *)(v77 + v65) = v119;
      *(void *)(v77 + v107) = aBlock;
      uint64_t v78 = (void *)(v77 + v106);
      uint64_t v79 = v115;
      *uint64_t v78 = v114;
      v78[1] = v79;
      unint64_t v80 = v77 + v75;
      uint64_t v46 = v129;
      uint64_t v81 = *(void (**)(unint64_t, char *, uint64_t))(v74 + 32);
      os_log_type_t v27 = v132;
      v81(v80, v132, v136);
      *(void *)(v77 + v76) = v118;
      swift_retain();
      swift_retain();
      uint64_t v82 = v70;
      a4 = v131;
      uint64_t v44 = v136;
      swift_bridgeObjectRetain();
      sub_10005FB14(0x65756E69746E6F43, 0xEF676E6979616C50, v73, v73, 0, (void (*)(void))sub_100046DB8, v77);
      swift_release();
      a5 = v130;
      sub_1000466C4(v46, (uint64_t (*)(void))v133);
      swift_bridgeObjectRelease();
      uint64_t v42 = v123 + v109;
      uint64_t v39 = v124 - 1;
      if (v124 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v83 = v116;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    unint64_t v83 = (char *)&v134->isa + 7;
    uint64_t v44 = v136;
LABEL_26:
    dispatch_group_t v134 = a9;
    sub_100013058(0, &qword_1000A9C08);
    uint64_t v135 = sub_1000881F0();
    uint64_t v84 = v121;
    uint64_t v85 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v132, a5, v44);
    unint64_t v86 = (*(unsigned __int8 *)(v84 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    unint64_t v87 = (unint64_t)&v83[v86] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v88 = swift_allocObject();
    *(void *)(v88 + 16) = v118;
    (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v88 + v86, v85, v44);
    *(void *)(v88 + v87) = v119;
    unint64_t v89 = (void *)(v88 + ((v87 + 15) & 0xFFFFFFFFFFFFFFF8));
    void *v89 = v134;
    v89[1] = a10;
    aBlock[4] = sub_10004700C;
    aBlock[5] = v88;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003CAEC;
    aBlock[3] = &unk_1000A6CE0;
    unint64_t v90 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    unint64_t v91 = v97;
    sub_100087E20();
    uint64_t v139 = &_swiftEmptyArrayStorage;
    sub_1000461C8(&qword_1000A9C10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004FB4(&qword_1000A9C18);
    sub_100046118();
    uint64_t v92 = v99;
    uint64_t v93 = v102;
    sub_100088290();
    uint64_t v94 = (void *)v135;
    dispatch_group_t v95 = v120;
    sub_1000881E0();
    _Block_release(v90);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v92, v93);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v91, v100);
    swift_release();
    swift_release();
  }
}

uint64_t sub_10003ABC4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_1000883B0();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_100004FB4(&qword_1000A9C98);
      uint64_t v4 = (void *)sub_100088160();
      v4[2] = a2;
      uint64_t v8 = v4;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        uint64_t v5 = a2 - 2;
        if (v5)
        {
          uint64_t v6 = v4 + 6;
          do
          {
            *v6++ = a1;
            swift_retain();
            --v5;
          }
          while (v5);
        }
        swift_retain();
      }
    }
    else
    {
      uint64_t v8 = &_swiftEmptyArrayStorage;
      swift_release();
    }
    sub_100088140();
    return (uint64_t)v8;
  }
  return result;
}

void sub_10003ACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, NSObject *a6)
{
  uint64_t v11 = type metadata accessor for AppMetadata();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100087350();
  sub_10000A5F4(v14, (uint64_t)qword_1000AD9E8);
  sub_10004665C(a4, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AppMetadata);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_100087330();
  os_log_type_t v16 = sub_1000881D0();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v28 = v19;
    *(_DWORD *)uint64_t v18 = 134218754;
    int v27 = v17;
    uint64_t v30 = v19;
    uint64_t v31 = 350;
    uint64_t v29 = a6;
    sub_100088240();
    *(_WORD *)(v18 + 12) = 2048;
    uint64_t v31 = 350;
    sub_100088240();
    *(_WORD *)(v18 + 22) = 2080;
    uint64_t v20 = (uint64_t *)&v13[*(int *)(v11 + 28)];
    uint64_t v22 = *v20;
    unint64_t v21 = v20[1];
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_100017980(v22, v21, &v30);
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_1000466C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AppMetadata);
    *(_WORD *)(v18 + 32) = 2080;
    uint64_t v31 = a1;
    uint64_t v32 = a2;
    swift_bridgeObjectRetain();
    sub_100004FB4(&qword_1000A9C50);
    uint64_t v23 = sub_100088010();
    uint64_t v31 = sub_100017980(v23, v24, &v30);
    a6 = v29;
    sub_100088240();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v27, "%ldx%ld highlight image data for %s = %s", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000466C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AppMetadata);

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  if (a2)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *a5;
    *a5 = 0x8000000000000000;
    sub_10005D754(a1, a2, 0x6867696C68676968, 0xE900000000000074, isUniquelyReferenced_nonNull_native);
    *a5 = v30;
  }
  else
  {
    sub_10003FDBC(0x6867696C68676968, 0xE900000000000074);
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  dispatch_group_leave(a6);
}

void sub_10003B094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, NSObject *a6)
{
  uint64_t v11 = type metadata accessor for AppMetadata();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100087350();
  sub_10000A5F4(v14, (uint64_t)qword_1000AD9E8);
  sub_10004665C(a4, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AppMetadata);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_100087330();
  os_log_type_t v16 = sub_1000881D0();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = v32;
    *(_DWORD *)uint64_t v18 = 134218754;
    uint64_t v34 = 350;
    os_log_t v31 = v15;
    sub_100088240();
    *(_WORD *)(v18 + 12) = 2048;
    uint64_t v34 = 350;
    sub_100088240();
    *(_WORD *)(v18 + 22) = 2080;
    uint64_t v19 = (uint64_t *)&v13[*(int *)(v11 + 28)];
    int v30 = v17;
    uint64_t v20 = a1;
    unint64_t v21 = a6;
    uint64_t v23 = *v19;
    unint64_t v22 = v19[1];
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_100017980(v23, v22, &v33);
    sub_100088240();
    a6 = v21;
    a1 = v20;
    swift_bridgeObjectRelease();
    sub_1000466C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AppMetadata);
    *(_WORD *)(v18 + 32) = 2080;
    uint64_t v34 = v20;
    uint64_t v35 = a2;
    swift_bridgeObjectRetain();
    sub_100004FB4(&qword_1000A9C50);
    uint64_t v24 = sub_100088010();
    uint64_t v34 = sub_100017980(v24, v25, &v33);
    sub_100088240();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v26 = v31;
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v30, "%ldx%ld editorial image data for %s = %s", (uint8_t *)v18, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000466C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AppMetadata);

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  if (a2)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *a5;
    *a5 = 0x8000000000000000;
    sub_10005D754(a1, a2, 0xD000000000000019, 0x800000010008C000, isUniquelyReferenced_nonNull_native);
    *a5 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *a5;
    *a5 = 0x8000000000000000;
    sub_10005D754(a1, a2, 0xD00000000000001ELL, 0x800000010008BE20, v28);
    *a5 = v33;
  }
  else
  {
    sub_10003FDBC(0xD000000000000019, 0x800000010008C000);
    swift_bridgeObjectRelease();
    sub_10003FDBC(0xD00000000000001ELL, 0x800000010008BE20);
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  dispatch_group_leave(a6);
}

void sub_10003B4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, uint64_t *a6, uint64_t *a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v147 = a8;
  uint64_t v149 = a7;
  uint64_t v151 = a6;
  uint64_t v153 = (char *)a1;
  uint64_t v145 = sub_100087EC0();
  uint64_t v142 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  os_log_type_t v16 = (int *)((char *)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v139 - v18;
  uint64_t v20 = sub_100087220();
  __chkstk_darwin(v20 - 8);
  uint64_t v146 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for AppMetadata();
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v139 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_100087350();
  uint64_t v26 = sub_10000A5F4(v25, (uint64_t)qword_1000AD9E8);
  sub_10004665C(a4, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for AppMetadata);
  swift_bridgeObjectRetain_n();
  uint64_t v150 = v26;
  int v27 = sub_100087330();
  os_log_type_t v28 = sub_1000881D0();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v143 = v19;
  os_log_type_t v144 = v16;
  uint64_t v152 = (int *)v22;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    unint64_t v148 = a5;
    uint64_t v31 = v30;
    uint64_t v141 = swift_slowAlloc();
    v155[0] = v141;
    *(_DWORD *)uint64_t v31 = 134218754;
    uint64_t v156 = a3;
    sub_100088240();
    *(_WORD *)(v31 + 12) = 2048;
    uint64_t v156 = a3;
    sub_100088240();
    *(_WORD *)(v31 + 22) = 2080;
    uint64_t v32 = (uint64_t *)&v24[*(int *)(v22 + 28)];
    uint64_t v33 = a4;
    uint64_t v34 = *v32;
    unint64_t v35 = v32[1];
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_100017980(v34, v35, v155);
    sub_100088240();
    a4 = v33;
    swift_bridgeObjectRelease();
    sub_1000466C4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for AppMetadata);
    *(_WORD *)(v31 + 32) = 2080;
    uint64_t v156 = (uint64_t)v153;
    uint64_t v157 = a2;
    swift_bridgeObjectRetain();
    sub_100004FB4(&qword_1000A9C50);
    uint64_t v36 = sub_100088010();
    uint64_t v156 = sub_100017980(v36, v37, v155);
    sub_100088240();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%ldx%ld image data for %s = %s", (uint8_t *)v31, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    a5 = v148;
    swift_slowDealloc();

    if (!a2) {
      goto LABEL_21;
    }
  }
  else
  {
    sub_1000466C4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for AppMetadata);

    swift_bridgeObjectRelease_n();
    if (!a2)
    {
LABEL_21:
      dispatch_group_leave(a5);
      return;
    }
  }
  unint64_t v38 = v152;
  uint64_t v39 = v151 + 2;
  uint64_t v40 = (uint64_t *)(a4 + v152[5]);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  swift_beginAccess();
  uint64_t v43 = *v39;
  uint64_t v44 = *(void *)(v43 + 16);
  swift_bridgeObjectRetain();
  if (!v44)
  {
LABEL_18:
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_100087330();
    os_log_type_t v69 = sub_1000881D0();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v70 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "unable to find tuple", v70, 2u);
      swift_slowDealloc();
    }

    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v45 = sub_10005CB90(v42, v41);
  if ((v46 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v47 = *(void *)(v43 + 56) + 16 * v45;
  uint64_t v48 = *(void **)v47;
  uint64_t v150 = *(void *)(v47 + 8);
  swift_endAccess();
  uint64_t v49 = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v149;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v155[0] = *v50;
  *uint64_t v50 = 0x8000000000000000;
  sub_10005D754((uint64_t)v153, a2, 0x6C616D726F6ELL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *uint64_t v50 = v155[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v151 = (uint64_t *)v49;
  if (a9)
  {
    uint64_t v52 = HIBYTE(a9) & 0xF;
    if ((a9 & 0x2000000000000000) == 0) {
      uint64_t v52 = v147 & 0xFFFFFFFFFFFFLL;
    }
    if (v52)
    {
      uint64_t v53 = *v40;
      unint64_t v54 = v40[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_10003C338(v53, v54);
      if (v56) {
        uint64_t v57 = 0;
      }
      else {
        uint64_t v57 = v55;
      }
      uint64_t v153 = (char *)v57;
      double v58 = (uint64_t *)(a4 + v38[7]);
      uint64_t v59 = v58[1];
      unint64_t v148 = *v58;
      swift_bridgeObjectRetain();
      id v60 = [v49 playedAt];
      uint64_t v61 = (uint64_t)v146;
      sub_100087200();

      uint64_t v62 = (uint64_t *)(a4 + v38[6]);
      uint64_t v63 = *v62;
      uint64_t v64 = v62[1];
      unint64_t v65 = (unint64_t *)v149;
      swift_beginAccess();
      unint64_t v66 = *v65;
      type metadata accessor for AppDisplayData();
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      for (uint64_t i = sub_10005B954((uint64_t)v153, (uint64_t)v148, v59, v61, v63, v64, v66, 0, 0, v147, a9);
            ;
            uint64_t i = sub_10005B954((uint64_t)v153, v90, v91, v93, v95, v96, v98, 0, 0, 0, 0))
      {
        uint64_t v49 = (char *)i;
        uint64_t v99 = (uint64_t *)(a11 + 16);
        id v100 = objc_allocWithZone((Class)AMSMediaArtwork);
        swift_bridgeObjectRetain();
        Class isa = sub_100087FA0().super.isa;
        swift_bridgeObjectRelease();
        id v102 = [v100 initWithDictionary:isa];

        unsigned int v103 = (char *)AMSMediaArtworkColorKindBackground;
        id v104 = [v102 colorWithKind:AMSMediaArtworkColorKindBackground];
        id v105 = v102;
        id v106 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v104];

        uint64_t v107 = OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor;
        uint64_t v108 = *(void **)&v49[OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor];
        *(void *)&v49[OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor] = v106;

        uint64_t v109 = *(void **)&v49[v107];
        uint64_t v110 = OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor;
        uint64_t v111 = *(void **)&v49[OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor];
        *(void *)&v49[OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor] = v109;
        id v112 = v109;

        unint64_t v38 = *(int **)(a4 + v38[11]);
        if (!v38) {
          goto LABEL_77;
        }
        uint64_t v141 = v110;
        uint64_t v152 = (int *)(a11 + 16);
        uint64_t v153 = v49;
        unint64_t v148 = a5;
        uint64_t v146 = v103;
        uint64_t v147 = a10;
        uint64_t v114 = v142;
        unsigned int v113 = v143;
        a4 = v142 + 104;
        uint64_t v115 = v145;
        uint64_t v140 = *(void (**)(char *, void, uint64_t))(v142 + 104);
        v140(v143, enum case for WidgetFamily.systemLarge(_:), v145);
        sub_1000461C8(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
        uint64_t v149 = (uint64_t *)v38;
        swift_bridgeObjectRetain();
        sub_1000880F0();
        sub_1000880F0();
        uint64_t v117 = v154;
        uint64_t v116 = v155[0];
        uint64_t v118 = *(void (**)(char *, uint64_t))(v114 + 8);
        v118(v113, v115);
        unint64_t v38 = v144;
        (*(void (**)(int *, uint64_t, uint64_t))(v114 + 16))(v144, v147, v115);
        if (v116 == v117)
        {
          v118((char *)v38, v115);
          uint64_t v119 = &SeededRandomNumberGenerator;
          dispatch_group_t v120 = &_s7SwiftUI18_AspectRatioLayoutVAA12ViewModifierAAWP_ptr;
          uint64_t v121 = &SeededRandomNumberGenerator;
        }
        else
        {
          v140(v113, enum case for WidgetFamily.systemExtraLarge(_:), v115);
          sub_1000880F0();
          sub_1000880F0();
          uint64_t v123 = v154;
          uint64_t v122 = v155[0];
          v118(v113, v115);
          v118((char *)v38, v115);
          uint64_t v119 = &SeededRandomNumberGenerator;
          dispatch_group_t v120 = &_s7SwiftUI18_AspectRatioLayoutVAA12ViewModifierAAWP_ptr;
          uint64_t v121 = &SeededRandomNumberGenerator;
          if (v122 != v123)
          {
            swift_bridgeObjectRelease();
            a5 = v148;
            uint64_t v49 = v153;
            goto LABEL_76;
          }
        }
        id v124 = objc_allocWithZone((Class)AMSMediaArtwork);
        Class v125 = sub_100087FA0().super.isa;
        swift_bridgeObjectRelease();
        id v126 = [v124 initWithDictionary:v125];

        id v127 = [v126 v119[21].base_meths:v146];
        id v128 = v126;
        id v129 = [objc_allocWithZone((Class)v120[140]) v121[21].base_prots:v127];

        uint64_t v49 = v153;
        uint64_t v130 = *(void **)&v153[v141];
        *(void *)&v153[v141] = v129;

        a5 = v148;
LABEL_76:
        uint64_t v99 = (uint64_t *)v152;
LABEL_77:
        swift_beginAccess();
        uint64_t v131 = *v99;
        swift_retain();
        char v132 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t *v99 = v131;
        if (v132)
        {
          unint64_t v133 = v150;
          dispatch_group_t v134 = v151;
          if (v150 < 0) {
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v131 = sub_1000402F0(v131);
          uint64_t *v99 = v131;
          unint64_t v133 = v150;
          dispatch_group_t v134 = v151;
          if (v150 < 0)
          {
LABEL_88:
            __break(1u);
            goto LABEL_89;
          }
        }
        if (v133 < *(void *)(v131 + 16))
        {
          *(void *)(v131 + 8 * v133 + 32) = v49;
          swift_release();
          sub_100088140();
          swift_endAccess();
          dispatch_group_leave(a5);

          swift_release();
          return;
        }
LABEL_89:
        __break(1u);
LABEL_90:
        uint64_t v153 = 0;
LABEL_69:
        unint64_t v89 = (uint64_t *)(a4 + v38[7]);
        uint64_t v90 = *v89;
        uint64_t v91 = v89[1];
        swift_bridgeObjectRetain();
        id v92 = [v49 playedAt];
        uint64_t v93 = (uint64_t)v146;
        sub_100087200();

        uint64_t v94 = (uint64_t *)(a4 + v38[6]);
        uint64_t v95 = *v94;
        uint64_t v96 = v94[1];
        os_log_type_t v97 = (unint64_t *)v149;
        swift_beginAccess();
        unint64_t v98 = *v97;
        type metadata accessor for AppDisplayData();
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
  }
  uint64_t v71 = *v40;
  unint64_t v72 = v40[1];
  uint64_t v73 = HIBYTE(v72) & 0xF;
  uint64_t v74 = *v40 & 0xFFFFFFFFFFFFLL;
  if ((v72 & 0x2000000000000000) != 0) {
    uint64_t v75 = HIBYTE(v72) & 0xF;
  }
  else {
    uint64_t v75 = *v40 & 0xFFFFFFFFFFFFLL;
  }
  if (!v75) {
    goto LABEL_90;
  }
  if ((v72 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v77 = (uint64_t)sub_100040208(v71, v72, 10);
    LOBYTE(v71) = v138;
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  if ((v72 & 0x2000000000000000) == 0)
  {
    if ((v71 & 0x1000000000000000) != 0) {
      unint64_t v76 = (unsigned __int8 *)((v72 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v76 = (unsigned __int8 *)sub_100088360();
    }
    uint64_t v77 = (uint64_t)sub_100040304(v76, v74, 10);
    LOBYTE(v71) = v78 & 1;
    goto LABEL_65;
  }
  uint64_t v156 = *v40;
  uint64_t v157 = v72 & 0xFFFFFFFFFFFFFFLL;
  if (v71 == 43)
  {
    if (!v73) {
      goto LABEL_94;
    }
    if (v73 == 1 || (BYTE1(v71) - 48) > 9u) {
      goto LABEL_52;
    }
    uint64_t v77 = (BYTE1(v71) - 48);
    if (v73 != 2)
    {
      if ((BYTE2(v71) - 48) > 9u) {
        goto LABEL_52;
      }
      uint64_t v77 = 10 * (BYTE1(v71) - 48) + (BYTE2(v71) - 48);
      uint64_t v79 = v73 - 3;
      if (v79)
      {
        unint64_t v80 = (unsigned __int8 *)&v156 + 3;
        while (1)
        {
          unsigned int v81 = *v80 - 48;
          if (v81 > 9) {
            goto LABEL_52;
          }
          uint64_t v82 = 10 * v77;
          if ((unsigned __int128)(v77 * (__int128)10) >> 64 != (10 * v77) >> 63) {
            goto LABEL_52;
          }
          uint64_t v77 = v82 + v81;
          if (__OFADD__(v82, v81)) {
            goto LABEL_52;
          }
          LOBYTE(v71) = 0;
          ++v80;
          if (!--v79) {
            goto LABEL_65;
          }
        }
      }
    }
LABEL_64:
    LOBYTE(v71) = 0;
    goto LABEL_65;
  }
  if (v71 != 45)
  {
    if (!v73 || (v71 - 48) > 9u) {
      goto LABEL_52;
    }
    uint64_t v77 = (v71 - 48);
    if (v73 != 1)
    {
      if ((BYTE1(v71) - 48) > 9u) {
        goto LABEL_52;
      }
      uint64_t v77 = 10 * (v71 - 48) + (BYTE1(v71) - 48);
      uint64_t v83 = v73 - 2;
      if (v83)
      {
        uint64_t v84 = (unsigned __int8 *)&v156 + 2;
        while (1)
        {
          unsigned int v85 = *v84 - 48;
          if (v85 > 9) {
            goto LABEL_52;
          }
          uint64_t v86 = 10 * v77;
          if ((unsigned __int128)(v77 * (__int128)10) >> 64 != (10 * v77) >> 63) {
            goto LABEL_52;
          }
          uint64_t v77 = v86 + v85;
          if (__OFADD__(v86, v85)) {
            goto LABEL_52;
          }
          LOBYTE(v71) = 0;
          ++v84;
          if (!--v83) {
            goto LABEL_65;
          }
        }
      }
    }
    goto LABEL_64;
  }
  if (v73)
  {
    if (v73 != 1 && (BYTE1(v71) - 48) <= 9u)
    {
      if (v73 == 2)
      {
        LOBYTE(v71) = 0;
        uint64_t v77 = -(uint64_t)(BYTE1(v71) - 48);
LABEL_65:
        if (v71) {
          uint64_t v88 = 0;
        }
        else {
          uint64_t v88 = v77;
        }
        uint64_t v153 = (char *)v88;
        goto LABEL_69;
      }
      if ((BYTE2(v71) - 48) <= 9u)
      {
        uint64_t v77 = -10 * (BYTE1(v71) - 48) - (BYTE2(v71) - 48);
        uint64_t v87 = v73 - 3;
        if (!v87) {
          goto LABEL_64;
        }
        uint64_t v135 = (unsigned __int8 *)&v156 + 3;
        while (1)
        {
          unsigned int v136 = *v135 - 48;
          if (v136 > 9) {
            break;
          }
          uint64_t v137 = 10 * v77;
          if ((unsigned __int128)(v77 * (__int128)10) >> 64 != (10 * v77) >> 63) {
            break;
          }
          uint64_t v77 = v137 - v136;
          if (__OFSUB__(v137, v136)) {
            break;
          }
          LOBYTE(v71) = 0;
          ++v135;
          if (!--v87) {
            goto LABEL_65;
          }
        }
      }
    }
LABEL_52:
    uint64_t v77 = 0;
    LOBYTE(v71) = 1;
    goto LABEL_65;
  }
  __break(1u);
LABEL_94:
  __break(1u);
}

uint64_t sub_10003C338(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_100088360();
      }
      uint64_t v7 = (uint64_t)sub_100040304(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_100040208(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_10003C588(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5)
{
  uint64_t v51 = a5;
  uint64_t v52 = a4;
  uint64_t v49 = a3;
  uint64_t v7 = sub_100087EC0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  v56[0] = (uint64_t)&_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v12; ++i)
    {
      if (*(void *)(v11 + 8 * i + 32))
      {
        swift_retain();
        sub_100088100();
        if (*(void *)((v56[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_100088150();
        }
        sub_100088170();
        sub_100088140();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)v56[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v15 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v16 = 1;
  }
  else if (v15 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v16 = 3;
  }
  else if (v15 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v16 = 4;
  }
  else
  {
    if (v15 != enum case for WidgetFamily.systemExtraLarge(_:)) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    uint64_t v16 = 7;
  }
  uint64_t v17 = sub_100012AEC(v16, (unint64_t)v14);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  unint64_t v24 = v23 >> 1;
  unint64_t v25 = (v23 >> 1) - v21;
  if (v23 >> 1 == v21) {
    goto LABEL_28;
  }
  if ((uint64_t)(v23 >> 1) <= v21) {
    goto LABEL_43;
  }
  unint64_t v45 = v23 >> 1;
  uint64_t v50 = v21;
  unint64_t v47 = v23;
  uint64_t v48 = v17;
  uint64_t v26 = qword_1000A86F8;
  swift_unknownObjectRetain();
  if (v26 != -1) {
    goto LABEL_44;
  }
  while (1)
  {
    uint64_t v27 = sub_100087350();
    uint64_t v46 = v19;
    uint64_t v28 = v19 + 8 * v50;
    *(void *)&long long v29 = 136315138;
    long long v54 = v29;
    uint64_t v53 = (char *)&type metadata for Any + 8;
    uint64_t v55 = v27;
    do
    {
      sub_10000A5F4(v27, (uint64_t)qword_1000AD9E8);
      swift_retain_n();
      uint64_t v30 = sub_100087330();
      os_log_type_t v31 = sub_1000881D0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        v56[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = v54;
        swift_retain();
        uint64_t v33 = sub_10005C92C();
        unint64_t v35 = v34;
        swift_release();
        *(void *)(v32 + 4) = sub_100017980(v33, v35, v56);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "compactedAppDisplayData: %s", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        uint64_t v27 = v55;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      v28 += 8;
      --v25;
    }
    while (v25);
    uint64_t v17 = v48;
    swift_unknownObjectRelease();
    uint64_t v19 = v46;
    unint64_t v23 = v47;
    uint64_t v21 = v50;
    unint64_t v24 = v45;
LABEL_28:
    unint64_t v36 = v24 - v21;
    if (!__OFSUB__(v24, v21)) {
      break;
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_once();
  }
  if (v36 || (uint64_t v39 = v49 + 16, swift_beginAccess(), !*(void *)(*(void *)v39 + 16)))
  {
    uint64_t v37 = 0;
    if (v23) {
      goto LABEL_35;
    }
LABEL_31:
    swift_unknownObjectRetain();
LABEL_32:
    uint64_t v38 = (uint64_t)sub_100011310(v17, v19, v21, v23);
    goto LABEL_39;
  }
  uint64_t v37 = 1;
  if ((v23 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_35:
  sub_100088500();
  swift_unknownObjectRetain_n();
  uint64_t v40 = (void *)swift_dynamicCastClass();
  if (!v40)
  {
    swift_unknownObjectRelease();
    uint64_t v40 = &_swiftEmptyArrayStorage;
  }
  uint64_t v41 = v40[2];
  swift_release();
  if (v41 != v36)
  {
    swift_unknownObjectRelease();
    goto LABEL_32;
  }
  uint64_t v38 = swift_dynamicCastClass();
  if (!v38)
  {
    swift_unknownObjectRelease();
    uint64_t v42 = &_swiftEmptyArrayStorage;
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v42 = (void *)v38;
LABEL_40:
  swift_unknownObjectRelease();
  v52(v42, v37);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_10003CAEC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_10003CB30(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v101 = a3;
  uint64_t v5 = sub_100004FB4(&qword_1000A9C58);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppMetadata();
  uint64_t v103 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v104 = (uint64_t)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v96 - v11;
  __chkstk_darwin(v13);
  id v105 = (char *)v96 - v14;
  __chkstk_darwin(v15);
  uint64_t v110 = (uint64_t)v96 - v16;
  __chkstk_darwin(v17);
  uint64_t v109 = (uint64_t)v96 - v18;
  if (qword_1000A8700 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100087350();
  uint64_t v20 = sub_10000A5F4(v19, (uint64_t)qword_1000ADA00);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_100087330();
  os_log_type_t v22 = sub_1000881D0();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v106 = v8;
  uint64_t v107 = v20;
  uint64_t v108 = v12;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    id v113 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100088130();
    uint64_t v26 = a2;
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v112 = sub_100017980(v25, v28, (uint64_t *)&v113);
    sub_100088240();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v29 = sub_100088010();
    uint64_t v112 = sub_100017980(v29, v30, (uint64_t *)&v113);
    sub_100088240();
    a2 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Fetching app metadatas for %s, cacheType: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
LABEL_10:
    a2(&_swiftEmptyArrayStorage);
    return;
  }

  swift_bridgeObjectRelease_n();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_10;
  }
LABEL_5:
  os_log_type_t v31 = self;
  id v32 = [v31 bagSubProfile];
  if (!v32)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v33 = v32;
  sub_100088000();

  id v34 = [v31 bagSubProfileVersion];
  if (!v34)
  {
LABEL_42:
    __break(1u);
    return;
  }
  unint64_t v35 = v34;
  sub_100088000();

  NSString v36 = sub_100087FF0();
  swift_bridgeObjectRelease();
  NSString v37 = sub_100087FF0();
  swift_bridgeObjectRelease();
  id v38 = [self bagForProfile:v36 profileVersion:v37];

  id v39 = objc_allocWithZone((Class)AMSMediaTask);
  id v40 = v38;
  NSString v41 = sub_100087FF0();
  NSString v42 = sub_100087FF0();
  id v43 = [v39 initWithType:0 clientIdentifier:v41 clientVersion:v42 bag:v40];

  Class isa = sub_100088110().super.isa;
  [v43 setItemIdentifiers:isa];

  sub_10005B374((uint64_t)&off_1000A6190);
  Class v45 = sub_100087FA0().super.isa;
  swift_bridgeObjectRelease();
  [v43 setAdditionalQueryParams:v45];

  id v46 = v40;
  id v47 = v43;
  id v48 = v46;
  id v49 = v47;
  uint64_t v50 = sub_100087330();
  os_log_type_t v51 = sub_1000881D0();
  uint64_t v52 = v50;
  BOOL v53 = os_log_type_enabled(v50, v51);
  id v102 = v49;
  id v99 = v48;
  id v100 = a2;
  if (v53)
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = (void *)swift_slowAlloc();
    unint64_t v98 = (void *)swift_slowAlloc();
    id v113 = v98;
    *(_DWORD *)uint64_t v54 = 138412802;
    id v97 = (id)0x800000010008BF70;
    uint64_t v112 = (uint64_t)v49;
    id v56 = v102;
    sub_100088240();
    *uint64_t v55 = v102;

    *(_WORD *)(v54 + 12) = 2112;
    uint64_t v112 = (uint64_t)v48;
    id v57 = v48;
    sub_100088240();
    v55[1] = v48;

    *(_WORD *)(v54 + 22) = 2080;
    uint64_t v112 = sub_100017980(0xD00000000000002CLL, (unint64_t)v97, (uint64_t *)&v113);
    id v49 = v102;
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v52, v51, "Task %@, Bag %@, CID %s", (uint8_t *)v54, 0x20u);
    sub_100004FB4(&qword_1000A9C00);
    swift_arrayDestroy();
    a2 = v100;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v58 = v106;
  id v59 = [v49 perform];
  id v113 = 0;
  id v60 = [v59 resultWithError:&v113];
  uint64_t v61 = (uint64_t)v108;
  if (v60)
  {
    uint64_t v62 = v60;
    id v63 = v113;
    uint64_t v64 = sub_100087330();
    os_log_type_t v65 = sub_1000881D0();
    if (os_log_type_enabled(v64, v65))
    {
      unint64_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Received data response. Creating app metadatas.", v66, 2u);
      swift_slowDealloc();
    }

    id v67 = [v62 responseDataItems];
    id v97 = v59;
    unint64_t v98 = v62;
    if (v67)
    {
      uint64_t v68 = v67;
      sub_100004FB4(&qword_1000A9C68);
      uint64_t v69 = sub_100088120();

      uint64_t v70 = *(void *)(v69 + 16);
      v96[1] = v69;
      if (v70)
      {
        uint64_t v71 = v69 + 32;
        unint64_t v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
        uint64_t v73 = &_swiftEmptyArrayStorage;
        do
        {
          uint64_t v74 = swift_bridgeObjectRetain();
          sub_10003D9F4(v74, (uint64_t)v7);
          swift_bridgeObjectRelease();
          if ((*v72)(v7, 1, v58) == 1)
          {
            sub_100006AE0((uint64_t)v7, &qword_1000A9C58);
          }
          else
          {
            uint64_t v75 = v109;
            sub_100047104((uint64_t)v7, v109, (uint64_t (*)(void))type metadata accessor for AppMetadata);
            sub_10004665C(v75, v110, (uint64_t (*)(void))type metadata accessor for AppMetadata);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v73 = (void *)sub_10000FE94(0, v73[2] + 1, 1, (unint64_t)v73);
            }
            unint64_t v77 = v73[2];
            unint64_t v76 = v73[3];
            if (v77 >= v76 >> 1) {
              uint64_t v73 = (void *)sub_10000FE94(v76 > 1, v77 + 1, 1, (unint64_t)v73);
            }
            v73[2] = v77 + 1;
            sub_100047104(v110, (uint64_t)v73+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v77, (uint64_t (*)(void))type metadata accessor for AppMetadata);
            sub_1000466C4(v109, (uint64_t (*)(void))type metadata accessor for AppMetadata);
          }
          v71 += 8;
          --v70;
        }
        while (v70);
      }
      else
      {
        uint64_t v73 = &_swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      uint64_t v61 = (uint64_t)v108;
      uint64_t v62 = v98;
    }
    else
    {
      uint64_t v73 = &_swiftEmptyArrayStorage;
    }
    uint64_t v86 = v73[2];
    uint64_t v87 = (uint64_t)v105;
    if (v86)
    {
      uint64_t v88 = (uint64_t)v73
          + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
      uint64_t v89 = *(void *)(v103 + 72);
      swift_bridgeObjectRetain_n();
      *(void *)&long long v90 = 136315138;
      long long v111 = v90;
      uint64_t v110 = (uint64_t)&type metadata for Any + 8;
      do
      {
        sub_10004665C(v88, v87, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        sub_10004665C(v87, v61, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        uint64_t v91 = sub_100087330();
        os_log_type_t v92 = sub_1000881D0();
        if (os_log_type_enabled(v91, v92))
        {
          uint64_t v93 = swift_slowAlloc();
          id v113 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v93 = v111;
          sub_10004665C(v61, v104, (uint64_t (*)(void))type metadata accessor for AppMetadata);
          uint64_t v94 = sub_100088010();
          *(void *)(v93 + 4) = sub_100017980(v94, v95, (uint64_t *)&v113);
          uint64_t v61 = (uint64_t)v108;
          swift_bridgeObjectRelease();
          sub_1000466C4(v61, (uint64_t (*)(void))type metadata accessor for AppMetadata);
          _os_log_impl((void *)&_mh_execute_header, v91, v92, "Received metadata: %s", (uint8_t *)v93, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v87 = (uint64_t)v105;
          swift_slowDealloc();
        }
        else
        {
          sub_1000466C4(v61, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        }

        sub_1000466C4(v87, (uint64_t (*)(void))type metadata accessor for AppMetadata);
        v88 += v89;
        --v86;
      }
      while (v86);
      swift_bridgeObjectRelease_n();
      uint64_t v62 = v98;
    }
    v100(v73);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v78 = v113;
    uint64_t v79 = sub_1000870F0();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v80 = sub_100087330();
    os_log_type_t v81 = sub_1000881D0();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      id v113 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 136315138;
      uint64_t v112 = v79;
      swift_errorRetain();
      sub_100004FB4(&qword_1000A8BD0);
      uint64_t v83 = sub_100088010();
      uint64_t v112 = sub_100017980(v83, v84, (uint64_t *)&v113);
      sub_100088240();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "AMSMediaTask Error in fetchAppMetadatas: %s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v85 = v99;
    a2(&_swiftEmptyArrayStorage);
    swift_errorRelease();
  }
}

void sub_10003D944(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_100013058(0, &qword_1000A8D20);
  uint64_t v5 = sub_100088120();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_10003D9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v112 = 25705;
  *((void *)&v112 + 1) = 0xE200000000000000;
  sub_1000882D0();
  if (*(void *)(a1 + 16) && (unint64_t v3 = sub_10005CC08((uint64_t)&v114), (v4 & 1) != 0))
  {
    sub_1000180D4(*(void *)(a1 + 56) + 32 * v3, (uint64_t)&v112);
  }
  else
  {
    long long v112 = 0u;
    v113[0] = 0u;
  }
  sub_100046608((uint64_t)&v114);
  if (!*((void *)&v113[0] + 1))
  {
    sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    uint64_t v5 = 0;
    uint64_t v109 = 0;
    goto LABEL_10;
  }
  uint64_t v109 = *((void *)&v111 + 1);
  uint64_t v5 = v111;
LABEL_10:
  *(void *)&long long v111 = 0x7475626972747461;
  *((void *)&v111 + 1) = 0xEA00000000007365;
  sub_1000882D0();
  if (*(void *)(a1 + 16) && (unint64_t v6 = sub_10005CC08((uint64_t)&v114), (v7 & 1) != 0))
  {
    sub_1000180D4(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v112);
  }
  else
  {
    long long v112 = 0u;
    v113[0] = 0u;
  }
  sub_100046608((uint64_t)&v114);
  uint64_t v107 = v5;
  if (*((void *)&v113[0] + 1))
  {
    sub_100004FB4(&qword_1000A9C68);
    if (swift_dynamicCast())
    {
      uint64_t v8 = v111;
      strcpy((char *)&v112, "supportsArcade");
      HIBYTE(v112) = -18;
      sub_1000882D0();
      if (*(void *)(v111 + 16) && (unint64_t v9 = sub_10005CC08((uint64_t)&v114), (v10 & 1) != 0))
      {
        sub_1000180D4(*(void *)(v111 + 56) + 32 * v9, (uint64_t)&v112);
      }
      else
      {
        long long v112 = 0u;
        v113[0] = 0u;
      }
      sub_100046608((uint64_t)&v114);
      if (*((void *)&v113[0] + 1))
      {
        if (swift_dynamicCast()) {
          int v19 = v111;
        }
        else {
          int v19 = 2;
        }
      }
      else
      {
        sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
        int v19 = 2;
      }
      *(void *)&long long v112 = 1701667182;
      *((void *)&v112 + 1) = 0xE400000000000000;
      sub_1000882D0();
      if (*(void *)(v111 + 16) && (unint64_t v20 = sub_10005CC08((uint64_t)&v114), (v21 & 1) != 0))
      {
        sub_1000180D4(*(void *)(v111 + 56) + 32 * v20, (uint64_t)&v112);
      }
      else
      {
        long long v112 = 0u;
        v113[0] = 0u;
      }
      sub_100046608((uint64_t)&v114);
      if (*((void *)&v113[0] + 1))
      {
        int v22 = swift_dynamicCast();
        if (v22) {
          uint64_t v11 = v111;
        }
        else {
          uint64_t v11 = 0;
        }
        if (v22) {
          uint64_t v12 = *((void *)&v111 + 1);
        }
        else {
          uint64_t v12 = 0;
        }
      }
      else
      {
        sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
        uint64_t v11 = 0;
        uint64_t v12 = 0;
      }
      *(void *)&long long v111 = 0xD000000000000012;
      *((void *)&v111 + 1) = 0x800000010008BFA0;
      sub_1000882D0();
      if (*(void *)(v8 + 16) && (unint64_t v23 = sub_10005CC08((uint64_t)&v114), (v24 & 1) != 0))
      {
        sub_1000180D4(*(void *)(v8 + 56) + 32 * v23, (uint64_t)&v112);
      }
      else
      {
        long long v112 = 0u;
        v113[0] = 0u;
      }
      swift_bridgeObjectRelease();
      sub_100046608((uint64_t)&v114);
      if (*((void *)&v113[0] + 1))
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_55:
          uint64_t v13 = 0;
          uint64_t v14 = 0;
          uint64_t v15 = 0;
          os_log_t v16 = 0;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          goto LABEL_56;
        }
        uint64_t v25 = v111;
        *(void *)&long long v111 = 7565161;
        *((void *)&v111 + 1) = 0xE300000000000000;
        sub_1000882D0();
        if (*(void *)(v25 + 16) && (unint64_t v26 = sub_10005CC08((uint64_t)&v114), (v27 & 1) != 0))
        {
          sub_1000180D4(*(void *)(v25 + 56) + 32 * v26, (uint64_t)&v112);
        }
        else
        {
          long long v112 = 0u;
          v113[0] = 0u;
        }
        swift_bridgeObjectRelease();
        sub_100046608((uint64_t)&v114);
        if (*((void *)&v113[0] + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v28 = v111;
            *(void *)&long long v112 = 0x6D614E74726F6873;
            *((void *)&v112 + 1) = 0xE900000000000065;
            sub_1000882D0();
            if (*(void *)(v111 + 16) && (unint64_t v29 = sub_10005CC08((uint64_t)&v114), (v30 & 1) != 0))
            {
              sub_1000180D4(*(void *)(v111 + 56) + 32 * v29, (uint64_t)&v112);
            }
            else
            {
              long long v112 = 0u;
              v113[0] = 0u;
            }
            sub_100046608((uint64_t)&v114);
            if (*((void *)&v113[0] + 1))
            {
              int v60 = swift_dynamicCast();
              uint64_t v61 = v111;
              if (!v60) {
                uint64_t v61 = 0;
              }
              uint64_t v96 = v61;
              if (v60) {
                uint64_t v62 = *((void *)&v111 + 1);
              }
              else {
                uint64_t v62 = 0;
              }
              unint64_t v98 = v62;
            }
            else
            {
              sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
              uint64_t v96 = 0;
              unint64_t v98 = 0;
            }
            *(void *)&long long v112 = 0x656C746974627573;
            *((void *)&v112 + 1) = 0xE800000000000000;
            sub_1000882D0();
            if (*(void *)(v111 + 16) && (unint64_t v63 = sub_10005CC08((uint64_t)&v114), (v64 & 1) != 0))
            {
              sub_1000180D4(*(void *)(v111 + 56) + 32 * v63, (uint64_t)&v112);
            }
            else
            {
              long long v112 = 0u;
              v113[0] = 0u;
            }
            sub_100046608((uint64_t)&v114);
            if (*((void *)&v113[0] + 1))
            {
              int v65 = swift_dynamicCast();
              if (v65) {
                uint64_t v15 = v111;
              }
              else {
                uint64_t v15 = 0;
              }
              if (v65) {
                unint64_t v66 = *((void *)&v111 + 1);
              }
              else {
                unint64_t v66 = 0;
              }
              os_log_t log = v66;
            }
            else
            {
              sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
              uint64_t v15 = 0;
              os_log_t log = 0;
            }
            *(void *)&long long v112 = 0x6449656C646E7562;
            *((void *)&v112 + 1) = 0xE800000000000000;
            sub_1000882D0();
            if (*(void *)(v111 + 16) && (unint64_t v67 = sub_10005CC08((uint64_t)&v114), (v68 & 1) != 0))
            {
              sub_1000180D4(*(void *)(v111 + 56) + 32 * v67, (uint64_t)&v112);
            }
            else
            {
              long long v112 = 0u;
              v113[0] = 0u;
            }
            sub_100046608((uint64_t)&v114);
            if (*((void *)&v113[0] + 1))
            {
              int v69 = swift_dynamicCast();
              if (v69) {
                uint64_t v17 = v111;
              }
              else {
                uint64_t v17 = 0;
              }
              if (v69) {
                uint64_t v18 = *((void *)&v111 + 1);
              }
              else {
                uint64_t v18 = 0;
              }
            }
            else
            {
              sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
              uint64_t v17 = 0;
              uint64_t v18 = 0;
            }
            *(void *)&long long v112 = 0x6B726F77747261;
            *((void *)&v112 + 1) = 0xE700000000000000;
            sub_1000882D0();
            if (*(void *)(v111 + 16) && (unint64_t v70 = sub_10005CC08((uint64_t)&v114), (v71 & 1) != 0))
            {
              sub_1000180D4(*(void *)(v111 + 56) + 32 * v70, (uint64_t)&v112);
            }
            else
            {
              long long v112 = 0u;
              v113[0] = 0u;
            }
            sub_100046608((uint64_t)&v114);
            if (*((void *)&v113[0] + 1))
            {
              if (swift_dynamicCast())
              {
                uint64_t v97 = v111;
LABEL_111:
                if (v19 == 2)
                {
                  swift_bridgeObjectRelease();
LABEL_157:
                  uint64_t v13 = 0;
                  goto LABEL_158;
                }
                *(void *)&long long v111 = 0xD000000000000010;
                *((void *)&v111 + 1) = 0x800000010008BFC0;
                sub_1000882D0();
                if (*(void *)(v28 + 16) && (unint64_t v72 = sub_10005CC08((uint64_t)&v114), (v73 & 1) != 0))
                {
                  sub_1000180D4(*(void *)(v28 + 56) + 32 * v72, (uint64_t)&v112);
                }
                else
                {
                  long long v112 = 0u;
                  v113[0] = 0u;
                }
                swift_bridgeObjectRelease();
                sub_100046608((uint64_t)&v114);
                if (!*((void *)&v113[0] + 1))
                {
                  sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
                  goto LABEL_157;
                }
                uint64_t v103 = v11;
                uint64_t v94 = v12;
                sub_100004FB4(&qword_1000A9C88);
                uint64_t result = swift_dynamicCast();
                if ((result & 1) == 0)
                {
                  uint64_t v13 = 0;
LABEL_158:
                  uint64_t v14 = v97;
                  os_log_t v16 = log;
                  if (v98)
                  {
                    uint64_t v12 = v98;
                    swift_bridgeObjectRelease();
                    uint64_t v11 = v96;
                  }
                  goto LABEL_56;
                }
                int v104 = v19;
                int64_t v74 = 0;
                uint64_t v75 = v111;
                uint64_t v95 = v111 + 64;
                uint64_t v76 = 1 << *(unsigned char *)(v111 + 32);
                uint64_t v77 = -1;
                if (v76 < 64) {
                  uint64_t v77 = ~(-1 << v76);
                }
                unint64_t v78 = v77 & *(void *)(v111 + 64);
                int64_t v101 = (unint64_t)(v76 + 63) >> 6;
                uint64_t v102 = v15;
                uint64_t v93 = v111 + 104;
                uint64_t v79 = 0;
                while (!v78)
                {
                  int64_t v85 = v74 + 1;
                  if (__OFADD__(v74, 1))
                  {
                    __break(1u);
                    return result;
                  }
                  if (v85 >= v101)
                  {
                    int64_t v87 = v74;
                  }
                  else
                  {
                    unint64_t v86 = *(void *)(v95 + 8 * v85);
                    if (v86) {
                      goto LABEL_128;
                    }
                    int64_t v87 = v74 + 1;
                    if (v74 + 2 < v101)
                    {
                      unint64_t v86 = *(void *)(v95 + 8 * (v74 + 2));
                      if (v86)
                      {
                        int64_t v85 = v74 + 2;
                        goto LABEL_128;
                      }
                      int64_t v87 = v74 + 2;
                      if (v74 + 3 < v101)
                      {
                        unint64_t v86 = *(void *)(v95 + 8 * (v74 + 3));
                        if (v86)
                        {
                          int64_t v85 = v74 + 3;
LABEL_128:
                          unint64_t v78 = (v86 - 1) & v86;
                          unint64_t v81 = __clz(__rbit64(v86)) + (v85 << 6);
                          int64_t v74 = v85;
LABEL_124:
                          uint64_t v82 = *(void *)(v75 + 56);
                          uint64_t v83 = (void *)(*(void *)(v75 + 48) + 16 * v81);
                          uint64_t v84 = v83[1];
                          *(void *)&long long v112 = *v83;
                          *((void *)&v112 + 1) = v84;
                          sub_1000180D4(v82 + 32 * v81, (uint64_t)v113);
                          swift_bridgeObjectRetain();
                          goto LABEL_131;
                        }
                        int64_t v85 = v74 + 4;
                        int64_t v87 = v74 + 3;
                        if (v74 + 4 < v101)
                        {
                          unint64_t v86 = *(void *)(v95 + 8 * v85);
                          if (v86) {
                            goto LABEL_128;
                          }
                          while (v101 - 5 != v74)
                          {
                            unint64_t v86 = *(void *)(v93 + 8 * v74++);
                            if (v86)
                            {
                              int64_t v85 = v74 + 4;
                              goto LABEL_128;
                            }
                          }
                          int64_t v87 = v101 - 1;
                        }
                      }
                    }
                  }
                  unint64_t v78 = 0;
                  memset(v113, 0, sizeof(v113));
                  int64_t v74 = v87;
                  long long v112 = 0u;
LABEL_131:
                  sub_1000468BC((uint64_t)&v112, (uint64_t)&v114);
                  os_log_t v88 = v115;
                  if (!v115)
                  {
                    uint64_t v13 = v79;
                    swift_release();
                    int v19 = v104;
                    uint64_t v12 = v94;
                    uint64_t v15 = v102;
                    uint64_t v11 = v103;
                    goto LABEL_158;
                  }
                  uint64_t v89 = v114;
                  sub_100046924(&v116, &v112);
                  if (v89 == 0xD000000000000010 && v88 == (os_log_t)0x800000010008BFE0)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_145;
                  }
                  char v92 = sub_1000884F0();
                  swift_bridgeObjectRelease();
                  if (v92)
                  {
LABEL_145:
                    sub_100046924(&v112, &v111);
                    uint64_t result = swift_dynamicCast();
                    if (result)
                    {
                      uint64_t result = swift_bridgeObjectRelease();
                      uint64_t v79 = v110;
                    }
                  }
                  else
                  {
                    uint64_t result = sub_100018084((uint64_t)&v112);
                  }
                }
                unint64_t v80 = __clz(__rbit64(v78));
                v78 &= v78 - 1;
                unint64_t v81 = v80 | (v74 << 6);
                goto LABEL_124;
              }
            }
            else
            {
              sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
            }
            uint64_t v97 = 0;
            goto LABEL_111;
          }
          goto LABEL_55;
        }
      }
      sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
      goto LABEL_55;
    }
  }
  else
  {
    sub_100006AE0((uint64_t)&v112, &qword_1000A9C70);
  }
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  os_log_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  int v19 = 2;
LABEL_56:
  if (v109 && v18 && v12 && v19 != 2 && v14)
  {
    sub_100087210();
    os_log_type_t v31 = (int *)type metadata accessor for AppMetadata();
    id v32 = (uint64_t *)(a2 + v31[5]);
    *id v32 = v107;
    v32[1] = v109;
    uint64_t v33 = (uint64_t *)(a2 + v31[6]);
    *uint64_t v33 = v17;
    v33[1] = (uint64_t)v18;
    id v34 = (uint64_t *)(a2 + v31[7]);
    *id v34 = v11;
    v34[1] = (uint64_t)v12;
    unint64_t v35 = (uint64_t *)(a2 + v31[8]);
    *unint64_t v35 = v15;
    v35[1] = (uint64_t)v16;
    *(unsigned char *)(a2 + v31[9]) = v19 & 1;
    *(void *)(a2 + v31[10]) = v14;
    *(void *)(a2 + v31[11]) = v13;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v31 - 1) + 56))(a2, 0, 1, v31);
  }
  else
  {
    uint64_t v106 = v17;
    char v37 = v19;
    id v38 = v18;
    uint64_t v39 = v11;
    uint64_t v40 = v14;
    if (qword_1000A8700 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_100087350();
    sub_10000A5F4(v41, (uint64_t)qword_1000ADA00);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v42 = sub_100087330();
    os_log_type_t type = sub_1000881D0();
    if (os_log_type_enabled(v42, type))
    {
      loga = v42;
      os_log_t v43 = v16;
      uint64_t v44 = swift_slowAlloc();
      *(void *)&long long v112 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136316674;
      uint64_t v114 = v107;
      os_log_t v115 = (os_log_t)v109;
      swift_bridgeObjectRetain();
      sub_100004FB4(&qword_1000A9C50);
      uint64_t v45 = sub_100088010();
      uint64_t v114 = sub_100017980(v45, v46, (uint64_t *)&v112);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      uint64_t v114 = v106;
      os_log_t v115 = v38;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_100088010();
      uint64_t v114 = sub_100017980(v47, v48, (uint64_t *)&v112);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 22) = 2080;
      uint64_t v114 = v39;
      os_log_t v115 = v12;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_100088010();
      uint64_t v114 = sub_100017980(v49, v50, (uint64_t *)&v112);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 32) = 2080;
      uint64_t v114 = v15;
      os_log_t v115 = v43;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_100088010();
      uint64_t v114 = sub_100017980(v51, v52, (uint64_t *)&v112);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 42) = 2080;
      LOBYTE(v114) = v37;
      sub_100004FB4(&qword_1000A9C78);
      uint64_t v53 = sub_100088010();
      uint64_t v114 = sub_100017980(v53, v54, (uint64_t *)&v112);
      sub_100088240();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 52) = 2080;
      uint64_t v114 = v40;
      swift_bridgeObjectRetain();
      sub_100004FB4(&qword_1000A9C80);
      uint64_t v55 = sub_100088010();
      uint64_t v114 = sub_100017980(v55, v56, (uint64_t *)&v112);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 62) = 2080;
      uint64_t v114 = v13;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_100088010();
      uint64_t v114 = sub_100017980(v57, v58, (uint64_t *)&v112);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, loga, type, "adamID=%s, bundleID=%s, title=%s, subtitle=%s, supportsArcade=%s, artworkDictionary=%s, editorialArtworkDictionary=%s", (uint8_t *)v44, 0x48u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v59 = type metadata accessor for AppMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(a2, 1, 1, v59);
  }
}

uint64_t sub_10003EA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10004403C(a1, 0xD000000000000011, 0x800000010008BE60, 0x7974697669746341, 0xEC00000064656546);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  sub_10003EB50((void (*)(void *, unint64_t, id))sub_1000443A0, v6);

  return swift_release();
}

void sub_10003EB50(void (*a1)(void *, unint64_t, id), uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1000A8708 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100087350();
  sub_10000A5F4(v6, (uint64_t)qword_1000ADA18);
  char v7 = sub_100087330();
  os_log_type_t v8 = sub_1000881D0();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "fetchActivityFeedViews...", v9, 2u);
    swift_slowDealloc();
  }

  char v10 = (void *)sub_100081AD8();
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = v10;
    uint64_t v13 = sub_100087330();
    os_log_type_t v14 = sub_1000881D0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = v12;
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412290;
      id v16 = v12;
      sub_100088240();
      *uint64_t v25 = v11;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Current player is %@", v15, 0xCu);
      sub_100004FB4(&qword_1000A9C00);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v21 = [self proxyForPlayer:v12];
    id v22 = [v21 friendServicePrivate];

    unint64_t v23 = (void *)swift_allocObject();
    void v23[2] = a1;
    void v23[3] = a2;
    v23[4] = v3;
    aBlock[4] = sub_1000443F4;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003FBA8;
    aBlock[3] = &unk_1000A69E8;
    char v24 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v22 getPlayerActivityFeed:0 bundleID:0 continuation:0 handler:v24];
    _Block_release(v24);

    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v17 = sub_100087330();
    os_log_type_t v18 = sub_1000881D0();
    if (os_log_type_enabled(v17, v18))
    {
      int v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Unable to get local player!", v19, 2u);
      swift_slowDealloc();
    }

    unint64_t v20 = sub_10005B498((uint64_t)&_swiftEmptyArrayStorage);
    id v26 = sub_100066ADC();
    a1(&_swiftEmptyArrayStorage, v20, v26);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10003EF70(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100087E10();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100087E30();
  __chkstk_darwin(v12);
  id v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    unint64_t v58 = v16;
    uint64_t v59 = v14;
    uint64_t v61 = v13;
    uint64_t v63 = v8;
    uint64_t v23 = swift_allocObject();
    uint64_t v57 = v23;
    *(void *)(v23 + 16) = &_swiftEmptyArrayStorage;
    char v24 = (unint64_t *)(v23 + 16);
    uint64_t v64 = a4;
    uint64_t v62 = v9;
    int v60 = v11;
    if (a1)
    {
      id v25 = [a1 sections];
      if (v25)
      {
        id v26 = v25;
        sub_100013058(0, &qword_1000A9C28);
        a2 = sub_100088120();

        uint64_t v56 = a3;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v27 = sub_1000883C0();
          if (v27)
          {
LABEL_9:
            uint64_t v28 = 0;
            a3 = 0;
            unint64_t v69 = a2 & 0xC000000000000001;
            unint64_t v65 = a2 + 32;
            unint64_t v67 = a2;
            char v68 = (char *)&type metadata for Any + 8;
            uint64_t v66 = v27;
            while (1)
            {
              id v29 = v69 ? (id)sub_100088340() : *(id *)(v65 + 8 * v28);
              char v30 = v29;
              if (__OFADD__(v28++, 1)) {
                break;
              }
              id v32 = [v29 items];
              if (v32)
              {
                uint64_t v33 = v32;
                uint64_t v34 = sub_100088120();

                uint64_t v35 = *(void *)(v34 + 16);
                if (v35)
                {
                  uint64_t v36 = v34 + 32;
                  swift_bridgeObjectRetain();
                  do
                  {
                    sub_1000180D4(v36, (uint64_t)aBlock);
                    if (a3 <= 15)
                    {
                      sub_1000180D4((uint64_t)aBlock, (uint64_t)&v71);
                      sub_100013058(0, &qword_1000A8CB8);
                      if (swift_dynamicCast())
                      {
                        id v37 = v70;
                        if ([v70 activityType])
                        {
                          sub_100088100();
                          if (*(void *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v24 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
                            sub_100088150();
                          sub_100088170();
                          sub_100088140();
                          ++a3;
                        }
                        else
                        {
                        }
                      }
                    }
                    sub_100018084((uint64_t)aBlock);
                    v36 += 32;
                    --v35;
                  }
                  while (v35);

                  swift_bridgeObjectRelease_n();
                  uint64_t v27 = v66;
                  a2 = v67;
                }
                else
                {

                  swift_bridgeObjectRelease();
                }
              }
              else
              {
              }
              if (v28 == v27) {
                goto LABEL_34;
              }
            }
            __break(1u);
            goto LABEL_32;
          }
        }
        else
        {
          uint64_t v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v27) {
            goto LABEL_9;
          }
        }
LABEL_34:
        swift_bridgeObjectRelease_n();
        a3 = v56;
      }
    }
    uint64_t v40 = a3;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_10005B498((uint64_t)&_swiftEmptyArrayStorage);
    NSString v42 = dispatch_group_create();
    unint64_t v43 = *v24;
    if (v43 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1000883C0();
      uint64_t v44 = result;
      if (!result) {
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (!v44) {
        goto LABEL_44;
      }
    }
    if (v44 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v45 = 0;
    do
    {
      if ((v43 & 0xC000000000000001) != 0) {
        id v46 = (id)sub_100088340();
      }
      else {
        id v46 = *(id *)(v43 + 8 * v45 + 32);
      }
      uint64_t v47 = v46;
      ++v45;
      aBlock[0] = v46;
      sub_100045E3C(aBlock, v42, v41);
    }
    while (v44 != v45);
LABEL_44:
    swift_bridgeObjectRelease_n();
    sub_100013058(0, &qword_1000A9C08);
    unint64_t v48 = (void *)sub_1000881F0();
    uint64_t v49 = (void *)swift_allocObject();
    v49[2] = v57;
    v49[3] = v41;
    uint64_t v50 = v64;
    v49[4] = v40;
    v49[5] = v50;
    aBlock[4] = sub_10004610C;
    aBlock[5] = v49;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10003CAEC;
    aBlock[3] = &unk_1000A6A88;
    uint64_t v51 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    unint64_t v52 = v58;
    sub_100087E20();
    char v71 = &_swiftEmptyArrayStorage;
    sub_1000461C8(&qword_1000A9C10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100004FB4(&qword_1000A9C18);
    sub_100046118();
    uint64_t v53 = v60;
    uint64_t v54 = v63;
    sub_100088290();
    sub_1000881E0();

    _Block_release(v51);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v53, v54);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v52, v61);
    swift_release();
    swift_release();
    return swift_release();
  }
  if (qword_1000A8708 != -1) {
LABEL_32:
  }
    swift_once();
  uint64_t v17 = sub_100087350();
  sub_10000A5F4(v17, (uint64_t)qword_1000ADA18);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v18 = sub_100087330();
  os_log_type_t v19 = sub_1000881D0();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = (id)swift_slowAlloc();
    *(_DWORD *)unint64_t v20 = 136315138;
    char v71 = (void *)a2;
    swift_errorRetain();
    sub_100004FB4(&qword_1000A9C30);
    uint64_t v21 = sub_100088010();
    char v71 = (void *)sub_100017980(v21, v22, (uint64_t *)aBlock);
    sub_100088240();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Received error %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v38 = sub_10005B498((uint64_t)&_swiftEmptyArrayStorage);
  ((void (*)(void *, unint64_t, unint64_t))a3)(&_swiftEmptyArrayStorage, v38, a2);
  return swift_bridgeObjectRelease();
}

void sub_10003F804(void *a1, int a2, int a3, uint64_t a4, void *a5, dispatch_group_t group)
{
  if (a1)
  {
    id v9 = a1;
    id v10 = [a5 playerID];
    uint64_t v11 = sub_100088000();
    uint64_t v13 = v12;

    swift_beginAccess();
    id v14 = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *(void *)(a4 + 16);
    *(void *)(a4 + 16) = 0x8000000000000000;
    sub_10005DA64((uint64_t)v14, v11, v13, isUniquelyReferenced_nonNull_native);
    *(void *)(a4 + 16) = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  dispatch_group_leave(group);
}

void sub_10003F904(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  char v7 = *(void (**)(void *, uint64_t, id))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(a2, a3, v8);
  swift_release();
}

uint64_t sub_10003F998(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, void))
{
  if (qword_1000A8708 != -1) {
    swift_once();
  }
  uint64_t v6 = (uint64_t *)(a1 + 16);
  uint64_t v7 = sub_100087350();
  sub_10000A5F4(v7, (uint64_t)qword_1000ADA18);
  swift_retain();
  id v8 = sub_100087330();
  os_log_type_t v9 = sub_1000881D0();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v10 = 134217984;
    swift_beginAccess();
    if ((unint64_t)*v6 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1000883C0();
      swift_bridgeObjectRelease();
    }
    sub_100088240();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received %ld brick(s) from gamed", v10, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  swift_beginAccess();
  uint64_t v11 = *v6;
  swift_beginAccess();
  uint64_t v12 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v11, v12, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10003FBA8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t type metadata accessor for GameCenterStore()
{
  return self;
}

uint64_t sub_10003FC58()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10003FC90(uint64_t a1)
{
  return sub_10003EA90(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10003FC9C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10003FCC4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_100088240();
  *a1 = v5;
  return result;
}

uint64_t sub_10003FD1C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10003FD44(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_100017980(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_100088240();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_10003FDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10005CB90(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10005DBD4();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_10003FEA4(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_10003FEA4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1000882A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_100088530();
        swift_bridgeObjectRetain();
        sub_100088030();
        Swift::Int v9 = sub_100088550();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            _OWORD *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10004007C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10004009C(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10004009C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004FB4(&qword_1000A8CE0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_100088410();
  __break(1u);
  return result;
}

unsigned __int8 *sub_100040208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000880C0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100040580();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v7 = (unsigned __int8 *)sub_100088360();
  }
LABEL_7:
  int64_t v11 = sub_100040304(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1000402F0(uint64_t a1)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

unsigned __int8 *sub_100040304(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100040580()
{
  unint64_t v0 = sub_1000880D0();
  uint64_t v4 = sub_100040600(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100040600(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_100040758(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_100017E20(v9, 0),
          unint64_t v12 = sub_100040858((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_100088020();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_100088020();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_100088360();
LABEL_4:

  return sub_100088020();
}

uint64_t sub_100040758(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_100017E88(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_100017E88(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_100040858(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    uint64_t v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_100017E88(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_100088090();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_100088360();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_100017E88(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_100088060();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_100040A6C(void (*a1)(void, void))
{
  id v2 = [self bagSubProfileVersion];
  if (!v2) {
    __break(1u);
  }
  unint64_t v3 = v2;
  sub_100088000();

  NSString v4 = sub_100087FF0();
  NSString v5 = sub_100087FF0();
  swift_bridgeObjectRelease();
  id v6 = [self bagForProfile:v4 profileVersion:v5];

  NSString v7 = sub_100087FF0();
  id v8 = [v6 doubleForKey:v7];

  v33[0] = 0;
  id v9 = [v8 valueWithError:v33];
  if (v9)
  {
    unint64_t v10 = v9;
    id v11 = v33[0];
    double v12 = (double)arc4random_uniform(0x64u) / 100.0;
    [v10 doubleValue];
    if (v12 >= v13) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = 0x675F706D615F7078;
    }
    if (v12 >= v13) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = (void *)0xEC00000073635F63;
    }
    if (qword_1000A8700 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100087350();
    sub_10000A5F4(v16, (uint64_t)qword_1000ADA00);
    swift_bridgeObjectRetain_n();
    id v17 = v10;
    unint64_t v18 = sub_100087330();
    os_log_type_t v19 = sub_1000881D0();
    if (os_log_type_enabled(v18, v19))
    {
      id v32 = a1;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315906;
      v33[0] = (id)sub_100017980(0x697274656D2D6B67, 0xEE007463702D7363, &v34);
      sub_100088240();
      *(_WORD *)(v20 + 12) = 2048;
      [v17 doubleValue];
      v33[0] = v21;
      sub_100088240();

      *(_WORD *)(v20 + 22) = 2048;
      v33[0] = *(id *)&v12;
      sub_100088240();
      *(_WORD *)(v20 + 32) = 2080;
      v33[0] = (id)v14;
      v33[1] = v15;
      swift_bridgeObjectRetain();
      sub_100004FB4(&qword_1000A9C50);
      uint64_t v22 = sub_100088010();
      v33[0] = (id)sub_100017980(v22, v23, &v34);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "fetchMetricsPercentage %s - %f. Candidate Percentage: %f => Topic: %s", (uint8_t *)v20, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v32;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a1(v14, v15);

    swift_bridgeObjectRelease();
  }
  else
  {
    id v24 = v33[0];
    uint64_t v25 = sub_1000870F0();

    swift_willThrow();
    if (qword_1000A8700 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_100087350();
    sub_10000A5F4(v26, (uint64_t)qword_1000ADA00);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v27 = sub_100087330();
    os_log_type_t v28 = sub_1000881D0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      v33[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v34 = sub_100017980(0x697274656D2D6B67, 0xEE007463702D7363, (uint64_t *)v33);
      sub_100088240();
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v34 = v25;
      swift_errorRetain();
      sub_100004FB4(&qword_1000A8BD0);
      uint64_t v30 = sub_100088010();
      uint64_t v34 = sub_100017980(v30, v31, (uint64_t *)v33);
      sub_100088240();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "fetchMetricsPercentage %s - defaulting to 0, unable to retrieve: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    a1(0, 0);
    swift_errorRelease();
  }
}

void sub_100041118(uint64_t a1, unint64_t a2, void (*a3)(double))
{
  id v6 = [self bagSubProfileVersion];
  if (!v6)
  {
    swift_release();
    __break(1u);
  }
  NSString v7 = v6;
  sub_100088000();

  NSString v8 = sub_100087FF0();
  NSString v9 = sub_100087FF0();
  swift_bridgeObjectRelease();
  id v10 = [self bagForProfile:v8 profileVersion:v9];

  NSString v11 = sub_100087FF0();
  id v12 = [v10 doubleForKey:v11];

  id v32 = 0;
  id v13 = [v12 valueWithError:&v32];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = qword_1000A8700;
    id v16 = v32;
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100087350();
    sub_10000A5F4(v17, (uint64_t)qword_1000ADA00);
    swift_bridgeObjectRetain_n();
    id v18 = v14;
    os_log_type_t v19 = sub_100087330();
    os_log_type_t v20 = sub_1000881D0();
    uint64_t v21 = &SeededRandomNumberGenerator;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      id v32 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      id v30 = v10;
      swift_bridgeObjectRetain();
      sub_100017980(a1, a2, (uint64_t *)&v32);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2048;
      [v18 doubleValue];
      sub_100088240();

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "fetchLivePreviewRateInSeconds %s - %f", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v21 = &SeededRandomNumberGenerator;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    [v18 v21[17].base_meths:v30];
  }
  else
  {
    unint64_t v31 = v12;
    id v23 = v32;
    sub_1000870F0();

    swift_willThrow();
    if (qword_1000A8700 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100087350();
    sub_10000A5F4(v24, (uint64_t)qword_1000ADA00);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v25 = sub_100087330();
    os_log_type_t v26 = sub_1000881D0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      id v32 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315650;
      swift_bridgeObjectRetain();
      sub_100017980(a1, a2, (uint64_t *)&v32);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2048;
      sub_100088240();
      *(_WORD *)(v27 + 22) = 2080;
      swift_errorRetain();
      sub_100004FB4(&qword_1000A8BD0);
      uint64_t v28 = sub_100088010();
      sub_100017980(v28, v29, (uint64_t *)&v32);
      sub_100088240();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "fetchLivePreviewRateInSeconds %s - defaulting to %f, unable to retrieve: %s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    a3(1.0);
    swift_errorRelease();
  }
}

void sub_100041710(uint64_t a1)
{
  uint64_t v2 = sub_100087170();
  uint64_t v131 = *(char **)(v2 - 8);
  __chkstk_darwin(v2);
  Class v125 = (char *)v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v122 = (char *)v117 - v5;
  __chkstk_darwin(v6);
  id v129 = (char *)v117 - v7;
  __chkstk_darwin(v8);
  id v127 = (char *)v117 - v9;
  uint64_t v10 = type metadata accessor for GameCenterStore.CacheConfig(0);
  __chkstk_darwin(v10);
  id v12 = (char *)v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v124 = (char *)v117 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v117 - v16;
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100087350();
  uint64_t v19 = sub_10000A5F4(v18, (uint64_t)qword_1000AD9E8);
  sub_10004665C(a1, (uint64_t)v17, type metadata accessor for GameCenterStore.CacheConfig);
  os_log_type_t v20 = sub_100087330();
  os_log_type_t v21 = sub_1000881D0();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v123 = v12;
  if (v22)
  {
    id v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v130 = v24;
    id v128 = v23;
    *(_DWORD *)id v23 = 136315138;
    uint64_t v121 = v23 + 4;
    uint64_t v132 = v24;
    uint64_t v133 = 0x5F726579616C70;
    unint64_t v134 = 0xE700000000000000;
    uint64_t v25 = (uint64_t *)&v17[*(int *)(v10 + 24)];
    uint64_t v126 = v10;
    uint64_t v26 = a1;
    uint64_t v27 = v19;
    uint64_t v28 = v2;
    uint64_t v29 = *v25;
    id v30 = (void *)v25[1];
    swift_bridgeObjectRetain();
    v135._countAndFlagsBits = v29;
    v135._object = v30;
    sub_100088040(v135);
    uint64_t v2 = v28;
    uint64_t v19 = v27;
    a1 = v26;
    swift_bridgeObjectRelease();
    unint64_t v31 = v127;
    sub_100087130();
    swift_bridgeObjectRelease();
    sub_1000461C8(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v32 = sub_1000884E0();
    unint64_t v34 = v33;
    uint64_t v35 = v31;
    uint64_t v10 = v126;
    (*((void (**)(char *, uint64_t))v131 + 1))(v35, v2);
    uint64_t v133 = sub_100017980(v32, v34, &v132);
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_1000466C4((uint64_t)v17, type metadata accessor for GameCenterStore.CacheConfig);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cache player metadata url = %s", v128, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000466C4((uint64_t)v17, type metadata accessor for GameCenterStore.CacheConfig);
  }

  uint64_t v36 = (void *)sub_100081AD8();
  if (v36)
  {
    id v37 = v36;
    id v38 = [v36 alias];
    uint64_t v130 = sub_100088000();
    uint64_t v40 = v39;
  }
  else
  {
    uint64_t v130 = 0x6E776F6E6B6E75;
    uint64_t v40 = (char *)0xE700000000000000;
  }
  uint64_t v133 = 0x5F726579616C70;
  unint64_t v134 = 0xE700000000000000;
  uint64_t v41 = (uint8_t *)(a1 + *(int *)(v10 + 24));
  uint64_t v42 = *(void *)v41;
  unint64_t v43 = (void *)*((void *)v41 + 1);
  swift_bridgeObjectRetain();
  v136._countAndFlagsBits = v42;
  v136._object = v43;
  sub_100088040(v136);
  swift_bridgeObjectRelease();
  uint64_t v44 = v129;
  sub_100087130();
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_100087180();
  unint64_t v47 = v46;
  uint64_t v126 = v10;
  unint64_t v48 = v131 + 8;
  id v129 = (char *)*((void *)v131 + 1);
  ((void (*)(char *, uint64_t))v129)(v44, v2);
  sub_100087090();
  swift_allocObject();
  sub_100087080();
  sub_100087070();
  id v128 = 0;
  sub_10000AF7C(v45, v47);
  swift_release();
  unint64_t v49 = v134;
  uint64_t v131 = (char *)v133;
  uint64_t v50 = sub_100087330();
  os_log_type_t v51 = sub_1000881D0();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Cached player appears to exist - comparing name to logged in player...", v53, 2u);
    swift_slowDealloc();
  }
  Class v125 = v48;

  swift_bridgeObjectRetain_n();
  uint64_t v54 = sub_100087330();
  os_log_type_t v55 = sub_1000881D0();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v120 = v2;
    uint64_t v56 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    uint64_t v121 = (uint8_t *)a1;
    uint64_t v133 = v57;
    uint64_t v119 = v41;
    *(_DWORD *)uint64_t v56 = 136315138;
    swift_bridgeObjectRetain();
    unint64_t v58 = v131;
    uint64_t v132 = sub_100017980((uint64_t)v131, v49, &v133);
    uint64_t v41 = v119;
    uint64_t v2 = v120;
    sub_100088240();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Cached player is %s", v56, 0xCu);
    swift_arrayDestroy();
    a1 = (uint64_t)v121;
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v59 = v130;
    if (v58 != (char *)v130) {
      goto LABEL_20;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v59 = v130;
    if (v131 != (char *)v130) {
      goto LABEL_20;
    }
  }
  if ((char *)v49 == v40)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_20:
  char v60 = sub_1000884F0();
  swift_bridgeObjectRelease();
  if (v60)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v61 = sub_100087330();
    os_log_type_t v62 = sub_1000881D0();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "The cache is still valid. Deferring to it for data where possible.", v63, 2u);
      swift_slowDealloc();
    }
    goto LABEL_11;
  }
  uint64_t v64 = v59;
  uint64_t v131 = v40;
  unint64_t v65 = sub_100087330();
  os_log_type_t v66 = sub_1000881D0();
  if (os_log_type_enabled(v65, v66))
  {
    unint64_t v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v67 = 0;
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "The cache is out of date. Erasing it and fetching new data.", v67, 2u);
    swift_slowDealloc();
  }

  char v68 = self;
  id v69 = [v68 defaultManager];
  id v70 = v127;
  sub_100087120();
  sub_100087110(v71);
  char v73 = v72;
  ((void (*)(char *, uint64_t))v129)(v70, v2);
  uint64_t v133 = 0;
  LODWORD(v70) = [v69 removeItemAtURL:v73 error:&v133];

  id v74 = (id)v133;
  if (v70)
  {
    uint64_t v75 = (uint64_t)v124;
    sub_10004665C(a1, (uint64_t)v124, type metadata accessor for GameCenterStore.CacheConfig);
    uint64_t v76 = sub_100087330();
    os_log_type_t v77 = sub_1000881D0();
    if (os_log_type_enabled(v76, v77))
    {
      unint64_t v78 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      uint64_t v119 = v79;
      uint64_t v120 = v19;
      *(_DWORD *)unint64_t v78 = 136315138;
      uint64_t v133 = (uint64_t)v79;
      v117[1] = v78 + 4;
      uint64_t v118 = v78;
      unint64_t v80 = v127;
      sub_100087120();
      uint64_t v81 = sub_100087150();
      uint64_t v121 = (uint8_t *)a1;
      uint64_t v82 = v2;
      unint64_t v84 = v83;
      int64_t v85 = v80;
      uint64_t v64 = v130;
      ((void (*)(char *, uint64_t))v129)(v85, v82);
      uint64_t v132 = sub_100017980(v81, v84, &v133);
      uint64_t v19 = v120;
      sub_100088240();
      uint64_t v2 = v82;
      a1 = (uint64_t)v121;
      swift_bridgeObjectRelease();
      sub_1000466C4((uint64_t)v124, type metadata accessor for GameCenterStore.CacheConfig);
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "Deleted cache directory at %s", v118, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000466C4(v75, type metadata accessor for GameCenterStore.CacheConfig);
    }
  }
  else
  {
    unint64_t v86 = v74;
    sub_1000870F0();

    swift_willThrow();
    swift_errorRelease();
    id v128 = 0;
  }
  id v87 = [v68 defaultManager];
  os_log_t v88 = v127;
  sub_100087130();
  sub_100087110(v89);
  uint64_t v91 = v90;
  ((void (*)(char *, uint64_t))v129)(v88, v2);
  uint64_t v133 = 0;
  LODWORD(v88) = [v87 removeItemAtURL:v91 error:&v133];

  id v92 = (id)v133;
  if (v88)
  {
    uint64_t v93 = (uint64_t)v123;
    sub_10004665C(a1, (uint64_t)v123, type metadata accessor for GameCenterStore.CacheConfig);
    uint64_t v94 = sub_100087330();
    os_log_type_t v95 = sub_1000881D0();
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v96 = (uint8_t *)swift_slowAlloc();
      uint64_t v97 = (char *)swift_slowAlloc();
      id v124 = v97;
      uint64_t v121 = (uint8_t *)a1;
      *(_DWORD *)uint64_t v96 = 136315138;
      uint64_t v133 = (uint64_t)v97;
      uint64_t v118 = v96 + 4;
      uint64_t v119 = v96;
      unint64_t v98 = v127;
      sub_100087130();
      uint64_t v99 = sub_100087150();
      uint64_t v120 = v19;
      uint64_t v100 = v2;
      unint64_t v102 = v101;
      uint64_t v103 = v98;
      uint64_t v64 = v130;
      ((void (*)(char *, uint64_t))v129)(v103, v100);
      uint64_t v132 = sub_100017980(v99, v102, &v133);
      sub_100088240();
      uint64_t v2 = v100;
      swift_bridgeObjectRelease();
      sub_1000466C4(v93, type metadata accessor for GameCenterStore.CacheConfig);
      _os_log_impl((void *)&_mh_execute_header, v94, v95, "Deleted cache metadata at %s", v119, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000466C4(v93, type metadata accessor for GameCenterStore.CacheConfig);
    }

    id v105 = v128;
  }
  else
  {
    int v104 = v92;
    sub_1000870F0();

    swift_willThrow();
    swift_errorRelease();
    id v105 = 0;
  }
  sub_1000870C0();
  swift_allocObject();
  sub_1000870B0();
  uint64_t v133 = v64;
  unint64_t v134 = (unint64_t)v131;
  uint64_t v106 = sub_1000870A0();
  if (v105)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v61 = sub_100087330();
    os_log_type_t v113 = sub_1000881D0();
    if (!os_log_type_enabled(v61, v113))
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
LABEL_11:

      return;
    }
    uint64_t v114 = (uint8_t *)swift_slowAlloc();
    os_log_t v115 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v114 = 138412290;
    swift_errorRetain();
    uint64_t v116 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v133 = v116;
    sub_100088240();
    void *v115 = v116;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v61, v113, "Failed to write JSON data with error: %@", v114, 0xCu);
    sub_100004FB4(&qword_1000A9C00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v108 = v106;
    unint64_t v109 = v107;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v133 = 0x5F726579616C70;
    unint64_t v134 = 0xE700000000000000;
    uint64_t v110 = *(void *)v41;
    long long v111 = (void *)*((void *)v41 + 1);
    swift_bridgeObjectRetain();
    v137._countAndFlagsBits = v110;
    v137._object = v111;
    sub_100088040(v137);
    swift_bridgeObjectRelease();
    long long v112 = v122;
    sub_100087130();
    swift_bridgeObjectRelease();
    sub_1000871B0();
    ((void (*)(char *, uint64_t))v129)(v112, v2);
    sub_10000AF7C(v108, v109);
  }
}

uint64_t sub_100042A8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GameCenterStore.CacheConfig(0);
  __chkstk_darwin(v2);
  uint64_t v129 = (uint64_t)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v131 = (uint64_t)&v121 - v5;
  uint64_t v6 = sub_100087170();
  uint64_t v133 = *(void *)(v6 - 8);
  uint64_t v143 = v133;
  __chkstk_darwin(v6);
  uint64_t v132 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v128 = (char *)&v121 - v9;
  __chkstk_darwin(v10);
  uint64_t v130 = (char *)&v121 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v121 - v13;
  uint64_t v15 = sub_100087220();
  uint64_t v142 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  os_log_type_t v20 = (char *)&v121 - v19;
  __chkstk_darwin(v21);
  id v23 = (char *)&v121 - v22;
  __chkstk_darwin(v24);
  Swift::String v137 = (char *)&v121 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v121 - v27;
  __chkstk_darwin(v29);
  uint64_t v141 = (char *)&v121 - v30;
  sub_100087210();
  uint64_t v134 = a1 + *(int *)(v2 + 24);
  uint64_t v139 = a1;
  sub_100087130();
  uint64_t v135 = sub_100087180();
  Swift::String v136 = v31;
  uint64_t v122 = v23;
  uint64_t v123 = v20;
  id v124 = v17;
  uint64_t v125 = v2;
  id v127 = v28;
  uint64_t v33 = v143 + 8;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v143 + 8);
  uint64_t v126 = v6;
  char v138 = v32;
  v32(v14, v6);
  sub_100087090();
  swift_allocObject();
  sub_100087080();
  sub_1000461C8(&qword_1000A9C40, (void (*)(uint64_t))&type metadata accessor for Date);
  unint64_t v35 = (unint64_t)v136;
  unint64_t v34 = v137;
  uint64_t v36 = v135;
  sub_100087070();
  uint64_t v37 = v15;
  uint64_t v140 = 0;
  sub_10000AF7C(v36, v35);
  swift_release();
  uint64_t v38 = v142;
  uint64_t v39 = v127;
  (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v127, v34, v37);
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v143 = v33;
  uint64_t v40 = sub_100087350();
  Swift::String v137 = (char *)sub_10000A5F4(v40, (uint64_t)qword_1000AD9E8);
  uint64_t v41 = sub_100087330();
  os_log_type_t v42 = sub_1000881D0();
  if (os_log_type_enabled(v41, v42))
  {
    unint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Cache appears to exist - checking creation date...", v43, 2u);
    swift_slowDealloc();
  }

  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  uint64_t v45 = v122;
  v44(v122, v39, v37);
  unint64_t v46 = sub_100087330();
  os_log_type_t v47 = sub_1000881D0();
  BOOL v48 = os_log_type_enabled(v46, v47);
  uint64_t v49 = v37;
  uint64_t v135 = (uint64_t)v44;
  if (v48)
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    id v145 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136315138;
    sub_1000461C8(&qword_1000A9C48, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v51 = sub_1000884E0();
    uint64_t v144 = sub_100017980(v51, v52, (uint64_t *)&v145);
    sub_100088240();
    swift_bridgeObjectRelease();
    uint64_t v39 = v127;
    Swift::String v136 = *(void (**)(char *, uint64_t))(v142 + 8);
    v136(v45, v37);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Decoded cache creation date %s", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v44 = (void (*)(char *, char *, uint64_t))v135;
    swift_slowDealloc();
  }
  else
  {
    Swift::String v136 = *(void (**)(char *, uint64_t))(v38 + 8);
    v136(v45, v37);
  }

  uint64_t v53 = v123;
  uint64_t v54 = v141;
  sub_1000871C0();
  uint64_t v56 = v55;
  v44(v53, v54, v49);
  uint64_t v57 = sub_100087330();
  os_log_type_t v58 = sub_1000881D0();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    id v145 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v59 = 136315138;
    sub_1000461C8(&qword_1000A9C48, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v60 = sub_1000884E0();
    uint64_t v144 = sub_100017980(v60, v61, (uint64_t *)&v145);
    uint64_t v39 = v127;
    sub_100088240();
    swift_bridgeObjectRelease();
    v136(v53, v49);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Current date = %s", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v44 = (void (*)(char *, char *, uint64_t))v135;
    swift_slowDealloc();
  }
  else
  {
    v136(v53, v49);
  }

  os_log_type_t v62 = v124;
  v44(v124, v39, v49);
  uint64_t v63 = sub_100087330();
  os_log_type_t v64 = sub_1000881D0();
  BOOL v65 = os_log_type_enabled(v63, v64);
  uint64_t v121 = v49;
  if (v65)
  {
    os_log_type_t v66 = (uint8_t *)swift_slowAlloc();
    id v145 = (id)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v66 = 136315138;
    sub_1000461C8(&qword_1000A9C48, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v67 = sub_1000884E0();
    uint64_t v144 = sub_100017980(v67, v68, (uint64_t *)&v145);
    sub_100088240();
    swift_bridgeObjectRelease();
    v136(v62, v49);
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "Cache creation date = %s", v66, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v136(v62, v49);
  }

  uint64_t v69 = v139;
  uint64_t v70 = v125;
  char v71 = sub_100087330();
  os_log_type_t v72 = sub_1000881D0();
  BOOL v73 = os_log_type_enabled(v71, v72);
  id v74 = v141;
  if (v73)
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v75 = 134217984;
    id v145 = v56;
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Time since cache creation date = %f", v75, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v76 = v131;
  sub_10004665C(v69, v131, type metadata accessor for GameCenterStore.CacheConfig);
  os_log_type_t v77 = sub_100087330();
  os_log_type_t v78 = sub_1000881D0();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = (uint8_t *)swift_slowAlloc();
    uint64_t v80 = v76;
    uint64_t v81 = v79;
    *(_DWORD *)uint64_t v79 = 134217984;
    uint64_t v82 = *(void **)(v80 + *(int *)(v70 + 28));
    sub_1000466C4(v80, type metadata accessor for GameCenterStore.CacheConfig);
    id v145 = v82;
    uint64_t v69 = v139;
    sub_100088240();
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "Cache TTL = %ld", v81, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    sub_1000466C4(v76, type metadata accessor for GameCenterStore.CacheConfig);
  }

  if (*(double *)&v56 <= (double)*(uint64_t *)(v69 + *(int *)(v70 + 28))
    || ![self _gkIsOnline])
  {
    unint64_t v102 = sub_100087330();
    os_log_type_t v103 = sub_1000881D0();
    if (os_log_type_enabled(v102, v103))
    {
      int v104 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v104 = 0;
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "The cache is still valid. Deferring to it for data where possible.", v104, 2u);
      swift_slowDealloc();
    }

    goto LABEL_30;
  }
  unint64_t v83 = sub_100087330();
  os_log_type_t v84 = sub_1000881D0();
  if (os_log_type_enabled(v83, v84))
  {
    int64_t v85 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v85 = 0;
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "The cache is out of date. Erasing it and fetching new data.", v85, 2u);
    swift_slowDealloc();
  }

  id v86 = [self defaultManager];
  id v87 = v130;
  sub_100087120();
  sub_100087110(v88);
  long long v90 = v89;
  v138(v87, v126);
  id v145 = 0;
  LODWORD(v87) = [v86 removeItemAtURL:v90 error:&v145];

  id v91 = v145;
  if (v87)
  {
    uint64_t v92 = v129;
    sub_10004665C(v69, v129, type metadata accessor for GameCenterStore.CacheConfig);
    uint64_t v93 = sub_100087330();
    os_log_type_t v94 = sub_1000881D0();
    if (os_log_type_enabled(v93, v94))
    {
      os_log_type_t v95 = (uint8_t *)swift_slowAlloc();
      uint64_t v96 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v95 = 136315138;
      id v145 = v96;
      uint64_t v135 = (uint64_t)(v95 + 4);
      uint64_t v97 = v130;
      sub_100087120();
      uint64_t v98 = sub_100087150();
      unint64_t v100 = v99;
      v138(v97, v126);
      uint64_t v144 = sub_100017980(v98, v100, (uint64_t *)&v145);
      sub_100088240();
      swift_bridgeObjectRelease();
      sub_1000466C4(v92, type metadata accessor for GameCenterStore.CacheConfig);
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "Deleted cache directory at %s", v95, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000466C4(v92, type metadata accessor for GameCenterStore.CacheConfig);
    }

    uint64_t v101 = v140;
  }
  else
  {
    uint64_t v106 = v91;
    sub_1000870F0();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v101 = 0;
  }
  sub_1000870C0();
  swift_allocObject();
  sub_1000870B0();
  sub_1000461C8(&qword_1000A9C38, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v107 = sub_1000870A0();
  if (!v101)
  {
    uint64_t v109 = v107;
    unint64_t v110 = v108;
    swift_release();
    long long v111 = v128;
    sub_100087130();
    sub_1000871B0();
    sub_10000AF7C(v109, v110);
    v138(v111, v126);
LABEL_30:
    id v105 = v127;
    goto LABEL_40;
  }
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  long long v112 = sub_100087330();
  os_log_type_t v113 = sub_1000881D0();
  if (os_log_type_enabled(v112, v113))
  {
    uint64_t v114 = (uint8_t *)swift_slowAlloc();
    os_log_t v115 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v114 = 138412290;
    swift_errorRetain();
    uint64_t v116 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v145 = v116;
    sub_100088240();
    void *v115 = v116;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v112, v113, "Failed to write JSON data with error: %@", v114, 0xCu);
    sub_100004FB4(&qword_1000A9C00);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v117 = v127;
  swift_errorRelease();
  id v105 = v117;
LABEL_40:
  uint64_t v118 = v121;
  uint64_t v119 = (uint64_t (*)(char *, uint64_t))v136;
  v136(v105, v121);
  return v119(v74, v118);
}

uint64_t sub_10004403C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v7 = (int *)type metadata accessor for GameCenterStore.CacheConfig(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100087170();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = [self defaultManager];
  id v18 = [v17 URLsForDirectory:13 inDomains:1];

  uint64_t v19 = sub_100088120();
  if (*(void *)(v19 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v12, v19 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_100006AE0((uint64_t)v12, &qword_1000A8BC8);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
  uint64_t v21 = &v9[v7[5]];
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = a5;
  uint64_t v22 = &v9[v7[6]];
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = a3;
  *(void *)&v9[v7[7]] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100041710((uint64_t)v9);
  sub_100042A8C((uint64_t)v9);
  sub_1000466C4((uint64_t)v9, type metadata accessor for GameCenterStore.CacheConfig);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100044368()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000443A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000443B4()
{
  return swift_release();
}

uint64_t sub_1000443BC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000443F4(void *a1, unint64_t a2)
{
  return sub_10003EF70(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100044400()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100044438(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1000884F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646944726F727265 && a2 == 0xED0000727563634FLL || (sub_1000884F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69547972746572 && a2 == 0xE900000000000065 || (sub_1000884F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x44496568636163 && a2 == 0xE700000000000000 || (sub_1000884F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6146746567646977 && a2 == 0xEC000000796C696DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1000884F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void sub_100044690(uint64_t a1, unint64_t a2, void (*a3)(id))
{
  id v6 = [self bagSubProfileVersion];
  if (!v6)
  {
    swift_release();
    __break(1u);
  }
  uint64_t v7 = v6;
  sub_100088000();

  NSString v8 = sub_100087FF0();
  NSString v9 = sub_100087FF0();
  swift_bridgeObjectRelease();
  id v10 = [self bagForProfile:v8 profileVersion:v9];

  NSString v11 = sub_100087FF0();
  id v12 = [v10 integerForKey:v11];

  id v32 = 0;
  id v13 = [v12 valueWithError:&v32];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = qword_1000A8700;
    id v16 = v32;
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100087350();
    sub_10000A5F4(v17, (uint64_t)qword_1000ADA00);
    swift_bridgeObjectRetain_n();
    id v18 = v14;
    uint64_t v19 = sub_100087330();
    os_log_type_t v20 = sub_1000881D0();
    uint64_t v21 = &SeededRandomNumberGenerator;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      id v32 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      id v30 = v10;
      swift_bridgeObjectRetain();
      sub_100017980(a1, a2, (uint64_t *)&v32);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2048;
      [v18 integerValue];

      sub_100088240();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "fetchTTLInSeconds %s - %ld", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v21 = &SeededRandomNumberGenerator;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a3([v18 v21[17].name v30]);
  }
  else
  {
    unint64_t v31 = v12;
    id v23 = v32;
    sub_1000870F0();

    swift_willThrow();
    if (qword_1000A8700 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100087350();
    sub_10000A5F4(v24, (uint64_t)qword_1000ADA00);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v25 = sub_100087330();
    os_log_type_t v26 = sub_1000881D0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      id v32 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315650;
      swift_bridgeObjectRetain();
      sub_100017980(a1, a2, (uint64_t *)&v32);
      sub_100088240();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2048;
      sub_100088240();
      *(_WORD *)(v27 + 22) = 2080;
      swift_errorRetain();
      sub_100004FB4(&qword_1000A8BD0);
      uint64_t v28 = sub_100088010();
      sub_100017980(v28, v29, (uint64_t *)&v32);
      sub_100088240();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "fetchTTLInSeconds %s - defaulting to %ld, unable to retrieve: %s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    a3((id)86400);
    swift_errorRelease();
  }
}

void sub_100044C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v53 = a4;
  uint64_t v49 = a1;
  uint64_t v10 = sub_100087EC0();
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  __chkstk_darwin(v10);
  uint64_t v48 = v11;
  uint64_t v50 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  uint64_t v13 = qword_1000A86F8;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100087350();
  sub_10000A5F4(v14, (uint64_t)qword_1000AD9E8);
  uint64_t v15 = sub_100087330();
  os_log_type_t v16 = sub_1000881D0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "fetchAppDisplayDataForContinuePlaying", v17, 2u);
    swift_slowDealloc();
  }

  id v18 = (void *)sub_100081AD8();
  if (v18)
  {
    uint64_t v19 = v18;
    id v20 = v18;
    uint64_t v21 = sub_100087330();
    os_log_type_t v22 = sub_1000881D0();
    BOOL v23 = os_log_type_enabled(v21, v22);
    id v54 = v20;
    uint64_t v46 = a2;
    uint64_t v47 = a3;
    if (v23)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412290;
      aBlock[0] = v20;
      id v26 = v54;
      id v20 = v54;
      sub_100088240();
      *uint64_t v25 = v19;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Current player is %@", v24, 0xCu);
      sub_100004FB4(&qword_1000A9C00);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v30 = [self proxyForPlayer:v20];
    id v45 = [v30 gameServicePrivate];

    id v31 = [v20 internal];
    NSString v32 = [v31 playerID];

    if (!v32)
    {
      sub_100088000();
      NSString v32 = sub_100087FF0();
      swift_bridgeObjectRelease();
    }
    if (qword_1000A8710 != -1) {
      swift_once();
    }
    uint64_t v44 = qword_1000A9B60;
    Class isa = sub_100088190().super.super.isa;
    unint64_t v35 = v50;
    uint64_t v34 = v51;
    uint64_t v36 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v49, v52);
    unint64_t v37 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    unint64_t v38 = (v48 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_1000463D0;
    *(void *)(v39 + 24) = v12;
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v39 + v37, v35, v36);
    *(void *)(v39 + v38) = v53;
    uint64_t v40 = (void *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v41 = v47;
    *uint64_t v40 = v46;
    v40[1] = v41;
    aBlock[4] = sub_1000464EC;
    aBlock[5] = v39;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003D944;
    aBlock[3] = &unk_1000A6BA0;
    os_log_type_t v42 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v45 getGamesPlayedSummaries:v32 limit:v44 withinSecs:isa handler:v42];
    _Block_release(v42);
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v27 = sub_100087330();
    os_log_type_t v28 = sub_1000881D0();
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unable to get local player!", v29, 2u);
      swift_slowDealloc();
    }

    a5(&_swiftEmptyArrayStorage, 1);
    swift_release();
  }
}

void sub_100045284(void **a1, NSObject *a2, uint64_t a3)
{
  dispatch_group_t v51 = a2;
  uint64_t v6 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v6 - 8);
  NSString v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087170();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v14 = __chkstk_darwin(v13).n128_u64[0];
  os_log_type_t v16 = (char *)&v44 - v15;
  uint64_t v17 = *a1;
  id v18 = [v17 identifier:v14];
  if (!v18) {
    goto LABEL_4;
  }
  uint64_t v19 = v18;
  uint64_t v50 = a3;
  uint64_t v49 = sub_100088000();
  unint64_t v21 = v20;

  sub_100088220();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100006AE0((uint64_t)v8, &qword_1000A8BC8);
    a3 = v50;
LABEL_4:
    id v22 = [v17 playerInternal];
    if (v22)
    {
      BOOL v23 = v22;
      dispatch_group_t v24 = v51;
      dispatch_group_enter(v51);
      id v25 = [objc_allocWithZone((Class)GKPlayer) initWithInternalRepresentation:v23];
      id v26 = (void *)swift_allocObject();
      v26[2] = a3;
      v26[3] = v23;
      v26[4] = v24;
      aBlock[4] = (uint64_t)sub_1000461BC;
      aBlock[5] = (uint64_t)v26;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10003F904;
      aBlock[3] = (uint64_t)&unk_1000A6AD8;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      os_log_type_t v28 = v24;
      id v29 = v23;
      swift_release();
      [v25 playerAvatarImageWithSize:0x10000 completionHandler:v27];
      _Block_release(v27);
    }
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v8, v9);
  dispatch_group_enter(v51);
  if (qword_1000A8708 != -1) {
    swift_once();
  }
  uint64_t v48 = v3;
  uint64_t v30 = sub_100087350();
  sub_10000A5F4(v30, (uint64_t)qword_1000ADA18);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
  swift_bridgeObjectRetain_n();
  id v31 = sub_100087330();
  os_log_type_t v32 = sub_1000881D0();
  int v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    aBlock[0] = v47;
    *(_DWORD *)uint64_t v34 = 136315394;
    sub_1000461C8(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
    int v46 = v33;
    uint64_t v35 = sub_1000884E0();
    uint64_t v53 = sub_100017980(v35, v36, aBlock);
    os_log_t v45 = v31;
    sub_100088240();
    swift_bridgeObjectRelease();
    unint64_t v37 = *(void (**)(char *, uint64_t))(v10 + 8);
    v37(v12, v9);
    unint64_t v38 = v37;
    *(_WORD *)(v34 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v39 = v49;
    uint64_t v53 = sub_100017980(v49, v21, aBlock);
    sub_100088240();
    swift_bridgeObjectRelease_n();
    os_log_t v40 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v46, "Fetching avatar %s for %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v41 = v38;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, uint64_t))(v10 + 8);
    v41(v12, v9);

    swift_bridgeObjectRelease_n();
    uint64_t v39 = v49;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = v50;
  swift_retain();
  uint64_t v43 = v51;
  sub_10000AEC4((unint64_t)v16, v39, v21, v42, v39, v21, v43);
  swift_release();
  swift_bridgeObjectRelease_n();

  v41(v16, v9);
}

id sub_10004584C(void **a1, NSObject *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  dispatch_group_t v51 = a2;
  uint64_t v6 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v6 - 8);
  NSString v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087170();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v50 = (unint64_t)&v43 - v13;
  double v14 = *a1;
  if (qword_1000A8708 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100087350();
  uint64_t v16 = sub_10000A5F4(v15, (uint64_t)qword_1000ADA18);
  id v17 = v14;
  uint64_t v46 = v16;
  id v18 = sub_100087330();
  os_log_type_t v19 = sub_1000881D0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v45 = v10;
    unint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v49 = v3;
    uint64_t v43 = (void *)v22;
    *(_DWORD *)unint64_t v21 = 138412290;
    uint64_t v53 = (uint64_t)v17;
    id v23 = v17;
    uint64_t v44 = v9;
    id v24 = v23;
    sub_100088240();
    *uint64_t v43 = v17;

    uint64_t v9 = v44;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "game is %@", v21, 0xCu);
    sub_100004FB4(&qword_1000A9C00);
    swift_arrayDestroy();
    uint64_t v4 = v49;
    swift_slowDealloc();
    uint64_t v10 = v45;
    swift_slowDealloc();
  }
  else
  {
  }
  id result = [v17 identifier];
  if (result)
  {
    id v26 = result;
    uint64_t v27 = sub_100088000();
    unint64_t v29 = v28;

    sub_100088210();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      swift_bridgeObjectRelease();
      return (id)sub_100006AE0((uint64_t)v8, &qword_1000A8BC8);
    }
    else
    {
      uint64_t v45 = v27;
      unint64_t v30 = v50;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v50, v8, v9);
      dispatch_group_enter(v51);
      id v31 = v47;
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v47, v30, v9);
      swift_bridgeObjectRetain_n();
      os_log_type_t v32 = sub_100087330();
      os_log_type_t v33 = sub_1000881D0();
      int v34 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v53 = v46;
        *(_DWORD *)uint64_t v35 = 136315394;
        sub_1000461C8(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
        LODWORD(v44) = v34;
        uint64_t v36 = sub_1000884E0();
        uint64_t v52 = sub_100017980(v36, v37, &v53);
        uint64_t v49 = v4;
        sub_100088240();
        swift_bridgeObjectRelease();
        unint64_t v38 = *(void (**)(char *, uint64_t))(v10 + 8);
        v38(v31, v9);
        *(_WORD *)(v35 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v39 = v45;
        uint64_t v52 = sub_100017980(v45, v29, &v53);
        sub_100088240();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v44, "Fetching icon %s for %s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        unint64_t v38 = *(void (**)(char *, uint64_t))(v10 + 8);
        v38(v31, v9);

        swift_bridgeObjectRelease_n();
        uint64_t v39 = v45;
      }
      swift_bridgeObjectRetain();
      uint64_t v40 = v48;
      swift_retain();
      uint64_t v41 = v51;
      unint64_t v42 = v50;
      sub_10000AEC4(v50, v39, v29, v40, v39, v29, v41);
      swift_release();
      swift_bridgeObjectRelease_n();

      return (id)((uint64_t (*)(unint64_t, uint64_t))v38)(v42, v9);
    }
  }
  return result;
}

void sub_100045E3C(id *a1, NSObject *a2, uint64_t a3)
{
  id v5 = *a1;
  id v6 = [*a1 relationships];
  id v7 = [v6 players];

  if (v7)
  {
    sub_100013058(0, &qword_1000A8CD8);
    unint64_t v8 = sub_100088120();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1000883C0();
      if (v9) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          goto LABEL_25;
        }
        uint64_t v10 = 0;
        do
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v11 = (id)sub_100088340();
          }
          else {
            id v11 = *(id *)(v8 + 8 * v10 + 32);
          }
          uint64_t v12 = v11;
          ++v10;
          uint64_t v20 = v11;
          sub_100045284(&v20, a2, a3);
        }
        while (v9 != v10);
      }
    }
    swift_bridgeObjectRelease_n();
  }
  id v13 = [v5 relationships];
  id v14 = [v13 games];

  if (!v14) {
    return;
  }
  sub_100013058(0, &qword_1000A8CD0);
  unint64_t v15 = sub_100088120();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1000883C0();
    if (v16)
    {
LABEL_15:
      if (v16 >= 1)
      {
        uint64_t v17 = 0;
        do
        {
          if ((v15 & 0xC000000000000001) != 0) {
            id v18 = (id)sub_100088340();
          }
          else {
            id v18 = *(id *)(v15 + 8 * v17 + 32);
          }
          os_log_type_t v19 = v18;
          ++v17;
          uint64_t v20 = v18;
          sub_10004584C(&v20, a2, a3);
        }
        while (v16 != v17);
        goto LABEL_22;
      }
LABEL_25:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_15;
    }
  }
LABEL_22:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_1000460C4()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10004610C()
{
  return sub_10003F998(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t, uint64_t, void))(v0 + 32));
}

unint64_t sub_100046118()
{
  unint64_t result = qword_1000A9C20;
  if (!qword_1000A9C20)
  {
    sub_100004FF8(&qword_1000A9C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9C20);
  }
  return result;
}

uint64_t sub_100046174()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000461BC(void *a1, int a2, int a3)
{
  sub_10003F804(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(dispatch_group_t *)(v3 + 32));
}

uint64_t sub_1000461C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for GameCenterStore.CacheConfig(uint64_t a1)
{
  return sub_1000470CC(a1, qword_1000A9DB8);
}

uint64_t sub_100046230()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100046258()
{
  uint64_t v1 = sub_100087EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10004631C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100087EC0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v11 = *(void (**)(void *, uint64_t))v10;
  uint64_t v12 = *(void *)(v10 + 8);

  return sub_100037734(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1000463D0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000463F8()
{
  uint64_t v1 = sub_100087EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000464EC(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100087EC0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + v7);
  id v11 = (void *)(v2 + v6);
  uint64_t v12 = (uint64_t *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];

  return sub_1000377EC(a1, a2, v8, v9, v11, v10, v13, v14);
}

uint64_t sub_1000465AC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100046608(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004665C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000466C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100046724()
{
  uint64_t v1 = sub_100087EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_1000467F8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100087EC0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100039D50(a1, *(void *)(v1 + 16), *(unint64_t **)(v1 + 24), *(void *)(v1 + 32), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(NSObject **)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1000468BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A9C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_100046924(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100046938(uint64_t a1, uint64_t a2)
{
  return sub_100046AC4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_10003ACC4);
}

uint64_t sub_100046954()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppMetadata() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100046AAC(uint64_t a1, uint64_t a2)
{
  return sub_100046AC4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_10003B094);
}

uint64_t sub_100046AC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for AppMetadata() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + v8);
  uint64_t v11 = *(void *)(v3 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return a3(a1, a2, v9, v3 + v7, v10, v11);
}

uint64_t sub_100046B94()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppMetadata() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_100087EC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (v7 + ((((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7;
  unint64_t v11 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v12 = v2 | v7 | 7;
  uint64_t v9 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  swift_release();

  return _swift_deallocObject(v0, v11, v12);
}

void sub_100046DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for AppMetadata() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_100087EC0() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + v10 + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  sub_10003B4EC(a1, a2, *(void *)(v2 + 16), v2 + v6, *(NSObject **)(v2 + v7), *(uint64_t **)(v2 + v8), *(uint64_t **)(v2 + v9), *(void *)(v2 + v10), *(void *)(v2 + v10 + 8), v2 + v12, *(void *)(v2 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100046F10()
{
  uint64_t v1 = sub_100087EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10004700C()
{
  uint64_t v1 = *(void *)(sub_100087EC0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = *(void (**)(void *, uint64_t))v7;
  uint64_t v9 = *(void *)(v7 + 8);

  return sub_10003C588(v4, v5, v6, v8, v9);
}

uint64_t type metadata accessor for WidgetCreationAttempt(uint64_t a1)
{
  return sub_1000470CC(a1, qword_1000A9D18);
}

uint64_t sub_1000470CC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100047104(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_10004716C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100087220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)((char *)a1 + v9);
    unint64_t v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100047260(uint64_t a1)
{
  uint64_t v2 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000472D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10004737C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10004743C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_1000474D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100047580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100047594);
}

uint64_t sub_100047594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100087220();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100047658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004766C);
}

uint64_t sub_10004766C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100087220();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10004772C()
{
  uint64_t result = sub_100087220();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CacheType(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for CacheType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000478CCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000478F4()
{
  return 0;
}

ValueMetadata *type metadata accessor for CacheType()
{
  return &type metadata for CacheType;
}

uint64_t *sub_10004790C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100087170();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100047A08(uint64_t a1)
{
  uint64_t v2 = sub_100087170();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100047A90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087170();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100047B3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087170();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100047C10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087170();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100047CA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087170();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100047D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100047D68);
}

uint64_t sub_100047D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100087170();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100047E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100047E40);
}

uint64_t sub_100047E40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100087170();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100047F00()
{
  uint64_t result = sub_100087170();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100047FA8()
{
  unint64_t result = qword_1000A9DF8;
  if (!qword_1000A9DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9DF8);
  }
  return result;
}

void *sub_100047FFC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_100048040()
{
  unint64_t result = qword_1000A9E08;
  if (!qword_1000A9E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9E08);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for WidgetCreationAttempt.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetCreationAttempt.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetCreationAttempt.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000481FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_100048224(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10004822C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetCreationAttempt.CodingKeys()
{
  return &type metadata for WidgetCreationAttempt.CodingKeys;
}

unint64_t sub_100048248()
{
  unint64_t result = qword_1000A9E18;
  if (!qword_1000A9E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9E18);
  }
  return result;
}

unint64_t sub_1000482A0()
{
  unint64_t result = qword_1000A9E20;
  if (!qword_1000A9E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9E20);
  }
  return result;
}

unint64_t sub_1000482F8()
{
  unint64_t result = qword_1000A9E28;
  if (!qword_1000A9E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9E28);
  }
  return result;
}

void *sub_10004838C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100087220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    int v8 = (int *)type metadata accessor for CPTimelineEntry();
    *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
    *((unsigned char *)a1 + v8[6]) = *((unsigned char *)a2 + v8[6]);
    *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
    *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
    uint64_t v9 = a3[5];
    unint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100087430();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    sub_100004FB4(&qword_1000A88D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_1000874A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[10];
    unint64_t v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *unint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[11];
    id v25 = (void *)((char *)a1 + v24);
    id v26 = (void *)((char *)a2 + v24);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *id v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = a3[12];
    unint64_t v29 = (void *)((char *)a1 + v28);
    unint64_t v30 = (void *)((char *)a2 + v28);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *unint64_t v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100048770(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[9];
  sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000874A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[10];
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[11];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[12];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100087380();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1000489FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100087430();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1000874A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    void *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    void *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = sub_100087380();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *uint64_t v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100048D90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_100006AE0(a1 + v12, &qword_1000A88D8);
    sub_100004FB4(&qword_1000A88D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1000874A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[10];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    sub_100006AE0(a1 + v16, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[11];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_100006AE0(a1 + v20, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[12];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    sub_100006AE0(a1 + v24, &qword_1000A88D0);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10004916C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1000874A0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_100087E60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_100087EC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  uint64_t v28 = a3[12];
  uint64_t v29 = (void *)(a1 + v28);
  unint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_100087380();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10004950C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v13 = a3[9];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_100006AE0(a1 + v13, &qword_1000A88D8);
    uint64_t v16 = sub_100004FB4(&qword_1000A88D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000874A0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    uint64_t v18 = a3[10];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    sub_100006AE0(a1 + v18, &qword_1000A87A8);
    uint64_t v21 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_100087E60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    uint64_t v23 = a3[11];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (const void *)(a2 + v23);
    sub_100006AE0(a1 + v23, &qword_1000A87B0);
    uint64_t v26 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_100087EC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    uint64_t v28 = a3[12];
    uint64_t v29 = (void *)(a1 + v28);
    unint64_t v30 = (const void *)(a2 + v28);
    sub_100006AE0(a1 + v28, &qword_1000A88D0);
    uint64_t v31 = sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = sub_100087380();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100049904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100049918);
}

uint64_t sub_100049918(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CPTimelineEntry();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  if (a2 == 254)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[8]);
    if (v14 >= 2) {
      return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v16 = sub_100004FB4(&qword_1000A9570);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  uint64_t v17 = sub_100004FB4(&qword_1000A87B8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  uint64_t v18 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_15;
  }
  uint64_t v19 = sub_100004FB4(&qword_1000A88C0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[12];

  return v20(v22, a2, v21);
}

uint64_t sub_100049B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100049BAC);
}

uint64_t sub_100049BAC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for CPTimelineEntry();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_100087430();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[8]) = a2 + 1;
    return result;
  }
  uint64_t v16 = sub_100004FB4(&qword_1000A9570);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  uint64_t v17 = sub_100004FB4(&qword_1000A87B8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_13;
  }
  uint64_t v18 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_13;
  }
  uint64_t v19 = sub_100004FB4(&qword_1000A88C0);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[12];

  return v20(v22, a2, a2, v21);
}

uint64_t type metadata accessor for CPAppGridView()
{
  uint64_t result = qword_1000A9E88;
  if (!qword_1000A9E88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100049E68()
{
  type metadata accessor for CPTimelineEntry();
  if (v0 <= 0x3F)
  {
    sub_100087430();
    if (v1 <= 0x3F)
    {
      sub_10002CCA0(319, (unint64_t *)&unk_1000A95E0, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
      if (v2 <= 0x3F)
      {
        sub_10002CCA0(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
        if (v3 <= 0x3F)
        {
          sub_10002CCA0(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
          if (v4 <= 0x3F)
          {
            sub_10002CCA0(319, (unint64_t *)&unk_1000A92E0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10004A0A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004A0C4()
{
  uint64_t v22 = sub_100087380();
  uint64_t v1 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = sub_100087E60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - v12;
  type metadata accessor for CPAppGridView();
  uint64_t v21 = v0;
  sub_1000171F8((uint64_t)v13);
  sub_100087E50();
  char v14 = sub_100087E40();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v15(v13, v7);
  id v16 = [self systemGray4Color];
  sub_100087C20();
  if ((v14 & 1) == 0)
  {
    sub_1000174E8((uint64_t)v6);
    uint64_t v17 = v22;
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for ColorScheme.dark(_:), v22);
    sub_100087370();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v1 + 8);
    v18(v3, v17);
    v18(v6, v17);
  }
  uint64_t v19 = sub_100087BD0();
  swift_release();
  return v19;
}

uint64_t sub_10004A370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v28 = sub_100087380();
  uint64_t v2 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_100087E60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v14 = (char *)&v26 - v13;
  type metadata accessor for CPAppGridView();
  uint64_t v27 = v1;
  sub_1000171F8((uint64_t)v14);
  sub_100087E50();
  sub_10004F734((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v15 = sub_100087FE0();
  id v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  v16(v14, v8);
  if (v15)
  {
    uint64_t v17 = enum case for BlendMode.normal(_:);
    uint64_t v18 = sub_100087DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v29, v17, v18);
  }
  else
  {
    uint64_t v20 = v29;
    sub_1000174E8((uint64_t)v7);
    uint64_t v21 = v28;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ColorScheme.dark(_:), v28);
    char v22 = sub_100087370();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v2 + 8);
    v23(v4, v21);
    v23(v7, v21);
    uint64_t v24 = sub_100087DA0();
    if (v22) {
      uint64_t v25 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    }
    else {
      uint64_t v25 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v20, *v25, v24);
  }
}

double sub_10004A6A4()
{
  uint64_t v0 = sub_100087EC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CPAppGridView();
  sub_100016FB8((uint64_t)v3);
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for WidgetFamily.systemSmall(_:) || v4 == enum case for WidgetFamily.systemMedium(_:))
  {
    sub_100087410();
    double v7 = 0.43;
LABEL_11:
    double v10 = v6 * v7;
    return round(v10);
  }
  int v8 = v4;
  if (v4 == enum case for WidgetFamily.systemLarge(_:))
  {
    sub_100087410();
    double v10 = v9 * 0.26;
    return round(v10);
  }
  if (v4 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    sub_100087410();
    double v7 = 0.28;
    goto LABEL_11;
  }
  int v13 = enum case for WidgetFamily.accessoryCircular(_:);
  int v14 = enum case for WidgetFamily.accessoryRectangular(_:);
  int v15 = enum case for WidgetFamily.accessoryInline(_:);
  sub_100087410();
  double v11 = round(v16 * 0.43);
  if (v8 != v13 && v8 != v14 && v8 != v15) {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v11;
}

uint64_t sub_10004A8B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A9EE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v40 = (uint64_t *)((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = sub_100004FB4(&qword_1000A9EE8);
  __chkstk_darwin(v38);
  uint64_t v39 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100087EC0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = a1;
  type metadata accessor for CPAppGridView();
  sub_100016FB8((uint64_t)v12);
  uint64_t v14 = v7;
  int v15 = *(uint64_t (**)(char *, uint64_t))(v7 + 88);
  int v16 = v15(v12, v6);
  int v17 = enum case for WidgetFamily.systemExtraLarge(_:);
  uint64_t v37 = v14;
  if (v16 == enum case for WidgetFamily.systemExtraLarge(_:)) {
    sub_100087410();
  }
  else {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v6);
  }
  sub_100016FB8((uint64_t)v9);
  if (v15(v9, v6) != v17) {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v6);
  }
  uint64_t v18 = sub_100087720();
  uint64_t v19 = (uint64_t)v40;
  *uint64_t v40 = v18;
  *(void *)(v19 + 8) = 0;
  *(unsigned char *)(v19 + 16) = 0;
  uint64_t v20 = sub_100004FB4(&qword_1000A9EF0);
  sub_10004AC68(v13, (void *)(v19 + *(int *)(v20 + 44)));
  unsigned __int8 v21 = sub_1000878A0();
  unsigned __int8 v22 = sub_1000878D0();
  unsigned __int8 v23 = sub_1000878B0();
  char v24 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v21) {
    char v24 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v22) {
    char v24 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v23) {
    char v24 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v33 = v39;
  sub_100006B3C(v19, v39, &qword_1000A9EE0);
  uint64_t v34 = v33 + *(int *)(v38 + 36);
  *(unsigned char *)uint64_t v34 = v24;
  *(void *)(v34 + 8) = v26;
  *(void *)(v34 + 16) = v28;
  *(void *)(v34 + 24) = v30;
  *(void *)(v34 + 32) = v32;
  *(unsigned char *)(v34 + 40) = 0;
  sub_100006AE0(v19, &qword_1000A9EE0);
  return sub_100006C4C(v33, v41, &qword_1000A9EE8);
}

uint64_t sub_10004AC68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = type metadata accessor for CPAppGridView();
  uint64_t v60 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v61 = v4;
  uint64_t v62 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000A9EF8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (double *)((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_100004FB4(&qword_1000A9F00);
  __chkstk_darwin(v64);
  uint64_t v66 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v63 = (uint64_t)&v58 - v10;
  __chkstk_darwin(v11);
  uint64_t v65 = (uint64_t)&v58 - v12;
  uint64_t v13 = sub_100087EC0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v58 - v18;
  double v20 = sub_10004A6A4();
  uint64_t v22 = v21;
  double v23 = sub_10004A6A4();
  uint64_t v68 = v3;
  uint64_t v69 = a1;
  sub_100016FB8((uint64_t)v19);
  uint64_t v59 = v14;
  char v24 = *(uint64_t (**)(char *, uint64_t))(v14 + 88);
  int v25 = v24(v19, v13);
  int v26 = enum case for WidgetFamily.systemSmall(_:);
  int v27 = enum case for WidgetFamily.systemMedium(_:);
  if (v25 == enum case for WidgetFamily.systemSmall(_:) || v25 == enum case for WidgetFamily.systemMedium(_:))
  {
    double v23 = v23 + 4.0;
    int v29 = enum case for WidgetFamily.systemLarge(_:);
  }
  else
  {
    int v29 = enum case for WidgetFamily.systemLarge(_:);
    if (v25 == enum case for WidgetFamily.systemLarge(_:))
    {
      int v29 = v25;
    }
    else if (v25 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      double v23 = v23 + 8.0;
    }
    else if (v25 != enum case for WidgetFamily.accessoryCircular(_:) {
           && v25 != enum case for WidgetFamily.accessoryRectangular(_:)
    }
           && v25 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v19, v13);
    }
  }
  sub_100016FB8((uint64_t)v16);
  int v30 = v24(v16, v13);
  double v31 = 0.0;
  if (v30 != v26 && v30 != v27 && v30 != v29)
  {
    if (v30 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      uint64_t v32 = v68;
      uint64_t v33 = v69;
      sub_100087410();
      double v31 = round(v34 * 0.08);
      goto LABEL_25;
    }
    if (v30 != enum case for WidgetFamily.accessoryCircular(_:)
      && v30 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v30 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v16, v13);
    }
  }
  uint64_t v32 = v68;
  uint64_t v33 = v69;
LABEL_25:
  uint64_t result = sub_100087720();
  *(void *)uint64_t v7 = result;
  v7[1] = v31;
  *((unsigned char *)v7 + 16) = 0;
  if ((*(void *)(v33 + *(int *)(v32 + 24)) & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100004FB4(&qword_1000A9F08);
    uint64_t v36 = v62;
    sub_10004F66C(v33, v62, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
    unint64_t v37 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    unint64_t v38 = (v61 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    sub_10004E9B4(v36, v39 + v37);
    uint64_t v40 = (double *)(v39 + v38);
    *uint64_t v40 = v20;
    *((void *)v40 + 1) = v22;
    *(double *)(v39 + ((v38 + 23) & 0xFFFFFFFFFFFFFFF8)) = v23;
    sub_100004FB4(&qword_1000A9F10);
    sub_100006A8C(&qword_1000A9F18, &qword_1000A9F10);
    sub_100087D30();
    unsigned __int8 v41 = sub_100087890();
    char v42 = sub_1000878C0();
    sub_1000878C0();
    if (sub_1000878C0() != v41) {
      char v42 = sub_1000878C0();
    }
    sub_100087360();
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v51 = v63;
    sub_100006B3C((uint64_t)v7, v63, &qword_1000A9EF8);
    uint64_t v52 = v51 + *(int *)(v64 + 36);
    *(unsigned char *)uint64_t v52 = v42;
    *(void *)(v52 + 8) = v44;
    *(void *)(v52 + 16) = v46;
    *(void *)(v52 + 24) = v48;
    *(void *)(v52 + 32) = v50;
    *(unsigned char *)(v52 + 40) = 0;
    sub_100006AE0((uint64_t)v7, &qword_1000A9EF8);
    uint64_t v53 = v65;
    sub_100006C4C(v51, v65, &qword_1000A9F00);
    uint64_t v54 = v66;
    sub_100006B3C(v53, v66, &qword_1000A9F00);
    os_log_type_t v55 = v67;
    *uint64_t v67 = 0;
    *((unsigned char *)v55 + 8) = 0;
    uint64_t v56 = sub_100004FB4(&qword_1000A9F20);
    sub_100006B3C(v54, (uint64_t)v55 + *(int *)(v56 + 48), &qword_1000A9F00);
    uint64_t v57 = (char *)v55 + *(int *)(v56 + 64);
    *(void *)uint64_t v57 = 0;
    v57[8] = 0;
    sub_100006AE0(v53, &qword_1000A9F00);
    return sub_100006AE0(v54, &qword_1000A9F00);
  }
  return result;
}

uint64_t sub_10004B2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v12 = type metadata accessor for CPAppGridView();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v54 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  int v16 = (char *)&v46 - v15;
  uint64_t v17 = sub_100004FB4(&qword_1000A9F28);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100004FB4(&qword_1000A9F30);
  __chkstk_darwin(v20);
  uint64_t v55 = (uint64_t)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v24 = (char *)&v46 - v23;
  *(void *)uint64_t v19 = sub_1000876B0();
  *((void *)v19 + 1) = 0;
  v19[16] = 0;
  uint64_t result = sub_100004FB4(&qword_1000A9F38);
  uint64_t v26 = *(void *)(a2 + *(int *)(v12 + 28));
  uint64_t v27 = a1 * v26;
  if ((unsigned __int128)(a1 * (__int128)v26) >> 64 != (a1 * v26) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v28 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v29 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v30 = v29 * v26;
  if ((unsigned __int128)(v29 * (__int128)v26) >> 64 != (v29 * v26) >> 63)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v53 = v20;
  uint64_t v31 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v31 < v28)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v47 = a1;
  uint64_t v48 = v28;
  uint64_t v49 = &v19[*(int *)(result + 44)];
  uint64_t v51 = type metadata accessor for CPAppGridView;
  uint64_t v52 = a3;
  sub_10004F66C(a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  unint64_t v32 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v54 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a2;
  uint64_t v33 = v12;
  unint64_t v34 = (v13 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10004E9B4((uint64_t)v16, v36 + v32);
  unint64_t v37 = (double *)(v36 + v34);
  uint64_t v38 = v33;
  double *v37 = a4;
  v37[1] = a5;
  *(double *)(v36 + v35) = a6;
  *(void *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v31;
  sub_100004FB4(&qword_1000A9F40);
  sub_100006A8C(&qword_1000A9F48, &qword_1000A9F40);
  sub_100087D30();
  uint64_t v39 = v55;
  sub_100006B3C((uint64_t)v19, v55, &qword_1000A9F28);
  *(void *)(v39 + *(int *)(v53 + 36)) = 0x4024000000000000;
  sub_100006AE0((uint64_t)v19, &qword_1000A9F28);
  sub_100006C4C(v39, (uint64_t)v24, &qword_1000A9F30);
  uint64_t v40 = *(void *)(v50 + *(int *)(v33 + 24));
  uint64_t v41 = v54;
  sub_10004F66C(v50, v54, (uint64_t (*)(void))v51);
  if (v40 < 2)
  {
    sub_10004F6D4(v41, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
    uint64_t v43 = v52;
    goto LABEL_12;
  }
  uint64_t v42 = *(void *)(v41 + *(int *)(v38 + 24));
  uint64_t result = sub_10004F6D4(v41, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  uint64_t v43 = v52;
  if (!__OFSUB__(v42, 1))
  {
    if (v42 - 1 == v47)
    {
      char v44 = 0;
LABEL_13:
      sub_100006B3C((uint64_t)v24, v39, &qword_1000A9F30);
      sub_100006B3C(v39, v43, &qword_1000A9F30);
      uint64_t v45 = v43 + *(int *)(sub_100004FB4(&qword_1000A9F50) + 48);
      *(void *)uint64_t v45 = 0;
      *(unsigned char *)(v45 + 8) = 0;
      *(unsigned char *)(v45 + 9) = v44;
      sub_100006AE0((uint64_t)v24, &qword_1000A9F30);
      return sub_100006AE0(v39, &qword_1000A9F30);
    }
LABEL_12:
    char v44 = 1;
    goto LABEL_13;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10004B764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>, double a5@<D0>, uint64_t a6@<D1>, uint64_t a7@<D2>)
{
  uint64_t v75 = a3;
  uint64_t v68 = a4;
  uint64_t v12 = sub_100004FB4(&qword_1000A9F58);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = sub_100004FB4(&qword_1000A9F60);
  __chkstk_darwin(v73);
  int v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100004FB4(&qword_1000A9F68);
  uint64_t v17 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v64 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v65 = (char *)&v61 - v20;
  uint64_t v69 = sub_100004FB4(&qword_1000A9F70);
  __chkstk_darwin(v69);
  os_log_type_t v72 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100004FB4(&qword_1000A9F78);
  __chkstk_darwin(v71);
  uint64_t v63 = (uint64_t)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (int *)type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v23);
  int v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v61 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v61 - v30;
  uint64_t v32 = sub_100004FB4(&qword_1000A9F80);
  __chkstk_darwin(v32 - 8);
  uint64_t v67 = (uint64_t)&v61 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v70 = (char *)&v61 - v35;
  int v66 = *(unsigned __int8 *)(a2 + *(int *)(type metadata accessor for CPAppGridView() + 32));
  int v36 = *(unsigned __int8 *)(a2 + v23[6]);
  sub_10004F66C(a2, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  if (v36 != 1)
  {
    sub_10004F6D4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    sub_10004F66C(a2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    goto LABEL_16;
  }
  uint64_t v62 = a1;
  char v37 = v31[v23[9]];
  sub_10004F6D4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  sub_10004F66C(a2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  if ((v37 & 1) == 0)
  {
    a1 = v62;
    goto LABEL_16;
  }
  unint64_t v38 = *(void *)&v28[v23[5]];
  if (v38 >> 62) {
    goto LABEL_23;
  }
  uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    a1 = v62;
    sub_10004F6D4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    if (!v39) {
      goto LABEL_17;
    }
    sub_10004F66C(a2, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    if (a1 < 0)
    {
      uint64_t v28 = v25;
LABEL_16:
      sub_10004F6D4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
LABEL_17:
      *uint64_t v14 = sub_100087720();
      v14[1] = 0x4018000000000000;
      *((unsigned char *)v14 + 16) = 0;
      uint64_t v44 = sub_100004FB4(&qword_1000A9F88);
      sub_10004DD70(a2, (uint64_t)v14 + *(int *)(v44 + 44), a5, *(double *)&a7);
      sub_100087D90();
      goto LABEL_18;
    }
    unint64_t v40 = *(void *)&v25[v23[5]];
    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1000883C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    sub_10004F6D4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    if (v41 <= a1) {
      goto LABEL_17;
    }
    uint64_t v42 = *(void *)(a2 + v23[5]);
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v23 = (int *)sub_100088340();
      goto LABEL_13;
    }
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
    {
      uint64_t v23 = *(int **)(v42 + 8 * a1 + 32);
      swift_retain();
LABEL_13:
      uint64_t v17 = v63;
      sub_10004C0D0((uint64_t)v23, v63, a5, a6, a7);
      uint64_t v14 = &qword_1000A9F78;
      uint64_t v28 = v72;
      sub_100006B3C(v17, (uint64_t)v72, &qword_1000A9F78);
      swift_storeEnumTagMultiPayload();
      sub_10004F2C4();
      unint64_t v43 = sub_10004F224();
      *(void *)&long long v78 = v73;
      *((void *)&v78 + 1) = v43;
      swift_getOpaqueTypeConformance2();
      a2 = (uint64_t)v70;
      sub_1000877E0();
      swift_release();
      sub_100006AE0(v17, &qword_1000A9F78);
      a1 = v62;
      goto LABEL_19;
    }
    __break(1u);
    sub_1000881C0();
    uint64_t v60 = (void *)sub_100087870();
    sub_100087320();

LABEL_18:
    sub_1000874E0();
    sub_100006B3C((uint64_t)v14, (uint64_t)v16, &qword_1000A9F58);
    uint64_t v45 = v73;
    uint64_t v46 = &v16[*(int *)(v73 + 36)];
    long long v47 = v83;
    *((_OWORD *)v46 + 4) = v82;
    *((_OWORD *)v46 + 5) = v47;
    *((_OWORD *)v46 + 6) = v84;
    long long v48 = v79;
    *(_OWORD *)uint64_t v46 = v78;
    *((_OWORD *)v46 + 1) = v48;
    long long v49 = v81;
    *((_OWORD *)v46 + 2) = v80;
    *((_OWORD *)v46 + 3) = v49;
    sub_100006AE0((uint64_t)v14, &qword_1000A9F58);
    uint64_t v23 = (int *)sub_10004F224();
    uint64_t v50 = v64;
    sub_100087AD0();
    sub_100006AE0((uint64_t)v16, &qword_1000A9F60);
    uint64_t v51 = v65;
    uint64_t v52 = v50;
    uint64_t v28 = (char *)v74;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v65, v52, v74);
    int v25 = v72;
    (*(void (**)(char *, char *, char *))(v17 + 16))(v72, v51, v28);
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = (uint64_t *)sub_10004F2C4();
    uint64_t v76 = v45;
    os_log_type_t v77 = v23;
    swift_getOpaqueTypeConformance2();
    a2 = (uint64_t)v70;
    sub_1000877E0();
    uint64_t v53 = *(void (**)(char *, char *))(v17 + 8);
    v17 += 8;
    v53(v51, v28);
LABEL_19:
    if (!__OFSUB__(v75, 1)) {
      break;
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1000883C0();
    swift_bridgeObjectRelease();
  }
  BOOL v54 = v75 - 1 <= a1;
  uint64_t v55 = v67;
  sub_100006B3C(a2, v67, &qword_1000A9F80);
  uint64_t v56 = v68;
  *uint64_t v68 = 0;
  *((unsigned char *)v56 + 8) = 0;
  *((unsigned char *)v56 + 9) = v66 ^ 1;
  uint64_t v57 = sub_100004FB4(&qword_1000A9FC8);
  sub_100006B3C(v55, (uint64_t)v56 + *(int *)(v57 + 48), &qword_1000A9F80);
  uint64_t v58 = (char *)v56 + *(int *)(v57 + 64);
  *(void *)uint64_t v58 = 0;
  v58[8] = 0;
  v58[9] = v54;
  sub_100006AE0(a2, &qword_1000A9F80);
  return sub_100006AE0(v55, &qword_1000A9F80);
}

uint64_t sub_10004C0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, uint64_t a4@<D1>, uint64_t a5@<D2>)
{
  uint64_t v6 = v5;
  uint64_t v48 = a2;
  uint64_t v49 = sub_100087700();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v46 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v43 = sub_100087820();
  uint64_t v12 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v14 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_100004FB4(&qword_1000A9FC0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (uint64_t *)&v41[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_100004FB4(&qword_1000A9FA8);
  __chkstk_darwin(v18);
  uint64_t v20 = &v41[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = sub_100004FB4(&qword_1000A9FD0);
  uint64_t v21 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v23 = &v41[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = sub_100004FB4(&qword_1000A9F78);
  __chkstk_darwin(v42);
  int v25 = &v41[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v17 = sub_100087D80();
  v17[1] = v26;
  uint64_t v27 = (uint64_t)v17 + *(int *)(sub_100004FB4(&qword_1000A9FD8) + 44);
  uint64_t v45 = a1;
  sub_10004C66C(a1, v6, v27, a3, a4, a5);
  sub_100087D90();
  sub_1000874E0();
  sub_100006B3C((uint64_t)v17, (uint64_t)v20, &qword_1000A9FC0);
  uint64_t v28 = &v20[*(int *)(v18 + 36)];
  long long v29 = v57;
  v28[4] = v56;
  v28[5] = v29;
  v28[6] = v58;
  long long v30 = v53;
  *uint64_t v28 = v52;
  v28[1] = v30;
  long long v31 = v55;
  void v28[2] = v54;
  v28[3] = v31;
  sub_100006AE0((uint64_t)v17, &qword_1000A9FC0);
  sub_100087800();
  unint64_t v32 = sub_10004F3A4();
  sub_100087B40();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v43);
  sub_100006AE0((uint64_t)v20, &qword_1000A9FA8);
  unint64_t v33 = *(void *)(v45 + 48);
  uint64_t v50 = *(void *)(v45 + 40);
  unint64_t v51 = v33;
  sub_1000068F8();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_100087A70();
  uint64_t v36 = v35;
  LOBYTE(v12) = v37 & 1;
  uint64_t v50 = v18;
  unint64_t v51 = v32;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v44;
  sub_100087AE0();
  sub_100006AD0(v34, v36, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v23, v38);
  uint64_t v39 = v46;
  sub_1000876F0();
  sub_100087480();
  (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v39, v49);
  return sub_100006AE0((uint64_t)v25, &qword_1000A9F78);
}

uint64_t sub_10004C66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, uint64_t a5@<D1>, uint64_t a6@<D2>)
{
  uint64_t v107 = a3;
  uint64_t v11 = sub_100004FB4(&qword_1000A9FE0);
  __chkstk_darwin(v11 - 8);
  uint64_t v106 = (uint64_t)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100087EC0();
  uint64_t v98 = *(void *)(v13 - 8);
  uint64_t v99 = v13;
  __chkstk_darwin(v13);
  uint64_t v97 = (uint64_t)v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100087170();
  __chkstk_darwin(v15 - 8);
  uint64_t v100 = (uint64_t)v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004FB4(&qword_1000A9FE8);
  uint64_t v104 = *(void *)(v17 - 8);
  uint64_t v105 = v17;
  __chkstk_darwin(v17);
  os_log_type_t v103 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v101 = (char *)v82 - v20;
  uint64_t v21 = sub_100004FB4(&qword_1000A96F8);
  __chkstk_darwin(v21 - 8);
  uint64_t v93 = (char *)v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100087C50();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v24 = (char *)v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100004FB4(&qword_1000A9700);
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100004FB4(&qword_1000A9FF0);
  __chkstk_darwin(v87);
  uint64_t v27 = (char *)v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100004FB4(&qword_1000A9FF8);
  __chkstk_darwin(v86);
  uint64_t v91 = (uint64_t)v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100004FB4(&qword_1000AA000);
  uint64_t v95 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v88 = (uint64_t)v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100087E60();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  char v37 = (char *)v82 - v36;
  uint64_t v38 = sub_100004FB4(&qword_1000AA008);
  __chkstk_darwin(v38 - 8);
  uint64_t v96 = (uint64_t)v82 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)v82 - v41;
  uint64_t v102 = a1;
  uint64_t v43 = (void *)sub_10005C1C4(0x6C616D726F6ELL, 0xE600000000000000);
  if (v43)
  {
    id v94 = v43;
    v82[1] = type metadata accessor for CPAppGridView();
    uint64_t v83 = a2;
    sub_1000171F8((uint64_t)v37);
    sub_100087E50();
    char v44 = sub_100087E40();
    uint64_t v45 = *(void (**)(char *, uint64_t))(v32 + 8);
    v45(v34, v31);
    v45(v37, v31);
    uint64_t v46 = 1;
    uint64_t v47 = v29;
    if (v44)
    {
      id v48 = v94;
      sub_100087C30();
      uint64_t v49 = v84;
      uint64_t v50 = v85;
      (*(void (**)(char *, void, uint64_t))(v84 + 104))(v24, enum case for Image.ResizingMode.stretch(_:), v85);
      sub_100087CB0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v50);
      uint64_t v51 = (uint64_t)v93;
      sub_100087E90();
      uint64_t v52 = sub_100087EA0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 0, 1, v52);
      long long v53 = v89;
      sub_100087CA0();
      swift_release();
      sub_100006AE0(v51, &qword_1000A96F8);
      uint64_t v54 = v90;
      uint64_t v55 = v92;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v27, v53, v92);
      long long v56 = &v27[*(int *)(v87 + 36)];
      *(void *)long long v56 = 0;
      *((_WORD *)v56 + 4) = 1;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
      uint64_t v57 = v91;
      sub_100006B3C((uint64_t)v27, v91, &qword_1000A9FF0);
      *(double *)(v57 + *(int *)(v86 + 36)) = a4;
      sub_100006AE0((uint64_t)v27, &qword_1000A9FF0);
      sub_100087D90();
      sub_100087400();
      uint64_t v58 = v88;
      sub_100006B3C(v57, v88, &qword_1000A9FF8);
      uint64_t v59 = (_OWORD *)(v58 + *(int *)(v47 + 36));
      long long v60 = v109;
      _OWORD *v59 = v108;
      v59[1] = v60;
      v59[2] = v110;
      sub_100006AE0(v57, &qword_1000A9FF8);
      sub_100006C4C(v58, (uint64_t)v42, &qword_1000AA000);
      uint64_t v46 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56))(v42, v46, 1, v47);
    uint64_t v61 = v83;
    uint64_t v62 = v97;
    sub_100016FB8(v97);
    uint64_t v63 = v102;
    sub_10005BE90(0xD000000000000015, 0x800000010008B6C0, v62, v100);
    uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8))(v62, v99);
    __chkstk_darwin(v64);
    uint64_t v65 = (uint64_t)v42;
    v82[0] = (uint64_t)v42;
    id v66 = v94;
    v82[-6] = v61;
    v82[-5] = (uint64_t)v66;
    *(double *)&v82[-4] = a4;
    v82[-3] = a5;
    v82[-2] = v63;
    v82[-1] = a6;
    sub_100004FB4(&qword_1000AA018);
    sub_100006A8C(&qword_1000AA020, &qword_1000AA018);
    uint64_t v67 = v101;
    sub_100087A20();
    uint64_t v68 = v96;
    sub_100006B3C(v65, v96, &qword_1000AA008);
    uint64_t v70 = v103;
    uint64_t v69 = v104;
    uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
    uint64_t v72 = v105;
    v71(v103, v67, v105);
    uint64_t v73 = v106;
    sub_100006B3C(v68, v106, &qword_1000AA008);
    uint64_t v74 = sub_100004FB4(&qword_1000AA028);
    v71((char *)(v73 + *(int *)(v74 + 48)), v70, v72);

    uint64_t v75 = *(void (**)(char *, uint64_t))(v69 + 8);
    v75(v67, v72);
    sub_100006AE0(v82[0], &qword_1000AA008);
    v75(v70, v72);
    sub_100006AE0(v68, &qword_1000AA008);
    uint64_t v76 = sub_100004FB4(&qword_1000AA010);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v73, 0, 1, v76);
    return sub_100006C4C(v73, v107, &qword_1000A9FE0);
  }
  else
  {
    uint64_t v78 = sub_100004FB4(&qword_1000AA010);
    long long v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56);
    uint64_t v80 = v78;
    uint64_t v81 = v107;
    return v79(v81, 1, 1, v80);
  }
}

void *sub_10004D1D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D2>)
{
  uint64_t v12 = sub_100087720();
  sub_10004D294(a1, a2, a3, (uint64_t)v14, a5, a6);
  memcpy(&__src[7], v14, 0x110uLL);
  *(void *)a4 = v12;
  *(void *)(a4 + 8) = 0x4020000000000000;
  *(unsigned char *)(a4 + 16) = 0;
  return memcpy((void *)(a4 + 17), __src, 0x117uLL);
}

uint64_t sub_10004D294@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D2>)
{
  uint64_t v69 = sub_1000879B0();
  uint64_t v66 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100087EC0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D934(a2, &v92, a5);
  uint64_t v80 = *((void *)&v92 + 1);
  uint64_t v81 = v92;
  uint64_t v78 = *((void *)&v93 + 1);
  uint64_t v79 = v93;
  int v77 = v94;
  sub_100087D90();
  sub_100087400();
  uint64_t v75 = v106;
  uint64_t v76 = v104;
  int v71 = v107;
  int v72 = v105;
  uint64_t v73 = v109;
  uint64_t v74 = v108;
  uint64_t v18 = *(void *)(a3 + 40);
  uint64_t v19 = *(void *)(a3 + 48);
  *(void *)&long long v92 = v18;
  *((void *)&v92 + 1) = v19;
  sub_1000068F8();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_100087A70();
  uint64_t v67 = v21;
  uint64_t v68 = v22;
  char v24 = v23;
  type metadata accessor for CPAppGridView();
  uint64_t v70 = a1;
  sub_100016FB8((uint64_t)v17);
  uint64_t v65 = v15;
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v25 == enum case for WidgetFamily.systemSmall(_:)
    || v25 == enum case for WidgetFamily.systemMedium(_:)
    || v25 == enum case for WidgetFamily.systemLarge(_:))
  {
    sub_1000879F0();
  }
  else
  {
    int v28 = v25;
    if (v25 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      sub_100087A00();
    }
    else
    {
      char v63 = v24;
      int v64 = enum case for WidgetFamily.accessoryCircular(_:);
      sub_1000879F0();
      if (v28 == v64)
      {
        char v24 = v63;
      }
      else
      {
        char v24 = v63;
        if (v28 != enum case for WidgetFamily.accessoryRectangular(_:)
          && v28 != enum case for WidgetFamily.accessoryInline(_:))
        {
          (*(void (**)(char *, uint64_t))(v65 + 8))(v17, v14);
        }
      }
    }
  }
  char v29 = v24 & 1;
  uint64_t v30 = v66;
  uint64_t v31 = v69;
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v13, enum case for Font.Leading.tight(_:), v69);
  sub_1000879E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
  uint64_t v32 = v20;
  uint64_t v33 = v67;
  uint64_t v34 = sub_100087A50();
  uint64_t v36 = v35;
  char v38 = v37;
  uint64_t v66 = v39;
  swift_release();
  sub_100006AD0(v32, v33, v29);
  swift_bridgeObjectRelease();
  sub_10004FFE0();
  uint64_t v40 = sub_100087A40();
  uint64_t v69 = v41;
  uint64_t v70 = v40;
  LOBYTE(v30) = v42;
  uint64_t v44 = v43;
  swift_release();
  LOBYTE(v30) = v30 & 1;
  sub_100006AD0(v34, v36, v38 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = swift_getKeyPath();
  uint64_t v110 = v40;
  uint64_t v47 = v69;
  uint64_t v111 = v69;
  char v112 = v30;
  uint64_t v113 = v44;
  uint64_t v114 = KeyPath;
  char v115 = 1;
  uint64_t v116 = v46;
  uint64_t v117 = 1;
  char v118 = 0;
  sub_100087D90();
  sub_100077950(0.0, 0, 0.0, 1, a6, 0, 0.0, 1, (uint64_t)&v92, 0.0, 1, 0.0, 1);
  sub_100006AD0(v70, v47, v30);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v90[8] = v100;
  v90[9] = v101;
  v90[10] = v102;
  long long v48 = v96;
  v90[4] = v96;
  v90[5] = v97;
  v90[6] = v98;
  v90[7] = v99;
  long long v49 = v92;
  v90[0] = v92;
  v90[1] = v93;
  v90[2] = v94;
  v90[3] = v95;
  long long v50 = v101;
  v82[8] = v100;
  v82[9] = v101;
  v82[10] = v102;
  long long v51 = v97;
  long long v52 = v98;
  v82[4] = v96;
  v82[5] = v97;
  long long v53 = v99;
  v82[6] = v98;
  v82[7] = v99;
  long long v54 = v93;
  long long v55 = v94;
  v82[0] = v92;
  v82[1] = v93;
  long long v56 = v95;
  uint64_t v82[2] = v94;
  v82[3] = v95;
  *(_OWORD *)(a4 + 216) = v100;
  *(_OWORD *)(a4 + 232) = v50;
  *(_OWORD *)(a4 + 248) = v102;
  *(_OWORD *)(a4 + 152) = v48;
  *(_OWORD *)(a4 + 168) = v51;
  *(_OWORD *)(a4 + 184) = v52;
  *(_OWORD *)(a4 + 200) = v53;
  *(_OWORD *)(a4 + 88) = v49;
  *(_OWORD *)(a4 + 104) = v54;
  *(_OWORD *)(a4 + 120) = v55;
  uint64_t v91 = v103;
  uint64_t v83 = v103;
  LOBYTE(v30) = v77;
  char v89 = v77;
  char v87 = v72;
  char v85 = v71;
  *(void *)(a4 + 264) = v103;
  *(_OWORD *)(a4 + 136) = v56;
  *(_DWORD *)(a4 + 33) = *(_DWORD *)v88;
  *(_DWORD *)(a4 + 36) = *(_DWORD *)&v88[3];
  char v57 = v87;
  *(_DWORD *)(a4 + 49) = *(_DWORD *)v86;
  *(_DWORD *)(a4 + 52) = *(_DWORD *)&v86[3];
  char v58 = v85;
  *(_DWORD *)(a4 + 65) = *(_DWORD *)v84;
  *(_DWORD *)(a4 + 68) = *(_DWORD *)&v84[3];
  uint64_t v59 = v80;
  *(void *)a4 = v81;
  *(void *)(a4 + 8) = v59;
  uint64_t v60 = v78;
  *(void *)(a4 + 16) = v79;
  *(void *)(a4 + 24) = v60;
  *(unsigned char *)(a4 + 32) = v30;
  *(void *)(a4 + 40) = v76;
  *(unsigned char *)(a4 + 48) = v57;
  *(void *)(a4 + 56) = v75;
  *(unsigned char *)(a4 + 64) = v58;
  uint64_t v61 = v73;
  *(void *)(a4 + 72) = v74;
  *(void *)(a4 + 80) = v61;
  j__swift_retain();
  sub_10004F46C((uint64_t)v82);
  sub_10004F4C8((uint64_t)v90);
  return j__swift_release();
}

double sub_10004D934@<D0>(void *a1@<X1>, _OWORD *a2@<X8>, double a3@<D0>)
{
  id v34 = a1;
  char v38 = a2;
  uint64_t v4 = sub_100087C50();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4);
  uint64_t v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000874A0();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = sub_100087E60();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - v16;
  type metadata accessor for CPAppGridView();
  sub_1000171F8((uint64_t)v17);
  sub_100087E50();
  char v18 = sub_100087E40();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  v19(v17, v11);
  if ((v18 & 1) == 0) {
    goto LABEL_4;
  }
  sub_100017524((uint64_t)v10);
  sub_10004F734(&qword_1000A9728, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  uint64_t v20 = v32;
  sub_100088280();
  sub_10004F734(&qword_1000A9730, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v21 = sub_100087FE0();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v33 + 8);
  v22(v20, v6);
  v22(v10, v6);
  if (v21)
  {
    uint64_t v39 = sub_100087BB0();
    long long v40 = 0uLL;
    double v41 = 0.0;
    char v42 = 0;
  }
  else
  {
LABEL_4:
    id v23 = v34;
    sub_100087C30();
    int v25 = v35;
    uint64_t v24 = v36;
    uint64_t v26 = v37;
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for Image.ResizingMode.stretch(_:), v37);
    uint64_t v27 = sub_100087CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    uint64_t v39 = v27;
    long long v40 = xmmword_100089F50;
    double v41 = a3;
    char v42 = 1;
  }
  sub_100004FB4(&qword_1000AA030);
  sub_10004F528();
  sub_1000877E0();
  double result = *(double *)&v43;
  long long v29 = v44;
  char v30 = v45;
  uint64_t v31 = v38;
  *char v38 = v43;
  v31[1] = v29;
  *((unsigned char *)v31 + 32) = v30;
  return result;
}

uint64_t sub_10004DD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D2>)
{
  uint64_t v79 = a2;
  uint64_t v69 = sub_1000879B0();
  uint64_t v77 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v76 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100087EC0();
  uint64_t v80 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v75 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000874D0();
  __chkstk_darwin(v9 - 8);
  int v71 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100087DA0();
  uint64_t v11 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FB4(&qword_1000AA058);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = (char *)(sub_100004FB4(&qword_1000AA060) - 8);
  __chkstk_darwin(v78);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100004FB4(&qword_1000AA068) - 8;
  __chkstk_darwin(v72);
  char v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v81 = (uint64_t)&v69 - v23;
  uint64_t v73 = a1;
  uint64_t v24 = sub_10004A0C4();
  sub_10004A370((uint64_t)v13);
  uint64_t v25 = v70;
  uint64_t v26 = (uint64_t)v71;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v71, v13, v70);
  sub_10004F66C(v26, (uint64_t)&v17[*(int *)(v15 + 44)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v17 = v24;
  *((_WORD *)v17 + 4) = 256;
  swift_retain();
  sub_10004F6D4(v26, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v25);
  swift_release();
  sub_100087D90();
  sub_100087400();
  sub_100006B3C((uint64_t)v17, (uint64_t)v19, &qword_1000AA058);
  uint64_t v27 = &v19[*((int *)v78 + 11)];
  long long v28 = v99;
  *(_OWORD *)uint64_t v27 = v98;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v100;
  sub_100006AE0((uint64_t)v17, &qword_1000AA058);
  sub_100006B3C((uint64_t)v19, (uint64_t)v21, &qword_1000AA060);
  *(double *)&v21[*(int *)(v72 + 44)] = a3;
  sub_100006AE0((uint64_t)v19, &qword_1000AA060);
  uint64_t v78 = v21;
  uint64_t v29 = (uint64_t)v21;
  uint64_t v30 = v74;
  sub_100006C4C(v29, v81, &qword_1000AA068);
  sub_1000876C0();
  uint64_t v31 = sub_100087A60();
  uint64_t v33 = v32;
  char v35 = v34;
  type metadata accessor for CPAppGridView();
  uint64_t v36 = v75;
  sub_100016FB8(v75);
  uint64_t v37 = v36;
  int v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v80 + 88))(v36, v30);
  if (v38 == enum case for WidgetFamily.systemSmall(_:)
    || (int v39 = v38, v38 == enum case for WidgetFamily.systemMedium(_:))
    || v38 == enum case for WidgetFamily.systemLarge(_:))
  {
    sub_1000879F0();
  }
  else if (v38 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    sub_100087A00();
  }
  else
  {
    int v68 = enum case for WidgetFamily.accessoryCircular(_:);
    sub_1000879F0();
    if (v39 != v68
      && v39 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v39 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v37, v30);
    }
  }
  uint64_t v40 = v69;
  char v41 = v35 & 1;
  long long v43 = v76;
  uint64_t v42 = v77;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, enum case for Font.Leading.tight(_:), v69);
  sub_1000879E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v40);
  uint64_t v44 = sub_100087A50();
  uint64_t v46 = v45;
  char v48 = v47;
  uint64_t v50 = v49;
  swift_release();
  sub_100006AD0(v31, v33, v41);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = swift_getKeyPath();
  uint64_t v101 = v44;
  uint64_t v102 = v46;
  char v103 = v48 & 1;
  uint64_t v104 = v50;
  uint64_t v105 = KeyPath;
  char v106 = 1;
  uint64_t v107 = v52;
  uint64_t v108 = 1;
  char v109 = 0;
  sub_100087D90();
  sub_100077950(0.0, 0, 0.0, 1, a4, 0, 0.0, 1, (uint64_t)&v86, 0.0, 1, 0.0, 1);
  sub_100006AD0(v44, v46, v48 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v53 = v81;
  uint64_t v54 = (uint64_t)v78;
  sub_100006B3C(v81, (uint64_t)v78, &qword_1000AA068);
  uint64_t v55 = v79;
  sub_100006B3C(v54, v79, &qword_1000AA068);
  uint64_t v56 = *(int *)(sub_100004FB4(&qword_1000AA070) + 48);
  long long v57 = v93;
  v82[8] = v94;
  v82[9] = v95;
  long long v58 = v95;
  v82[10] = v96;
  long long v59 = v90;
  long long v60 = v89;
  v82[4] = v90;
  v82[5] = v91;
  long long v61 = v91;
  long long v62 = v92;
  v82[6] = v92;
  v82[7] = v93;
  v82[0] = v86;
  v82[1] = v87;
  long long v64 = v86;
  long long v63 = v87;
  long long v65 = v88;
  uint64_t v82[2] = v88;
  v82[3] = v89;
  uint64_t v66 = v55 + v56;
  *(_OWORD *)(v66 + 128) = v94;
  *(_OWORD *)(v66 + 144) = v58;
  *(_OWORD *)(v66 + 160) = v96;
  *(_OWORD *)(v66 + 64) = v59;
  *(_OWORD *)(v66 + 80) = v61;
  *(_OWORD *)(v66 + 96) = v62;
  *(_OWORD *)(v66 + 112) = v57;
  *(_OWORD *)uint64_t v66 = v64;
  *(_OWORD *)(v66 + 16) = v63;
  uint64_t v83 = v97;
  *(void *)(v66 + 176) = v97;
  *(_OWORD *)(v66 + 32) = v65;
  *(_OWORD *)(v66 + 48) = v60;
  sub_10004F46C((uint64_t)v82);
  sub_100006AE0(v53, &qword_1000AA068);
  v84[8] = v94;
  v84[9] = v95;
  v84[10] = v96;
  uint64_t v85 = v97;
  v84[4] = v90;
  v84[5] = v91;
  v84[6] = v92;
  unsigned char v84[7] = v93;
  v84[0] = v86;
  v84[1] = v87;
  v84[2] = v88;
  v84[3] = v89;
  sub_10004F4C8((uint64_t)v84);
  return sub_100006AE0(v54, &qword_1000AA068);
}

uint64_t sub_10004E5C8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_10004F66C(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_10004E9B4((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_10004EA18;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_10004E6C8()
{
  uint64_t v1 = (int *)type metadata accessor for CPAppGridView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[5];
  uint64_t v8 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v3 + v1[9];
  sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000874A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v5 + v1[10];
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v5 + v1[11];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v5 + v1[12];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10004E9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CPAppGridView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004EA18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for CPAppGridView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10004A8B4(v4, a1);
}

uint64_t sub_10004EA98()
{
  uint64_t v1 = (int *)type metadata accessor for CPAppGridView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[5];
  uint64_t v8 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v3 + v1[9];
  sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000874A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v5 + v1[10];
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v5 + v1[11];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v5 + v1[12];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_10004ED98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CPAppGridView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  double v8 = *(double *)(v2 + v7);
  double v9 = *(double *)(v2 + v7 + 8);
  double v10 = *(double *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_10004B2E0(a1, v2 + v6, a2, v8, v9, v10);
}

uint64_t sub_10004EE54()
{
  uint64_t v1 = (int *)type metadata accessor for CPAppGridView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[5];
  uint64_t v8 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v3 + v1[9];
  sub_100004FB4(&qword_1000A88D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000874A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v5 + v1[10];
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v5 + v1[11];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v5 + v1[12];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, ((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_10004F15C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CPAppGridView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  double v9 = *(double *)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + v7 + 8);
  uint64_t v11 = *(void *)(v2 + v8);
  uint64_t v12 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_10004B764(a1, v2 + v6, v12, a2, v9, v10, v11);
}

unint64_t sub_10004F224()
{
  unint64_t result = qword_1000A9F90;
  if (!qword_1000A9F90)
  {
    sub_100004FF8(&qword_1000A9F60);
    sub_100006A8C(&qword_1000A9F98, &qword_1000A9F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9F90);
  }
  return result;
}

unint64_t sub_10004F2C4()
{
  unint64_t result = qword_1000A9FA0;
  if (!qword_1000A9FA0)
  {
    sub_100004FF8(&qword_1000A9F78);
    sub_100004FF8(&qword_1000A9FA8);
    sub_10004F3A4();
    swift_getOpaqueTypeConformance2();
    sub_10004F734(&qword_1000A8988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9FA0);
  }
  return result;
}

unint64_t sub_10004F3A4()
{
  unint64_t result = qword_1000A9FB0;
  if (!qword_1000A9FB0)
  {
    sub_100004FF8(&qword_1000A9FA8);
    sub_100006A8C(&qword_1000A9FB8, &qword_1000A9FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9FB0);
  }
  return result;
}

void *sub_10004F444@<X0>(uint64_t a1@<X8>)
{
  return sub_10004D1D4(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 48), a1, *(double *)(v1 + 32), *(double *)(v1 + 56));
}

uint64_t sub_10004F46C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004F4C8(uint64_t a1)
{
  return a1;
}

unint64_t sub_10004F528()
{
  unint64_t result = qword_1000AA038;
  if (!qword_1000AA038)
  {
    sub_100004FF8(&qword_1000AA030);
    sub_10004F5A4();
    sub_10004F618();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA038);
  }
  return result;
}

unint64_t sub_10004F5A4()
{
  unint64_t result = qword_1000AA040;
  if (!qword_1000AA040)
  {
    sub_100004FF8(&qword_1000AA048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA040);
  }
  return result;
}

unint64_t sub_10004F618()
{
  unint64_t result = qword_1000AA050;
  if (!qword_1000AA050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA050);
  }
  return result;
}

uint64_t sub_10004F66C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004F6D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10004F734(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004F77C()
{
  return sub_100006A8C(&qword_1000AA078, &qword_1000AA080);
}

uint64_t sub_10004F7B8()
{
  return swift_bridgeObjectRelease();
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_10004F864()
{
  unint64_t result = qword_1000AA088;
  if (!qword_1000AA088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA088);
  }
  return result;
}

ValueMetadata *type metadata accessor for GameCenterWidgets()
{
  return &type metadata for GameCenterWidgets;
}

uint64_t sub_10004F8C8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10004F8E8()
{
  unint64_t result = qword_1000AA098;
  if (!qword_1000AA098)
  {
    sub_100004FF8(&qword_1000AA0A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA098);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIconMask()
{
  return &type metadata for AppIconMask;
}

uint64_t sub_10004F954()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004F970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v43 = a1;
  uint64_t v46 = a2;
  uint64_t v44 = sub_100004FB4(&qword_1000AA0A8);
  __chkstk_darwin(v44);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FB4(&qword_1000AA0B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000874C0();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (double *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100004FB4(&qword_1000AA0B8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v17 = enum case for RoundedCornerStyle.continuous(_:);
  double v18 = a3 / 4.7;
  uint64_t v19 = sub_1000876E0();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);
  v20(v16, v17, v19);
  *uint64_t v11 = v18;
  v11[1] = v18;
  uint64_t v21 = (uint64_t)&v15[*(int *)(v13 + 44)];
  sub_10004FDB8((uint64_t)v11, v21);
  *(_WORD *)(v21 + *(int *)(sub_100004FB4(&qword_1000AA0C0) + 36)) = 256;
  uint64_t v22 = sub_100004FB4(&qword_1000AA0C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v15, v43, v22);
  sub_10004FE1C((uint64_t)v11);
  v20((char *)v11 + *(int *)(v9 + 28), v17, v19);
  *uint64_t v11 = v18;
  v11[1] = v18;
  LODWORD(v9) = sub_1000877F0();
  sub_1000873A0();
  sub_10004FDB8((uint64_t)v11, (uint64_t)v5);
  double v23 = *(double *)&v47 * 0.5;
  uint64_t v24 = (uint64_t)&v5[*(int *)(v44 + 68)];
  sub_10004FDB8((uint64_t)v11, v24);
  *(double *)(v24 + *(int *)(sub_1000874B0() + 20)) = v23;
  uint64_t v25 = v24 + *(int *)(sub_100004FB4(&qword_1000AA0D0) + 36);
  long long v26 = v48;
  *(_OWORD *)uint64_t v25 = v47;
  *(_OWORD *)(v25 + 16) = v26;
  *(void *)(v25 + 32) = v49;
  uint64_t v27 = sub_100004FB4(&qword_1000AA0D8);
  long long v28 = (_DWORD *)(v24 + *(int *)(v27 + 52));
  *long long v28 = v9;
  v28[1] = 1034147594;
  *(_WORD *)(v24 + *(int *)(v27 + 56)) = 256;
  uint64_t v29 = sub_100087D90();
  uint64_t v31 = v30;
  uint64_t v32 = (uint64_t *)(v24 + *(int *)(sub_100004FB4(&qword_1000AA0E0) + 36));
  *uint64_t v32 = v29;
  v32[1] = v31;
  sub_10004FE1C((uint64_t)v11);
  sub_100006A8C(&qword_1000AA0E8, &qword_1000AA0A8);
  uint64_t v33 = (uint64_t)v45;
  sub_100087B20();
  sub_100006AE0((uint64_t)v5, &qword_1000AA0A8);
  uint64_t v34 = sub_100087D90();
  uint64_t v36 = v35;
  uint64_t v37 = sub_100004FB4(&qword_1000AA0F0);
  uint64_t v38 = v46;
  uint64_t v39 = v46 + *(int *)(v37 + 36);
  sub_100006B3C(v33, v39, &qword_1000AA0B0);
  uint64_t v40 = (uint64_t *)(v39 + *(int *)(sub_100004FB4(&qword_1000AA0F8) + 36));
  *uint64_t v40 = v34;
  v40[1] = v36;
  sub_100006B3C((uint64_t)v15, v38, &qword_1000AA0B8);
  sub_100006AE0(v33, &qword_1000AA0B0);
  return sub_100006AE0((uint64_t)v15, &qword_1000AA0B8);
}

uint64_t sub_10004FDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004F970(a1, a2, *v2);
}

uint64_t sub_10004FDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000874C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004FE1C(uint64_t a1)
{
  uint64_t v2 = sub_1000874C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10004FE7C()
{
  unint64_t result = qword_1000AA100;
  if (!qword_1000AA100)
  {
    sub_100004FF8(&qword_1000AA0F0);
    sub_10004FF1C();
    sub_100006A8C(&qword_1000AA120, &qword_1000AA0F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA100);
  }
  return result;
}

unint64_t sub_10004FF1C()
{
  unint64_t result = qword_1000AA108;
  if (!qword_1000AA108)
  {
    sub_100004FF8(&qword_1000AA0B8);
    sub_100006A8C(&qword_1000AA110, &qword_1000AA0C8);
    sub_100006A8C(&qword_1000AA118, &qword_1000AA0C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA108);
  }
  return result;
}

uint64_t sub_10004FFE0()
{
  if (!sub_100007644())
  {
    return sub_100087BE0();
  }
  unint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CPTimelineEntry() + 20));
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    if (result) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return sub_100087BC0();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_4:
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_100088340();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = *(void *)(v1 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor);
  if (!v5)
  {
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor);
    if (v6) {
      id v7 = v6;
    }
    else {
      [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.431372549 blue:0.62745098 alpha:1.0];
    }
  }
  id v8 = v5;
  sub_100087B80();
  swift_release();
  uint64_t v9 = sub_100087BC0();
  swift_release();
  return v9;
}

uint64_t sub_10005017C()
{
  unint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CPTimelineEntry() + 20));
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    sub_100087BC0();
    uint64_t v9 = sub_100087BD0();
LABEL_13:
    swift_release();
    return v9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000883C0();
  if (!result) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_100088340();
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v4 = *(void *)(v1 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor);
    if (!v5)
    {
      uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor);
      if (v6) {
        id v7 = v6;
      }
      else {
        [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.431372549 blue:0.62745098 alpha:1.0];
      }
    }
    id v8 = v5;
    sub_100087B80();
    swift_release();
    sub_100087BC0();
    uint64_t v9 = sub_100087BD0();
    swift_release();
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1000502FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    double v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = v19[8];
    sub_100005554(*(void *)v19, v21);
    *(void *)double v18 = v20;
    v18[8] = v21;
    uint64_t v22 = a3[8];
    double v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_100087220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    long long v26 = (int *)type metadata accessor for CPTimelineEntry();
    *(void *)&v23[v26[5]] = *(void *)&v24[v26[5]];
    v23[v26[6]] = v24[v26[6]];
    v23[v26[7]] = v24[v26[7]];
    v23[v26[8]] = v24[v26[8]];
    v23[v26[9]] = v24[v26[9]];
    uint64_t v27 = a3[9];
    long long v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = sub_100087430();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v28, v29, v30);
    uint64_t v32 = a3[10];
    uint64_t v33 = a3[11];
    uint64_t v34 = (uint64_t *)((char *)a1 + v32);
    uint64_t v35 = (uint64_t *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = (uint64_t *)((char *)a1 + v33);
    uint64_t v38 = (uint64_t *)((char *)a2 + v33);
    uint64_t v39 = v38[1];
    void *v37 = *v38;
    v37[1] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10005068C(uint64_t a1, int *a2)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_100005720(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[9];
  uint64_t v12 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1000508C8(void *a1, void *a2, int *a3)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100087380();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_100005554(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  uint64_t v20 = a3[8];
  char v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v21[v24[5]] = *(void *)&v22[v24[5]];
  v21[v24[6]] = v22[v24[6]];
  v21[v24[7]] = v22[v24[7]];
  v21[v24[8]] = v22[v24[8]];
  v21[v24[9]] = v22[v24[9]];
  uint64_t v25 = a3[9];
  long long v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_100087430();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  v29(v26, v27, v28);
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = (void *)((char *)a1 + v30);
  uint64_t v33 = (void *)((char *)a2 + v30);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = (void *)((char *)a1 + v31);
  uint64_t v36 = (void *)((char *)a2 + v31);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100050C08(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100006AE0((uint64_t)a1 + v7, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_100006AE0((uint64_t)a1 + v11, &qword_1000A88D0);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_100005554(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = v16[8];
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  sub_100005720(v20, v21);
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  long long v26 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v23[v26[5]] = *(void *)&v24[v26[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[v26[6]] = v24[v26[6]];
  v23[v26[7]] = v24[v26[7]];
  v23[v26[8]] = v24[v26[8]];
  v23[v26[9]] = v24[v26[9]];
  uint64_t v27 = a3[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100050FB4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087E60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_100087380();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v18];
  char v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = &a1[v19];
  uint64_t v23 = &a2[v19];
  uint64_t v24 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v22[v25[5]] = *(void *)&v23[v25[5]];
  v22[v25[6]] = v23[v25[6]];
  v22[v25[7]] = v23[v25[7]];
  v22[v25[8]] = v23[v25[8]];
  v22[v25[9]] = v23[v25[9]];
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  uint64_t v30 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v30] = *(_OWORD *)&a2[v30];
  return a1;
}

char *sub_1000512C4(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100006AE0((uint64_t)&a1[v8], &qword_1000A87B0);
    uint64_t v11 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_100006AE0((uint64_t)&a1[v13], &qword_1000A88D0);
    uint64_t v16 = sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_100087380();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)v20;
  LOBYTE(v20) = v20[8];
  uint64_t v22 = *(void *)v19;
  char v23 = v19[8];
  *(void *)uint64_t v19 = v21;
  v19[8] = (char)v20;
  sub_100005720(v22, v23);
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v25[v28[5]] = *(void *)&v26[v28[5]];
  swift_bridgeObjectRelease();
  v25[v28[6]] = v26[v28[6]];
  v25[v28[7]] = v26[v28[7]];
  v25[v28[8]] = v26[v28[8]];
  v25[v28[9]] = v26[v28[9]];
  uint64_t v29 = a3[9];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[11];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v42 = *(void *)v40;
  uint64_t v41 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = v42;
  *((void *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10005164C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100051660);
}

uint64_t sub_100051660(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_100004FB4(&qword_1000A88C0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v16 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_11;
  }
  unint64_t v18 = *(void *)(a1 + a3[10] + 8);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

uint64_t sub_100051868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005187C);
}

uint64_t sub_10005187C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A87C0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100004FB4(&qword_1000A88C0);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t v17 = type metadata accessor for CPTimelineEntry();
        if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = *(void *)(v17 - 8);
          uint64_t v15 = a4[8];
        }
        else
        {
          uint64_t result = sub_100087430();
          if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
          {
            *(void *)(a1 + a4[10] + 8) = (a2 - 1);
            return result;
          }
          uint64_t v10 = result;
          uint64_t v14 = *(void *)(result - 8);
          uint64_t v15 = a4[9];
        }
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CPMessageView()
{
  uint64_t result = qword_1000AA180;
  if (!qword_1000AA180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100051ACC()
{
  sub_100051CB8(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_100051CB8(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_100051CB8(319, (unint64_t *)&unk_1000A92E0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v2 <= 0x3F)
      {
        type metadata accessor for CPTimelineEntry();
        if (v3 <= 0x3F)
        {
          sub_100087430();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_100051CB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100087390();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100051D0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100051D28()
{
  return sub_100087590();
}

uint64_t sub_100051D4C(uint64_t a1)
{
  uint64_t v2 = sub_1000874A0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_1000875A0();
}

double sub_100051E14()
{
  uint64_t v0 = sub_100087EC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  __n128 v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v12 - v5;
  type metadata accessor for CPMessageView();
  sub_100016FB8((uint64_t)v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for WidgetFamily.systemLarge(_:), v0);
  sub_10005B0C0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v8 = v12[0];
  uint64_t v7 = v12[1];
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  sub_100087410();
  double result = v10 * 0.5629;
  if (v7 != v8) {
    return v10;
  }
  return result;
}

uint64_t sub_100051FE8()
{
  uint64_t v0 = sub_100087EC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  __n128 v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CPMessageView();
  sub_100016FB8((uint64_t)v3);
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for WidgetFamily.systemSmall(_:)) {
    return sub_100087A00();
  }
  int v5 = v4;
  if (v4 == enum case for WidgetFamily.systemMedium(_:)) {
    return sub_100087A00();
  }
  if (v4 == enum case for WidgetFamily.systemLarge(_:) || v4 == enum case for WidgetFamily.systemExtraLarge(_:)) {
    return sub_1000879C0();
  }
  int v9 = enum case for WidgetFamily.accessoryCircular(_:);
  int v10 = enum case for WidgetFamily.accessoryRectangular(_:);
  int v11 = enum case for WidgetFamily.accessoryInline(_:);
  uint64_t v7 = sub_100087A00();
  if (v5 != v9 && v5 != v10 && v5 != v11) {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v7;
}

uint64_t sub_10005218C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_100087380();
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  __chkstk_darwin(v1);
  uint64_t v37 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v36 = (uint64_t)&v35 - v4;
  uint64_t v5 = sub_100087EC0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v35 - v14;
  sub_1000171F8((uint64_t)&v35 - v14);
  sub_100087E50();
  sub_10005B0C0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v16 = sub_100087FE0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  if ((v16 & 1) == 0)
  {
    type metadata accessor for CPMessageView();
    sub_100016FB8((uint64_t)v8);
    int v22 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
    uint64_t v23 = v40;
    if (v22 == enum case for WidgetFamily.systemSmall(_:)) {
      goto LABEL_4;
    }
    if (v22 != enum case for WidgetFamily.systemMedium(_:))
    {
      if (v22 == enum case for WidgetFamily.systemLarge(_:) || v22 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
LABEL_4:
        uint64_t v24 = v36;
        sub_1000174E8(v36);
        uint64_t v25 = v37;
        uint64_t v26 = v38;
        uint64_t v27 = v39;
        (*(void (**)(char *, void, uint64_t))(v38 + 104))(v37, enum case for ColorScheme.dark(_:), v39);
        char v28 = sub_100087370();
        uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
        v29(v25, v27);
        v29((char *)v24, v27);
        uint64_t v19 = sub_100087DA0();
        uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);
        if (v28) {
          uint64_t v30 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
        }
        else {
          uint64_t v30 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
        }
        uint64_t v31 = *v30;
        uint64_t v21 = v23;
        return v20(v21, v31, v19);
      }
      if (v22 != enum case for WidgetFamily.accessoryCircular(_:)
        && v22 != enum case for WidgetFamily.accessoryRectangular(_:)
        && v22 != enum case for WidgetFamily.accessoryInline(_:))
      {
        uint64_t v33 = enum case for BlendMode.normal(_:);
        uint64_t v34 = sub_100087DA0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v23, v33, v34);
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    uint64_t v18 = enum case for BlendMode.normal(_:);
    uint64_t v19 = sub_100087DA0();
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);
    uint64_t v21 = v23;
    goto LABEL_8;
  }
  uint64_t v18 = enum case for BlendMode.normal(_:);
  uint64_t v19 = sub_100087DA0();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);
  uint64_t v21 = v40;
LABEL_8:
  uint64_t v31 = v18;
  return v20(v21, v31, v19);
}

uint64_t sub_100052690()
{
  uint64_t v0 = sub_100087EC0();
  uint64_t v20 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v19 - v4;
  uint64_t v6 = sub_100087E60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - v11;
  sub_1000171F8((uint64_t)&v19 - v11);
  sub_100087E50();
  char v13 = sub_100087E40();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  v14(v12, v6);
  sub_100087BE0();
  if ((v13 & 1) == 0)
  {
    type metadata accessor for CPMessageView();
    sub_100016FB8((uint64_t)v5);
    uint64_t v15 = v20;
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v2, enum case for WidgetFamily.systemMedium(_:), v0);
    sub_10005B0C0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_1000880F0();
    sub_1000880F0();
    char v16 = *(void (**)(char *, uint64_t))(v15 + 8);
    v16(v2, v0);
    v16(v5, v0);
  }
  uint64_t v17 = sub_100087BD0();
  swift_release();
  return v17;
}

uint64_t sub_100052970@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = sub_100087380();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v26 = v1;
  sub_1000171F8((uint64_t)&v26 - v14);
  sub_100087E50();
  sub_10005B0C0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v16 = sub_100087FE0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  if (v16)
  {
    uint64_t v18 = enum case for BlendMode.normal(_:);
    uint64_t v19 = sub_100087DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v27, v18, v19);
  }
  else
  {
    uint64_t v21 = v27;
    type metadata accessor for CPMessageView();
    sub_1000174E8((uint64_t)v8);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v2);
    char v22 = sub_100087370();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
    v23(v5, v2);
    v23(v8, v2);
    uint64_t v24 = sub_100087DA0();
    if (v22) {
      uint64_t v25 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    }
    else {
      uint64_t v25 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v21, *v25, v24);
  }
}

uint64_t sub_100052C94@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v283 = a1;
  v261 = a2;
  uint64_t v2 = sub_100004FB4(&qword_1000AA360);
  __chkstk_darwin(v2 - 8);
  uint64_t v262 = (uint64_t)&v211 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v265 = (uint64_t *)((char *)&v211 - v5);
  uint64_t v255 = sub_100087DA0();
  uint64_t v254 = *(void *)(v255 - 8);
  __chkstk_darwin(v255);
  uint64_t v251 = (uint64_t)&v211 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = type metadata accessor for DynamicTypeFont();
  __chkstk_darwin(v242);
  v245 = (uint64_t *)((char *)&v211 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004FB4(&qword_1000A9370);
  __chkstk_darwin(v8 - 8);
  uint64_t v239 = (uint64_t)&v211 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v241 = (char *)&v211 - v11;
  uint64_t v238 = sub_100004FB4(&qword_1000A9378);
  __chkstk_darwin(v238);
  v244 = (char *)&v211 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = sub_100004FB4(&qword_1000A9380);
  __chkstk_darwin(v243);
  uint64_t v246 = (uint64_t)&v211 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = sub_100004FB4(&qword_1000A9388);
  __chkstk_darwin(v240);
  v253 = (char *)&v211 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_100004FB4(&qword_1000AA368);
  __chkstk_darwin(v249);
  uint64_t v250 = (uint64_t)&v211 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = sub_100004FB4(&qword_1000AA370);
  __chkstk_darwin(v247);
  v213 = (char *)&v211 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = sub_100004FB4(&qword_1000AA378);
  __chkstk_darwin(v248);
  v214 = (char *)&v211 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_100004FB4(&qword_1000AA380);
  __chkstk_darwin(v215);
  uint64_t v252 = (uint64_t)&v211 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_100004FB4(&qword_1000AA388);
  uint64_t v217 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  v259 = (char *)&v211 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = sub_100004FB4(&qword_1000AA390);
  __chkstk_darwin(v258);
  uint64_t v260 = (uint64_t)&v211 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v257 = (char *)&v211 - v22;
  __chkstk_darwin(v23);
  uint64_t v273 = (uint64_t)&v211 - v24;
  uint64_t v25 = type metadata accessor for CPMessageView();
  __chkstk_darwin(v25);
  uint64_t v231 = (uint64_t)&v211 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = sub_1000879B0();
  uint64_t v277 = *(void *)(v270 - 8);
  __chkstk_darwin(v270);
  v269 = (char *)&v211 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100087EC0();
  uint64_t v280 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v212 = (uint64_t)&v211 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v237 = (uint64_t)&v211 - v31;
  __chkstk_darwin(v32);
  uint64_t v236 = (uint64_t)&v211 - v33;
  __chkstk_darwin(v34);
  v267 = (char *)&v211 - v35;
  __chkstk_darwin(v36);
  uint64_t v266 = (uint64_t)&v211 - v37;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v211 - v39;
  uint64_t v225 = sub_100004FB4(&qword_1000AA398);
  uint64_t v224 = *(void *)(v225 - 8);
  __chkstk_darwin(v225);
  v223 = (char *)&v211 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_100004FB4(&qword_1000AA3A0);
  __chkstk_darwin(v222);
  uint64_t v268 = (uint64_t)&v211 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = sub_100004FB4(&qword_1000AA3A8);
  __chkstk_darwin(v226);
  uint64_t v233 = (uint64_t)&v211 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_100004FB4(&qword_1000AA3B0);
  __chkstk_darwin(v235);
  uint64_t v234 = (uint64_t)&v211 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_100004FB4(&qword_1000AA3B8);
  uint64_t v271 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  v256 = (char *)&v211 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v232 = (char *)&v211 - v47;
  __chkstk_darwin(v48);
  v278 = (char *)&v211 - v49;
  sub_1000876C0();
  uint64_t v50 = sub_100087A60();
  uint64_t v52 = v51;
  char v54 = v53 & 1;
  sub_100087960();
  uint64_t v55 = sub_100087A30();
  uint64_t v57 = v56;
  LODWORD(v264) = v58;
  sub_100006AD0(v50, v52, v54);
  swift_bridgeObjectRelease();
  uint64_t v279 = v25;
  uint64_t v282 = v283 + *(int *)(v25 + 20);
  sub_100016FB8((uint64_t)v40);
  long long v59 = *(uint64_t (**)(uint64_t, uint64_t))(v280 + 88);
  uint64_t v275 = v280 + 88;
  v274 = v59;
  int v60 = v59((uint64_t)v40, v28);
  unsigned int v281 = enum case for WidgetFamily.systemSmall(_:);
  if (v60 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_1000879F0();
  }
  else
  {
    int v61 = v60;
    if (v60 == enum case for WidgetFamily.systemMedium(_:))
    {
      sub_100087A00();
    }
    else if (v60 == enum case for WidgetFamily.systemLarge(_:) {
           || v60 == enum case for WidgetFamily.systemExtraLarge(_:))
    }
    {
      sub_1000879C0();
    }
    else
    {
      int v62 = enum case for WidgetFamily.accessoryCircular(_:);
      sub_100087A00();
      if (v61 != v62
        && v61 != enum case for WidgetFamily.accessoryRectangular(_:)
        && v61 != enum case for WidgetFamily.accessoryInline(_:))
      {
        (*(void (**)(char *, uint64_t))(v280 + 8))(v40, v28);
      }
    }
  }
  uint64_t v63 = v277;
  long long v64 = *(void (**)(void))(v277 + 104);
  long long v65 = v269;
  unsigned int v229 = enum case for Font.Leading.tight(_:);
  uint64_t v66 = v270;
  uint64_t v230 = v277 + 104;
  v228 = (void (*)(char *, void, uint64_t))v64;
  v64(v269);
  sub_1000879E0();
  swift_release();
  uint64_t v67 = *(void (**)(char *, uint64_t))(v63 + 8);
  uint64_t v277 = v63 + 8;
  v227 = v67;
  v67(v65, v66);
  char v68 = v264 & 1;
  uint64_t v69 = sub_100087A50();
  uint64_t v71 = v70;
  char v73 = v72;
  swift_release();
  sub_100006AD0(v55, v57, v68);
  swift_bridgeObjectRelease();
  sub_10004FFE0();
  uint64_t v218 = sub_100087A40();
  uint64_t v75 = v74;
  char v77 = v76;
  uint64_t v219 = v78;
  swift_release();
  char v79 = v77 & 1;
  sub_100006AD0(v69, v71, v73 & 1);
  swift_bridgeObjectRelease();
  uint64_t v80 = v266;
  sub_100016FB8(v266);
  uint64_t v81 = v280;
  long long v82 = *(void (**)(char *, void, uint64_t))(v280 + 104);
  uint64_t v83 = v267;
  uint64_t v264 = v280 + 104;
  v221 = v82;
  v82(v267, v281, v28);
  uint64_t v84 = sub_10005B0C0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  uint64_t v220 = v84;
  sub_1000880F0();
  uint64_t v85 = v284;
  uint64_t v86 = v296;
  long long v87 = *(void (**)(char *, uint64_t))(v81 + 8);
  v87(v83, v28);
  uint64_t v276 = v28;
  uint64_t v280 = v81 + 8;
  v263 = (void (*)(uint64_t, uint64_t))v87;
  v87((char *)v80, v28);
  if (v85 == v86) {
    uint64_t v88 = 2;
  }
  else {
    uint64_t v88 = 1;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v90 = swift_getKeyPath();
  uint64_t v91 = swift_getKeyPath();
  uint64_t v92 = v218;
  uint64_t v284 = v218;
  uint64_t v285 = v75;
  char v286 = v79;
  uint64_t v287 = v219;
  uint64_t v288 = KeyPath;
  uint64_t v289 = v88;
  char v290 = 0;
  __int16 v291 = 256;
  uint64_t v292 = v90;
  char v293 = 1;
  uint64_t v294 = v91;
  uint64_t v295 = 0x3FE8000000000000;
  sub_100004FB4(&qword_1000AA3C0);
  sub_10005A578();
  long long v93 = v223;
  sub_100087AD0();
  sub_100006AD0(v92, v75, v79);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100087BA0();
  uint64_t v94 = sub_100087BD0();
  swift_release();
  uint64_t v95 = v224;
  uint64_t v96 = v268;
  uint64_t v97 = v225;
  (*(void (**)(uint64_t, char *, uint64_t))(v224 + 16))(v268, v93, v225);
  uint64_t v98 = v96 + *(int *)(v222 + 36);
  *(void *)uint64_t v98 = v94;
  *(_OWORD *)(v98 + 8) = xmmword_10008A120;
  *(void *)(v98 + 24) = 0x3FF0000000000000;
  (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v97);
  LOBYTE(v94) = sub_1000878D0();
  int v99 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v94) {
    int v99 = sub_1000878C0();
  }
  LODWORD(v225) = v99;
  uint64_t v100 = v266;
  sub_100016FB8(v266);
  uint64_t v101 = v267;
  uint64_t v102 = v276;
  char v103 = v221;
  v221(v267, v281, v276);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v104 = v284;
  uint64_t v105 = v296;
  char v106 = v263;
  v263((uint64_t)v101, v102);
  v106(v100, v102);
  uint64_t v107 = v231;
  sub_10005A8E8(v283, v231, (uint64_t (*)(void))type metadata accessor for CPMessageView);
  if (v104 != v105)
  {
    sub_100016FB8(v100);
    v103(v101, enum case for WidgetFamily.systemLarge(_:), v102);
    sub_1000880F0();
    sub_1000880F0();
    v106((uint64_t)v101, v102);
    v106(v100, v102);
  }
  sub_10005A950(v107, (uint64_t (*)(void))type metadata accessor for CPMessageView);
  sub_100087360();
  uint64_t v109 = v108;
  uint64_t v111 = v110;
  uint64_t v113 = v112;
  uint64_t v115 = v114;
  uint64_t v116 = v268;
  uint64_t v117 = v233;
  sub_100006B3C(v268, v233, &qword_1000AA3A0);
  uint64_t v118 = v117 + *(int *)(v226 + 36);
  *(unsigned char *)uint64_t v118 = v225;
  *(void *)(v118 + 8) = v109;
  *(void *)(v118 + 16) = v111;
  *(void *)(v118 + 24) = v113;
  *(void *)(v118 + 32) = v115;
  *(unsigned char *)(v118 + 40) = 0;
  sub_100006AE0(v116, &qword_1000AA3A0);
  LOBYTE(v116) = sub_1000878A0();
  char v119 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v116) {
    char v119 = sub_1000878C0();
  }
  uint64_t v120 = v236;
  sub_100016FB8(v236);
  int v121 = v274(v120, v102);
  if (v121 != v281
    && v121 != enum case for WidgetFamily.systemMedium(_:)
    && v121 != enum case for WidgetFamily.systemLarge(_:)
    && v121 != enum case for WidgetFamily.systemExtraLarge(_:)
    && v121 != enum case for WidgetFamily.accessoryCircular(_:)
    && v121 != enum case for WidgetFamily.accessoryRectangular(_:)
    && v121 != enum case for WidgetFamily.accessoryInline(_:))
  {
    v106(v120, v102);
  }
  sub_100087360();
  uint64_t v123 = v122;
  uint64_t v125 = v124;
  uint64_t v127 = v126;
  uint64_t v129 = v128;
  uint64_t v130 = v234;
  sub_100006B3C(v117, v234, &qword_1000AA3A8);
  uint64_t v131 = v130 + *(int *)(v235 + 36);
  *(unsigned char *)uint64_t v131 = v119;
  *(void *)(v131 + 8) = v123;
  *(void *)(v131 + 16) = v125;
  *(void *)(v131 + 24) = v127;
  *(void *)(v131 + 32) = v129;
  *(unsigned char *)(v131 + 40) = 0;
  sub_100006AE0(v117, &qword_1000AA3A8);
  sub_10005A6E4(&qword_1000AA410, &qword_1000AA3B0, (void (*)(void))sub_10005A800);
  uint64_t v132 = v232;
  sub_100087A80();
  sub_100006AE0(v130, &qword_1000AA3B0);
  (*(void (**)(char *, char *, uint64_t))(v271 + 32))(v278, v132, v272);
  swift_bridgeObjectRetain();
  sub_1000876D0();
  uint64_t v133 = sub_100087A60();
  uint64_t v135 = v134;
  uint64_t v137 = v136;
  LOBYTE(v130) = v138 & 1;
  sub_100051FE8();
  uint64_t v139 = v269;
  uint64_t v140 = v270;
  v228(v269, v229, v270);
  uint64_t v268 = sub_1000879E0();
  swift_release();
  v227(v139, v140);
  uint64_t v141 = enum case for ContentSizeCategory.extraLarge(_:);
  uint64_t v142 = sub_100087710();
  uint64_t v143 = *(void *)(v142 - 8);
  uint64_t v144 = (uint64_t)v241;
  (*(void (**)(char *, uint64_t, uint64_t))(v143 + 104))(v241, v141, v142);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v143 + 56))(v144, 0, 1, v142);
  sub_100087960();
  uint64_t v146 = v145;
  uint64_t v147 = v239;
  sub_100006B3C(v144, v239, &qword_1000A9370);
  uint64_t v148 = swift_getKeyPath();
  uint64_t v149 = (uint64_t)v245;
  uint64_t *v245 = v148;
  sub_100004FB4(&qword_1000A8EA0);
  swift_storeEnumTagMultiPayload();
  uint64_t v150 = v242;
  *(void *)(v149 + *(int *)(v242 + 20)) = v268;
  sub_100006C4C(v147, v149 + *(int *)(v150 + 24), &qword_1000A9370);
  *(void *)(v149 + *(int *)(v150 + 28)) = v146;
  uint64_t v151 = (uint64_t)v244;
  sub_10005A8E8(v149, (uint64_t)&v244[*(int *)(v238 + 36)], (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  *(void *)uint64_t v151 = v133;
  *(void *)(v151 + 8) = v135;
  *(unsigned char *)(v151 + 16) = v130;
  *(void *)(v151 + 24) = v137;
  sub_100024B98(v133, v135, v130);
  swift_bridgeObjectRetain();
  sub_10005A950(v149, (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  sub_100006AE0(v144, &qword_1000A9370);
  sub_100006AD0(v133, v135, v130);
  swift_bridgeObjectRelease();
  uint64_t v152 = sub_100052690();
  uint64_t v153 = swift_getKeyPath();
  uint64_t v154 = v246;
  sub_100006B3C(v151, v246, &qword_1000A9378);
  unint64_t v155 = (uint64_t *)(v154 + *(int *)(v243 + 36));
  *unint64_t v155 = v153;
  v155[1] = v152;
  sub_100006AE0(v151, &qword_1000A9378);
  uint64_t v156 = v251;
  sub_10005218C(v251);
  uint64_t v157 = (uint64_t)v253;
  uint64_t v158 = v254;
  uint64_t v159 = v255;
  (*(void (**)(char *, uint64_t, uint64_t))(v254 + 16))(&v253[*(int *)(v240 + 36)], v156, v255);
  sub_100006B3C(v154, v157, &qword_1000A9380);
  (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v156, v159);
  sub_100006AE0(v154, &qword_1000A9380);
  uint64_t v160 = v237;
  sub_100016FB8(v237);
  int v161 = v274(v160, v276);
  int v162 = enum case for WidgetFamily.systemMedium(_:);
  uint64_t v163 = 4;
  LODWORD(v277) = enum case for WidgetFamily.systemLarge(_:);
  if (v161 == v281 || v161 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v164 = v216;
    uint64_t v165 = v215;
    uint64_t v166 = (uint64_t)v214;
    uint64_t v167 = (uint64_t)v213;
  }
  else
  {
    uint64_t v164 = v216;
    uint64_t v165 = v215;
    uint64_t v166 = (uint64_t)v214;
    uint64_t v167 = (uint64_t)v213;
    if (v161 != enum case for WidgetFamily.systemLarge(_:))
    {
      if (v161 == enum case for WidgetFamily.systemExtraLarge(_:))
      {
        uint64_t v163 = 5;
      }
      else
      {
        uint64_t v163 = 4;
        if (v161 != enum case for WidgetFamily.accessoryCircular(_:)
          && v161 != enum case for WidgetFamily.accessoryRectangular(_:)
          && v161 != enum case for WidgetFamily.accessoryInline(_:))
        {
          v263(v160, v276);
          uint64_t v163 = 4;
        }
      }
    }
  }
  uint64_t v168 = swift_getKeyPath();
  uint64_t v169 = v250;
  sub_100006B3C(v157, v250, &qword_1000A9388);
  uint64_t v170 = v169 + *(int *)(v249 + 36);
  *(void *)uint64_t v170 = v168;
  *(void *)(v170 + 8) = v163;
  *(unsigned char *)(v170 + 16) = 0;
  sub_100006AE0(v157, &qword_1000A9388);
  sub_100006B3C(v169, v167, &qword_1000AA368);
  *(_WORD *)(v167 + *(int *)(v247 + 36)) = 256;
  sub_100006AE0(v169, &qword_1000AA368);
  uint64_t v171 = swift_getKeyPath();
  sub_100006B3C(v167, v166, &qword_1000AA370);
  uint64_t v172 = v166 + *(int *)(v248 + 36);
  *(void *)uint64_t v172 = v171;
  *(unsigned char *)(v172 + 8) = 1;
  sub_100006AE0(v167, &qword_1000AA370);
  uint64_t v173 = swift_getKeyPath();
  uint64_t v174 = v252;
  sub_100006B3C(v166, v252, &qword_1000AA378);
  uint64_t v175 = (uint64_t *)(v174 + *(int *)(v165 + 36));
  *uint64_t v175 = v173;
  v175[1] = 0x3FE3333333333333;
  sub_100006AE0(v166, &qword_1000AA378);
  sub_10005A9B8();
  uint64_t v176 = v259;
  sub_100087AD0();
  sub_100006AE0(v174, &qword_1000AA380);
  unsigned __int8 v177 = sub_1000878A0();
  char v178 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v177) {
    char v178 = sub_1000878C0();
  }
  uint64_t v179 = v283 + *(int *)(v279 + 44);
  if (*(void *)(v179 + 8))
  {
    uint64_t v180 = v212;
    sub_100016FB8(v212);
    int v181 = v274(v180, v276);
    uint64_t v182 = v217;
    if (v181 != v281
      && v181 != v162
      && v181 != v277
      && v181 != enum case for WidgetFamily.systemExtraLarge(_:)
      && v181 != enum case for WidgetFamily.accessoryCircular(_:)
      && v181 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v181 != enum case for WidgetFamily.accessoryInline(_:))
    {
      v263(v212, v276);
    }
  }
  else
  {
    uint64_t v182 = v217;
  }
  sub_100087360();
  uint64_t v184 = v183;
  uint64_t v186 = v185;
  uint64_t v188 = v187;
  uint64_t v190 = v189;
  uint64_t v191 = (uint64_t)v257;
  (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v257, v176, v164);
  uint64_t v192 = v191 + *(int *)(v258 + 36);
  *(unsigned char *)uint64_t v192 = v178;
  *(void *)(v192 + 8) = v184;
  *(void *)(v192 + 16) = v186;
  *(void *)(v192 + 24) = v188;
  *(void *)(v192 + 32) = v190;
  *(unsigned char *)(v192 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v182 + 8))(v176, v164);
  sub_100006C4C(v191, v273, &qword_1000AA390);
  if (*(void *)(v179 + 8))
  {
    uint64_t v193 = sub_1000876B0();
    uint64_t v194 = v265;
    uint64_t *v265 = v193;
    v194[1] = 0x4010000000000000;
    *((unsigned char *)v194 + 16) = 0;
    uint64_t v195 = sub_100004FB4(&qword_1000AA458);
    sub_100054BBC(v283, (char *)v194 + *(int *)(v195 + 44));
    uint64_t v196 = sub_100004FB4(&qword_1000AA448);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v196 - 8) + 56))(v194, 0, 1, v196);
  }
  else
  {
    uint64_t v197 = sub_100004FB4(&qword_1000AA448);
    uint64_t v194 = v265;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v197 - 8) + 56))(v265, 1, 1, v197);
  }
  uint64_t v198 = v271;
  v199 = *(void (**)(char *, char *, uint64_t))(v271 + 16);
  v200 = v256;
  uint64_t v201 = v272;
  v199(v256, v278, v272);
  uint64_t v202 = v273;
  uint64_t v203 = v260;
  sub_100006B3C(v273, v260, &qword_1000AA390);
  uint64_t v204 = (uint64_t)v194;
  uint64_t v205 = v262;
  sub_100006B3C(v204, v262, &qword_1000AA360);
  v206 = v261;
  v199(v261, v200, v201);
  v207 = (int *)sub_100004FB4(&qword_1000AA450);
  sub_100006B3C(v203, (uint64_t)&v206[v207[12]], &qword_1000AA390);
  sub_100006B3C(v205, (uint64_t)&v206[v207[16]], &qword_1000AA360);
  v208 = &v206[v207[20]];
  *(void *)v208 = 0;
  v208[8] = 1;
  sub_100006AE0((uint64_t)v265, &qword_1000AA360);
  sub_100006AE0(v202, &qword_1000AA390);
  v209 = *(void (**)(char *, uint64_t))(v198 + 8);
  v209(v278, v201);
  sub_100006AE0(v205, &qword_1000AA360);
  sub_100006AE0(v203, &qword_1000AA390);
  return ((uint64_t (*)(char *, uint64_t))v209)(v200, v201);
}

uint64_t sub_100054BBC@<X0>(uint64_t a1@<X2>, char *a2@<X8>)
{
  uint64_t v196 = a1;
  uint64_t v182 = a2;
  uint64_t v2 = sub_100087C90();
  uint64_t v180 = *(void *)(v2 - 8);
  uint64_t v181 = v2;
  __chkstk_darwin(v2);
  unsigned __int8 v177 = (char *)&v132 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_100004FB4(&qword_1000AA460);
  __chkstk_darwin(v166);
  uint64_t v169 = (char *)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_100004FB4(&qword_1000AA468);
  __chkstk_darwin(v168);
  uint64_t v171 = (uint64_t)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_100004FB4(&qword_1000AA470);
  __chkstk_darwin(v167);
  uint64_t v173 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_100004FB4(&qword_1000AA478);
  __chkstk_darwin(v170);
  uint64_t v175 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_100004FB4(&qword_1000AA480);
  __chkstk_darwin(v176);
  uint64_t v174 = (uint64_t)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_100004FB4(&qword_1000AA488);
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v193 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v172 = (char *)&v132 - v11;
  __chkstk_darwin(v12);
  uint64_t v192 = (char *)&v132 - v13;
  uint64_t v191 = sub_100087DA0();
  uint64_t v195 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v190 = (uint64_t)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for DynamicTypeFont();
  __chkstk_darwin(v186);
  uint64_t v16 = (uint64_t *)((char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_100004FB4(&qword_1000A9370);
  __chkstk_darwin(v17 - 8);
  uint64_t v184 = (uint64_t)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v185 = (char *)&v132 - v20;
  uint64_t v21 = sub_1000879B0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100087EC0();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v162 = (uint64_t)&v132 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v132 - v29;
  uint64_t v146 = sub_100004FB4(&qword_1000A9378);
  __chkstk_darwin(v146);
  uint64_t v32 = (char *)&v132 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_100004FB4(&qword_1000A9380);
  __chkstk_darwin(v152);
  uint64_t v156 = (uint64_t)&v132 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100004FB4(&qword_1000A9388);
  __chkstk_darwin(v151);
  uint64_t v158 = (char *)&v132 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100004FB4(&qword_1000AA368);
  __chkstk_darwin(v154);
  uint64_t v159 = (uint64_t)&v132 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100004FB4(&qword_1000AA490);
  __chkstk_darwin(v155);
  uint64_t v160 = (uint64_t)&v132 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_100004FB4(&qword_1000AA498);
  __chkstk_darwin(v161);
  uint64_t v157 = (uint64_t)&v132 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100004FB4(&qword_1000AA4A0);
  uint64_t v188 = *(void *)(v38 - 8);
  uint64_t v189 = v38;
  __chkstk_darwin(v38);
  uint64_t v187 = (char *)&v132 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v153 = (char *)&v132 - v41;
  __chkstk_darwin(v42);
  uint64_t v194 = (char *)&v132 - v43;
  swift_bridgeObjectRetain();
  sub_1000876D0();
  uint64_t v44 = sub_100087A60();
  uint64_t v135 = v45;
  int v134 = v46;
  uint64_t v136 = v47;
  uint64_t v150 = v196 + *(int *)(type metadata accessor for CPMessageView() + 20);
  sub_100016FB8((uint64_t)v30);
  uint64_t v132 = v26;
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 88);
  uint64_t v183 = v25;
  uint64_t v149 = v26 + 88;
  uint64_t v148 = v48;
  int v49 = v48((uint64_t)v30, v25);
  int v147 = enum case for WidgetFamily.systemSmall(_:);
  int v133 = enum case for WidgetFamily.systemMedium(_:);
  if (v49 == enum case for WidgetFamily.systemSmall(_:)
    || (int v50 = v49, v49 == enum case for WidgetFamily.systemMedium(_:)))
  {
    sub_1000879D0();
  }
  else if (v49 == enum case for WidgetFamily.systemLarge(_:) || v49 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    sub_1000878F0();
  }
  else
  {
    int v51 = enum case for WidgetFamily.accessoryCircular(_:);
    sub_1000879D0();
    if (v50 != v51
      && v50 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v50 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(char *, uint64_t))(v132 + 8))(v30, v183);
    }
  }
  uint64_t v52 = *(void (**)(void))(v22 + 104);
  unsigned int v145 = enum case for Font.Leading.tight(_:);
  uint64_t v144 = v22 + 104;
  uint64_t v143 = (void (*)(char *, void, uint64_t))v52;
  v52(v24);
  uint64_t v53 = sub_1000879E0();
  swift_release();
  char v54 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v163 = v24;
  uint64_t v165 = v21;
  uint64_t v164 = v22 + 8;
  uint64_t v142 = v54;
  v54(v24, v21);
  uint64_t v55 = enum case for ContentSizeCategory.extraLarge(_:);
  uint64_t v56 = sub_100087710();
  uint64_t v57 = *(void *)(v56 - 8);
  int v58 = *(void (**)(char *, void, uint64_t))(v57 + 104);
  uint64_t v59 = (uint64_t)v185;
  unsigned int v141 = v55;
  uint64_t v140 = v57 + 104;
  uint64_t v139 = v58;
  v58(v185, v55, v56);
  char v138 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56);
  v138(v59, 0, 1, v56);
  sub_100087940();
  uint64_t v61 = v60;
  uint64_t v62 = v184;
  sub_100006B3C(v59, v184, &qword_1000A9370);
  *uint64_t v16 = swift_getKeyPath();
  uint64_t v137 = sub_100004FB4(&qword_1000A8EA0);
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = v186;
  *(uint64_t *)((char *)v16 + *(int *)(v186 + 20)) = v53;
  sub_100006C4C(v62, (uint64_t)v16 + *(int *)(v63 + 24), &qword_1000A9370);
  *(uint64_t *)((char *)v16 + *(int *)(v63 + 28)) = v61;
  sub_10005A8E8((uint64_t)v16, (uint64_t)&v32[*(int *)(v146 + 36)], (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  uint64_t v64 = v135;
  *(void *)uint64_t v32 = v44;
  *((void *)v32 + 1) = v64;
  LOBYTE(v53) = v134 & 1;
  v32[16] = v134 & 1;
  *((void *)v32 + 3) = v136;
  sub_100024B98(v44, v64, v53);
  swift_bridgeObjectRetain();
  sub_10005A950((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  sub_100006AE0(v59, &qword_1000A9370);
  sub_100006AD0(v44, v64, v53);
  swift_bridgeObjectRelease();
  uint64_t v65 = sub_100087BF0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v67 = v156;
  sub_100006B3C((uint64_t)v32, v156, &qword_1000A9378);
  char v68 = (uint64_t *)(v67 + *(int *)(v152 + 36));
  *char v68 = KeyPath;
  v68[1] = v65;
  sub_100006AE0((uint64_t)v32, &qword_1000A9378);
  uint64_t v69 = v190;
  sub_100052970(v190);
  uint64_t v70 = (uint64_t)v158;
  uint64_t v71 = &v158[*(int *)(v151 + 36)];
  uint64_t v72 = v195;
  uint64_t v73 = v191;
  uint64_t v152 = *(void *)(v195 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v152)(v71, v69, v191);
  sub_100006B3C(v67, v70, &qword_1000A9380);
  uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  uint64_t v195 = v72 + 8;
  uint64_t v151 = (uint64_t)v74;
  v74(v69, v73);
  sub_100006AE0(v67, &qword_1000A9380);
  uint64_t v75 = swift_getKeyPath();
  uint64_t v76 = v159;
  sub_100006B3C(v70, v159, &qword_1000A9388);
  uint64_t v77 = v76 + *(int *)(v154 + 36);
  *(void *)uint64_t v77 = v75;
  *(void *)(v77 + 8) = 2;
  *(unsigned char *)(v77 + 16) = 0;
  sub_100006AE0(v70, &qword_1000A9388);
  uint64_t v78 = swift_getKeyPath();
  uint64_t v79 = v160;
  sub_100006B3C(v76, v160, &qword_1000AA368);
  uint64_t v80 = v79 + *(int *)(v155 + 36);
  *(void *)uint64_t v80 = v78;
  *(unsigned char *)(v80 + 8) = 1;
  sub_100006AE0(v76, &qword_1000AA368);
  uint64_t v81 = swift_getKeyPath();
  uint64_t v82 = v157;
  sub_100006B3C(v79, v157, &qword_1000AA490);
  uint64_t v83 = (uint64_t *)(v82 + *(int *)(v161 + 36));
  *uint64_t v83 = v81;
  v83[1] = 0x3FECCCCCCCCCCCCDLL;
  sub_100006AE0(v79, &qword_1000AA490);
  sub_10005ABF0();
  uint64_t v84 = v153;
  sub_100087AD0();
  sub_100006AE0(v82, &qword_1000AA498);
  (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v194, v84, v189);
  uint64_t v85 = sub_100087C40();
  uint64_t v86 = v162;
  sub_100016FB8(v162);
  int v87 = v148(v86, v183);
  if (v87 == v147 || (int v88 = v87, v87 == v133))
  {
    sub_1000879D0();
  }
  else if (v87 == enum case for WidgetFamily.systemLarge(_:) || v87 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    sub_1000878F0();
  }
  else
  {
    int v89 = enum case for WidgetFamily.accessoryCircular(_:);
    sub_1000879D0();
    if (v88 != v89
      && v88 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v88 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v86, v183);
    }
  }
  uint64_t v90 = v163;
  uint64_t v91 = v165;
  v143(v163, v145, v165);
  uint64_t v92 = sub_1000879E0();
  swift_release();
  v142(v90, v91);
  uint64_t v93 = (uint64_t)v185;
  v139(v185, v141, v56);
  v138(v93, 0, 1, v56);
  sub_100087960();
  uint64_t v95 = v94;
  uint64_t v96 = v184;
  sub_100006B3C(v93, v184, &qword_1000A9370);
  *uint64_t v16 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v97 = v186;
  *(uint64_t *)((char *)v16 + *(int *)(v186 + 20)) = v92;
  sub_100006C4C(v96, (uint64_t)v16 + *(int *)(v97 + 24), &qword_1000A9370);
  *(uint64_t *)((char *)v16 + *(int *)(v97 + 28)) = v95;
  uint64_t v98 = (uint64_t)v169;
  sub_10005A8E8((uint64_t)v16, (uint64_t)&v169[*(int *)(v166 + 36)], (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  *(void *)uint64_t v98 = v85;
  *(unsigned char *)(v98 + 8) = 1;
  swift_retain();
  sub_10005A950((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  sub_100006AE0(v93, &qword_1000A9370);
  swift_release();
  uint64_t v99 = sub_100087BF0();
  uint64_t v100 = swift_getKeyPath();
  uint64_t v101 = v171;
  sub_100006B3C(v98, v171, &qword_1000AA460);
  uint64_t v102 = (uint64_t *)(v101 + *(int *)(v168 + 36));
  *uint64_t v102 = v100;
  v102[1] = v99;
  sub_100006AE0(v98, &qword_1000AA460);
  uint64_t v103 = v190;
  sub_100052970(v190);
  uint64_t v104 = (uint64_t)v173;
  uint64_t v105 = v191;
  ((void (*)(char *, uint64_t, uint64_t))v152)(&v173[*(int *)(v167 + 36)], v103, v191);
  sub_100006B3C(v101, v104, &qword_1000AA468);
  ((void (*)(uint64_t, uint64_t))v151)(v103, v105);
  sub_100006AE0(v101, &qword_1000AA468);
  uint64_t v107 = v180;
  uint64_t v106 = v181;
  uint64_t v108 = v177;
  (*(void (**)(char *, void, uint64_t))(v180 + 104))(v177, enum case for Image.Scale.small(_:), v181);
  uint64_t v109 = swift_getKeyPath();
  uint64_t v110 = (uint64_t)v175;
  uint64_t v111 = (uint64_t *)&v175[*(int *)(v170 + 36)];
  uint64_t v112 = sub_100004FB4(&qword_1000AA4B8);
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))((char *)v111 + *(int *)(v112 + 28), v108, v106);
  *uint64_t v111 = v109;
  sub_100006B3C(v104, v110, &qword_1000AA470);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v108, v106);
  sub_100006AE0(v104, &qword_1000AA470);
  uint64_t v113 = swift_getKeyPath();
  uint64_t v114 = v174;
  sub_100006B3C(v110, v174, &qword_1000AA478);
  uint64_t v115 = (uint64_t *)(v114 + *(int *)(v176 + 36));
  uint64_t *v115 = v113;
  v115[1] = 0x3FECCCCCCCCCCCCDLL;
  sub_100006AE0(v110, &qword_1000AA478);
  sub_10005AD38();
  uint64_t v116 = v172;
  sub_100087AD0();
  sub_100006AE0(v114, &qword_1000AA480);
  uint64_t v117 = v178;
  uint64_t v118 = v192;
  uint64_t v119 = v179;
  (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v192, v116, v179);
  uint64_t v120 = v187;
  uint64_t v121 = v188;
  uint64_t v122 = *(void (**)(char *, char *, uint64_t))(v188 + 16);
  uint64_t v123 = v189;
  v122(v187, v194, v189);
  uint64_t v124 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
  v124(v193, v118, v119);
  uint64_t v125 = v182;
  v122(v182, v120, v123);
  uint64_t v126 = sub_100004FB4(&qword_1000AA508);
  uint64_t v127 = v193;
  v124(&v125[*(int *)(v126 + 48)], v193, v119);
  uint64_t v128 = &v125[*(int *)(v126 + 64)];
  *(void *)uint64_t v128 = 0;
  v128[8] = 1;
  uint64_t v129 = *(void (**)(char *, uint64_t))(v117 + 8);
  v129(v192, v119);
  uint64_t v130 = *(void (**)(char *, uint64_t))(v121 + 8);
  v130(v194, v123);
  v129(v127, v119);
  return ((uint64_t (*)(char *, uint64_t))v130)(v187, v123);
}

uint64_t sub_1000560F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100087430();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CPAppGridView();
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100004FB4(&qword_1000AA2D8);
  __chkstk_darwin(v67);
  uint64_t v69 = (uint64_t)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004FB4(&qword_1000AA2E0);
  __chkstk_darwin(v68);
  uint64_t v71 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100004FB4(&qword_1000AA2E8);
  __chkstk_darwin(v70);
  uint64_t v74 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100004FB4(&qword_1000AA2F0);
  __chkstk_darwin(v73);
  uint64_t v76 = (uint64_t)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v72 = (uint64_t)&v67 - v25;
  __chkstk_darwin(v26);
  uint64_t v75 = (uint64_t)&v67 - v27;
  uint64_t v28 = type metadata accessor for CPMessageView();
  sub_10005A8E8(a1 + *(int *)(v28 + 32), (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1 + *(int *)(v28 + 36), v9);
  *uint64_t v8 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v5 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  sub_10000A590((uint64_t)v15, (uint64_t)v19);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v17[7]], v12, v9);
  *(void *)&v19[v17[8]] = 1;
  *(void *)&v19[v17[9]] = 2;
  v19[v17[10]] = 0;
  uint64_t v29 = (uint64_t *)&v19[v17[11]];
  *uint64_t v29 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (uint64_t *)&v19[v17[12]];
  *uint64_t v30 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v8, (uint64_t)&v19[v17[13]], &qword_1000A87C0);
  sub_100006C4C((uint64_t)v5, (uint64_t)&v19[v17[14]], &qword_1000A88C0);
  LOBYTE(v30) = sub_1000878D0();
  unsigned __int8 v31 = sub_1000878A0();
  char v32 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v30) {
    char v32 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v31) {
    char v32 = sub_1000878C0();
  }
  uint64_t v33 = (uint64_t)v71;
  uint64_t v34 = v69;
  sub_10005A8E8((uint64_t)v19, v69, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  uint64_t v35 = v34 + *(int *)(v67 + 36);
  *(unsigned char *)uint64_t v35 = v32;
  *(_OWORD *)(v35 + 8) = 0u;
  *(_OWORD *)(v35 + 24) = 0u;
  *(unsigned char *)(v35 + 40) = 1;
  sub_10005A950((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  unsigned __int8 v36 = sub_1000878B0();
  char v37 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v36) {
    char v37 = sub_1000878C0();
  }
  sub_100087410();
  sub_100087360();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_100006B3C(v34, v33, &qword_1000AA2D8);
  uint64_t v46 = v33 + *(int *)(v68 + 36);
  *(unsigned char *)uint64_t v46 = v37;
  *(void *)(v46 + 8) = v39;
  *(void *)(v46 + 16) = v41;
  *(void *)(v46 + 24) = v43;
  *(void *)(v46 + 32) = v45;
  *(unsigned char *)(v46 + 40) = 0;
  sub_100006AE0(v34, &qword_1000AA2D8);
  unsigned __int8 v47 = sub_100087890();
  char v48 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v47) {
    char v48 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v57 = v74;
  sub_100006B3C(v33, v74, &qword_1000AA2E0);
  uint64_t v58 = v57 + *(int *)(v70 + 36);
  *(unsigned char *)uint64_t v58 = v48;
  *(void *)(v58 + 8) = v50;
  *(void *)(v58 + 16) = v52;
  *(void *)(v58 + 24) = v54;
  *(void *)(v58 + 32) = v56;
  *(unsigned char *)(v58 + 40) = 0;
  sub_100006AE0(v33, &qword_1000AA2E0);
  sub_100087410();
  sub_100087410();
  sub_100087D90();
  sub_100087400();
  uint64_t v59 = v72;
  sub_100006B3C(v57, v72, &qword_1000AA2E8);
  uint64_t v60 = (_OWORD *)(v59 + *(int *)(v73 + 36));
  long long v61 = v79;
  *uint64_t v60 = v78;
  v60[1] = v61;
  v60[2] = v80;
  sub_100006AE0(v57, &qword_1000AA2E8);
  uint64_t v62 = v75;
  sub_100006C4C(v59, v75, &qword_1000AA2F0);
  uint64_t v63 = v76;
  sub_100006B3C(v62, v76, &qword_1000AA2F0);
  uint64_t v64 = v77;
  void *v77 = 0;
  *((unsigned char *)v64 + 8) = 1;
  uint64_t v65 = sub_100004FB4(&qword_1000AA2F8);
  sub_100006B3C(v63, (uint64_t)v64 + *(int *)(v65 + 48), &qword_1000AA2F0);
  sub_100006AE0(v62, &qword_1000AA2F0);
  return sub_100006AE0(v63, &qword_1000AA2F0);
}

uint64_t sub_10005691C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  char v48 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v45 = (uint64_t *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v49 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = sub_100087430();
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CPAppGridView();
  uint64_t v14 = (int *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004FB4(&qword_1000AA2D8);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v43 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100004FB4(&qword_1000AA300) - 8;
  __chkstk_darwin(v47);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v46 = (uint64_t)&v40 - v23;
  uint64_t v24 = type metadata accessor for CPMessageView();
  uint64_t v25 = *(int *)(v24 + 32);
  uint64_t v44 = a1;
  sub_10005A8E8(a1 + v25, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v42 = a1 + *(int *)(v24 + 36);
  uint64_t v26 = v41;
  (*(void (**)(char *))(v7 + 16))(v9);
  *uint64_t v49 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = (uint64_t)v45;
  *uint64_t v45 = KeyPath;
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  sub_10000A590((uint64_t)v12, (uint64_t)v16);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v14[7]], v9, v26);
  *(void *)&v16[v14[8]] = 1;
  *(void *)&v16[v14[9]] = 3;
  v16[v14[10]] = 0;
  uint64_t v29 = (uint64_t *)&v16[v14[11]];
  *uint64_t v29 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (uint64_t *)&v16[v14[12]];
  *uint64_t v30 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v49, (uint64_t)&v16[v14[13]], &qword_1000A87C0);
  sub_100006C4C(v28, (uint64_t)&v16[v14[14]], &qword_1000A88C0);
  LOBYTE(v30) = sub_100087880();
  uint64_t v31 = v43;
  sub_10005A8E8((uint64_t)v16, v43, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  uint64_t v32 = v31 + *(int *)(v18 + 44);
  *(unsigned char *)uint64_t v32 = (_BYTE)v30;
  *(_OWORD *)(v32 + 8) = 0u;
  *(_OWORD *)(v32 + 24) = 0u;
  *(unsigned char *)(v32 + 40) = 1;
  sub_10005A950((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  sub_100087410();
  sub_100051E14();
  sub_100087D90();
  sub_100087400();
  sub_100006B3C(v31, (uint64_t)v21, &qword_1000AA2D8);
  uint64_t v33 = &v21[*(int *)(v47 + 44)];
  long long v34 = v51;
  *(_OWORD *)uint64_t v33 = v50;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v52;
  sub_100006AE0(v31, &qword_1000AA2D8);
  uint64_t v35 = v46;
  sub_100006C4C((uint64_t)v21, v46, &qword_1000AA300);
  sub_100006B3C(v35, (uint64_t)v21, &qword_1000AA300);
  unsigned __int8 v36 = v48;
  *char v48 = 0;
  *((unsigned char *)v36 + 8) = 1;
  char v37 = v36;
  uint64_t v38 = sub_100004FB4(&qword_1000AA308);
  sub_100006B3C((uint64_t)v21, (uint64_t)v37 + *(int *)(v38 + 48), &qword_1000AA300);
  sub_100006AE0(v35, &qword_1000AA300);
  return sub_100006AE0((uint64_t)v21, &qword_1000AA300);
}

uint64_t sub_100056ECC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_100087EC0();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  uint64_t v43 = (uint64_t)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v40 = (void *)((char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v47 = (void *)((char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100087430();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CPAppGridView();
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100004FB4(&qword_1000AA310) - 8;
  __chkstk_darwin(v41);
  uint64_t v21 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v42 = (uint64_t)v39 - v23;
  uint64_t v24 = type metadata accessor for CPMessageView();
  uint64_t v25 = *(int *)(v24 + 32);
  v39[1] = a1;
  sub_10005A8E8(a1 + v25, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v26 = a1 + *(int *)(v24 + 36);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v26, v9);
  *uint64_t v47 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = (uint64_t)v40;
  *uint64_t v40 = KeyPath;
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  sub_10000A590((uint64_t)v15, (uint64_t)v19);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v17[7]], v12, v9);
  *(void *)&v19[v17[8]] = 2;
  *(void *)&v19[v17[9]] = 3;
  v19[v17[10]] = 0;
  uint64_t v29 = (uint64_t *)&v19[v17[11]];
  *uint64_t v29 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (uint64_t *)&v19[v17[12]];
  *uint64_t v30 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v47, (uint64_t)&v19[v17[13]], &qword_1000A87C0);
  sub_100006C4C(v28, (uint64_t)&v19[v17[14]], &qword_1000A88C0);
  sub_100087410();
  uint64_t v31 = v43;
  sub_100016FB8(v43);
  sub_10002AD44(v26, v31);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v31, v45);
  sub_100087D90();
  sub_100087400();
  sub_10005A8E8((uint64_t)v19, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  uint64_t v32 = &v21[*(int *)(v41 + 44)];
  long long v33 = v49;
  *(_OWORD *)uint64_t v32 = v48;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v50;
  sub_10005A950((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  uint64_t v34 = v42;
  sub_100006C4C((uint64_t)v21, v42, &qword_1000AA310);
  sub_100006B3C(v34, (uint64_t)v21, &qword_1000AA310);
  uint64_t v35 = v46;
  *uint64_t v46 = 0;
  *((unsigned char *)v35 + 8) = 1;
  unsigned __int8 v36 = v35;
  uint64_t v37 = sub_100004FB4(&qword_1000AA318);
  sub_100006B3C((uint64_t)v21, (uint64_t)v36 + *(int *)(v37 + 48), &qword_1000AA310);
  sub_100006AE0(v34, &qword_1000AA310);
  return sub_100006AE0((uint64_t)v21, &qword_1000AA310);
}

double sub_100057490@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100087EC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A86E0 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1000AD9C8;
  uint64_t v9 = a1 + *(int *)(type metadata accessor for CPMessageView() + 36);
  swift_retain();
  sub_100087410();
  sub_100016FB8((uint64_t)v7);
  sub_10002AD44(v9, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100087D90();
  sub_100087400();
  uint64_t v10 = v15;
  char v11 = v16;
  uint64_t v12 = v17;
  char v13 = v18;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v12;
  *(unsigned char *)(a2 + 48) = v13;
  double result = *(double *)&v19;
  *(_OWORD *)(a2 + 56) = v19;
  return result;
}

uint64_t sub_100057654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v46 = sub_100004FB4(&qword_1000AA230);
  __chkstk_darwin(v46);
  uint64_t v41 = (uint64_t *)((char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = sub_100004FB4(&qword_1000AA238);
  __chkstk_darwin(v43);
  uint64_t v45 = (uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100004FB4(&qword_1000AA240);
  __chkstk_darwin(v53);
  uint64_t v47 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100004FB4(&qword_1000AA248);
  __chkstk_darwin(v44);
  uint64_t v42 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v50 = sub_100004FB4(&qword_1000AA250);
  __chkstk_darwin(v50);
  long long v48 = (uint64_t *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_100004FB4(&qword_1000AA258);
  __chkstk_darwin(v54);
  long long v51 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100004FB4(&qword_1000AA260);
  __chkstk_darwin(v52);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FB4(&qword_1000AA268);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000AA270);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004FB4(&qword_1000AA278);
  __chkstk_darwin(v55);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100087EC0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CPMessageView();
  uint64_t v49 = v1;
  sub_100016FB8((uint64_t)v21);
  uint64_t v40 = v19;
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  if (v22 == enum case for WidgetFamily.systemSmall(_:))
  {
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000AA298, &qword_1000AA250);
    sub_1000877E0();
    sub_100006B3C((uint64_t)v15, (uint64_t)v9, &qword_1000AA270);
    swift_storeEnumTagMultiPayload();
    sub_10005B1A4(&qword_1000AA290, &qword_1000AA270, &qword_1000AA298, &qword_1000AA250);
    sub_10005A3F4();
    sub_1000877E0();
    sub_100006AE0((uint64_t)v15, &qword_1000AA270);
    uint64_t v23 = &qword_1000AA278;
    sub_100006B3C((uint64_t)v17, (uint64_t)v51, &qword_1000AA278);
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_10005A358();
    sub_10005A4B8();
    sub_1000877E0();
    uint64_t v24 = (uint64_t)v17;
LABEL_7:
    uint64_t v32 = v23;
    return sub_100006AE0(v24, v32);
  }
  uint64_t v39 = v13;
  if (v22 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v25 = sub_1000876B0();
    uint64_t v26 = (uint64_t)v48;
    *long long v48 = v25;
    *(void *)(v26 + 8) = 0;
    *(unsigned char *)(v26 + 16) = 0;
    uint64_t v27 = sub_100004FB4(&qword_1000AA2D0);
    sub_1000560F0(v49, (void *)(v26 + *(int *)(v27 + 44)));
    uint64_t v23 = &qword_1000AA250;
    sub_100006B3C(v26, (uint64_t)v12, &qword_1000AA250);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000AA298, &qword_1000AA250);
    sub_1000877E0();
    sub_100006B3C((uint64_t)v15, (uint64_t)v9, &qword_1000AA270);
    swift_storeEnumTagMultiPayload();
    sub_10005B1A4(&qword_1000AA290, &qword_1000AA270, &qword_1000AA298, &qword_1000AA250);
    sub_10005A3F4();
    sub_1000877E0();
    sub_100006AE0((uint64_t)v15, &qword_1000AA270);
    sub_100006B3C((uint64_t)v17, (uint64_t)v51, &qword_1000AA278);
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_10005A358();
    sub_10005A4B8();
    sub_1000877E0();
    sub_100006AE0((uint64_t)v17, &qword_1000AA278);
    uint64_t v24 = v26;
    goto LABEL_7;
  }
  if (v22 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v28 = sub_100087720();
    uint64_t v29 = (uint64_t)v42;
    *uint64_t v42 = v28;
    *(void *)(v29 + 8) = 0;
    *(unsigned char *)(v29 + 16) = 0;
    uint64_t v30 = sub_100004FB4(&qword_1000AA2C8);
    sub_10005691C(v49, (void *)(v29 + *(int *)(v30 + 44)));
    uint64_t v23 = &qword_1000AA248;
    sub_100006B3C(v29, v45, &qword_1000AA248);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000AA2A8, &qword_1000AA248);
    sub_100006A8C(&qword_1000AA2B0, &qword_1000AA230);
    uint64_t v31 = (uint64_t)v47;
    sub_1000877E0();
    sub_100006B3C(v31, (uint64_t)v9, &qword_1000AA240);
    swift_storeEnumTagMultiPayload();
    sub_10005B1A4(&qword_1000AA290, &qword_1000AA270, &qword_1000AA298, &qword_1000AA250);
    sub_10005A3F4();
    sub_1000877E0();
    sub_100006AE0(v31, &qword_1000AA240);
    sub_100006B3C((uint64_t)v17, (uint64_t)v51, &qword_1000AA278);
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_10005A358();
    sub_10005A4B8();
    sub_1000877E0();
    sub_100006AE0((uint64_t)v17, &qword_1000AA278);
    uint64_t v24 = v29;
    goto LABEL_7;
  }
  uint64_t v34 = v51;
  if (v22 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v35 = sub_1000876B0();
    uint64_t v36 = (uint64_t)v41;
    *uint64_t v41 = v35;
    *(void *)(v36 + 8) = 0;
    *(unsigned char *)(v36 + 16) = 0;
    uint64_t v37 = sub_100004FB4(&qword_1000AA2C0);
    sub_100056ECC(v49, (void *)(v36 + *(int *)(v37 + 44)));
    sub_100006B3C(v36, v45, &qword_1000AA230);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000AA2A8, &qword_1000AA248);
    sub_100006A8C(&qword_1000AA2B0, &qword_1000AA230);
    uint64_t v38 = (uint64_t)v47;
    sub_1000877E0();
    sub_100006B3C(v38, (uint64_t)v9, &qword_1000AA240);
    swift_storeEnumTagMultiPayload();
    sub_10005B1A4(&qword_1000AA290, &qword_1000AA270, &qword_1000AA298, &qword_1000AA250);
    sub_10005A3F4();
    sub_1000877E0();
    sub_100006AE0(v38, &qword_1000AA240);
    sub_100006B3C((uint64_t)v17, (uint64_t)v34, &qword_1000AA278);
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_10005A358();
    sub_10005A4B8();
    sub_1000877E0();
    sub_100006AE0((uint64_t)v17, &qword_1000AA278);
    uint64_t v24 = v36;
    uint64_t v32 = &qword_1000AA230;
    return sub_100006AE0(v24, v32);
  }
  if (v22 == enum case for WidgetFamily.accessoryCircular(_:)
    || v22 == enum case for WidgetFamily.accessoryRectangular(_:)
    || v22 == enum case for WidgetFamily.accessoryInline(_:))
  {
    char v57 = 0;
    sub_1000877E0();
    *uint64_t v34 = v58;
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_10005A358();
    sub_10005A4B8();
    return sub_1000877E0();
  }
  else
  {
    char v59 = 1;
    sub_1000877E0();
    *uint64_t v34 = v60;
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_10005A358();
    sub_10005A4B8();
    sub_1000877E0();
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v21, v18);
  }
}

uint64_t sub_100058278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100087EC0();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  __chkstk_darwin(v3);
  uint64_t v71 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v70 = (uint64_t)&v59 - v6;
  uint64_t v7 = sub_100087E60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v59 - v12;
  uint64_t v14 = v1 + *(int *)(type metadata accessor for CPMessageView() + 28);
  uint64_t v15 = *(void *)v14;
  char v16 = *(unsigned char *)(v14 + 8);
  sub_100005554(*(void *)v14, v16);
  char v17 = sub_100016FF4(v15, v16);
  uint64_t result = sub_100005720(v15, v16);
  if ((v17 & 1) != 0
    && (sub_1000171F8((uint64_t)v13),
        sub_100087E50(),
        sub_10005B0C0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode), v19 = sub_100087FE0(), uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8), v20(v10, v7), result = ((uint64_t (*)(char *, uint64_t))v20)(v13, v7), (v19 & 1) == 0))
  {
    uint64_t v35 = v70;
    sub_100016FB8(v70);
    uint64_t v37 = v71;
    uint64_t v36 = v72;
    uint64_t v38 = v73;
    (*(void (**)(uint64_t, void, uint64_t))(v72 + 104))(v71, enum case for WidgetFamily.systemSmall(_:), v73);
    sub_10005B0C0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_1000880F0();
    sub_1000880F0();
    uint64_t v39 = v74;
    uint64_t v40 = v88;
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v41(v37, v38);
    v41(v35, v38);
    if (v39 == v40)
    {
      if (qword_1000A86E0 != -1) {
        swift_once();
      }
      uint64_t v88 = qword_1000AD9C8;
      char v89 = 0;
    }
    else
    {
      if (qword_1000A86D8 != -1) {
        swift_once();
      }
      uint64_t v88 = qword_1000AD9C0;
      char v89 = 1;
    }
    swift_retain();
    sub_1000877E0();
    uint64_t v72 = v74;
    unsigned int v66 = v75;
    sub_100058858((uint64_t)&v74);
    uint64_t v42 = v75;
    uint64_t v73 = v74;
    uint64_t v67 = v75;
    uint64_t v70 = v77;
    uint64_t v71 = v76;
    uint64_t v65 = v78;
    uint64_t v68 = v80;
    uint64_t v69 = v79;
    uint64_t v43 = v82;
    uint64_t v64 = v81;
    uint64_t v61 = v82;
    uint64_t v44 = v83;
    uint64_t v31 = v84;
    uint64_t v60 = v83;
    uint64_t v32 = v85;
    int v45 = v86;
    int v46 = v87;
    swift_retain();
    int v62 = v46;
    int v63 = v45;
    uint64_t v55 = v43;
    uint64_t v56 = v44;
    uint64_t v47 = v73;
    uint64_t v48 = v42;
    uint64_t v50 = v70;
    uint64_t v49 = v71;
    uint64_t v51 = v65;
    uint64_t v28 = v64;
    sub_10005A114(v73, v48, v71, v70, v65, v69, v68, v64, v55, v56, v31, v32, v45, v46);
    char v58 = v46;
    __int16 v57 = v45;
    uint64_t v30 = v60;
    uint64_t v29 = v61;
    uint64_t v52 = v49;
    uint64_t v53 = v50;
    uint64_t v27 = v68;
    uint64_t v26 = v69;
    sub_10005A280(v47, v67, v52, v53, v51, v69, v68, v28, v61, v60, v31, v32, v57, v58);
    uint64_t v21 = v72;
    uint64_t result = swift_release();
    uint64_t v25 = v51;
    uint64_t v24 = v70;
    uint64_t v23 = v71;
    uint64_t v22 = v67;
    uint64_t v34 = v66;
    if (v62) {
      int v54 = 0x10000;
    }
    else {
      int v54 = 0;
    }
    int v33 = v54 | v63;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v73 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    int v33 = 0;
    uint64_t v34 = 255;
  }
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v34;
  *(void *)(a1 + 16) = v73;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v23;
  *(void *)(a1 + 40) = v24;
  *(void *)(a1 + 48) = v25;
  *(void *)(a1 + 56) = v26;
  *(void *)(a1 + 64) = v27;
  *(void *)(a1 + 72) = v28;
  *(void *)(a1 + 80) = v29;
  *(void *)(a1 + 88) = v30;
  *(void *)(a1 + 96) = v31;
  *(void *)(a1 + 104) = v32;
  *(_WORD *)(a1 + 112) = v33;
  *(unsigned char *)(a1 + 114) = BYTE2(v33);
  return result;
}

uint64_t sub_100058858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100087EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CPMessageView();
  sub_100016FB8((uint64_t)v6);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 != enum case for WidgetFamily.systemSmall(_:))
  {
    if (v7 == enum case for WidgetFamily.systemMedium(_:))
    {
      uint64_t v10 = sub_1000876B0();
      if (qword_1000A86E0 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1000AD9C8;
      swift_retain();
      sub_100087410();
      sub_100087410();
      sub_100087D90();
      sub_100087400();
      long long v50 = (unint64_t)v10;
      long long v51 = 0uLL;
      *(void *)&v52[0] = 1;
      *((void *)&v52[0] + 1) = v11;
      *(void *)&v52[1] = v56;
      *((void *)&v52[1] + 1) = v57;
      *(void *)&v52[2] = v58;
      *((void *)&v52[2] + 1) = v59;
      long long v53 = v60;
      LOBYTE(v54) = 1;
      swift_retain();
      sub_100004FB4(&qword_1000AA538);
      sub_100006A8C(&qword_1000AA530, &qword_1000AA538);
      sub_1000877E0();
      long long v50 = *(_OWORD *)v48;
      long long v51 = *(_OWORD *)&v48[16];
      v52[0] = *(_OWORD *)&v48[32];
      v52[1] = *(_OWORD *)&v48[48];
      v52[2] = *(_OWORD *)&v48[64];
      long long v53 = *(_OWORD *)&v48[80];
      __int16 v54 = v48[96];
      sub_100004FB4(&qword_1000AA528);
      sub_100004FB4(&qword_1000AA548);
      sub_10005B1A4(&qword_1000AA520, &qword_1000AA528, &qword_1000AA530, &qword_1000AA538);
      sub_10005B240();
    }
    else
    {
      if (v7 != enum case for WidgetFamily.systemLarge(_:))
      {
        if (v7 != enum case for WidgetFamily.systemExtraLarge(_:))
        {
          if (v7 != enum case for WidgetFamily.accessoryCircular(_:)
            && v7 != enum case for WidgetFamily.accessoryRectangular(_:)
            && v7 != enum case for WidgetFamily.accessoryInline(_:))
          {
            v48[0] = 1;
            sub_1000877E0();
            *(void *)uint64_t v48 = v50;
            memset(&v48[8], 0, 90);
            char v49 = 1;
            sub_100004FB4(&qword_1000AA510);
            sub_100004FB4(&qword_1000AA280);
            sub_10005B108();
            sub_10005A4B8();
            sub_1000877E0();
            long long v38 = v51;
            long long v39 = v50;
            long long v36 = v52[1];
            long long v37 = v52[0];
            long long v34 = v53;
            long long v35 = v52[2];
            __int16 v22 = v54;
            char v23 = v55;
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
            long long v21 = v34;
            long long v20 = v35;
            long long v19 = v36;
            long long v18 = v37;
            long long v17 = v38;
            long long v16 = v39;
            goto LABEL_20;
          }
          v48[0] = 0;
          sub_1000877E0();
          *(void *)uint64_t v48 = v50;
          memset(&v48[8], 0, 90);
          char v49 = 1;
          goto LABEL_6;
        }
        uint64_t v24 = sub_1000876B0();
        sub_100057490(v1, (uint64_t)&v50);
        uint64_t v25 = v50;
        uint64_t v26 = BYTE8(v50);
        long long v27 = v51;
        uint64_t v28 = LOBYTE(v52[0]);
        uint64_t v29 = *((void *)&v52[0] + 1);
        uint64_t v30 = LOBYTE(v52[1]);
        long long v31 = *(_OWORD *)((char *)&v52[1] + 8);
        long long v50 = (unint64_t)v24;
        *(void *)&long long v51 = 0;
        *((void *)&v51 + 1) = v25;
        *(void *)&v52[0] = v26;
        *(_OWORD *)((char *)v52 + 8) = v27;
        *((void *)&v52[1] + 1) = v28;
        *(void *)&v52[2] = v29;
        *((void *)&v52[2] + 1) = v30;
        long long v53 = v31;
        LOBYTE(v54) = 1;
        swift_retain();
        sub_100004FB4(&qword_1000AA558);
        sub_100004FB4(&qword_1000AA538);
        sub_100006A8C(&qword_1000AA550, &qword_1000AA558);
        sub_100006A8C(&qword_1000AA530, &qword_1000AA538);
        sub_1000877E0();
        long long v50 = *(_OWORD *)v48;
        long long v51 = *(_OWORD *)&v48[16];
        v52[0] = *(_OWORD *)&v48[32];
        v52[1] = *(_OWORD *)&v48[48];
        v52[2] = *(_OWORD *)&v48[64];
        long long v53 = *(_OWORD *)&v48[80];
        LOBYTE(v54) = v48[96];
        HIBYTE(v54) = 1;
        sub_100004FB4(&qword_1000AA528);
        sub_100004FB4(&qword_1000AA548);
        sub_10005B1A4(&qword_1000AA520, &qword_1000AA528, &qword_1000AA530, &qword_1000AA538);
        sub_10005B240();
        sub_1000877E0();
        __int16 v14 = v46;
        if (v47) {
          __int16 v15 = 256;
        }
        else {
          __int16 v15 = 0;
        }
LABEL_18:
        *(_OWORD *)uint64_t v48 = v40;
        *(_OWORD *)&v48[16] = v41;
        *(_OWORD *)&v48[32] = v42;
        *(_OWORD *)&v48[48] = v43;
        *(_OWORD *)&v48[64] = v44;
        *(_OWORD *)&v48[80] = v45;
        *(_WORD *)&v48[96] = v15 | v14;
        char v49 = 0;
        sub_100004FB4(&qword_1000AA510);
        sub_100004FB4(&qword_1000AA280);
        sub_10005B108();
        sub_10005A4B8();
        sub_1000877E0();
        uint64_t result = swift_release();
        goto LABEL_19;
      }
      uint64_t v12 = sub_100087720();
      if (qword_1000A86E0 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_1000AD9C8;
      swift_retain();
      sub_100087410();
      sub_100051E14();
      sub_100087D90();
      sub_100087400();
      long long v50 = (unint64_t)v12;
      long long v51 = 0uLL;
      *(void *)&v52[0] = 1;
      *((void *)&v52[0] + 1) = v13;
      *(void *)&v52[1] = v56;
      *((void *)&v52[1] + 1) = v57;
      *(void *)&v52[2] = v58;
      *((void *)&v52[2] + 1) = v59;
      long long v53 = v60;
      LOBYTE(v54) = 0;
      swift_retain();
      sub_100004FB4(&qword_1000AA558);
      sub_100004FB4(&qword_1000AA538);
      sub_100006A8C(&qword_1000AA550, &qword_1000AA558);
      sub_100006A8C(&qword_1000AA530, &qword_1000AA538);
      sub_1000877E0();
      long long v50 = *(_OWORD *)v48;
      long long v51 = *(_OWORD *)&v48[16];
      v52[0] = *(_OWORD *)&v48[32];
      v52[1] = *(_OWORD *)&v48[48];
      v52[2] = *(_OWORD *)&v48[64];
      long long v53 = *(_OWORD *)&v48[80];
      LOBYTE(v54) = v48[96];
      HIBYTE(v54) = 1;
      sub_100004FB4(&qword_1000AA528);
      sub_100004FB4(&qword_1000AA548);
      sub_10005B1A4(&qword_1000AA520, &qword_1000AA528, &qword_1000AA530, &qword_1000AA538);
      sub_10005B240();
    }
    sub_1000877E0();
    __int16 v14 = v46;
    if (v47) {
      __int16 v15 = 256;
    }
    else {
      __int16 v15 = 0;
    }
    goto LABEL_18;
  }
  LOBYTE(v54) = 0;
  long long v53 = 0u;
  memset(v52, 0, sizeof(v52));
  long long v50 = 0u;
  long long v51 = 0u;
  sub_100004FB4(&qword_1000AA538);
  sub_100006A8C(&qword_1000AA530, &qword_1000AA538);
  sub_1000877E0();
  long long v50 = *(_OWORD *)v48;
  long long v51 = *(_OWORD *)&v48[16];
  v52[0] = *(_OWORD *)&v48[32];
  v52[1] = *(_OWORD *)&v48[48];
  v52[2] = *(_OWORD *)&v48[64];
  long long v53 = *(_OWORD *)&v48[80];
  __int16 v54 = v48[96];
  sub_100004FB4(&qword_1000AA528);
  sub_100004FB4(&qword_1000AA548);
  sub_10005B1A4(&qword_1000AA520, &qword_1000AA528, &qword_1000AA530, &qword_1000AA538);
  sub_10005B240();
  sub_1000877E0();
  if (v47) {
    __int16 v8 = 256;
  }
  else {
    __int16 v8 = 0;
  }
  *(_OWORD *)uint64_t v48 = v40;
  *(_OWORD *)&v48[16] = v41;
  *(_OWORD *)&v48[32] = v42;
  *(_OWORD *)&v48[48] = v43;
  *(_OWORD *)&v48[64] = v44;
  *(_OWORD *)&v48[80] = v45;
  *(_WORD *)&v48[96] = v8 | v46;
  char v49 = 0;
LABEL_6:
  sub_100004FB4(&qword_1000AA510);
  sub_100004FB4(&qword_1000AA280);
  sub_10005B108();
  sub_10005A4B8();
  uint64_t result = sub_1000877E0();
LABEL_19:
  long long v16 = v50;
  long long v17 = v51;
  long long v18 = v52[0];
  long long v19 = v52[1];
  long long v20 = v52[2];
  long long v21 = v53;
  __int16 v22 = v54;
  char v23 = v55;
LABEL_20:
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v17;
  *(_OWORD *)(a1 + 32) = v18;
  *(_OWORD *)(a1 + 48) = v19;
  *(_OWORD *)(a1 + 64) = v20;
  *(_OWORD *)(a1 + 80) = v21;
  *(_WORD *)(a1 + 96) = v22;
  *(unsigned char *)(a1 + 98) = v23;
  return result;
}

uint64_t sub_1000592D8()
{
  uint64_t v1 = sub_100087840();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000AA1D0);
  __chkstk_darwin(v5 - 8);
  int v7 = (uint64_t *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004FB4(&qword_1000AA1D8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *int v7 = sub_100087D90();
  v7[1] = v11;
  uint64_t v12 = sub_100004FB4(&qword_1000AA1E0);
  sub_100059560(v0, (uint64_t)v7 + *(int *)(v12 + 44));
  type metadata accessor for CPMessageView();
  sub_100087410();
  sub_100087410();
  sub_100087D90();
  sub_100087400();
  sub_100006B3C((uint64_t)v7, (uint64_t)v10, &qword_1000AA1D0);
  uint64_t v13 = &v10[*(int *)(v8 + 36)];
  long long v14 = v16[1];
  *(_OWORD *)uint64_t v13 = v16[0];
  *((_OWORD *)v13 + 1) = v14;
  *((_OWORD *)v13 + 2) = v16[2];
  sub_100006AE0((uint64_t)v7, &qword_1000AA1D0);
  sub_100087830();
  sub_100087D90();
  sub_100059F94();
  sub_100087B30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100006AE0((uint64_t)v10, &qword_1000AA1D8);
}

void sub_100059560(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FB4(&qword_1000AA1F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v72 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v68 = (uint64_t)&v60 - v7;
  uint64_t v8 = sub_100004FB4(&qword_1000AA200);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = sub_100004FB4(&qword_1000AA208);
  __chkstk_darwin(v14 - 8);
  uint64_t v66 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  long long v18 = (char *)&v60 - v17;
  sub_100058278((uint64_t)&v81);
  uint64_t v19 = v81;
  uint64_t v20 = v82;
  uint64_t v65 = v81;
  uint64_t v64 = v82;
  uint64_t v21 = v83;
  uint64_t v63 = v83;
  uint64_t v79 = v84;
  uint64_t v80 = v85;
  uint64_t v71 = v86;
  uint64_t v70 = v87;
  uint64_t v69 = v88;
  uint64_t v77 = v90;
  uint64_t v78 = v89;
  uint64_t v75 = v92;
  uint64_t v76 = v91;
  int v61 = v96;
  int v62 = v95;
  int v67 = v95 | (v96 << 16);
  uint64_t v73 = v93;
  uint64_t v74 = v94;
  *(void *)long long v18 = sub_100087720();
  *((void *)v18 + 1) = 0;
  v18[16] = 0;
  uint64_t v22 = (uint64_t)&v18[*(int *)(sub_100004FB4(&qword_1000AA210) + 44)];
  long long v60 = v18;
  *(void *)uint64_t v13 = sub_1000876B0();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v23 = sub_100004FB4(&qword_1000AA218);
  sub_100059B3C(a1, (uint64_t)&v13[*(int *)(v23 + 44)]);
  sub_100006B3C((uint64_t)v13, (uint64_t)v10, &qword_1000AA200);
  sub_100006B3C((uint64_t)v10, v22, &qword_1000AA200);
  uint64_t v24 = v22 + *(int *)(sub_100004FB4(&qword_1000AA220) + 48);
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  sub_100006AE0((uint64_t)v13, &qword_1000AA200);
  sub_100006AE0((uint64_t)v10, &qword_1000AA200);
  uint64_t v25 = v68;
  sub_100057654(v68);
  uint64_t v26 = v66;
  sub_100006B3C((uint64_t)v18, v66, &qword_1000AA208);
  uint64_t v27 = v72;
  sub_100006B3C(v25, v72, &qword_1000AA1F8);
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v20;
  uint64_t v28 = v79;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v28;
  uint64_t v29 = v71;
  *(void *)(a2 + 32) = v80;
  *(void *)(a2 + 40) = v29;
  uint64_t v30 = v69;
  *(void *)(a2 + 48) = v70;
  *(void *)(a2 + 56) = v30;
  uint64_t v31 = v77;
  uint64_t v32 = v78;
  *(void *)(a2 + 64) = v78;
  *(void *)(a2 + 72) = v31;
  uint64_t v34 = v75;
  uint64_t v33 = v76;
  *(void *)(a2 + 80) = v76;
  *(void *)(a2 + 88) = v34;
  uint64_t v35 = v73;
  uint64_t v36 = v74;
  *(void *)(a2 + 96) = v73;
  *(void *)(a2 + 104) = v36;
  *(unsigned char *)(a2 + 114) = v61;
  *(_WORD *)(a2 + 112) = v62;
  uint64_t v37 = sub_100004FB4(&qword_1000AA228);
  sub_100006B3C(v26, a2 + *(int *)(v37 + 48), &qword_1000AA208);
  sub_100006B3C(v27, a2 + *(int *)(v37 + 64), &qword_1000AA1F8);
  LODWORD(v26) = v67;
  uint64_t v57 = v35;
  uint64_t v58 = v36;
  uint64_t v55 = v33;
  uint64_t v56 = v34;
  uint64_t v53 = v32;
  uint64_t v54 = v31;
  uint64_t v38 = v32;
  uint64_t v39 = v65;
  LOBYTE(a2) = v64;
  uint64_t v40 = v63;
  uint64_t v41 = v79;
  uint64_t v42 = v80;
  uint64_t v43 = v71;
  uint64_t v44 = v70;
  uint64_t v45 = v69;
  sub_10005A034(v65, v64, v63, v79, v80, v71, v70, v69, v53, v54, v55, v56, v57, v58, v67, SBYTE2(v67));
  sub_10005A034(v39, a2, v40, v41, v42, v43, v44, v45, v38, v77, v76, v75, v73, v74, v26, SBYTE2(v26));
  sub_100006AE0(v68, &qword_1000AA1F8);
  sub_100006AE0((uint64_t)v60, &qword_1000AA208);
  int v59 = v26;
  uint64_t v46 = v74;
  uint64_t v47 = v73;
  uint64_t v48 = v75;
  uint64_t v49 = v76;
  uint64_t v50 = v77;
  uint64_t v51 = v39;
  LOBYTE(v39) = v64;
  uint64_t v52 = v63;
  sub_10005A1A0(v51, v64, v63, v79, v80, v43, v44, v45, v78, v77, v76, v75, v73, v74, v59, SBYTE2(v59));
  sub_100006AE0(v72, &qword_1000AA1F8);
  sub_100006AE0(v66, &qword_1000AA208);
  sub_10005A1A0(v65, v39, v52, v79, v80, v43, v44, v45, v78, v50, v49, v48, v47, v46, v67, SBYTE2(v67));
}

uint64_t sub_100059B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_100087EC0();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin(v3);
  uint64_t v38 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000AA320);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = sub_100004FB4(&qword_1000AA328);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FB4(&qword_1000AA330);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004FB4(&qword_1000AA338);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v37 = (uint64_t)&v36 - v23;
  *(void *)uint64_t v13 = sub_1000876B0();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v24 = (uint64_t)&v13[*(int *)(sub_100004FB4(&qword_1000AA340) + 44)];
  *(void *)uint64_t v10 = sub_100087730();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v25 = sub_100004FB4(&qword_1000AA348);
  sub_100052C94(a1, &v10[*(int *)(v25 + 44)]);
  sub_100006B3C((uint64_t)v10, (uint64_t)v7, &qword_1000AA320);
  sub_100006B3C((uint64_t)v7, v24, &qword_1000AA320);
  uint64_t v26 = v24 + *(int *)(sub_100004FB4(&qword_1000AA350) + 48);
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  sub_100006AE0((uint64_t)v10, &qword_1000AA320);
  sub_100006AE0((uint64_t)v7, &qword_1000AA320);
  LOBYTE(v7) = sub_100087880();
  sub_100006B3C((uint64_t)v13, (uint64_t)v17, &qword_1000AA328);
  uint64_t v27 = &v17[*(int *)(v15 + 44)];
  *uint64_t v27 = (char)v7;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  v27[40] = 1;
  sub_100006AE0((uint64_t)v13, &qword_1000AA328);
  uint64_t v28 = a1 + *(int *)(type metadata accessor for CPMessageView() + 36);
  uint64_t v29 = v38;
  sub_100016FB8(v38);
  sub_10002AD44(v28, v29);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v29, v40);
  sub_100051E14();
  sub_100087D90();
  sub_100087400();
  sub_100006B3C((uint64_t)v17, (uint64_t)v21, &qword_1000AA330);
  uint64_t v30 = &v21[*(int *)(v19 + 44)];
  long long v31 = v43;
  *(_OWORD *)uint64_t v30 = v42;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v44;
  sub_100006AE0((uint64_t)v17, &qword_1000AA330);
  uint64_t v32 = v37;
  sub_100006C4C((uint64_t)v21, v37, &qword_1000AA338);
  sub_100006B3C(v32, (uint64_t)v21, &qword_1000AA338);
  uint64_t v33 = v41;
  sub_100006B3C((uint64_t)v21, v41, &qword_1000AA338);
  uint64_t v34 = v33 + *(int *)(sub_100004FB4(&qword_1000AA358) + 48);
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  sub_100006AE0(v32, &qword_1000AA338);
  return sub_100006AE0((uint64_t)v21, &qword_1000AA338);
}

unint64_t sub_100059F94()
{
  unint64_t result = qword_1000AA1E8;
  if (!qword_1000AA1E8)
  {
    sub_100004FF8(&qword_1000AA1D8);
    sub_100006A8C(&qword_1000AA1F0, &qword_1000AA1D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA1E8);
  }
  return result;
}

void sub_10005A034(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, char a16)
{
  if (a2 != -1)
  {
    swift_retain();
    sub_10005A114(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 & 1);
  }
}

uint64_t sub_10005A114(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14)
{
  if ((a14 & 1) == 0) {
    return sub_10005A2F0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, (unsigned __int16)(a13 & 0x1FF) >> 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10005A184, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10005A198);
  }
  return result;
}

uint64_t sub_10005A184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a13) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10005A198()
{
  return swift_retain();
}

void sub_10005A1A0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, char a16)
{
  if (a2 != -1)
  {
    swift_release();
    sub_10005A280(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 & 1);
  }
}

uint64_t sub_10005A280(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14)
{
  if ((a14 & 1) == 0) {
    return sub_10005A2F0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, (unsigned __int16)(a13 & 0x1FF) >> 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10005A33C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10005A350);
  }
  return result;
}

uint64_t sub_10005A2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t (*a15)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a16)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a14) {
    return a16(a1, a2, a3, a4);
  }
  else {
    return a15(a1, a2, a3, a4);
  }
}

uint64_t sub_10005A33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a13) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10005A350()
{
  return swift_release();
}

unint64_t sub_10005A358()
{
  unint64_t result = qword_1000AA288;
  if (!qword_1000AA288)
  {
    sub_100004FF8(&qword_1000AA278);
    sub_10005B1A4(&qword_1000AA290, &qword_1000AA270, &qword_1000AA298, &qword_1000AA250);
    sub_10005A3F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA288);
  }
  return result;
}

unint64_t sub_10005A3F4()
{
  unint64_t result = qword_1000AA2A0;
  if (!qword_1000AA2A0)
  {
    sub_100004FF8(&qword_1000AA240);
    sub_100006A8C(&qword_1000AA2A8, &qword_1000AA248);
    sub_100006A8C(&qword_1000AA2B0, &qword_1000AA230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA2A0);
  }
  return result;
}

unint64_t sub_10005A4B8()
{
  unint64_t result = qword_1000AA2B8;
  if (!qword_1000AA2B8)
  {
    sub_100004FF8(&qword_1000AA280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA2B8);
  }
  return result;
}

uint64_t sub_10005A530()
{
  return sub_100087590();
}

unint64_t sub_10005A578()
{
  unint64_t result = qword_1000AA3C8;
  if (!qword_1000AA3C8)
  {
    sub_100004FF8(&qword_1000AA3C0);
    sub_10005A618();
    sub_100006A8C(&qword_1000AA400, &qword_1000AA408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA3C8);
  }
  return result;
}

unint64_t sub_10005A618()
{
  unint64_t result = qword_1000AA3D0;
  if (!qword_1000AA3D0)
  {
    sub_100004FF8(&qword_1000AA3D8);
    sub_10005A6E4(&qword_1000AA3E0, &qword_1000AA3E8, (void (*)(void))sub_10005A760);
    sub_100006A8C(&qword_1000A9410, &qword_1000A9418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA3D0);
  }
  return result;
}

uint64_t sub_10005A6E4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005A760()
{
  unint64_t result = qword_1000AA3F0;
  if (!qword_1000AA3F0)
  {
    sub_100004FF8(&qword_1000AA3F8);
    sub_100006A8C(&qword_1000A97A8, &qword_1000A97B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA3F0);
  }
  return result;
}

uint64_t sub_10005A800()
{
  return sub_10005A6E4(&qword_1000AA418, &qword_1000AA3A8, (void (*)(void))sub_10005A830);
}

unint64_t sub_10005A830()
{
  unint64_t result = qword_1000AA420;
  if (!qword_1000AA420)
  {
    sub_100004FF8(&qword_1000AA3A0);
    sub_100004FF8(&qword_1000AA3C0);
    sub_10005A578();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA420);
  }
  return result;
}

uint64_t sub_10005A8E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005A950(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10005A9B8()
{
  unint64_t result = qword_1000AA428;
  if (!qword_1000AA428)
  {
    sub_100004FF8(&qword_1000AA380);
    sub_10005AA58();
    sub_100006A8C(&qword_1000AA400, &qword_1000AA408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA428);
  }
  return result;
}

unint64_t sub_10005AA58()
{
  unint64_t result = qword_1000AA430;
  if (!qword_1000AA430)
  {
    sub_100004FF8(&qword_1000AA378);
    sub_10005A6E4(&qword_1000AA438, &qword_1000AA370, (void (*)(void))sub_10005AB24);
    sub_100006A8C(&qword_1000A9410, &qword_1000A9418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA430);
  }
  return result;
}

unint64_t sub_10005AB24()
{
  unint64_t result = qword_1000AA440;
  if (!qword_1000AA440)
  {
    sub_100004FF8(&qword_1000AA368);
    sub_10005A6E4(&qword_1000A93D0, &qword_1000A9388, (void (*)(void))sub_100024C34);
    sub_100006A8C(&qword_1000A97A8, &qword_1000A97B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA440);
  }
  return result;
}

unint64_t sub_10005ABF0()
{
  unint64_t result = qword_1000AA4A8;
  if (!qword_1000AA4A8)
  {
    sub_100004FF8(&qword_1000AA498);
    sub_10005AC90();
    sub_100006A8C(&qword_1000AA400, &qword_1000AA408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4A8);
  }
  return result;
}

unint64_t sub_10005AC90()
{
  unint64_t result = qword_1000AA4B0;
  if (!qword_1000AA4B0)
  {
    sub_100004FF8(&qword_1000AA490);
    sub_10005AB24();
    sub_100006A8C(&qword_1000A9410, &qword_1000A9418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4B0);
  }
  return result;
}

unint64_t sub_10005AD38()
{
  unint64_t result = qword_1000AA4C0;
  if (!qword_1000AA4C0)
  {
    sub_100004FF8(&qword_1000AA480);
    sub_10005ADD8();
    sub_100006A8C(&qword_1000AA400, &qword_1000AA408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4C0);
  }
  return result;
}

unint64_t sub_10005ADD8()
{
  unint64_t result = qword_1000AA4C8;
  if (!qword_1000AA4C8)
  {
    sub_100004FF8(&qword_1000AA478);
    sub_10005A6E4(&qword_1000AA4D0, &qword_1000AA470, (void (*)(void))sub_10005AEA4);
    sub_100006A8C(&qword_1000AA500, &qword_1000AA4B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4C8);
  }
  return result;
}

unint64_t sub_10005AEA4()
{
  unint64_t result = qword_1000AA4D8;
  if (!qword_1000AA4D8)
  {
    sub_100004FF8(&qword_1000AA468);
    sub_10005AF44();
    sub_100006A8C(&qword_1000A93F0, &qword_1000A93F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4D8);
  }
  return result;
}

unint64_t sub_10005AF44()
{
  unint64_t result = qword_1000AA4E0;
  if (!qword_1000AA4E0)
  {
    sub_100004FF8(&qword_1000AA460);
    sub_10005AFF0();
    sub_10005B0C0(&qword_1000A93E8, (void (*)(uint64_t))type metadata accessor for DynamicTypeFont);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4E0);
  }
  return result;
}

unint64_t sub_10005AFF0()
{
  unint64_t result = qword_1000AA4E8;
  if (!qword_1000AA4E8)
  {
    sub_100004FF8(&qword_1000AA4F0);
    sub_10005B06C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4E8);
  }
  return result;
}

unint64_t sub_10005B06C()
{
  unint64_t result = qword_1000AA4F8;
  if (!qword_1000AA4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4F8);
  }
  return result;
}

uint64_t sub_10005B0C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005B108()
{
  unint64_t result = qword_1000AA518;
  if (!qword_1000AA518)
  {
    sub_100004FF8(&qword_1000AA510);
    sub_10005B1A4(&qword_1000AA520, &qword_1000AA528, &qword_1000AA530, &qword_1000AA538);
    sub_10005B240();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA518);
  }
  return result;
}

uint64_t sub_10005B1A4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    sub_100006A8C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005B240()
{
  unint64_t result = qword_1000AA540;
  if (!qword_1000AA540)
  {
    sub_100004FF8(&qword_1000AA548);
    sub_100006A8C(&qword_1000AA550, &qword_1000AA558);
    sub_100006A8C(&qword_1000AA530, &qword_1000AA538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA540);
  }
  return result;
}

uint64_t sub_10005B304()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005B374(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FB4(&qword_1000AA798);
  uint64_t v2 = (void *)sub_100088400();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10005CB90(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005B498(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FB4(&qword_1000A8CF0);
  uint64_t v2 = (void *)sub_100088400();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_10005CB90(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005B5B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FB4(&qword_1000AA7B0);
  uint64_t v2 = (void *)sub_100088400();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = (void *)*(v4 - 1);
    uint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    id v9 = v7;
    unint64_t result = sub_10005CB90(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v12 = v5;
    v12[1] = v6;
    BOOL v13 = (void *)(v2[7] + 16 * result);
    *BOOL v13 = v9;
    v13[1] = v8;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005B6D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FB4(&qword_1000AA7A0);
  uint64_t v2 = sub_100088400();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100006B3C(v6, (uint64_t)&v15, &qword_1000AA7A8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10005CB90(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100046924(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005B810(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004FB4(&qword_1000AA7B8);
  uint64_t v2 = sub_100088400();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100006B3C(v6, (uint64_t)v15, &qword_1000AA7C0);
    unint64_t result = sub_10005CC08((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100046924(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10005B954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v12[3] = 0;
  void v12[2] = 973039644;
  v12[4] = 0;
  v12[5] = 0xD000000000000011;
  v12[6] = 0x800000010008C1B0;
  long long v17 = (char *)v12 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_lastPlayedDate;
  sub_100087210();
  uint64_t v18 = (void *)((char *)v12 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_bundleID);
  *uint64_t v18 = 0xD00000000000001FLL;
  v18[1] = 0x800000010008C1D0;
  uint64_t v19 = (void *)((char *)v12 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_icons);
  unint64_t *v19 = sub_10005B374((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)((char *)v12 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor) = 0;
  *(void *)((char *)v12 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor) = 0;
  uint64_t v20 = (void *)((char *)v12 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_metricsTopic);
  *uint64_t v20 = 0;
  v20[1] = 0;
  void v12[2] = a1;
  v12[5] = a2;
  v12[6] = a3;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v21 = sub_100087220();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 24))(v17, a4, v21);
  swift_endAccess();
  *uint64_t v18 = a5;
  v18[1] = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t *v19 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v20 = a10;
  v20[1] = a11;
  swift_bridgeObjectRelease();
  if (!a9)
  {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a4, v21);
    unint64_t *v19 = a7;
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v12[3] = a8;
  v12[4] = a9;
  swift_bridgeObjectRelease();
  unint64_t *v19 = sub_10005B374((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v24 = v12[4];
  if (v24)
  {
    uint64_t v25 = v12[3];
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v31 = *v19;
    unint64_t *v19 = 0x8000000000000000;
    sub_10005D754(v25, v24, v25, v24, isUniquelyReferenced_nonNull_native);
    unint64_t *v19 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a4, v21);
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005BC60()
{
  uint64_t v1 = sub_100087220();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_lastPlayedDate;
  swift_beginAccess();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v6(v4, v5, v1);
  sub_1000871F0();
  double v8 = v7;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  if (v8 > -3600.0) {
    return 0x414C505F5453554ALL;
  }
  id v11 = [objc_allocWithZone((Class)NSRelativeDateTimeFormatter) init];
  [v11 setUnitsStyle:0];
  v6(v4, v5, v1);
  Class isa = sub_1000871D0().super.isa;
  v9(v4, v1);
  sub_100087210();
  Class v13 = sub_1000871D0().super.isa;
  v9(v4, v1);
  id v14 = [v11 localizedStringForDate:isa relativeToDate:v13];

  uint64_t v10 = sub_100088000();
  return v10;
}

void sub_10005BE90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v25 = a4;
  uint64_t v7 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v4 + 16);
  uint64_t v22 = sub_1000884E0();
  uint64_t v19 = v4 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_bundleID;
  swift_bridgeObjectRetain();
  uint64_t v21 = a3;
  sub_100087EB0();
  uint64_t v20 = v4 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_metricsTopic;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000872E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_100087170();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10000AF1C((uint64_t)v9);
    uint64_t v26 = *(void *)(v5 + 16);
    sub_1000884E0();
    NSString v12 = sub_100087FF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    NSString v13 = sub_100087FF0();
    swift_bridgeObjectRelease();
    NSString v14 = sub_100087FF0();
    uint64_t v15 = sub_100087EB0();
    swift_bridgeObjectRetain();
    NSString v16 = sub_100087FF0();
    swift_bridgeObjectRelease();
    if (*(void *)(v20 + 8))
    {
      swift_bridgeObjectRetain();
      NSString v17 = sub_100087FF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v17 = 0;
    }
    id v18 = [self URLWithAdamId:v12 bundleId:v13 widgetId:v14 widgetSize:v15 localizedName:v16 topic:v17];

    sub_100087140();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v25, v9, v10);
  }
}

uint64_t sub_10005C1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 32);
  if (!v3)
  {
    uint64_t v11 = v2 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_icons;
    swift_beginAccess();
    if (*(void *)(*(void *)v11 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10005CB90(a1, a2);
      if (v12)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v13 = objc_allocWithZone((Class)UIImage);
        NSString v14 = sub_100087FF0();
        swift_bridgeObjectRelease();
        id v8 = [v13 initWithContentsOfFile:v14];

        return (uint64_t)v8;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = v2 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_icons;
  swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10005CB90(v4, v3);
    if (v6)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v7 = sub_100087FF0();
      swift_bridgeObjectRelease();
      id v8 = [self imageNamed:v7];

      return (uint64_t)v8;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10005C3A4()
{
  uint64_t result = sub_100087290();
  qword_1000AA560 = v1;
  return result;
}

uint64_t sub_10005C3CC()
{
  uint64_t v0 = sub_100087220();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A8718 != -1) {
    swift_once();
  }
  sub_1000871E0();
  unint64_t v3 = sub_10005B374((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for AppDisplayData();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_10005B954(973039644, 0xD000000000000011, 0x800000010008C1B0, (uint64_t)v2, 0xD00000000000001FLL, 0x800000010008C1D0, v3, 0x6E6F63496B636F4DLL, 0xE900000000000036, 0, 0);
  qword_1000AA568 = v4;
  return result;
}

uint64_t sub_10005C528()
{
  sub_100004FB4(&qword_1000A8CC0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10008A3C0;
  if (qword_1000A8720 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1000AA568;
  *(void *)(v0 + 32) = qword_1000AA568;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = v1;
  *(void *)(v0 + 80) = v1;
  *(void *)(v0 + 88) = v1;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 112) = v1;
  swift_retain_n();
  swift_retain_n();
  sub_100088140();
  qword_1000ADA38 = v0;
  return swift_retain_n();
}

uint64_t sub_10005C604()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_lastPlayedDate;
  uint64_t v2 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10005C6D0()
{
  sub_10005C604();

  return swift_deallocClassInstance();
}

uint64_t sub_10005C728()
{
  return type metadata accessor for AppDisplayData();
}

uint64_t type metadata accessor for AppDisplayData()
{
  uint64_t result = qword_1000AA598;
  if (!qword_1000AA598) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10005C77C()
{
  uint64_t result = sub_100087220();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

Swift::Int sub_10005C854()
{
  uint64_t v1 = *v0;
  sub_100088530();
  sub_100088540(*(void *)(v1 + 16));
  return sub_100088550();
}

void sub_10005C89C()
{
  sub_100088540(*(void *)(*(void *)v0 + 16));
}

Swift::Int sub_10005C8CC()
{
  sub_100088530();
  sub_100088540(*(void *)(*(void *)v0 + 16));
  return sub_100088550();
}

BOOL sub_10005C910(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16);
}

uint64_t sub_10005C92C()
{
  sub_100088310(71);
  v6._object = (void *)0x800000010008C190;
  v6._countAndFlagsBits = 0xD000000000000019;
  sub_100088040(v6);
  v7._countAndFlagsBits = sub_1000884E0();
  sub_100088040(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x6C746974090A202CLL;
  v8._object = (void *)0xEB00000000203A65;
  sub_100088040(v8);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v1;
  v9._object = v2;
  sub_100088040(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x646E7562090A202CLL;
  v10._object = (void *)0xEE00203A4449656CLL;
  sub_100088040(v10);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_bundleID);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_bundleID + 8);
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v3;
  v11._object = v4;
  sub_100088040(v11);
  swift_bridgeObjectRelease();
  v12._object = (void *)0xEB00000000203A73;
  v12._countAndFlagsBits = 0x6E6F6369090A202CLL;
  sub_100088040(v12);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = sub_100087FB0();
  sub_100088040(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 10506;
  v14._object = (void *)0xE200000000000000;
  sub_100088040(v14);
  return 0;
}

uint64_t sub_10005CB10()
{
  return sub_10005C92C();
}

unint64_t sub_10005CB38()
{
  unint64_t result = qword_1000AA790;
  if (!qword_1000AA790)
  {
    type metadata accessor for AppDisplayData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA790);
  }
  return result;
}

unint64_t sub_10005CB90(uint64_t a1, uint64_t a2)
{
  sub_100088530();
  sub_100088030();
  Swift::Int v4 = sub_100088550();

  return sub_10005CC4C(a1, a2, v4);
}

unint64_t sub_10005CC08(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000882B0(*(void *)(v2 + 40));

  return sub_10005CD30(a1, v4);
}

unint64_t sub_10005CC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    Swift::String v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000884F0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        Swift::String v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000884F0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10005CD30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000465AC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1000882C0();
      sub_100046608((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10005CDF8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004FB4(&qword_1000AA798);
  char v42 = a2;
  uint64_t v6 = sub_1000883F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_100088530();
    sub_100088030();
    uint64_t result = sub_100088550();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10005D120(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004FB4(&qword_1000AA7B0);
  char v43 = a2;
  uint64_t v6 = sub_1000883F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v41) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v42 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v42 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v40;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v42 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v41) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v42 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v5 + 56) + v31;
    uint64_t v37 = *(void **)v35;
    uint64_t v36 = *(void *)(v35 + 8);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v38 = v37;
    }
    sub_100088530();
    sub_100088030();
    uint64_t result = sub_100088550();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v37;
    v20[1] = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10005D444(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004FB4(&qword_1000A8CF0);
  char v38 = a2;
  uint64_t v6 = sub_1000883F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_100088530();
    sub_100088030();
    uint64_t result = sub_100088550();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10005D754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10005CB90(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10005DBD4();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      int64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *int64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_10005CDF8(v17, a5 & 1);
  unint64_t v23 = sub_10005CB90(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_100088520();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  *char v25 = a3;
  v25[1] = a4;
  unint64_t v26 = (void *)(v20[7] + 16 * v14);
  *unint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

void sub_10005D8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10005CB90(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10005DD90();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 16 * v14;

      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      return;
    }
    goto LABEL_11;
  }
  sub_10005D120(v17, a5 & 1);
  unint64_t v22 = sub_10005CB90(a3, a4);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    sub_100088520();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v24 = (uint64_t *)(v20[6] + 16 * v14);
  *char v24 = a3;
  v24[1] = a4;
  char v25 = (void *)(v20[7] + 16 * v14);
  *char v25 = a1;
  v25[1] = a2;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v28;

  swift_bridgeObjectRetain();
}

void sub_10005DA64(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10005CB90(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10005DF48();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10005D444(v15, a4 & 1);
  unint64_t v20 = sub_10005CB90(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_100088520();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

void *sub_10005DBD4()
{
  uint64_t v1 = v0;
  sub_100004FB4(&qword_1000AA798);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000883E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    BOOL v24 = (void *)(*(void *)(v4 + 56) + v16);
    *BOOL v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10005DD90()
{
  uint64_t v1 = v0;
  sub_100004FB4(&qword_1000AA7B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000883E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v22 = *(void **)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    BOOL v24 = (void *)(*(void *)(v4 + 56) + v16);
    *BOOL v24 = v22;
    v24[1] = v21;
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10005DF48()
{
  uint64_t v1 = v0;
  sub_100004FB4(&qword_1000A8CF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000883E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10005E0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100087470();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10005E168(uint64_t a1)
{
  uint64_t v2 = sub_100087470();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10005E1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100087470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10005E230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100087470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10005E294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100087470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10005E2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100087470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10005E35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005E370);
}

uint64_t sub_10005E370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100087470();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10005E3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005E3F0);
}

uint64_t sub_10005E3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100087470();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ViewGeometryAnalyzer()
{
  uint64_t result = qword_1000AA820;
  if (!qword_1000AA820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10005E4AC()
{
  uint64_t result = sub_100087470();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10005E538()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10005E554()
{
  double result = 0.0;
  xmmword_1000ADA70 = 0u;
  unk_1000ADA80 = 0u;
  return result;
}

double sub_10005E568@<D0>(_OWORD *a1@<X8>)
{
  if (qword_1000A8730 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_1000ADA70;
  long long v3 = unk_1000ADA80;
  *a1 = xmmword_1000ADA70;
  a1[1] = v3;
  return result;
}

double sub_10005E5C8(_OWORD *a1, void (*a2)(_OWORD *__return_ptr))
{
  a2(v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  return result;
}

uint64_t sub_10005E610@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_10005E6FC(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_10005E838((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_10005E89C;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_10005E6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ViewGeometryAnalyzer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E760()
{
  uint64_t v1 = *(void *)(type metadata accessor for ViewGeometryAnalyzer() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_100087470();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10005E838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ViewGeometryAnalyzer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E89C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ViewGeometryAnalyzer();
  uint64_t v2 = sub_100087BB0();
  uint64_t result = sub_100087420();
  *(void *)a1 = v2;
  *(_WORD *)(a1 + 8) = 256;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  return result;
}

ValueMetadata *type metadata accessor for CGRectPreferenceKey()
{
  return &type metadata for CGRectPreferenceKey;
}

unint64_t sub_10005E940()
{
  unint64_t result = qword_1000AA858;
  if (!qword_1000AA858)
  {
    sub_100004FF8(&qword_1000AA860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA858);
  }
  return result;
}

uint64_t sub_10005E99C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC00000065746144;
  unint64_t v3 = 0x6E6F697461657263;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E6F697461657263;
  unint64_t v6 = 0xEC00000065746144;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x44496D616461;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x4449656C646E7562;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x656C746974;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x656C746974627573;
      break;
    case 5:
      unint64_t v5 = 0x7374726F70707573;
      unint64_t v6 = 0xEE00656461637241;
      break;
    case 6:
      unint64_t v6 = 0x800000010008B660;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 7:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = 0x800000010008B680;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x44496D616461) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x4449656C646E7562) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x656C746974) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x656C746974627573) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v2 = 0xEE00656461637241;
      if (v5 != 0x7374726F70707573) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v2 = 0x800000010008B660;
      unint64_t v3 = 0xD000000000000011;
      goto LABEL_21;
    case 7:
      unint64_t v2 = 0x800000010008B680;
      if (v5 != 0xD00000000000001ALL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v3) {
        goto LABEL_25;
      }
LABEL_22:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1000884F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10005EC58(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000015;
    }
    else {
      unint64_t v3 = 0xD00000000000001ALL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x800000010008B5E0;
    }
    else {
      unint64_t v4 = 0x800000010008B600;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000015;
      }
      else {
        unint64_t v6 = 0xD00000000000001ALL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x800000010008B5E0;
      }
      else {
        unint64_t v7 = 0x800000010008B600;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x6B726F77747261;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6B726F77747261)
  {
LABEL_21:
    char v8 = sub_1000884F0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10005ED64(uint64_t a1, uint64_t a2)
{
  uint64_t v82 = a2;
  uint64_t v84 = type metadata accessor for AppMetadata();
  __chkstk_darwin(v84);
  uint64_t v81 = (uint64_t)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100087170();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v83 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v78 - v10;
  __chkstk_darwin(v12);
  uint64_t v86 = (char *)&v78 - v13;
  __chkstk_darwin(v14);
  uint64_t v87 = (char *)&v78 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v78 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v78 - v20;
  int64_t v22 = self;
  id v23 = [v22 defaultManager];
  id v24 = [v23 URLsForDirectory:13 inDomains:1];

  uint64_t v25 = sub_100088120();
  if (*(void *)(v25 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v25 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  uint64_t v26 = v7;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000AF1C((uint64_t)v5);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v21, v5, v6);
  sub_100087120();
  swift_bridgeObjectRetain();
  sub_100087120();
  swift_bridgeObjectRelease();
  int64_t v27 = v86;
  sub_100087130();
  id v28 = [v22 defaultManager];
  sub_100087150();
  NSString v29 = sub_100087FF0();
  swift_bridgeObjectRelease();
  unsigned __int8 v30 = [v28 fileExistsAtPath:v29];

  uint64_t v79 = v18;
  uint64_t v80 = v21;
  if ((v30 & 1) == 0)
  {
    if (qword_1000A86F8 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_100087350();
    uint64_t v32 = sub_10000A5F4(v31, (uint64_t)qword_1000AD9E8);
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v11, v87, v6);
    id v33 = sub_100087330();
    os_log_type_t v34 = sub_1000881D0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      int64_t v36 = (void *)swift_slowAlloc();
      uint64_t v82 = v32;
      id v89 = v36;
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t v78 = v35 + 4;
      sub_100063BEC(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v37 = sub_1000884E0();
      uint64_t v88 = sub_100017980(v37, v38, (uint64_t *)&v89);
      sub_100088240();
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v26 + 8);
      v39(v11, v6);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Creating directory for app metadata at %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v39 = *(void (**)(char *, uint64_t))(v26 + 8);
      v39(v11, v6);
    }

    id v40 = [v22 defaultManager];
    sub_100087110(v41);
    char v43 = v42;
    id v89 = 0;
    unsigned int v44 = [v40 createDirectoryAtURL:v42 withIntermediateDirectories:1 attributes:0 error:&v89];

    if (!v44)
    {
      id v69 = v89;
      uint64_t v70 = sub_1000870F0();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v71 = sub_100087330();
      os_log_type_t v72 = sub_1000881D0();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        id v89 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v73 = 136315138;
        uint64_t v88 = v70;
        swift_errorRetain();
        sub_100004FB4(&qword_1000A8BD0);
        uint64_t v74 = sub_100088010();
        uint64_t v85 = v26;
        uint64_t v88 = sub_100017980(v74, v75, (uint64_t *)&v89);
        sub_100088240();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "Unable to create metadata directory %s.", v73, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      swift_errorRelease();
      v39(v86, v6);
      v39(v87, v6);
      v39(v79, v6);
      v39(v80, v6);
      return 0;
    }
    id v45 = v89;
    int64_t v27 = v86;
  }
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_100087350();
  uint64_t v47 = sub_10000A5F4(v46, (uint64_t)qword_1000AD9E8);
  uint64_t v48 = v81;
  sub_100062EF4(v85, v81);
  uint64_t v49 = v83;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v83, v27, v6);
  uint64_t v50 = sub_100087330();
  os_log_type_t v51 = sub_1000881D0();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v53 = v84;
  if (v52)
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v82 = v47;
    uint64_t v55 = v54;
    uint64_t v78 = (void *)swift_slowAlloc();
    id v89 = v78;
    *(_DWORD *)uint64_t v55 = 136315394;
    uint64_t v56 = (uint64_t *)(v48 + *(int *)(v53 + 20));
    uint64_t v57 = *v56;
    unint64_t v58 = v56[1];
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_100017980(v57, v58, (uint64_t *)&v89);
    sub_100088240();
    swift_bridgeObjectRelease();
    sub_100062F58(v48);
    *(_WORD *)(v55 + 12) = 2080;
    sub_100063BEC(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v59 = v26;
    long long v60 = v83;
    uint64_t v61 = sub_1000884E0();
    uint64_t v88 = sub_100017980(v61, v62, (uint64_t *)&v89);
    sub_100088240();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void (**)(char *, uint64_t))(v59 + 8);
    v63(v60, v6);
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Encoding %s's metadata and writing to %s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100062F58(v48);
    uint64_t v63 = *(void (**)(char *, uint64_t))(v26 + 8);
    v63(v49, v6);
  }

  sub_1000870C0();
  swift_allocObject();
  sub_1000870B0();
  sub_100063BEC(&qword_1000AA868, (void (*)(uint64_t))type metadata accessor for AppMetadata);
  uint64_t v64 = sub_1000870A0();
  uint64_t v65 = v86;
  uint64_t v66 = v64;
  unint64_t v68 = v67;
  swift_release();
  sub_1000871B0();
  sub_10000AF7C(v66, v68);
  v63(v65, v6);
  v63(v87, v6);
  v63(v79, v6);
  v63(v80, v6);
  return 1;
}

uint64_t sub_10005FB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v198 = a7;
  v199 = a6;
  int v193 = a5;
  uint64_t v191 = a4;
  uint64_t v190 = a3;
  uint64_t v192 = type metadata accessor for AppMetadata();
  __chkstk_darwin(v192);
  uint64_t v185 = (uint64_t)v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v8 - 8);
  unsigned __int8 v177 = (char *)v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v180 = (char *)v170 - v11;
  __chkstk_darwin(v12);
  uint64_t v188 = (char *)v170 - v13;
  __chkstk_darwin(v14);
  uint64_t v183 = (char *)v170 - v15;
  __chkstk_darwin(v16);
  uint64_t v186 = (uint64_t)v170 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v170 - v19;
  uint64_t v21 = sub_100087170();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v181 = (char *)v170 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v176 = (char *)v170 - v25;
  __chkstk_darwin(v26);
  uint64_t v175 = (char *)v170 - v27;
  __chkstk_darwin(v28);
  uint64_t v179 = (char *)v170 - v29;
  __chkstk_darwin(v30);
  uint64_t v178 = (char *)v170 - v31;
  __chkstk_darwin(v32);
  uint64_t v189 = (char *)v170 - v33;
  __chkstk_darwin(v34);
  uint64_t v184 = (char *)v170 - v35;
  __chkstk_darwin(v36);
  unint64_t v38 = (char *)v170 - v37;
  __chkstk_darwin(v39);
  int64_t v41 = (char *)v170 - v40;
  __chkstk_darwin(v42);
  v200 = (char *)v170 - v43;
  __chkstk_darwin(v44);
  uint64_t v201 = (char *)v170 - v45;
  __chkstk_darwin(v46);
  uint64_t v195 = (char *)v170 - v47;
  __chkstk_darwin(v48);
  uint64_t v196 = (char *)v170 - v49;
  __chkstk_darwin(v50);
  uint64_t v197 = (char *)v170 - v51;
  BOOL v52 = self;
  id v53 = [v52 defaultManager];
  id v54 = [v53 URLsForDirectory:13 inDomains:1];

  uint64_t v55 = sub_100088120();
  if (*(void *)(v55 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v20, v55 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), v21);
    uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    uint64_t v57 = v20;
    uint64_t v58 = 0;
  }
  else
  {
    uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    uint64_t v57 = v20;
    uint64_t v58 = 1;
  }
  uint64_t v182 = v56;
  v56(v57, v58, 1, v21);
  swift_bridgeObjectRelease();
  uint64_t v59 = v22;
  unint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  uint64_t v61 = v22 + 48;
  long long v60 = v62;
  if (v62((uint64_t)v20, 1, v21) == 1)
  {
    sub_10000AF1C((uint64_t)v20);
    return ((uint64_t (*)(void, void))v199)(0, 0);
  }
  uint64_t v174 = v61;
  uint64_t v173 = v60;
  uint64_t v187 = v59;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
  uint64_t v172 = v59 + 32;
  uint64_t v171 = v64;
  v64(v197, (uint64_t)v20, v21);
  sub_100087120();
  swift_bridgeObjectRetain();
  sub_100087120();
  swift_bridgeObjectRelease();
  uint64_t v65 = v201;
  sub_100087120();
  LOBYTE(v206) = v193;
  id v206 = (id)sub_100088010();
  uint64_t v207 = v66;
  v208._countAndFlagsBits = 95;
  v208._object = (void *)0xE100000000000000;
  sub_100088040(v208);
  uint64_t v204 = v190;
  v209._countAndFlagsBits = sub_1000884E0();
  sub_100088040(v209);
  swift_bridgeObjectRelease();
  v210._countAndFlagsBits = 120;
  v210._object = (void *)0xE100000000000000;
  sub_100088040(v210);
  uint64_t v204 = v191;
  v211._countAndFlagsBits = sub_1000884E0();
  sub_100088040(v211);
  swift_bridgeObjectRelease();
  v212._countAndFlagsBits = 0x636965682ELL;
  v212._object = (void *)0xE500000000000000;
  sub_100088040(v212);
  sub_100087120();
  swift_bridgeObjectRelease();
  unint64_t v67 = &SeededRandomNumberGenerator;
  id v68 = [v52 defaultManager];
  sub_100087150();
  NSString v69 = sub_100087FF0();
  swift_bridgeObjectRelease();
  unsigned int v70 = [v68 fileExistsAtPath:v69];

  if (v70)
  {
    if (qword_1000A86F8 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_100087350();
    sub_10000A5F4(v71, (uint64_t)qword_1000AD9E8);
    uint64_t v72 = v187;
    uint64_t v73 = v200;
    (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v41, v200, v21);
    uint64_t v74 = sub_100087330();
    os_log_type_t v75 = sub_1000881D0();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      id v206 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v76 = 136315138;
      sub_100063BEC(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v77 = sub_1000884E0();
      uint64_t v204 = sub_100017980(v77, v78, (uint64_t *)&v206);
      sub_100088240();
      swift_bridgeObjectRelease();
      uint64_t v79 = *(void (**)(char *, uint64_t))(v72 + 8);
      v79(v41, v21);
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Fetching cached image from %s", v76, 0xCu);
      swift_arrayDestroy();
      uint64_t v73 = v200;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v79 = *(void (**)(char *, uint64_t))(v72 + 8);
      v79(v41, v21);
    }

    uint64_t v93 = sub_100087150();
    v199(v93);
    swift_bridgeObjectRelease();
    v79(v73, v21);
    v79(v201, v21);
    v79(v195, v21);
    v79(v196, v21);
    return ((uint64_t (*)(char *, uint64_t))v79)(v197, v21);
  }
  id v80 = [v52 defaultManager];
  sub_100087150();
  NSString v81 = sub_100087FF0();
  swift_bridgeObjectRelease();
  int v82 = [v80 fileExistsAtPath:v81];

  if ((v82 & 1) == 0)
  {
    if (qword_1000A86F8 != -1) {
      swift_once();
    }
    uint64_t v83 = sub_100087350();
    uint64_t v84 = sub_10000A5F4(v83, (uint64_t)qword_1000AD9E8);
    uint64_t v85 = v187;
    (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v38, v65, v21);
    uint64_t v86 = sub_100087330();
    os_log_type_t v87 = sub_1000881D0();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = swift_slowAlloc();
      v170[2] = v84;
      id v89 = (uint8_t *)v88;
      id v206 = (id)swift_slowAlloc();
      *(_DWORD *)id v89 = 136315138;
      v170[1] = v89 + 4;
      sub_100063BEC(&qword_1000A8BD8, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v90 = sub_1000884E0();
      uint64_t v204 = sub_100017980(v90, v91, (uint64_t *)&v206);
      sub_100088240();
      swift_bridgeObjectRelease();
      uint64_t v92 = *(void (**)(char *, uint64_t))(v85 + 8);
      v92(v38, v21);
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "Creating directory for cached images at %s", v89, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v67 = &SeededRandomNumberGenerator;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v92 = *(void (**)(char *, uint64_t))(v85 + 8);
      v92(v38, v21);
    }

    id v94 = [v52 *(SEL *)&v67[14].ivar_base_size];
    unsigned __int16 v95 = v201;
    sub_100087110(v96);
    uint64_t v98 = v97;
    id v206 = 0;
    unsigned int v99 = [v94 createDirectoryAtURL:v97 withIntermediateDirectories:1 attributes:0 error:&v206];

    if (!v99)
    {
      uint64_t v194 = v92;
      id v106 = v206;
      uint64_t v107 = sub_1000870F0();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v108 = sub_100087330();
      os_log_type_t v109 = sub_1000881D0();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = (uint8_t *)swift_slowAlloc();
        id v206 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v110 = 136315138;
        uint64_t v204 = v107;
        swift_errorRetain();
        sub_100004FB4(&qword_1000A8BD0);
        uint64_t v111 = sub_100088010();
        uint64_t v204 = sub_100017980(v111, v112, (uint64_t *)&v206);
        unsigned __int16 v95 = v201;
        sub_100088240();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "Unable to create artwork directory %s.", v110, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      uint64_t v121 = v200;
      ((void (*)(void, void))v199)(0, 0);
      swift_errorRelease();
      uint64_t v122 = v194;
      v194(v121, v21);
      v122(v95, v21);
      v122(v195, v21);
      v122(v196, v21);
      return ((uint64_t (*)(char *, uint64_t))v122)(v197, v21);
    }
    id v100 = v206;
  }
  id v101 = [self mainScreen];
  [v101 scale];

  id v102 = objc_allocWithZone((Class)AMSMediaArtwork);
  swift_bridgeObjectRetain();
  Class isa = sub_100087FA0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v104 = (char *)[v102 initWithDictionary:isa];

  if ((_BYTE)v193)
  {
    uint64_t v105 = (uint64_t)v188;
    if (v193 == 1) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v105 = (uint64_t)v188;
  }
  char v113 = sub_1000884F0();
  swift_bridgeObjectRelease();
  if (v113)
  {
LABEL_31:
    uint64_t v114 = v185;
    sub_100062EF4((uint64_t)v194, v185);
    goto LABEL_32;
  }
  if ((_BYTE)v193 && v193 != 1)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  char v124 = sub_1000884F0();
  swift_bridgeObjectRelease();
  uint64_t v114 = v185;
  sub_100062EF4((uint64_t)v194, v185);
  if ((v124 & 1) == 0)
  {
    sub_100062F58(v114);
    uint64_t v115 = v192;
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v115 = v192;
  uint64_t v116 = v114;
  uint64_t v117 = *(void *)(v114 + *(int *)(v192 + 44));
  sub_100062F58(v116);
  if (!v117)
  {
    ((void (*)(void, void))v199)(0, 0);

    uint64_t v119 = *(void (**)(char *, uint64_t))(v187 + 8);
    v119(v200, v21);
    v119(v201, v21);
    v119(v195, v21);
    v119(v196, v21);
    return ((uint64_t (*)(char *, uint64_t))v119)(v197, v21);
  }
LABEL_33:
  uint64_t v118 = *(void *)((char *)v194 + *(int *)(v115 + 44));
  if (!v118)
  {
    uint64_t v120 = v201;
    goto LABEL_52;
  }
  if ((_BYTE)v193 && v193 == 1)
  {
    swift_bridgeObjectRetain();
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  char v123 = sub_1000884F0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v123) {
    goto LABEL_50;
  }
  if ((_BYTE)v193 && v193 != 1) {
    goto LABEL_49;
  }
  char v125 = sub_1000884F0();
  swift_bridgeObjectRelease();
  if (v125)
  {
LABEL_50:
    id v126 = objc_allocWithZone((Class)AMSMediaArtwork);
    Class v127 = sub_100087FA0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v128 = (char *)[v126 initWithDictionary:v127];

    uint64_t v104 = v128;
    goto LABEL_51;
  }
  swift_bridgeObjectRelease();
LABEL_51:
  uint64_t v120 = v201;
  uint64_t v105 = (uint64_t)v188;
LABEL_52:
  sub_100087290();
  double v130 = v129;
  sub_100087290();
  uint64_t v194 = (void (*)(char *, uint64_t))v104;
  id v132 = [v104 URLWithSize:AMSMediaArtworkCropStyleBoundedBox format:AMSMediaArtworkFormatHEIC cropStyle:v130 v131];
  int v133 = v189;
  if (v132)
  {
    int v134 = v132;
    uint64_t v135 = v183;
    sub_100087140();

    uint64_t v136 = v135;
    uint64_t v137 = 0;
  }
  else
  {
    uint64_t v137 = 1;
    uint64_t v136 = v183;
  }
  uint64_t v138 = v187;
  v182(v136, v137, 1, v21);
  uint64_t v139 = (uint64_t)v136;
  uint64_t v140 = v186;
  sub_100062FB4(v139, v186);
  sub_10006301C(v140, v105);
  if (v173(v105, 1, v21) == 1)
  {
    sub_10000AF1C(v105);
    ((void (*)(void, void))v199)(0, 0);

    sub_10000AF1C(v140);
    unsigned int v141 = *(void (**)(char *, uint64_t))(v138 + 8);
    v141(v200, v21);
    v141(v120, v21);
    v141(v195, v21);
    v141(v196, v21);
    return ((uint64_t (*)(char *, uint64_t))v141)(v197, v21);
  }
  uint64_t v142 = v184;
  v171(v184, v105, v21);
  uint64_t v192 = *(void *)(v138 + 16);
  ((void (*)(char *, char *, uint64_t))v192)(v133, v142, v21);
  if (!v118) {
    goto LABEL_77;
  }
  if ((_BYTE)v193 && v193 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v143 = sub_1000884F0();
    swift_bridgeObjectRelease();
    if ((v143 & 1) == 0)
    {
      if ((_BYTE)v193 && v193 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v151 = sub_1000884F0();
        swift_bridgeObjectRelease();
        if ((v151 & 1) == 0) {
          goto LABEL_77;
        }
      }
      uint64_t v152 = v184;
      id v206 = (id)sub_100087100();
      uint64_t v207 = v153;
      uint64_t v204 = 0x636965682E6262;
      unint64_t v205 = 0xE700000000000000;
      uint64_t v202 = 0xD000000000000013;
      unint64_t v203 = 0x800000010008C1F0;
      sub_1000068F8();
      sub_100088260();
      swift_bridgeObjectRelease();
      uint64_t v146 = (uint64_t)v177;
      sub_100087160();
      swift_bridgeObjectRelease();
      uint64_t v154 = v176;
      ((void (*)(char *, char *, uint64_t))v192)(v176, v152, v21);
      if (v173(v146, 1, v21) == 1)
      {
        uint64_t v155 = v175;
        v171(v175, (uint64_t)v154, v21);
        sub_10000AF1C(v146);
        uint64_t v148 = v155;
        goto LABEL_73;
      }
      uint64_t v149 = v187;
      (*(void (**)(char *, uint64_t))(v187 + 8))(v154, v21);
      uint64_t v150 = &v205;
LABEL_75:
      uint64_t v148 = (char *)*(v150 - 32);
      v171(v148, v146, v21);
      goto LABEL_76;
    }
  }
  uint64_t v144 = v184;
  id v206 = (id)sub_100087100();
  uint64_t v207 = v145;
  uint64_t v204 = 0x636965682E6262;
  unint64_t v205 = 0xE700000000000000;
  uint64_t v202 = 0xD000000000000012;
  unint64_t v203 = 0x800000010008C210;
  sub_1000068F8();
  sub_100088260();
  swift_bridgeObjectRelease();
  uint64_t v146 = (uint64_t)v180;
  sub_100087160();
  swift_bridgeObjectRelease();
  int v147 = v179;
  ((void (*)(char *, char *, uint64_t))v192)(v179, v144, v21);
  if (v173(v146, 1, v21) != 1)
  {
    uint64_t v149 = v187;
    (*(void (**)(char *, uint64_t))(v187 + 8))(v147, v21);
    uint64_t v150 = (unint64_t *)&v207;
    goto LABEL_75;
  }
  uint64_t v148 = v178;
  v171(v178, (uint64_t)v147, v21);
  sub_10000AF1C(v146);
LABEL_73:
  uint64_t v149 = v187;
LABEL_76:
  (*(void (**)(char *, char *, uint64_t))(v149 + 40))(v133, v148, v21);
LABEL_77:
  if (qword_1000A86F8 != -1) {
    swift_once();
  }
  uint64_t v156 = sub_100087350();
  sub_10000A5F4(v156, (uint64_t)qword_1000AD9E8);
  uint64_t v157 = sub_100087330();
  os_log_type_t v158 = sub_1000881D0();
  if (os_log_type_enabled(v157, v158))
  {
    uint64_t v159 = (uint8_t *)swift_slowAlloc();
    id v206 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v159 = 136315138;
    swift_beginAccess();
    uint64_t v160 = sub_100087100();
    uint64_t v202 = sub_100017980(v160, v161, (uint64_t *)&v206);
    int v133 = v189;
    sub_100088240();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v157, v158, "attempting download of image from %s", v159, 0xCu);
    swift_arrayDestroy();
    uint64_t v120 = v201;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v162 = v187;
  uint64_t v163 = v181;
  swift_beginAccess();
  ((void (*)(char *, char *, uint64_t))v192)(v163, v133, v21);
  uint64_t v164 = sub_100087180();
  unint64_t v166 = v165;
  uint64_t v167 = *(void (**)(char *, uint64_t))(v162 + 8);
  v167(v163, v21);
  uint64_t v168 = v200;
  sub_1000871B0();
  uint64_t v169 = sub_100087150();
  v199(v169);
  swift_bridgeObjectRelease();
  sub_10000AF7C(v164, v166);

  v167(v184, v21);
  sub_10000AF1C(v186);
  v167(v168, v21);
  v167(v120, v21);
  v167(v195, v21);
  v167(v196, v21);
  v167(v197, v21);
  return ((uint64_t (*)(char *, uint64_t))v167)(v189, v21);
}

uint64_t sub_1000618A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10005EC58(*a1, *a2);
}

Swift::Int sub_1000618B4()
{
  return sub_1000618BC();
}

Swift::Int sub_1000618BC()
{
  return sub_100088550();
}

uint64_t sub_100061964()
{
  sub_100088030();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000619F8()
{
  sub_100088030();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100061B48()
{
  return sub_100061B50();
}

Swift::Int sub_100061B50()
{
  return sub_100088550();
}

Swift::Int sub_100061BF4()
{
  return sub_100088550();
}

unint64_t sub_100061D54(char a1)
{
  unint64_t result = 0x6E6F697461657263;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x44496D616461;
      break;
    case 2:
      unint64_t result = 0x4449656C646E7562;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x656C746974627573;
      break;
    case 5:
      unint64_t result = 0x7374726F70707573;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100061E70(char a1)
{
  unint64_t result = 0x6E6F697461657263;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x44496D616461;
      break;
    case 2:
      unint64_t result = 0x4449656C646E7562;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x656C746974627573;
      break;
    case 5:
      unint64_t result = 0x7374726F70707573;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100061F8C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100063C9C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100061FBC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0x800000010008B5E0;
  unint64_t v5 = 0xD000000000000015;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD00000000000001ALL;
    unint64_t v4 = 0x800000010008B600;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6B726F77747261;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t type metadata accessor for AppMetadata()
{
  uint64_t result = qword_1000AA8C8;
  if (!qword_1000AA8C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006206C(unsigned __int8 *a1, char *a2)
{
  return sub_10005E99C(*a1, *a2);
}

Swift::Int sub_100062078()
{
  return sub_100061BF4();
}

uint64_t sub_100062084()
{
  return sub_1000619F8();
}

Swift::Int sub_10006208C()
{
  return sub_100061BF4();
}

uint64_t sub_100062094@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100063F84(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000620C4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100061D54(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000620F0()
{
  return sub_100061E70(*v0);
}

uint64_t sub_1000620F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100063F84(a1, a2);
  *a3 = result;
  return result;
}

void sub_100062120(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_10006212C(uint64_t a1)
{
  unint64_t v2 = sub_100063B44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100062168(uint64_t a1)
{
  unint64_t v2 = sub_100063B44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000621A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004FB4(&qword_1000AA920);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047FFC(a1, a1[3]);
  sub_100063B44();
  sub_100088570();
  LOBYTE(v28) = 0;
  sub_100087220();
  sub_100063BEC(&qword_1000A9C38, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1000884D0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for AppMetadata();
    LOBYTE(v28) = 1;
    sub_1000884A0();
    LOBYTE(v28) = 2;
    sub_1000884A0();
    LOBYTE(v28) = 3;
    sub_1000884A0();
    LOBYTE(v28) = 4;
    sub_100088490();
    LOBYTE(v28) = 5;
    sub_1000884B0();
    uint64_t v10 = self;
    Class isa = sub_100087FA0().super.isa;
    id v28 = 0;
    id v12 = [v10 dataWithJSONObject:isa options:0 error:&v28];

    id v13 = v28;
    if (!v12)
    {
      uint64_t v23 = v13;
      sub_1000870F0();

      goto LABEL_9;
    }
    v26[0] = v10;
    uint64_t v14 = (void *)sub_1000871A0();
    unint64_t v16 = v15;

    id v28 = v14;
    unint64_t v29 = v16;
    char v27 = 6;
    v26[1] = (id)sub_100063B98();
    sub_1000884D0();
    sub_10000AF7C((uint64_t)v14, v16);
    if (*(void *)(v3 + *(int *)(v9 + 44)))
    {
      Class v17 = sub_100087FA0().super.isa;
      id v28 = 0;
      id v18 = [v26[0] dataWithJSONObject:v17 options:0 error:&v28];

      id v19 = v28;
      if (v18)
      {
        uint64_t v20 = (void *)sub_1000871A0();
        unint64_t v22 = v21;

        id v28 = v20;
        unint64_t v29 = v22;
        char v27 = 7;
        sub_1000884D0();
        sub_10000AF7C((uint64_t)v20, v22);
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      uint64_t v25 = v19;
      sub_1000870F0();

LABEL_9:
      swift_willThrow();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100062624@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v4 = sub_100087220();
  uint64_t v54 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000AA938);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = (int *)type metadata accessor for AppMetadata();
  __chkstk_darwin(v57);
  uint64_t v55 = a1;
  uint64_t v56 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047FFC(a1, a1[3]);
  sub_100063B44();
  sub_100088560();
  if (v2) {
    return sub_100018084((uint64_t)v55);
  }
  uint64_t v52 = v8;
  LOBYTE(v59) = 0;
  sub_100063BEC(&qword_1000A9C40, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_100088480();
  uint64_t v12 = v4;
  uint64_t v14 = (uint64_t)v56;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v56, v6, v4);
  LOBYTE(v59) = 1;
  uint64_t v15 = sub_100088450();
  unint64_t v16 = v57;
  Class v17 = (uint64_t *)(v14 + v57[5]);
  *Class v17 = v15;
  v17[1] = v18;
  LOBYTE(v59) = 2;
  uint64_t v19 = sub_100088450();
  uint64_t v20 = (uint64_t *)(v14 + v16[6]);
  *uint64_t v20 = v19;
  v20[1] = v21;
  LOBYTE(v59) = 3;
  uint64_t v22 = sub_100088450();
  uint64_t v23 = (uint64_t *)(v14 + v16[7]);
  *uint64_t v23 = v22;
  v23[1] = v24;
  LOBYTE(v59) = 4;
  uint64_t v25 = sub_100088430();
  uint64_t v26 = (uint64_t *)(v14 + v16[8]);
  *uint64_t v26 = v25;
  v26[1] = v27;
  LOBYTE(v59) = 5;
  *(unsigned char *)(v14 + v16[9]) = sub_100088460() & 1;
  LOBYTE(v58) = 6;
  unint64_t v28 = sub_100063C34();
  sub_100088480();
  unint64_t v49 = v28;
  uint64_t v51 = v7;
  uint64_t v29 = v12;
  uint64_t v30 = (uint64_t)v59;
  unint64_t v31 = v60;
  uint64_t v32 = self;
  uint64_t v50 = v30;
  Class isa = sub_100087190().super.isa;
  id v59 = 0;
  id v48 = v32;
  id v34 = [v32 JSONObjectWithData:isa options:0 error:&v59];

  if (v34)
  {
    id v35 = v59;
    sub_100088270();
    swift_unknownObjectRelease();
    v47[1] = sub_100004FB4(&qword_1000A9C68);
    unint64_t v36 = v31;
    if (swift_dynamicCast()) {
      unint64_t v37 = v58;
    }
    else {
      unint64_t v37 = sub_10005B810((uint64_t)&_swiftEmptyArrayStorage);
    }
    *(void *)(v14 + v57[10]) = v37;
    LOBYTE(v58) = 7;
    sub_100088440();
    if (v60 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v51);
      sub_10000AF7C(v50, v31);
      *(void *)(v14 + v57[11]) = 0;
LABEL_18:
      sub_100062EF4(v14, v53);
      sub_100018084((uint64_t)v55);
      return sub_100062F58(v14);
    }
    uint64_t v40 = (uint64_t)v59;
    unint64_t v49 = v60;
    Class v41 = sub_100087190().super.isa;
    id v59 = 0;
    id v42 = [v48 JSONObjectWithData:v41 options:0 error:&v59];

    if (v42)
    {
      id v43 = v59;
      sub_100088270();
      sub_10000AF7C(v50, v36);
      sub_100063C88(v40, v49);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v51);
      int v44 = swift_dynamicCast();
      unint64_t v45 = v58;
      if (!v44) {
        unint64_t v45 = 0;
      }
      uint64_t v14 = (uint64_t)v56;
      *(void *)&v56[v57[11]] = v45;
      goto LABEL_18;
    }
    id v46 = v59;
    sub_1000870F0();

    swift_willThrow();
    sub_10000AF7C(v50, v36);
    sub_100063C88(v40, v49);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v51);
    char v39 = 1;
    uint64_t v14 = (uint64_t)v56;
  }
  else
  {
    id v38 = v59;
    sub_1000870F0();

    swift_willThrow();
    sub_10000AF7C(v50, v31);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v51);
    char v39 = 0;
  }
  sub_100018084((uint64_t)v55);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v14, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v39) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100062EC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100062624(a1, a2);
}

uint64_t sub_100062EDC(void *a1)
{
  return sub_1000621A4(a1);
}

uint64_t sub_100062EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100062F58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100062FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A8BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006301C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A8BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for AppMetadata.AppArtworkType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppMetadata.AppArtworkType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000631E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppMetadata.AppArtworkType()
{
  return &type metadata for AppMetadata.AppArtworkType;
}

void *sub_100063218(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100087220();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    id v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)((char *)a1 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (void *)((char *)a1 + v17);
    uint64_t v22 = (void *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10006337C(uint64_t a1)
{
  uint64_t v2 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006343C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  id v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100063550(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000636B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_10006376C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10006387C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100063890);
}

uint64_t sub_100063890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100087220();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100063954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100063968);
}

uint64_t sub_100063968(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100087220();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100063A28()
{
  uint64_t result = sub_100087220();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100063AF0()
{
  unint64_t result = qword_1000AA918;
  if (!qword_1000AA918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA918);
  }
  return result;
}

unint64_t sub_100063B44()
{
  unint64_t result = qword_1000AA928;
  if (!qword_1000AA928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA928);
  }
  return result;
}

unint64_t sub_100063B98()
{
  unint64_t result = qword_1000AA930;
  if (!qword_1000AA930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA930);
  }
  return result;
}

uint64_t sub_100063BEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100063C34()
{
  unint64_t result = qword_1000AA940;
  if (!qword_1000AA940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA940);
  }
  return result;
}

uint64_t sub_100063C88(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000AF7C(a1, a2);
  }
  return a1;
}

uint64_t sub_100063C9C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000A61D0;
  v6._object = a2;
  unint64_t v4 = sub_100088420(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t getEnumTagSinglePayload for AppMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100063E44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppMetadata.CodingKeys()
{
  return &type metadata for AppMetadata.CodingKeys;
}

unint64_t sub_100063E80()
{
  unint64_t result = qword_1000AA948;
  if (!qword_1000AA948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA948);
  }
  return result;
}

unint64_t sub_100063ED8()
{
  unint64_t result = qword_1000AA950;
  if (!qword_1000AA950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA950);
  }
  return result;
}

unint64_t sub_100063F30()
{
  unint64_t result = qword_1000AA958;
  if (!qword_1000AA958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA958);
  }
  return result;
}

uint64_t sub_100063F84(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000A6238;
  v6._object = a2;
  unint64_t v4 = sub_100088420(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

uint64_t *sub_100063FD8(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_100004FB4(&qword_1000A87A8) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_100087E60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000640E4(uint64_t a1)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100087E60();
    Swift::OpaquePointer v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100064188(void *a1, void *a2)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100064244(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100064318(void *a1, const void *a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_100087E60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_1000643DC(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    uint64_t v4 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_100087E60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000644B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000644CC);
}

uint64_t sub_1000644CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10006453C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064550);
}

uint64_t sub_100064550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GameCenterLogo()
{
  uint64_t result = qword_1000AA9B8;
  if (!qword_1000AA9B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100064610()
{
  sub_1000203E4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10006469C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000646B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v36 = sub_100087C50();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100087E60();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v35 = sub_100004FB4(&qword_1000AA9F0);
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100004FB4(&qword_1000AA9F8);
  __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100004FB4(&qword_1000AAA00);
  __chkstk_darwin(v37);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FB4(&qword_1000AAA08);
  __chkstk_darwin(v16 - 8);
  uint64_t v32 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000171F8((uint64_t)v9);
  sub_100087E50();
  sub_100064EB0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v18 = sub_100087FE0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v19(v6, v3);
  v19(v9, v3);
  if (v18) {
    sub_100087C70();
  }
  else {
    sub_100087CC0();
  }
  uint64_t v20 = v34;
  uint64_t v21 = v36;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v2, enum case for Image.ResizingMode.stretch(_:), v36);
  uint64_t v22 = sub_100087CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  *(void *)&long long v39 = v22;
  sub_100087AD0();
  swift_release();
  sub_100087BA0();
  uint64_t v23 = sub_100087BD0();
  swift_release();
  uint64_t v24 = v33;
  uint64_t v25 = v35;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v13, v11, v35);
  uint64_t v26 = &v13[*(int *)(v31 + 36)];
  *(void *)uint64_t v26 = v23;
  *(_OWORD *)(v26 + 8) = xmmword_10008A120;
  *((void *)v26 + 3) = 0x3FF0000000000000;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  sub_100087D90();
  sub_100087400();
  sub_100064C08((uint64_t)v13, (uint64_t)v15);
  uint64_t v27 = &v15[*(int *)(v37 + 36)];
  long long v28 = v40;
  *(_OWORD *)uint64_t v27 = v39;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v41;
  sub_100006AE0((uint64_t)v13, &qword_1000AA9F8);
  sub_100064C70();
  uint64_t v29 = (uint64_t)v32;
  sub_100087AF0();
  sub_100006AE0((uint64_t)v15, &qword_1000AAA00);
  return sub_100064D98(v29, v38);
}

uint64_t sub_100064C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000AA9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100064C70()
{
  unint64_t result = qword_1000AAA10;
  if (!qword_1000AAA10)
  {
    sub_100004FF8(&qword_1000AAA00);
    sub_100064CEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AAA10);
  }
  return result;
}

unint64_t sub_100064CEC()
{
  unint64_t result = qword_1000AAA18;
  if (!qword_1000AAA18)
  {
    sub_100004FF8(&qword_1000AA9F8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AAA18);
  }
  return result;
}

uint64_t sub_100064D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000AAA08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100064E04()
{
  unint64_t result = qword_1000AAA20;
  if (!qword_1000AAA20)
  {
    sub_100004FF8(&qword_1000AAA08);
    sub_100064C70();
    sub_100064EB0(&qword_1000A8988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AAA20);
  }
  return result;
}

uint64_t sub_100064EB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100064EF8@<X0>(char *a1@<X8>, double a2@<D0>)
{
  long long v28 = a1;
  uint64_t v27 = sub_100004FB4(&qword_1000AAA28) - 8;
  uint64_t v3 = __chkstk_darwin(v27);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v26 = (uint64_t)&v25 - v6;
  uint64_t v7 = sub_100004FB4(&qword_1000A96F8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FB4(&qword_1000A9700);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v25 - v15;
  sub_100087E80();
  uint64_t v17 = sub_100087EA0();
  char v18 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v9, 0, 1, v17);
  sub_100087CA0();
  sub_100006AE0((uint64_t)v9, &qword_1000A96F8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
  sub_100087E90();
  v18(v9, 0, 1, v17);
  sub_100087CA0();
  sub_100006AE0((uint64_t)v9, &qword_1000A96F8);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v19(v5, v14, v10);
  *(double *)&v5[*(int *)(v27 + 44)] = a2;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v14, v10);
  uint64_t v21 = v26;
  sub_10006526C((uint64_t)v5, v26);
  v19(v14, v16, v10);
  sub_1000652D4(v21, (uint64_t)v5);
  uint64_t v22 = v28;
  v19(v28, v14, v10);
  uint64_t v23 = sub_100004FB4(&qword_1000AAA30);
  sub_1000652D4((uint64_t)v5, (uint64_t)&v22[*(int *)(v23 + 48)]);
  sub_100006AE0(v21, &qword_1000AAA28);
  v20(v16, v10);
  sub_100006AE0((uint64_t)v5, &qword_1000AAA28);
  return ((uint64_t (*)(char *, uint64_t))v20)(v14, v10);
}

uint64_t sub_10006526C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000AAA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000652D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000AAA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006533C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100065350);
}

uint64_t sub_100065350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for CPTimelineEntry();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10006544C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100065460);
}

uint64_t sub_100065460(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for CPTimelineEntry();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for CPHeaderGradientView()
{
  uint64_t result = qword_1000AAA90;
  if (!qword_1000AAA90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000655B4()
{
  sub_1000203E4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CPTimelineEntry();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100065684()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000656A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v3 = sub_100087380();
  uint64_t v61 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FB4(&qword_1000A91B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100004FB4(&qword_1000A91C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FB4(&qword_1000A91C8);
  __chkstk_darwin(v62);
  uint64_t v64 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000A91D0);
  __chkstk_darwin(v13);
  uint64_t v63 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v66 = sub_100004FB4(&qword_1000A91D8);
  __chkstk_darwin(v66);
  uint64_t v67 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CPHeaderGradientView();
  uint64_t v20 = v2 + *(int *)(v19 + 24);
  if (*(unsigned char *)(v20 + *(int *)(type metadata accessor for CPTimelineEntry() + 32)) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_100021860();
    return sub_1000877E0();
  }
  else
  {
    *uint64_t v8 = sub_100087D90();
    v8[1] = v22;
    uint64_t v23 = sub_100004FB4(&qword_1000A91E0);
    sub_100065CD0(v2, (uint64_t)v8 + *(int *)(v23 + 44));
    uint64_t v24 = (double *)(v2 + *(int *)(v19 + 20));
    double v25 = *v24;
    double v26 = v24[1];
    uint64_t v27 = sub_100087D90();
    uint64_t v60 = v3;
    uint64_t v28 = (uint64_t)v11;
    sub_10007753C(v25, 0, 0.0, 1, v25, 0, v26, 0, (uint64_t)v11, 0.0, 1, v26, 0, v27, v29);
    sub_100006AE0((uint64_t)v8, &qword_1000A91B8);
    double v30 = *v24;
    double v31 = v24[1];
    sub_100087D90();
    sub_100077598(v30, 0, 0.0, 1, v30, 0, v31, 0, &v68, 0.0, 1, v31, 0);
    uint64_t v56 = v68;
    int v55 = BYTE8(v68);
    uint64_t v32 = v69;
    LOBYTE(v24) = v70;
    uint64_t v33 = v61;
    uint64_t v57 = v5;
    uint64_t v34 = v71;
    id v59 = v17;
    char v35 = v72;
    uint64_t v54 = v73;
    uint64_t v58 = v13;
    char v36 = v74;
    uint64_t v37 = v75;
    char v38 = v76;
    uint64_t v53 = v77;
    int v52 = v78;
    uint64_t v51 = v79;
    uint64_t v50 = v80;
    uint64_t v39 = v64;
    sub_100006B3C(v28, v64, &qword_1000A91C0);
    uint64_t v40 = v39 + *(int *)(v62 + 36);
    *(void *)uint64_t v40 = v56;
    *(unsigned char *)(v40 + 8) = v55;
    *(void *)(v40 + 16) = v32;
    *(unsigned char *)(v40 + 24) = (_BYTE)v24;
    *(void *)(v40 + 32) = v34;
    *(unsigned char *)(v40 + 40) = v35;
    *(void *)(v40 + 48) = v54;
    *(unsigned char *)(v40 + 56) = v36;
    *(void *)(v40 + 64) = v37;
    *(unsigned char *)(v40 + 72) = v38;
    *(void *)(v40 + 80) = v53;
    *(unsigned char *)(v40 + 88) = v52;
    uint64_t v41 = v50;
    *(void *)(v40 + 96) = v51;
    *(void *)(v40 + 104) = v41;
    sub_100006AE0(v28, &qword_1000A91C0);
    uint64_t KeyPath = swift_getKeyPath();
    id v43 = v57;
    uint64_t v44 = v60;
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v57, enum case for ColorScheme.light(_:), v60);
    uint64_t v45 = (uint64_t)v63;
    id v46 = (uint64_t *)&v63[*(int *)(v58 + 36)];
    uint64_t v47 = sub_100004FB4(&qword_1000A8950);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))((char *)v46 + *(int *)(v47 + 28), v43, v44);
    *id v46 = KeyPath;
    sub_100006B3C(v39, v45, &qword_1000A91C8);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v43, v44);
    sub_100006AE0(v39, &qword_1000A91C8);
    uint64_t v48 = (uint64_t)v59;
    sub_100006C4C(v45, (uint64_t)v59, &qword_1000A91D0);
    sub_100006B3C(v48, v67, &qword_1000A91D0);
    swift_storeEnumTagMultiPayload();
    sub_100021860();
    sub_1000877E0();
    return sub_100006AE0(v48, &qword_1000A91D0);
  }
}

uint64_t sub_100065CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v127 = a1;
  uint64_t v121 = a2;
  uint64_t v2 = sub_1000874D0();
  __chkstk_darwin(v2 - 8);
  uint64_t v117 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100087DA0();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v114 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100004FB4(&qword_1000A9218);
  __chkstk_darwin(v113);
  uint64_t v119 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v118 = (uint64_t)&v110 - v7;
  *(void *)&long long v128 = sub_100087E60();
  double v129 = *(double *)(v128 - 8);
  __chkstk_darwin(v128);
  id v126 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v125 = (uint64_t)&v110 - v10;
  uint64_t v11 = sub_100004FB4(&qword_1000A9220);
  __chkstk_darwin(v11 - 8);
  uint64_t v120 = (uint64_t *)((char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v130 = (uint64_t)&v110 - v14;
  uint64_t v15 = sub_100004FB4(&qword_1000A9228);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100087D60();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004FB4(&qword_1000A9230);
  __chkstk_darwin(v23 - 8);
  double v25 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004FB4(&qword_1000A9238);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v123 = (uint64_t)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v124 = sub_100004FB4(&qword_1000A9240) - 8;
  __chkstk_darwin(v124);
  double v30 = (char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t)&v110 - v32;
  sub_100087D50();
  char v34 = sub_100087880();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v18, v22, v19);
  v18[*(int *)(v16 + 44)] = v34;
  uint64_t v35 = (uint64_t)v30;
  sub_100006B3C((uint64_t)v18, (uint64_t)v25, &qword_1000A9228);
  sub_100006AE0((uint64_t)v18, &qword_1000A9228);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v36 = v33;
  sub_100087BA0();
  uint64_t v37 = sub_100087BD0();
  swift_release();
  LOBYTE(v18) = sub_100087880();
  uint64_t v38 = v123;
  sub_100006B3C((uint64_t)v25, v123, &qword_1000A9230);
  uint64_t v39 = v38 + *(int *)(v27 + 44);
  *(void *)uint64_t v39 = v37;
  *(unsigned char *)(v39 + 8) = (_BYTE)v18;
  sub_100006AE0((uint64_t)v25, &qword_1000A9230);
  sub_100004FB4(&qword_1000A9248);
  uint64_t v40 = swift_allocObject();
  long long v112 = xmmword_1000893F0;
  *(_OWORD *)(v40 + 16) = xmmword_1000893F0;
  *(void *)(v40 + 32) = sub_100087BA0();
  sub_100087BA0();
  uint64_t v41 = sub_100087BD0();
  uint64_t v42 = v127;
  swift_release();
  *(void *)(v40 + 40) = v41;
  uint64_t v139 = v40;
  sub_100088140();
  sub_100087D40();
  sub_100087DD0();
  sub_100087DE0();
  sub_100087460();
  uint64_t v43 = v131;
  long long v122 = v132;
  uint64_t v44 = v133;
  uint64_t v45 = v134;
  sub_100087DC0();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_100087E00();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  sub_100006B3C(v38, v35, &qword_1000A9238);
  uint64_t v54 = v35 + *(int *)(v124 + 44);
  *(void *)uint64_t v54 = v43;
  *(_OWORD *)(v54 + 8) = v122;
  *(void *)(v54 + 24) = v44;
  *(void *)(v54 + 32) = v45;
  *(void *)(v54 + 40) = 0xBFD1DF46A2529D39;
  *(void *)(v54 + 48) = v47;
  *(void *)(v54 + 56) = v49;
  long long v124 = xmmword_100089570;
  *(_OWORD *)(v54 + 64) = xmmword_100089570;
  *(void *)(v54 + 80) = v51;
  *(void *)(v54 + 88) = v53;
  sub_100006AE0(v38, &qword_1000A9238);
  sub_100006C4C(v35, v33, &qword_1000A9240);
  uint64_t v55 = v125;
  sub_1000171F8(v125);
  uint64_t v56 = v126;
  sub_100087E50();
  sub_100021A40();
  uint64_t v57 = v128;
  LOBYTE(v33) = sub_100087FE0();
  uint64_t v58 = *(void (**)(char *, uint64_t))(*(void *)&v129 + 8);
  v58(v56, v57);
  v58((char *)v55, v57);
  uint64_t v59 = v130;
  if (v33) {
    goto LABEL_19;
  }
  uint64_t v60 = v42 + *(int *)(type metadata accessor for CPHeaderGradientView() + 24);
  unint64_t v61 = *(void *)(v60 + *(int *)(type metadata accessor for CPTimelineEntry() + 20));
  if (!(v61 >> 62))
  {
    uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v62) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000883C0();
  if (!result)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v59 = v130;
LABEL_19:
    uint64_t v107 = sub_100004FB4(&qword_1000A9258);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v59, 1, 1, v107);
    uint64_t v101 = (uint64_t)v120;
    uint64_t v106 = v59;
LABEL_20:
    sub_100006B3C(v36, v35, &qword_1000A9240);
    sub_100006B3C(v106, v101, &qword_1000A9220);
    uint64_t v108 = v121;
    sub_100006B3C(v35, v121, &qword_1000A9240);
    uint64_t v109 = sub_100004FB4(&qword_1000A9260);
    sub_100006B3C(v101, v108 + *(int *)(v109 + 48), &qword_1000A9220);
    sub_100006AE0(v106, &qword_1000A9220);
    sub_100006AE0(v36, &qword_1000A9240);
    sub_100006AE0(v101, &qword_1000A9220);
    return sub_100006AE0(v35, &qword_1000A9240);
  }
LABEL_4:
  if ((v61 & 0xC000000000000001) != 0)
  {
    uint64_t v64 = sub_100088340();
    goto LABEL_7;
  }
  if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v64 = *(void *)(v61 + 32);
    swift_retain();
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v65 = *(void **)(v64 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor);
    uint64_t v111 = v35;
    uint64_t v110 = v36;
    if (v65)
    {
      uint64_t v66 = v65;
    }
    else
    {
      uint64_t v67 = *(void **)(v64 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor);
      if (v67) {
        id v68 = v67;
      }
      else {
        id v68 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.431372549 blue:0.62745098 alpha:1.0];
      }
      uint64_t v66 = v68;
    }
    id v69 = v65;
    swift_release();
    id v70 = v66;
    uint64_t v71 = sub_100087B80();
    [v70 _luminance];
    if (v72 <= 0.8) {
      double v73 = -0.2;
    }
    else {
      double v73 = (v72 + -0.8) / -0.2 * 0.2 + -0.2;
    }
    double v129 = v73;
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_100089330;
    *(void *)(v74 + 32) = v71;
    *(void *)(v74 + 40) = v71;
    swift_retain_n();
    *(void *)(v74 + 48) = sub_100087BD0();
    *(void *)(v74 + 56) = sub_100087BB0();
    uint64_t v139 = v74;
    sub_100088140();
    sub_100087D40();
    sub_100087DD0();
    sub_100087DE0();
    sub_100087460();
    uint64_t v75 = v135;
    long long v128 = v136;
    uint64_t v127 = v137;
    id v126 = v138;
    sub_100087DC0();
    uint64_t v125 = v76;
    uint64_t v123 = v77;
    sub_100087E00();
    uint64_t v79 = v78;
    uint64_t v81 = v80;
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = v112;
    *(void *)(v82 + 32) = v71;
    swift_retain();
    sub_100087BA0();
    uint64_t v83 = sub_100087BD0();
    swift_release();
    *(void *)(v82 + 40) = v83;
    uint64_t v139 = v82;
    sub_100088140();
    sub_100087D40();
    sub_100087DD0();
    sub_100087DE0();
    sub_100087460();
    uint64_t v84 = v139;
    long long v122 = v140;
    uint64_t v85 = v141;
    uint64_t v86 = v142;
    sub_100087DC0();
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    sub_100087E00();
    uint64_t v92 = v91;
    uint64_t v94 = v93;
    uint64_t v95 = v115;
    unsigned __int8 v96 = v114;
    uint64_t v97 = v116;
    (*(void (**)(char *, void, uint64_t))(v115 + 104))(v114, enum case for BlendMode.color(_:), v116);
    uint64_t v98 = (uint64_t)v117;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v117, v96, v97);
    uint64_t v99 = (uint64_t)v119;
    sub_100021A98(v98, (uint64_t)&v119[*(int *)(v113 + 36)]);
    *(void *)uint64_t v99 = v84;
    *(_OWORD *)(v99 + 8) = v122;
    *(void *)(v99 + 24) = v85;
    *(void *)(v99 + 32) = v86;
    *(void *)(v99 + 40) = 0xBFD1DF46A2529D39;
    *(void *)(v99 + 48) = v88;
    *(void *)(v99 + 56) = v90;
    *(_OWORD *)(v99 + 64) = v124;
    *(void *)(v99 + 80) = v92;
    *(void *)(v99 + 88) = v94;
    swift_bridgeObjectRetain();
    sub_100021AFC(v98);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v97);
    sub_100021B58((uint64_t)&v139);
    uint64_t v100 = v118;
    sub_100006C4C(v99, v118, &qword_1000A9218);
    sub_100006B3C(v100, v99, &qword_1000A9218);
    uint64_t v101 = (uint64_t)v120;
    void *v120 = v75;
    *(_OWORD *)(v101 + 8) = v128;
    id v102 = v126;
    *(void *)(v101 + 24) = v127;
    *(void *)(v101 + 32) = v102;
    *(void *)(v101 + 40) = 0xBFD1DF46A2529D39;
    uint64_t v103 = v123;
    *(void *)(v101 + 48) = v125;
    *(void *)(v101 + 56) = v103;
    *(_OWORD *)(v101 + 64) = v124;
    *(void *)(v101 + 80) = v79;
    *(void *)(v101 + 88) = v81;
    *(double *)(v101 + 96) = v129;
    uint64_t v104 = sub_100004FB4(&qword_1000A9250);
    sub_100006B3C(v99, v101 + *(int *)(v104 + 48), &qword_1000A9218);
    swift_bridgeObjectRetain();

    swift_release();
    sub_100006AE0(v100, &qword_1000A9218);
    sub_100006AE0(v99, &qword_1000A9218);
    swift_bridgeObjectRelease();
    uint64_t v105 = sub_100004FB4(&qword_1000A9258);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v101, 0, 1, v105);
    uint64_t v106 = v130;
    sub_100006C4C(v101, v130, &qword_1000A9220);
    uint64_t v35 = v111;
    uint64_t v36 = v110;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

id sub_100066ADC()
{
  sub_100004FB4(&qword_1000AAAD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100088EC0;
  *(void *)(inited + 32) = sub_100088000();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = 0xD00000000000001ALL;
  *(void *)(inited + 56) = 0x800000010008C250;
  sub_10005B6D8(inited);
  id v2 = objc_allocWithZone((Class)NSError);
  NSString v3 = sub_100087FF0();
  Class isa = sub_100087FA0().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithDomain:v3 code:404 userInfo:isa];

  return v5;
}

uint64_t sub_100066BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100066C0C);
}

uint64_t sub_100066C0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9] + 32);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_100066DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100066DE4);
}

uint64_t sub_100066DE4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A87C0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100087430();
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[7];
      }
      else
      {
        uint64_t result = type metadata accessor for CPTimelineEntry();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9] + 32) = a2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[8];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CPLargeContentView()
{
  uint64_t result = qword_1000AAB30;
  if (!qword_1000AAB30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100066FE4()
{
  sub_100006754(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_100006754(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_100087430();
      if (v2 <= 0x3F)
      {
        type metadata accessor for CPTimelineEntry();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10006716C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100067188@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000AAB90);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = a1 + *(int *)(type metadata accessor for CPLargeContentView() + 24);
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_100005554(*(void *)v16, v18);
  char v19 = sub_100016FF4(v17, v18);
  sub_100005720(v17, v18);
  uint64_t v20 = 0;
  if (v19)
  {
    sub_1000171F8((uint64_t)v15);
    sub_100087E50();
    sub_100021A40();
    char v21 = sub_100087FE0();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v21)
    {
      uint64_t v20 = 0;
    }
    else
    {
      if (qword_1000A86D8 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1000AD9C0;
      swift_retain();
    }
  }
  *(void *)uint64_t v8 = sub_100087720();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 0;
  uint64_t v23 = sub_100004FB4(&qword_1000AAB98);
  sub_100067458(a1, (uint64_t)&v8[*(int *)(v23 + 44)]);
  sub_100006B3C((uint64_t)v8, (uint64_t)v5, &qword_1000AAB90);
  uint64_t v24 = v28;
  *uint64_t v28 = v20;
  uint64_t v25 = sub_100004FB4(&qword_1000AABA0);
  sub_100006B3C((uint64_t)v5, (uint64_t)v24 + *(int *)(v25 + 48), &qword_1000AAB90);
  swift_retain();
  sub_100006AE0((uint64_t)v8, &qword_1000AAB90);
  sub_100006AE0((uint64_t)v5, &qword_1000AAB90);
  return swift_release();
}

uint64_t sub_100067458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000AABA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v54 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000AA2D8);
  __chkstk_darwin(v5 - 8);
  uint64_t v52 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100004FB4(&qword_1000AABB0) - 8;
  __chkstk_darwin(v53);
  uint64_t v51 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v55 = (uint64_t)&v49 - v9;
  uint64_t v10 = sub_100004FB4(&qword_1000AABB8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000AABC0);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v19 = (char *)&v49 - v18;
  uint64_t v20 = sub_100004FB4(&qword_1000AABC8);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004FB4(&qword_1000AABD0);
  uint64_t v24 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v50 = (uint64_t)&v49 - v28;
  sub_1000679A4((uint64_t)v22);
  sub_100068D50(a1, (uint64_t)v12);
  type metadata accessor for CPLargeContentView();
  sub_100087410();
  sub_100087410();
  sub_100087D90();
  sub_100087400();
  sub_100006B3C((uint64_t)v12, (uint64_t)v16, &qword_1000AABB8);
  uint64_t v29 = &v16[*(int *)(v14 + 44)];
  long long v30 = v58;
  *(_OWORD *)uint64_t v29 = v57;
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v59;
  sub_100006AE0((uint64_t)v12, &qword_1000AABB8);
  sub_100006C4C((uint64_t)v16, (uint64_t)v19, &qword_1000AABC0);
  uint64_t v31 = sub_100087D90();
  uint64_t v33 = v32;
  uint64_t v34 = (uint64_t)&v26[*(int *)(v24 + 44)];
  sub_100006B3C((uint64_t)v19, v34, &qword_1000AABC0);
  uint64_t v35 = (uint64_t *)(v34 + *(int *)(sub_100004FB4(&qword_1000AABD8) + 36));
  *uint64_t v35 = v31;
  v35[1] = v33;
  sub_100006B3C((uint64_t)v22, (uint64_t)v26, &qword_1000AABC8);
  sub_100006AE0((uint64_t)v19, &qword_1000AABC0);
  sub_100006AE0((uint64_t)v22, &qword_1000AABC8);
  uint64_t v36 = v50;
  sub_100006C4C((uint64_t)v26, v50, &qword_1000AABD0);
  uint64_t v37 = v52;
  sub_100067FA0(v52);
  uint64_t v38 = v54;
  sub_100068458(v54);
  uint64_t v39 = sub_100087D90();
  uint64_t v41 = v40;
  uint64_t v42 = (uint64_t)v51;
  uint64_t v43 = (uint64_t)&v51[*(int *)(v53 + 44)];
  sub_100006B3C(v38, v43, &qword_1000AABA8);
  uint64_t v44 = (uint64_t *)(v43 + *(int *)(sub_100004FB4(&qword_1000AABE0) + 36));
  uint64_t *v44 = v39;
  v44[1] = v41;
  sub_100006B3C(v37, v42, &qword_1000AA2D8);
  sub_100006AE0(v38, &qword_1000AABA8);
  sub_100006AE0(v37, &qword_1000AA2D8);
  uint64_t v45 = v55;
  sub_100006C4C(v42, v55, &qword_1000AABB0);
  sub_100006B3C(v36, (uint64_t)v26, &qword_1000AABD0);
  sub_100006B3C(v45, v42, &qword_1000AABB0);
  uint64_t v46 = v56;
  sub_100006B3C((uint64_t)v26, v56, &qword_1000AABD0);
  uint64_t v47 = sub_100004FB4(&qword_1000AABE8);
  sub_100006B3C(v42, v46 + *(int *)(v47 + 48), &qword_1000AABB0);
  sub_100006AE0(v45, &qword_1000AABB0);
  sub_100006AE0(v36, &qword_1000AABD0);
  sub_100006AE0(v42, &qword_1000AABB0);
  return sub_100006AE0((uint64_t)v26, &qword_1000AABD0);
}

uint64_t sub_1000679A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v2 = sub_100087820();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  uint64_t v42 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FB4(&qword_1000AAC90);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004FB4(&qword_1000AAC98);
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  __chkstk_darwin(v6);
  uint64_t v38 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100087EC0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100087170();
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  __chkstk_darwin(v15);
  uint64_t v36 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v37 = (char *)&v36 - v18;
  char v19 = &v1[*(int *)(type metadata accessor for CPLargeContentView() + 32)];
  unint64_t v20 = *(void *)&v19[*(int *)(type metadata accessor for CPTimelineEntry() + 20)];
  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000883C0();
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v20 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = sub_100088340();
    goto LABEL_6;
  }
  if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v23 = *(void *)(v20 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_100016FB8((uint64_t)v11);
    sub_100007910((uint64_t)v11, (uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v25 = v45;
    uint64_t v24 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v14, 1, v46) != 1)
    {
      uint64_t v26 = v37;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v37, v14, v24);
      uint64_t v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 16))(v36, v26, v24);
      __chkstk_darwin(v27);
      *(&v36 - 2) = v1;
      *(&v36 - 1) = (char *)v23;
      sub_100004FB4(&qword_1000AACA0);
      sub_10006B56C();
      uint64_t v28 = v39;
      sub_100087A20();
      uint64_t v29 = v42;
      sub_100087810();
      sub_100006A8C(&qword_1000AACB0, &qword_1000AAC90);
      long long v30 = v38;
      uint64_t v31 = v41;
      sub_100087B40();
      swift_release();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v44);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v31);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v24);
      uint64_t v33 = v47;
      uint64_t v32 = v48;
      uint64_t v34 = v49;
      (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v49, v30, v48);
      uint64_t v35 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v34, v35, 1, v32);
    }
    swift_release();
    sub_100006AE0((uint64_t)v14, &qword_1000A8BC8);
LABEL_11:
    uint64_t v35 = 1;
    uint64_t v32 = v48;
    uint64_t v34 = v49;
    uint64_t v33 = v47;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v34, v35, 1, v32);
  }
  __break(1u);
  return result;
}

uint64_t sub_100067FA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  uint64_t v3 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100087430();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CPAppGridView();
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100004FB4(&qword_1000AA2D8);
  __chkstk_darwin(v30);
  uint64_t v31 = (uint64_t)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CPLargeContentView();
  sub_10006B674(v2 + *(int *)(v21 + 32), (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v2 + *(int *)(v21 + 28), v9);
  *uint64_t v8 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v5 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  sub_10006B60C((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v17[7]], v12, v9);
  *(void *)&v19[v17[8]] = 1;
  *(void *)&v19[v17[9]] = 3;
  v19[v17[10]] = 0;
  uint64_t v22 = (uint64_t *)&v19[v17[11]];
  *uint64_t v22 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (uint64_t *)&v19[v17[12]];
  *uint64_t v23 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v8, (uint64_t)&v19[v17[13]], &qword_1000A87C0);
  sub_100006C4C((uint64_t)v5, (uint64_t)&v19[v17[14]], &qword_1000A88C0);
  LOBYTE(v5) = sub_1000878D0();
  unsigned __int8 v24 = sub_1000878B0();
  char v25 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v5) {
    char v25 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v24) {
    char v25 = sub_1000878C0();
  }
  uint64_t v26 = v31;
  sub_10006B674((uint64_t)v19, v31, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  uint64_t v27 = v26 + *(int *)(v30 + 36);
  *(unsigned char *)uint64_t v27 = v25;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  *(unsigned char *)(v27 + 40) = 1;
  sub_10006B6DC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  return sub_100006C4C(v26, v32, &qword_1000AA2D8);
}

uint64_t sub_100068458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v31 = a1;
  uint64_t v3 = sub_100004FB4(&qword_1000A98E8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100004FB4(&qword_1000AABF0);
  uint64_t v6 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - v14;
  sub_1000171F8((uint64_t)&v31 - v14);
  sub_100087E50();
  sub_100021A40();
  char v16 = sub_100087FE0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  uint64_t v18 = v31;
  uint64_t v19 = 1;
  if ((v16 & 1) == 0)
  {
    sub_10006A41C(v2, (uint64_t)v5);
    type metadata accessor for CPLargeContentView();
    sub_100087410();
    double v21 = v20;
    sub_100087410();
    double v23 = v22;
    sub_100087410();
    double v25 = v24;
    sub_100087410();
    double v27 = v25 - round(v26 * 0.575);
    uint64_t v28 = sub_100087D90();
    sub_100077B1C(v21, 0, 0.0, 1, v23, 0, 0.0, 1, (uint64_t)v8, v27, 0, 0.0, 1, v28, v29);
    sub_100006AE0((uint64_t)v5, &qword_1000A98E8);
    sub_100006C4C((uint64_t)v8, v18, &qword_1000AABF0);
    uint64_t v19 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v18, v19, 1, v32);
}

uint64_t sub_100068754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A9A38);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = sub_100087720();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 1;
  uint64_t v9 = sub_100004FB4(&qword_1000A9A58);
  sub_1000688A8(a1, a2, &v8[*(int *)(v9 + 44)]);
  type metadata accessor for CPLargeContentView();
  sub_100087410();
  sub_100087410();
  sub_100087D90();
  sub_100087400();
  sub_100006B3C((uint64_t)v8, a3, &qword_1000A9A38);
  uint64_t v10 = (_OWORD *)(a3 + *(int *)(sub_100004FB4(&qword_1000AACA0) + 36));
  long long v11 = v13[1];
  *uint64_t v10 = v13[0];
  v10[1] = v11;
  v10[2] = v13[2];
  return sub_100006AE0((uint64_t)v8, &qword_1000A9A38);
}

uint64_t sub_1000688A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v4 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v42 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100087430();
  uint64_t v41 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CPTitleView();
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  double v22 = (char *)&v39 - v21;
  double v23 = (int *)type metadata accessor for CPLargeContentView();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1 + v23[7], v12);
  sub_10006B674(a1 + v23[8], (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  double v24 = (long long *)(a1 + v23[9]);
  uint64_t v25 = *((void *)v24 + 4);
  long long v26 = v24[1];
  long long v45 = *v24;
  long long v46 = v26;
  uint64_t v47 = v25;
  swift_retain();
  sub_100004FB4(&qword_1000A88C8);
  sub_100087CE0();
  uint64_t v27 = v48;
  uint64_t v40 = v49;
  long long v39 = v50;
  uint64_t v28 = v51;
  uint64_t v29 = v52;
  *uint64_t v8 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = (uint64_t)v42;
  *uint64_t v42 = KeyPath;
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  uint64_t *v19 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (uint64_t *)((char *)v19 + v17[7]);
  *uint64_t v32 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v8, (uint64_t)v19 + v17[8], &qword_1000A87C0);
  sub_100006C4C(v31, (uint64_t)v19 + v17[9], &qword_1000A88C0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v19 + v17[10], v15, v41);
  sub_10006B60C((uint64_t)v11, (uint64_t)v19 + v17[11], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  *(uint64_t *)((char *)v19 + v17[12]) = v44;
  uint64_t v33 = (char *)v19 + v17[13];
  uint64_t v34 = v40;
  *(void *)uint64_t v33 = v27;
  *((void *)v33 + 1) = v34;
  *((_OWORD *)v33 + 1) = v39;
  *((void *)v33 + 4) = v28;
  *((void *)v33 + 5) = v29;
  sub_10006B60C((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  sub_10006B674((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  uint64_t v35 = v43;
  *uint64_t v43 = 0;
  *((unsigned char *)v35 + 8) = 0;
  uint64_t v36 = v35;
  uint64_t v37 = sub_100004FB4(&qword_1000A9A60);
  sub_10006B674((uint64_t)v19, (uint64_t)v36 + *(int *)(v37 + 48), (uint64_t (*)(void))type metadata accessor for CPTitleView);
  sub_10006B6DC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  return sub_10006B6DC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPTitleView);
}

uint64_t sub_100068D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000AABF8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004FB4(&qword_1000AAC00);
  __chkstk_darwin(v35);
  uint64_t v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100087EC0();
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v33 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004FB4(&qword_1000AAC08);
  __chkstk_darwin(v36);
  uint64_t v37 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CPLargeContentView();
  uint64_t v12 = a1 + *(int *)(v11 + 32);
  uint64_t v13 = type metadata accessor for CPTimelineEntry();
  if (*(unsigned char *)(v12 + *(int *)(v13 + 32)) == 1)
  {
    uint64_t v14 = a1 + *(int *)(v11 + 24);
    uint64_t v15 = *(void *)v14;
    uint64_t v32 = v8;
    char v16 = *(unsigned char *)(v14 + 8);
    sub_100005554(v15, v16);
    char v17 = sub_100016FF4(v15, v16);
    char v18 = v16;
    uint64_t v8 = v32;
    sub_100005720(v15, v18);
    if ((v17 & 1) == 0)
    {
      swift_storeEnumTagMultiPayload();
      sub_100006A8C(&qword_1000AAC20, &qword_1000AAC00);
      uint64_t v25 = v38;
      sub_1000877E0();
      uint64_t v26 = sub_100004FB4(&qword_1000AAC10);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
    }
  }
  unint64_t v19 = *(void *)(v12 + *(int *)(v13 + 20));
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    if (result) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_15;
  }
LABEL_5:
  if ((v19 & 0xC000000000000001) != 0)
  {
    uint64_t v22 = sub_100088340();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = *(void *)(v19 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v22 + 32) && (double v24 = (void *)sub_10005C1C4(0xD000000000000019, 0x800000010008C000)) != 0
    || (uint64_t v23 = v33,
        sub_100016FB8(v33),
        double v24 = sub_1000252C0(v23, 1),
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v23, v8),
        v24))
  {
    *uint64_t v7 = sub_100087D90();
    v7[1] = v27;
    uint64_t v28 = sub_100004FB4(&qword_1000AAC18);
    sub_100069278(v24, a1, (uint64_t)v7 + *(int *)(v28 + 44));
    sub_100006B3C((uint64_t)v7, v37, &qword_1000AAC00);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000AAC20, &qword_1000AAC00);
    sub_1000877E0();

    swift_release();
    sub_100006AE0((uint64_t)v7, &qword_1000AAC00);
    uint64_t v29 = sub_100004FB4(&qword_1000AAC10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v5, 0, 1, v29);
    return sub_100006C4C((uint64_t)v5, v38, &qword_1000AABF8);
  }
  swift_release();
LABEL_16:
  uint64_t v30 = sub_100004FB4(&qword_1000AAC10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
}

uint64_t sub_100069278@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v126 = a3;
  uint64_t v123 = sub_100087E60();
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v119 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v118 = (uint64_t)&v98 - v6;
  uint64_t v7 = sub_100087DA0();
  uint64_t v124 = *(void *)(v7 - 8);
  uint64_t v125 = v7;
  __chkstk_darwin(v7);
  uint64_t v121 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100004FB4(&qword_1000AAC28);
  __chkstk_darwin(v111);
  uint64_t v110 = (uint64_t *)((char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v117 = sub_100004FB4(&qword_1000AAC30);
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v114 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100004FB4(&qword_1000AAC38);
  __chkstk_darwin(v112);
  uint64_t v120 = (uint64_t)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v113 = (char *)&v98 - v13;
  __chkstk_darwin(v14);
  uint64_t v115 = (uint64_t)&v98 - v15;
  uint64_t v16 = type metadata accessor for ViewGeometryAnalyzer();
  __chkstk_darwin(v16 - 8);
  uint64_t v104 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100087380();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v101 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100087C50();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004FB4(&qword_1000A88F8);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (uint64_t *)((char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_100004FB4(&qword_1000A8900);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100004FB4(&qword_1000A8908);
  uint64_t v31 = v30 - 8;
  __chkstk_darwin(v30);
  uint64_t v98 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100004FB4(&qword_1000AAC40);
  __chkstk_darwin(v100);
  uint64_t v99 = (char *)&v98 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100004FB4(&qword_1000AAC48);
  __chkstk_darwin(v34 - 8);
  uint64_t v36 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100004FB4(&qword_1000AAC50);
  __chkstk_darwin(v105);
  uint64_t v109 = (uint64_t)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v106 = (uint64_t)&v98 - v39;
  __chkstk_darwin(v40);
  uint64_t v108 = (uint64_t)&v98 - v41;
  id v42 = a1;
  sub_100087C30();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for Image.ResizingMode.stretch(_:), v19);
  sub_100087CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  *uint64_t v25 = sub_100087D90();
  v25[1] = v43;
  uint64_t v44 = sub_100004FB4(&qword_1000A8948);
  sub_100064EF8((char *)v25 + *(int *)(v44 + 44), 0.3);
  swift_release();
  sub_100006B3C((uint64_t)v25, (uint64_t)v29, &qword_1000A88F8);
  long long v45 = &v29[*(int *)(v27 + 44)];
  *(void *)long long v45 = 0;
  *((_WORD *)v45 + 4) = 257;
  sub_100006AE0((uint64_t)v25, &qword_1000A88F8);
  uint64_t v46 = v102;
  uint64_t v47 = v101;
  uint64_t v48 = v103;
  (*(void (**)(char *, void, uint64_t))(v102 + 104))(v101, enum case for ColorScheme.light(_:), v103);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = (uint64_t)v98;
  uint64_t v51 = (uint64_t *)&v98[*(int *)(v31 + 44)];
  uint64_t v52 = sub_100004FB4(&qword_1000A8950);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)v51 + *(int *)(v52 + 28), v47, v48);
  *uint64_t v51 = KeyPath;
  sub_100006B3C((uint64_t)v29, v50, &qword_1000A8900);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  uint64_t v53 = (uint64_t)v29;
  uint64_t v54 = v107;
  sub_100006AE0(v53, &qword_1000A8900);
  uint64_t v55 = enum case for CoordinateSpace.global(_:);
  uint64_t v56 = sub_100087470();
  uint64_t v57 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v104, v55, v56);
  uint64_t v58 = sub_100087D90();
  uint64_t v60 = v59;
  uint64_t v61 = (uint64_t)v99;
  uint64_t v62 = (uint64_t)&v99[*(int *)(v100 + 36)];
  sub_10006B674(v57, v62, (uint64_t (*)(void))type metadata accessor for ViewGeometryAnalyzer);
  uint64_t v63 = (uint64_t *)(v62 + *(int *)(sub_100004FB4(&qword_1000A96D0) + 36));
  *uint64_t v63 = v58;
  v63[1] = v60;
  sub_100006B3C(v50, v61, &qword_1000A8908);
  sub_10006B6DC(v57, (uint64_t (*)(void))type metadata accessor for ViewGeometryAnalyzer);
  sub_100006AE0(v50, &qword_1000A8908);
  sub_10006B4C4();
  sub_100087AF0();
  sub_100006AE0(v61, &qword_1000AAC40);
  type metadata accessor for CPLargeContentView();
  sub_100087410();
  double v65 = v64;
  sub_100087410();
  double v67 = v66;
  sub_100087410();
  sub_100087D90();
  if (v65 > v67)
  {
    sub_1000881C0();
    id v68 = (void *)sub_100087870();
    sub_100087320();
  }
  sub_1000874E0();
  uint64_t v69 = v106;
  sub_100006B3C((uint64_t)v36, v106, &qword_1000AAC48);
  id v70 = (_OWORD *)(v69 + *(int *)(v105 + 36));
  long long v71 = v132;
  v70[4] = v131;
  v70[5] = v71;
  v70[6] = v133;
  long long v72 = v128;
  *id v70 = v127;
  v70[1] = v72;
  long long v73 = v130;
  v70[2] = v129;
  v70[3] = v73;
  sub_100006AE0((uint64_t)v36, &qword_1000AAC48);
  uint64_t v74 = v108;
  sub_100006C4C(v69, v108, &qword_1000AAC50);
  uint64_t v75 = sub_100087720();
  uint64_t v76 = (uint64_t)v110;
  *uint64_t v110 = v75;
  *(void *)(v76 + 8) = 0;
  *(unsigned char *)(v76 + 16) = 1;
  uint64_t v77 = sub_100004FB4(&qword_1000AAC68);
  sub_100069FEC(v54, v76 + *(int *)(v77 + 44));
  sub_100006A8C(&qword_1000AAC70, &qword_1000AAC28);
  uint64_t v78 = v114;
  sub_100087A80();
  sub_100006AE0(v76, &qword_1000AAC28);
  uint64_t v79 = v118;
  sub_1000171F8(v118);
  uint64_t v80 = v119;
  sub_100087E50();
  char v81 = sub_100087E40();
  uint64_t v82 = *(void (**)(char *, uint64_t))(v122 + 8);
  uint64_t v83 = v80;
  uint64_t v84 = v123;
  v82(v83, v123);
  v82((char *)v79, v84);
  uint64_t v85 = v124;
  uint64_t v86 = (unsigned int *)&enum case for BlendMode.destinationOut(_:);
  if ((v81 & 1) == 0) {
    uint64_t v86 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v87 = v121;
  uint64_t v88 = v125;
  (*(void (**)(char *, void, uint64_t))(v124 + 104))(v121, *v86, v125);
  uint64_t v89 = (uint64_t)v113;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(&v113[*(int *)(v112 + 36)], v87, v88);
  uint64_t v90 = v116;
  uint64_t v91 = v117;
  (*(void (**)(uint64_t, char *, uint64_t))(v116 + 16))(v89, v78, v117);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v88);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v78, v91);
  uint64_t v92 = v115;
  sub_100006C4C(v89, v115, &qword_1000AAC38);
  uint64_t v93 = v109;
  sub_100006B3C(v74, v109, &qword_1000AAC50);
  uint64_t v94 = v120;
  sub_100006B3C(v92, v120, &qword_1000AAC38);
  uint64_t v95 = v126;
  sub_100006B3C(v93, v126, &qword_1000AAC50);
  uint64_t v96 = sub_100004FB4(&qword_1000AAC78);
  sub_100006B3C(v94, v95 + *(int *)(v96 + 48), &qword_1000AAC38);
  sub_100006AE0(v92, &qword_1000AAC38);
  sub_100006AE0(v74, &qword_1000AAC50);
  sub_100006AE0(v94, &qword_1000AAC38);
  return sub_100006AE0(v93, &qword_1000AAC50);
}

uint64_t sub_100069FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v37 = type metadata accessor for CPTitleGradientView() - 8;
  __chkstk_darwin(v37);
  uint64_t v4 = (uint64_t *)((char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = sub_100004FB4(&qword_1000AAC80) - 8;
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t)&v37 - v8;
  uint64_t v9 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CPHeaderGradientView();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v19 = type metadata accessor for CPLargeContentView();
  sub_100087410();
  uint64_t v21 = v20;
  sub_100087410();
  double v23 = v22 * 0.20625;
  uint64_t v24 = a1 + *(int *)(v19 + 32);
  sub_10006B674(v24, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t *v15 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (double *)((char *)v15 + *(int *)(v13 + 28));
  *(void *)uint64_t v25 = v21;
  v25[1] = v23;
  sub_10006B60C((uint64_t)v11, (uint64_t)v15 + *(int *)(v13 + 32), (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  sub_10006B60C((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  sub_100087410();
  uint64_t v27 = v26;
  sub_100087410();
  double v29 = v28 * 0.2975;
  sub_10006B674(v24, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  *uint64_t v4 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = v37;
  uint64_t v31 = (double *)((char *)v4 + *(int *)(v37 + 28));
  *(void *)uint64_t v31 = v27;
  v31[1] = v29;
  sub_10006B60C((uint64_t)v11, (uint64_t)v4 + *(int *)(v30 + 32), (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  sub_10006B674((uint64_t)v4, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  *(_OWORD *)&v6[*(int *)(v39 + 44)] = xmmword_10008A9C0;
  sub_10006B6DC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  uint64_t v32 = v38;
  sub_100006C4C((uint64_t)v6, v38, &qword_1000AAC80);
  sub_10006B674((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  sub_100006B3C(v32, (uint64_t)v6, &qword_1000AAC80);
  uint64_t v33 = v40;
  sub_10006B674((uint64_t)v15, v40, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  uint64_t v34 = sub_100004FB4(&qword_1000AAC88);
  uint64_t v35 = v33 + *(int *)(v34 + 48);
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 0;
  sub_100006B3C((uint64_t)v6, v33 + *(int *)(v34 + 64), &qword_1000AAC80);
  sub_100006AE0(v32, &qword_1000AAC80);
  sub_10006B6DC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  sub_100006AE0((uint64_t)v6, &qword_1000AAC80);
  return sub_10006B6DC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
}

uint64_t sub_10006A41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A98F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004FB4(&qword_1000A9900);
  __chkstk_darwin(v35);
  uint64_t v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100087EC0();
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v33 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100004FB4(&qword_1000A9908);
  __chkstk_darwin(v36);
  uint64_t v37 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CPLargeContentView();
  uint64_t v12 = a1 + *(int *)(v11 + 32);
  uint64_t v13 = type metadata accessor for CPTimelineEntry();
  if (*(unsigned char *)(v12 + *(int *)(v13 + 32)) == 1)
  {
    uint64_t v14 = a1 + *(int *)(v11 + 24);
    uint64_t v15 = *(void *)v14;
    uint64_t v32 = v8;
    char v16 = *(unsigned char *)(v14 + 8);
    sub_100005554(v15, v16);
    char v17 = sub_100016FF4(v15, v16);
    char v18 = v16;
    uint64_t v8 = v32;
    sub_100005720(v15, v18);
    if ((v17 & 1) == 0)
    {
      swift_storeEnumTagMultiPayload();
      sub_100006A8C(&qword_1000A9920, &qword_1000A9900);
      uint64_t v25 = v38;
      sub_1000877E0();
      uint64_t v26 = sub_100004FB4(&qword_1000A9910);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
    }
  }
  unint64_t v19 = *(void *)(v12 + *(int *)(v13 + 20));
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    if (result) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_15;
  }
LABEL_5:
  if ((v19 & 0xC000000000000001) != 0)
  {
    uint64_t v22 = sub_100088340();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = *(void *)(v19 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v22 + 32) && (uint64_t v24 = (void *)sub_10005C1C4(0xD000000000000019, 0x800000010008C000)) != 0
    || (uint64_t v23 = v33,
        sub_100016FB8(v33),
        uint64_t v24 = sub_1000252C0(v23, 1),
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v23, v8),
        v24))
  {
    *uint64_t v7 = sub_100087D90();
    v7[1] = v27;
    uint64_t v28 = sub_100004FB4(&qword_1000A9918);
    sub_10006A948(v24, a1, v22, (uint64_t)v7 + *(int *)(v28 + 44));
    sub_100006B3C((uint64_t)v7, v37, &qword_1000A9900);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000A9920, &qword_1000A9900);
    sub_1000877E0();

    swift_release();
    sub_100006AE0((uint64_t)v7, &qword_1000A9900);
    uint64_t v29 = sub_100004FB4(&qword_1000A9910);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v5, 0, 1, v29);
    return sub_100006C4C((uint64_t)v5, v38, &qword_1000A98F8);
  }
  swift_release();
LABEL_16:
  uint64_t v30 = sub_100004FB4(&qword_1000A9910);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
}

uint64_t sub_10006A948@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v68 = a3;
  uint64_t v73 = a2;
  uint64_t v78 = sub_100004FB4(&qword_1000A9928);
  __chkstk_darwin(v78);
  uint64_t v79 = (uint64_t *)((char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100087380();
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v72 = v7;
  __chkstk_darwin(v7);
  id v70 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100004FB4(&qword_1000A9228);
  __chkstk_darwin(v64);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100087D60();
  uint64_t v11 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FB4(&qword_1000A9230);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FB4(&qword_1000A9238);
  __chkstk_darwin(v62);
  char v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100004FB4(&qword_1000A9930);
  __chkstk_darwin(v65);
  uint64_t v67 = (uint64_t)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100004FB4(&qword_1000A9938);
  __chkstk_darwin(v75);
  double v66 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v69 = (uint64_t)&v61 - v22;
  uint64_t v23 = sub_100004FB4(&qword_1000A9940);
  __chkstk_darwin(v23 - 8);
  uint64_t v77 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v76 = (char *)&v61 - v26;
  uint64_t v27 = sub_100087C50();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = a1;
  sub_100087C30();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, enum case for Image.ResizingMode.stretch(_:), v27);
  uint64_t v74 = sub_100087CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  sub_100087DF0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  type metadata accessor for CPLargeContentView();
  if (sub_100007644())
  {
    sub_100087D50();
    char v36 = sub_100087880();
    uint64_t v37 = v63;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v10, v13, v63);
    v10[*(int *)(v64 + 36)] = v36;
    sub_100006B3C((uint64_t)v10, (uint64_t)v16, &qword_1000A9228);
    sub_100006AE0((uint64_t)v10, &qword_1000A9228);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v37);
    sub_100087BA0();
    uint64_t v38 = sub_100087BD0();
    swift_release();
    char v39 = sub_100087880();
    sub_100006B3C((uint64_t)v16, (uint64_t)v18, &qword_1000A9230);
    uint64_t v40 = &v18[*(int *)(v62 + 36)];
    *(void *)uint64_t v40 = v38;
    v40[8] = v39;
    sub_100006AE0((uint64_t)v16, &qword_1000A9230);
    uint64_t v41 = *(void **)(v68 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor);
    if (!v41)
    {
      uint64_t v43 = *(void **)(v68 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor);
      if (v43) {
        id v44 = v43;
      }
      else {
        [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.431372549 blue:0.62745098 alpha:1.0];
      }
    }
    id v45 = v41;
    sub_100087B80();
    uint64_t v46 = sub_100087BD0();
    swift_release();
    char v47 = sub_100087880();
    uint64_t v48 = v67;
    sub_100006B3C((uint64_t)v18, v67, &qword_1000A9238);
    uint64_t v49 = v48 + *(int *)(v65 + 36);
    *(void *)uint64_t v49 = v46;
    *(unsigned char *)(v49 + 8) = v47;
    sub_100006AE0((uint64_t)v18, &qword_1000A9238);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v52 = v70;
    uint64_t v51 = v71;
    uint64_t v53 = v72;
    (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, enum case for ColorScheme.light(_:), v72);
    uint64_t v54 = (uint64_t)v66;
    uint64_t v55 = (uint64_t *)&v66[*(int *)(v75 + 36)];
    uint64_t v56 = sub_100004FB4(&qword_1000A8950);
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))((char *)v55 + *(int *)(v56 + 28), v52, v53);
    *uint64_t v55 = KeyPath;
    sub_100006B3C(v48, v54, &qword_1000A9930);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    sub_100006AE0(v48, &qword_1000A9930);
    uint64_t v57 = v69;
    sub_100006C4C(v54, v69, &qword_1000A9938);
    sub_100006B3C(v57, (uint64_t)v79, &qword_1000A9938);
    swift_storeEnumTagMultiPayload();
    sub_10006B400();
    uint64_t v42 = (uint64_t)v76;
    sub_1000877E0();
    sub_100006AE0(v57, &qword_1000A9938);
  }
  else
  {
    if (qword_1000A86E0 != -1) {
      swift_once();
    }
    *uint64_t v79 = qword_1000AD9C8;
    swift_storeEnumTagMultiPayload();
    sub_10006B400();
    swift_retain();
    uint64_t v42 = (uint64_t)v76;
    sub_1000877E0();
  }
  uint64_t v58 = v77;
  sub_100006B3C(v42, v77, &qword_1000A9940);
  *(void *)a4 = v74;
  *(_OWORD *)(a4 + 8) = xmmword_10008A9D0;
  *(void *)(a4 + 24) = 0xBFF0000000000000;
  *(void *)(a4 + 32) = v33;
  *(void *)(a4 + 40) = v35;
  uint64_t v59 = sub_100004FB4(&qword_1000A9988);
  sub_100006B3C(v58, a4 + *(int *)(v59 + 48), &qword_1000A9940);
  swift_retain();
  sub_100006AE0(v42, &qword_1000A9940);
  sub_100006AE0(v58, &qword_1000A9940);
  return swift_release();
}

uint64_t sub_10006B21C()
{
  uint64_t v1 = sub_100087840();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000AAB78);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_100087D90();
  v7[1] = v8;
  uint64_t v9 = sub_100004FB4(&qword_1000AAB80);
  sub_100067188(v0, (uint64_t *)((char *)v7 + *(int *)(v9 + 44)));
  sub_100087830();
  sub_100087D90();
  sub_100006A8C(&qword_1000AAB88, &qword_1000AAB78);
  sub_100087B30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100006AE0((uint64_t)v7, &qword_1000AAB78);
}

unint64_t sub_10006B400()
{
  unint64_t result = qword_1000A9948;
  if (!qword_1000A9948)
  {
    sub_100004FF8(&qword_1000A9938);
    sub_100031C78();
    sub_100006A8C(&qword_1000A8978, &qword_1000A8950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9948);
  }
  return result;
}

unint64_t sub_10006B4C4()
{
  unint64_t result = qword_1000AAC58;
  if (!qword_1000AAC58)
  {
    sub_100004FF8(&qword_1000AAC40);
    sub_10000694C();
    sub_100006A8C(&qword_1000AAC60, &qword_1000A96D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AAC58);
  }
  return result;
}

uint64_t sub_10006B564@<X0>(uint64_t a1@<X8>)
{
  return sub_100068754(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_10006B56C()
{
  unint64_t result = qword_1000AACA8;
  if (!qword_1000AACA8)
  {
    sub_100004FF8(&qword_1000AACA0);
    sub_100006A8C(&qword_1000A9A40, &qword_1000A9A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AACA8);
  }
  return result;
}

uint64_t sub_10006B60C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006B674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006B6DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006B73C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_10006B7D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087EC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100087220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for CPTimelineEntry();
    *(void *)&v10[v13[5]] = *(void *)&v11[v13[5]];
    v10[v13[6]] = v11[v13[6]];
    v10[v13[7]] = v11[v13[7]];
    v10[v13[8]] = v11[v13[8]];
    v10[v13[9]] = v11[v13[9]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10006B974(uint64_t a1, uint64_t a2)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for CPTimelineEntry();

  return swift_bridgeObjectRelease();
}

void *sub_10006BA5C(void *a1, void *a2, uint64_t a3)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v8[v11[5]] = *(void *)&v9[v11[5]];
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10006BBB0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v8[v11[5]] = *(void *)&v9[v11[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[v11[6]] = v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  return a1;
}

char *sub_10006BD30(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v9[v12[5]] = *(void *)&v10[v12[5]];
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v9[v12[9]] = v10[v12[9]];
  return a1;
}

char *sub_10006BE84(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    uint64_t v6 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v9[v12[5]] = *(void *)&v10[v12[5]];
  swift_bridgeObjectRelease();
  v9[v12[6]] = v10[v12[6]];
  v9[v12[7]] = v10[v12[7]];
  v9[v12[8]] = v10[v12[8]];
  v9[v12[9]] = v10[v12[9]];
  return a1;
}

uint64_t sub_10006BFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006C010);
}

uint64_t sub_10006C010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for CPTimelineEntry();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10006C10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006C120);
}

uint64_t sub_10006C120(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for CPTimelineEntry();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for CPEntryView()
{
  uint64_t result = qword_1000AAD10;
  if (!qword_1000AAD10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006C274()
{
  sub_100013BE8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CPTimelineEntry();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10006C33C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006C358()
{
  uint64_t v0 = sub_100087280();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for GKFeatureFlags.GameOverlayUI(_:), v0, v2);
  char v5 = sub_100087270();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if ((v5 & 1) != 0
    && (id v6 = [self currentDevice],
        id v7 = [v6 userInterfaceIdiom],
        v6,
        !v7))
  {
    return sub_1000872C0();
  }
  else
  {
    return sub_100087160();
  }
}

uint64_t sub_10006C4B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v5 - 8);
  id v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100087430();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v2 + *(int *)(type metadata accessor for CPEntryView() + 20);
  uint64_t v37 = type metadata accessor for CPTimelineEntry;
  sub_10007054C(v18, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  sub_100087310();
  uint64_t v19 = (void *)sub_1000872F0();
  char v20 = sub_100087300();

  if (v20) {
    unint64_t v21 = 0xD000000000000015;
  }
  else {
    unint64_t v21 = 0x5F4E495F4E474953;
  }
  unint64_t v22 = 0x800000010008BCB0;
  if ((v20 & 1) == 0) {
    unint64_t v22 = 0xEF4547415353454DLL;
  }
  unint64_t v35 = v22;
  unint64_t v36 = v21;
  uint64_t v23 = (void *)sub_1000872F0();
  char v24 = sub_100087300();

  if (v24) {
    unint64_t v25 = 0;
  }
  else {
    unint64_t v25 = 0xD000000000000016;
  }
  unint64_t v34 = v25;
  if (v24) {
    unint64_t v26 = 0;
  }
  else {
    unint64_t v26 = 0x800000010008BC90;
  }
  *uint64_t v10 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  *id v7 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *a2 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = (int *)type metadata accessor for CPMessageView();
  sub_100006C4C((uint64_t)v10, (uint64_t)a2 + v28[5], &qword_1000A87C0);
  sub_100006C4C((uint64_t)v7, (uint64_t)a2 + v28[6], &qword_1000A88C0);
  uint64_t v29 = (char *)a2 + v28[7];
  *(void *)uint64_t v29 = KeyPath;
  v29[8] = 0;
  sub_1000704E4((uint64_t)v17, (uint64_t)a2 + v28[8], (uint64_t (*)(void))v37);
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))((char *)a2 + v28[9], v14, v11);
  id v31 = (unint64_t *)((char *)a2 + v28[10]);
  unint64_t v32 = v35;
  *id v31 = v36;
  v31[1] = v32;
  uint64_t v33 = (unint64_t *)((char *)a2 + v28[11]);
  *uint64_t v33 = v34;
  v33[1] = v26;
  return result;
}

uint64_t sub_10006C87C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v5 - 8);
  id v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100087430();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CPEntryView();
  sub_10007054C(v2 + *(int *)(v18 + 20), (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  *uint64_t v10 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  *id v7 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *a2 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  char v20 = (int *)type metadata accessor for CPMessageView();
  sub_100006C4C((uint64_t)v10, (uint64_t)a2 + v20[5], &qword_1000A87C0);
  sub_100006C4C((uint64_t)v7, (uint64_t)a2 + v20[6], &qword_1000A88C0);
  unint64_t v21 = (char *)a2 + v20[7];
  *(void *)unint64_t v21 = KeyPath;
  v21[8] = 0;
  sub_1000704E4((uint64_t)v17, (uint64_t)a2 + v20[8], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))((char *)a2 + v20[9], v14, v11);
  uint64_t v23 = (uint64_t *)((char *)a2 + v20[10]);
  *uint64_t v23 = 0xD000000000000017;
  v23[1] = 0x800000010008C270;
  char v24 = (uint64_t *)((char *)a2 + v20[11]);
  *char v24 = 0xD00000000000001ELL;
  v24[1] = 0x800000010008C290;
  return result;
}

uint64_t sub_10006CBB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v5 - 8);
  id v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100087430();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CPEntryView();
  sub_10007054C(v2 + *(int *)(v18 + 20), (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  *uint64_t v10 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  *id v7 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *a2 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  char v20 = (int *)type metadata accessor for CPMessageView();
  sub_100006C4C((uint64_t)v10, (uint64_t)a2 + v20[5], &qword_1000A87C0);
  sub_100006C4C((uint64_t)v7, (uint64_t)a2 + v20[6], &qword_1000A88C0);
  unint64_t v21 = (char *)a2 + v20[7];
  *(void *)unint64_t v21 = KeyPath;
  v21[8] = 0;
  sub_1000704E4((uint64_t)v17, (uint64_t)a2 + v20[8], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))((char *)a2 + v20[9], v14, v11);
  uint64_t v23 = (uint64_t *)((char *)a2 + v20[10]);
  *uint64_t v23 = 0xD000000000000019;
  v23[1] = 0x800000010008B9F0;
  char v24 = (uint64_t *)((char *)a2 + v20[11]);
  *char v24 = 0;
  v24[1] = 0;
  return result;
}

uint64_t sub_10006CEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v118 = a1;
  uint64_t v119 = a2;
  uint64_t v123 = a3;
  uint64_t v104 = type metadata accessor for CPExtraLargeContentView();
  __chkstk_darwin(v104);
  uint64_t v97 = (uint64_t *)((char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v98 = (uint64_t)&v95 - v5;
  uint64_t v101 = sub_100004FB4(&qword_1000AAE38);
  __chkstk_darwin(v101);
  uint64_t v103 = (uint64_t)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100004FB4(&qword_1000AAE20);
  __chkstk_darwin(v115);
  uint64_t v105 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for CPLargeContentView();
  __chkstk_darwin(v102);
  uint64_t v99 = (uint64_t *)((char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v100 = (uint64_t)&v95 - v10;
  uint64_t v120 = type metadata accessor for CPMediumContentView();
  __chkstk_darwin(v120);
  uint64_t v106 = (uint64_t *)((char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v107 = (uint64_t)&v95 - v13;
  uint64_t v121 = sub_100004FB4(&qword_1000AAE40);
  __chkstk_darwin(v121);
  uint64_t v122 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100004FB4(&qword_1000AAE48);
  __chkstk_darwin(v112);
  uint64_t v114 = (uint64_t)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100004FB4(&qword_1000AAE50);
  __chkstk_darwin(v110);
  uint64_t v109 = (uint64_t)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100004FB4(&qword_1000AAE00);
  __chkstk_darwin(v113);
  uint64_t v111 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100004FB4(&qword_1000AADF0);
  __chkstk_darwin(v124);
  uint64_t v116 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v19 - 8);
  unint64_t v21 = (uint64_t *)((char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v22 - 8);
  uint64_t v117 = (uint64_t)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100087430();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = (int *)type metadata accessor for CPSmallContentView();
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31);
  uint64_t v108 = (int *)((char *)&v95 - v32);
  uint64_t v33 = sub_100087EC0();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v36 = (char *)&v95 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016FB8((uint64_t)v36);
  uint64_t v96 = v34;
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v36, v33);
  if (v37 == enum case for WidgetFamily.systemSmall(_:))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v118, v24);
    uint64_t v38 = v117;
    sub_10007054C(v119, v117, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    *unint64_t v21 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    uint64_t KeyPath = swift_getKeyPath();
    *uint64_t v30 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87A8);
    swift_storeEnumTagMultiPayload();
    sub_100006C4C((uint64_t)v21, (uint64_t)v30 + v28[5], &qword_1000A87C0);
    uint64_t v40 = (char *)v30 + v28[6];
    *(void *)uint64_t v40 = KeyPath;
    v40[8] = 0;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))((char *)v30 + v28[7], v27, v24);
    sub_1000704E4(v38, (uint64_t)v30 + v28[8], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    uint64_t v41 = (char *)v30 + v28[9];
    type metadata accessor for CGRect(0);
    long long v125 = 0u;
    long long v126 = 0u;
    sub_100087CD0();
    uint64_t v42 = v129;
    long long v43 = v128;
    *(_OWORD *)uint64_t v41 = v127;
    *((_OWORD *)v41 + 1) = v43;
    *((void *)v41 + 4) = v42;
    uint64_t v44 = (uint64_t)v108;
    sub_1000704E4((uint64_t)v30, (uint64_t)v108, (uint64_t (*)(void))type metadata accessor for CPSmallContentView);
    sub_10007054C(v44, v109, (uint64_t (*)(void))type metadata accessor for CPSmallContentView);
    swift_storeEnumTagMultiPayload();
    sub_100070488(&qword_1000AAE08, (void (*)(uint64_t))type metadata accessor for CPSmallContentView);
    sub_100070488(&qword_1000AAE10, (void (*)(uint64_t))type metadata accessor for CPMediumContentView);
    uint64_t v45 = (uint64_t)v111;
    sub_1000877E0();
    sub_100006B3C(v45, v114, &qword_1000AAE00);
    swift_storeEnumTagMultiPayload();
    sub_1000702D0();
    sub_1000703AC();
    uint64_t v46 = (uint64_t)v116;
    sub_1000877E0();
    sub_100006AE0(v45, &qword_1000AAE00);
    sub_100006B3C(v46, (uint64_t)v122, &qword_1000AADF0);
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_100070294();
    sub_10005A4B8();
    sub_1000877E0();
    sub_100006AE0(v46, &qword_1000AADF0);
    char v47 = type metadata accessor for CPSmallContentView;
LABEL_7:
    uint64_t v64 = v47;
    uint64_t v65 = v44;
    return sub_1000705B4(v65, (uint64_t (*)(void))v64);
  }
  uint64_t v108 = v28;
  uint64_t v48 = v119;
  uint64_t v49 = (int *)v120;
  uint64_t v50 = v25;
  uint64_t v51 = v117;
  if (v37 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v52 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v118, v24);
    sub_10007054C(v48, v51, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    uint64_t v53 = (uint64_t)v21;
    *unint64_t v21 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = swift_getKeyPath();
    uint64_t v55 = swift_getKeyPath();
    uint64_t v56 = (uint64_t)v106;
    *uint64_t v106 = v55;
    sub_100004FB4(&qword_1000A87A8);
    swift_storeEnumTagMultiPayload();
    sub_100006C4C(v53, v56 + v49[5], &qword_1000A87C0);
    uint64_t v57 = v56 + v49[6];
    *(void *)uint64_t v57 = v54;
    *(unsigned char *)(v57 + 8) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v56 + v49[7], v27, v24);
    sub_1000704E4(v51, v56 + v49[8], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    uint64_t v58 = v56 + v49[9];
    type metadata accessor for CGRect(0);
    long long v125 = 0u;
    long long v126 = 0u;
    sub_100087CD0();
    uint64_t v59 = v129;
    long long v60 = v128;
    *(_OWORD *)uint64_t v58 = v127;
    *(_OWORD *)(v58 + 16) = v60;
    *(void *)(v58 + 32) = v59;
    uint64_t v61 = v107;
    sub_1000704E4(v56, v107, (uint64_t (*)(void))type metadata accessor for CPMediumContentView);
    sub_10007054C(v61, v109, (uint64_t (*)(void))type metadata accessor for CPMediumContentView);
    swift_storeEnumTagMultiPayload();
    sub_100070488(&qword_1000AAE08, (void (*)(uint64_t))type metadata accessor for CPSmallContentView);
    sub_100070488(&qword_1000AAE10, (void (*)(uint64_t))type metadata accessor for CPMediumContentView);
    uint64_t v62 = (uint64_t)v111;
    sub_1000877E0();
    sub_100006B3C(v62, v114, &qword_1000AAE00);
    swift_storeEnumTagMultiPayload();
    sub_1000702D0();
    sub_1000703AC();
    uint64_t v63 = (uint64_t)v116;
    sub_1000877E0();
    sub_100006AE0(v62, &qword_1000AAE00);
    sub_100006B3C(v63, (uint64_t)v122, &qword_1000AADF0);
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_100070294();
    sub_10005A4B8();
    sub_1000877E0();
    sub_100006AE0(v63, &qword_1000AADF0);
    uint64_t v64 = type metadata accessor for CPMediumContentView;
    uint64_t v65 = v61;
    return sub_1000705B4(v65, (uint64_t (*)(void))v64);
  }
  uint64_t v66 = v24;
  if (v37 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v67 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v27, v118, v24);
    sub_10007054C(v48, v51, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    *unint64_t v21 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    uint64_t v68 = swift_getKeyPath();
    uint64_t v69 = swift_getKeyPath();
    uint64_t v70 = (uint64_t)v99;
    uint64_t *v99 = v69;
    sub_100004FB4(&qword_1000A87A8);
    swift_storeEnumTagMultiPayload();
    uint64_t v71 = (int *)v102;
    sub_100006C4C((uint64_t)v21, v70 + *(int *)(v102 + 20), &qword_1000A87C0);
    uint64_t v72 = v70 + v71[6];
    *(void *)uint64_t v72 = v68;
    *(unsigned char *)(v72 + 8) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v70 + v71[7], v27, v24);
    sub_1000704E4(v51, v70 + v71[8], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    uint64_t v73 = v70 + v71[9];
    type metadata accessor for CGRect(0);
    long long v125 = 0u;
    long long v126 = 0u;
    sub_100087CD0();
    uint64_t v74 = v129;
    long long v75 = v128;
    *(_OWORD *)uint64_t v73 = v127;
    *(_OWORD *)(v73 + 16) = v75;
    *(void *)(v73 + 32) = v74;
    uint64_t v44 = v100;
    sub_1000704E4(v70, v100, (uint64_t (*)(void))type metadata accessor for CPLargeContentView);
    sub_10007054C(v44, v103, (uint64_t (*)(void))type metadata accessor for CPLargeContentView);
    swift_storeEnumTagMultiPayload();
    sub_100070488(&qword_1000AAE28, (void (*)(uint64_t))type metadata accessor for CPLargeContentView);
    sub_100070488(&qword_1000AAE30, (void (*)(uint64_t))type metadata accessor for CPExtraLargeContentView);
    uint64_t v76 = (uint64_t)v105;
    sub_1000877E0();
    sub_100006B3C(v76, v114, &qword_1000AAE20);
    swift_storeEnumTagMultiPayload();
    sub_1000702D0();
    sub_1000703AC();
    uint64_t v77 = (uint64_t)v116;
    sub_1000877E0();
    sub_100006AE0(v76, &qword_1000AAE20);
    sub_100006B3C(v77, (uint64_t)v122, &qword_1000AADF0);
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_100070294();
    sub_10005A4B8();
    sub_1000877E0();
    sub_100006AE0(v77, &qword_1000AADF0);
    char v47 = type metadata accessor for CPLargeContentView;
    goto LABEL_7;
  }
  uint64_t v79 = v122;
  if (v37 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v80 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v27, v118, v66);
    sub_10007054C(v48, v51, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    uint64_t v81 = (uint64_t)v21;
    *unint64_t v21 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    uint64_t v82 = v66;
    uint64_t v83 = swift_getKeyPath();
    uint64_t v84 = swift_getKeyPath();
    uint64_t v85 = (uint64_t)v97;
    uint64_t *v97 = v84;
    sub_100004FB4(&qword_1000A87A8);
    swift_storeEnumTagMultiPayload();
    uint64_t v86 = (uint64_t)v79;
    uint64_t v87 = (int *)v104;
    sub_100006C4C(v81, v85 + *(int *)(v104 + 20), &qword_1000A87C0);
    uint64_t v88 = v85 + v87[6];
    *(void *)uint64_t v88 = v83;
    *(unsigned char *)(v88 + 8) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v85 + v87[7], v27, v82);
    sub_1000704E4(v51, v85 + v87[8], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    uint64_t v89 = v85 + v87[9];
    type metadata accessor for CGRect(0);
    long long v125 = 0u;
    long long v126 = 0u;
    sub_100087CD0();
    uint64_t v90 = v129;
    long long v91 = v128;
    *(_OWORD *)uint64_t v89 = v127;
    *(_OWORD *)(v89 + 16) = v91;
    *(void *)(v89 + 32) = v90;
    uint64_t v92 = v98;
    sub_1000704E4(v85, v98, (uint64_t (*)(void))type metadata accessor for CPExtraLargeContentView);
    sub_10007054C(v92, v103, (uint64_t (*)(void))type metadata accessor for CPExtraLargeContentView);
    swift_storeEnumTagMultiPayload();
    sub_100070488(&qword_1000AAE28, (void (*)(uint64_t))type metadata accessor for CPLargeContentView);
    sub_100070488(&qword_1000AAE30, (void (*)(uint64_t))type metadata accessor for CPExtraLargeContentView);
    uint64_t v93 = (uint64_t)v105;
    sub_1000877E0();
    sub_100006B3C(v93, v114, &qword_1000AAE20);
    swift_storeEnumTagMultiPayload();
    sub_1000702D0();
    sub_1000703AC();
    uint64_t v94 = (uint64_t)v116;
    sub_1000877E0();
    sub_100006AE0(v93, &qword_1000AAE20);
    sub_100006B3C(v94, v86, &qword_1000AADF0);
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_100070294();
    sub_10005A4B8();
    sub_1000877E0();
    sub_100006AE0(v94, &qword_1000AADF0);
    uint64_t v64 = type metadata accessor for CPExtraLargeContentView;
    uint64_t v65 = v92;
    return sub_1000705B4(v65, (uint64_t (*)(void))v64);
  }
  if (v37 == enum case for WidgetFamily.accessoryCircular(_:)
    || v37 == enum case for WidgetFamily.accessoryRectangular(_:)
    || v37 == enum case for WidgetFamily.accessoryInline(_:))
  {
    LOBYTE(v125) = 0;
    sub_1000877E0();
    *uint64_t v79 = v127;
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_100070294();
    sub_10005A4B8();
    return sub_1000877E0();
  }
  else
  {
    LOBYTE(v125) = 1;
    sub_1000877E0();
    *uint64_t v79 = v127;
    swift_storeEnumTagMultiPayload();
    sub_100004FB4(&qword_1000AA280);
    sub_100070294();
    sub_10005A4B8();
    sub_1000877E0();
    return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v36, v33);
  }
}

uint64_t sub_10006E39C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v67 = a1;
  uint64_t v51 = sub_100004FB4(&qword_1000AADB0);
  __chkstk_darwin(v51);
  v50[1] = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100087EC0();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin(v4);
  uint64_t v54 = (uint64_t)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CPMessageView();
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = sub_100004FB4(&qword_1000AADB8);
  __chkstk_darwin(v65);
  uint64_t v9 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v52 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v50 - v12;
  uint64_t v14 = sub_1000874A0();
  uint64_t v62 = *(void *)(v14 - 8);
  uint64_t v63 = v14;
  __chkstk_darwin(v14);
  uint64_t v61 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100004FB4(&qword_1000AADC0);
  __chkstk_darwin(v64);
  uint64_t v53 = (uint64_t)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v50 - v21;
  uint64_t v23 = sub_100004FB4(&qword_1000AADC8);
  uint64_t v59 = *(void *)(v23 - 8);
  uint64_t v60 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100004FB4(&qword_1000AADD0);
  __chkstk_darwin(v58);
  uint64_t v57 = (char *)v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v2 + *(int *)(type metadata accessor for CPEntryView() + 20);
  if (*(unsigned char *)(v27 + v16[6]) != 1)
  {
    sub_10006C4B8(v67, v8);
    sub_100087160();
LABEL_7:
    uint64_t v33 = sub_100070488(&qword_1000AADD8, (void (*)(uint64_t))type metadata accessor for CPMessageView);
    sub_100087A90();
    sub_100006AE0((uint64_t)v13, &qword_1000A8BC8);
    sub_1000705B4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CPMessageView);
    uint64_t v68 = v6;
    uint64_t v69 = v33;
    swift_getOpaqueTypeConformance2();
LABEL_8:
    uint64_t result = sub_100087CF0();
    *uint64_t v66 = result;
    return result;
  }
  if (*(unsigned char *)(v27 + v16[7]) == 1)
  {
    sub_100087210();
    if (qword_1000A8728 != -1) {
      swift_once();
    }
    *(void *)&v18[v16[5]] = qword_1000ADA38;
    v18[v16[6]] = 1;
    v18[v16[7]] = 0;
    v18[v16[8]] = 1;
    v18[v16[9]] = 0;
    swift_bridgeObjectRetain();
    sub_10006CEE0(v67, (uint64_t)v18, (uint64_t)v22);
    sub_1000705B4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    uint64_t v28 = v61;
    sub_100087490();
    uint64_t v29 = sub_10007020C(&qword_1000AADE0, &qword_1000AADC0, (void (*)(void))sub_100070294, (void (*)(void))sub_10005A4B8);
    uint64_t v30 = v64;
    sub_100087B60();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v28, v63);
    sub_100006AE0((uint64_t)v22, &qword_1000AADC0);
    sub_10006C358();
    uint64_t v68 = v30;
    uint64_t v69 = v29;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v32 = v60;
    sub_100087A90();
    sub_100006AE0((uint64_t)v13, &qword_1000A8BC8);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v25, v32);
    uint64_t v68 = v32;
    uint64_t v69 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    goto LABEL_8;
  }
  uint64_t v35 = v67;
  if ((*(unsigned char *)(v27 + v16[9]) & 1) == 0)
  {
    sub_10006CBB8(v67, v8);
    uint64_t v40 = v54;
    sub_100016FB8(v54);
    sub_100070488(&qword_1000A8E50, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v41 = v56;
    sub_1000884E0();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v40, v41);
    sub_1000872D0();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  unint64_t v36 = *(void *)(v27 + v16[5]);
  uint64_t v37 = (uint64_t)v13;
  if (!(v36 >> 62))
  {
    if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
LABEL_26:
    sub_10006C87C(v35, v8);
    sub_10006C358();
    uint64_t v49 = sub_100070488(&qword_1000AADD8, (void (*)(uint64_t))type metadata accessor for CPMessageView);
    sub_100087A90();
    sub_100006AE0(v37, &qword_1000A8BC8);
    sub_1000705B4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CPMessageView);
    uint64_t v68 = v6;
    uint64_t v69 = v49;
    swift_getOpaqueTypeConformance2();
    goto LABEL_8;
  }
  uint64_t v63 = v2;
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_1000883C0();
  swift_bridgeObjectRelease();
  uint64_t v35 = v67;
  if (!v48) {
    goto LABEL_26;
  }
LABEL_12:
  uint64_t v38 = v53;
  sub_10006CEE0(v35, v27, v53);
  if (*(unsigned char *)(v27 + v16[8]) == 1)
  {
    uint64_t v39 = (uint64_t)v52;
    sub_10006C358();
LABEL_24:
    uint64_t v46 = sub_10007020C(&qword_1000AADE0, &qword_1000AADC0, (void (*)(void))sub_100070294, (void (*)(void))sub_10005A4B8);
    uint64_t v47 = v64;
    sub_100087A90();
    sub_100006AE0(v39, &qword_1000A8BC8);
    sub_100006AE0(v38, &qword_1000AADC0);
    uint64_t v68 = v47;
    uint64_t v69 = v46;
    swift_getOpaqueTypeConformance2();
    goto LABEL_8;
  }
  uint64_t v39 = (uint64_t)v52;
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    uint64_t v42 = result;
  }
  else
  {
    uint64_t v42 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  if (!v42)
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_100087170();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v39, 1, 1, v45);
    goto LABEL_24;
  }
  if ((v36 & 0xC000000000000001) != 0)
  {
    sub_100088340();
    goto LABEL_22;
  }
  if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v43 = v54;
    sub_100016FB8(v54);
    sub_10005BE90(0xD000000000000015, 0x800000010008B6C0, v43, v39);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v43, v56);
    uint64_t v44 = sub_100087170();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v39, 0, 1, v44);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006EEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v33 = a3;
  uint64_t v32 = sub_100004FB4(&qword_1000AAD48);
  __chkstk_darwin(v32);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000874A0();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FB4(&qword_1000AAD50);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000AAD58);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100004FB4(&qword_1000AAD60);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v28 - v20;
  uint64_t *v15 = sub_100087D90();
  v15[1] = v22;
  uint64_t v23 = sub_100004FB4(&qword_1000AAD68);
  sub_10006F330(a2, v31, (uint64_t *)((char *)v15 + *(int *)(v23 + 44)));
  uint64_t v24 = a2 + *(int *)(type metadata accessor for CPEntryView() + 20);
  if (*(unsigned char *)(v24 + *(int *)(type metadata accessor for CPTimelineEntry() + 32)) == 1)
  {
    sub_100087490();
    uint64_t v25 = sub_100006A8C(&qword_1000AAD70, &qword_1000AAD58);
    sub_100087B60();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v12, v9);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v13;
    uint64_t v35 = v25;
    swift_getOpaqueTypeConformance2();
    sub_1000877E0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    sub_100006B3C((uint64_t)v15, (uint64_t)v5, &qword_1000AAD58);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = sub_100006A8C(&qword_1000AAD70, &qword_1000AAD58);
    uint64_t v34 = v13;
    uint64_t v35 = v26;
    swift_getOpaqueTypeConformance2();
    sub_1000877E0();
  }
  sub_100006C4C((uint64_t)v18, (uint64_t)v21, &qword_1000AAD60);
  sub_100006AE0((uint64_t)v15, &qword_1000AAD58);
  return sub_100006C4C((uint64_t)v21, v33, &qword_1000AAD60);
}

uint64_t sub_10006F330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v82 = a3;
  uint64_t v81 = sub_100004FB4(&qword_1000AAD78);
  __chkstk_darwin(v81);
  uint64_t v72 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v73 = (uint64_t)&v62 - v7;
  uint64_t v79 = sub_100004FB4(&qword_1000AAD80);
  __chkstk_darwin(v79);
  uint64_t v80 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000874A0();
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  __chkstk_darwin(v9);
  uint64_t v67 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v11);
  uint64_t v74 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v71 = (char *)&v62 - v14;
  uint64_t v15 = sub_100087430();
  uint64_t v83 = *(void (***)(char *, uint64_t, uint64_t))(v15 - 8);
  uint64_t v84 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v70 = (char *)&v62 - v19;
  uint64_t v20 = (int *)type metadata accessor for CPBackgroundView();
  __chkstk_darwin(v20);
  uint64_t v22 = (void (**)(uint64_t, uint64_t, unint64_t))((char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  uint64_t v63 = (uint64_t *)((char *)&v62 - v24);
  uint64_t v78 = sub_100004FB4(&qword_1000AAD88);
  uint64_t v66 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v64 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v65 = (char *)&v62 - v27;
  uint64_t v28 = type metadata accessor for CPEntryView();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100004FB4(&qword_1000AAD90);
  __chkstk_darwin(v31 - 8);
  uint64_t v77 = (uint64_t)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v76 = (char *)&v62 - v34;
  uint64_t v35 = a2;
  sub_10006E39C(a2, (uint64_t *)&v85);
  uint64_t v75 = (uint64_t)v85;
  uint64_t v36 = a1 + *(int *)(v28 + 20);
  int v37 = *(unsigned __int8 *)(v36 + v11[6]);
  sub_10007054C(a1, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for CPEntryView);
  if (v37 != 1)
  {
    sub_1000705B4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for CPEntryView);
LABEL_13:
    uint64_t v41 = (uint64_t)v83;
    uint64_t v45 = v35;
    uint64_t v46 = v84;
    v83[2](v17, v45, v84);
    uint64_t v40 = v74;
    sub_10007054C(v36, v74, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    if (!sub_100007644())
    {
      unint64_t v42 = 0;
      goto LABEL_21;
    }
    unint64_t v39 = *(void *)(v36 + v11[5]);
    if (v39 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_1000883C0();
      if (v42)
      {
LABEL_16:
        if ((v39 & 0xC000000000000001) != 0)
        {
          unint64_t v42 = sub_100088340();
        }
        else
        {
          if (!*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_29;
          }
          unint64_t v42 = *(void *)(v39 + 32);
          swift_retain();
        }
      }
    }
    else
    {
      unint64_t v42 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v42) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_21:
    *uint64_t v22 = (void (*)(uint64_t, uint64_t, unint64_t))swift_getKeyPath();
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))((char *)v22 + v20[5], v17, v46);
    sub_1000704E4(v40, (uint64_t)v22 + v20[6], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    *(void (**)(uint64_t, uint64_t, unint64_t))((char *)v22 + v20[7]) = (void (*)(uint64_t, uint64_t, unint64_t))v42;
    uint64_t v47 = sub_100070488(&qword_1000AAD98, (void (*)(uint64_t))type metadata accessor for CPBackgroundView);
    uint64_t v48 = (uint64_t)v72;
    sub_100087B20();
    sub_1000705B4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CPBackgroundView);
    uint64_t v49 = v73;
    sub_100006C4C(v48, v73, &qword_1000AAD78);
    sub_100006B3C(v49, v80, &qword_1000AAD78);
    swift_storeEnumTagMultiPayload();
    uint64_t v85 = v20;
    uint64_t v86 = v47;
    swift_getOpaqueTypeConformance2();
    sub_100070130();
    uint64_t v50 = (uint64_t)v76;
    sub_1000877E0();
    sub_100006AE0(v49, &qword_1000AAD78);
LABEL_24:
    uint64_t v59 = v77;
    sub_100006B3C(v50, v77, &qword_1000AAD90);
    uint64_t v60 = v82;
    *uint64_t v82 = v75;
    uint64_t v61 = sub_100004FB4(&qword_1000AADA8);
    sub_100006B3C(v59, (uint64_t)v60 + *(int *)(v61 + 48), &qword_1000AAD90);
    swift_retain();
    sub_100006AE0(v50, &qword_1000AAD90);
    sub_100006AE0(v59, &qword_1000AAD90);
    return swift_release();
  }
  char v38 = v30[*(int *)(v28 + 20) + v11[7]];
  sub_1000705B4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for CPEntryView);
  if ((v38 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v22 = (void (**)(uint64_t, uint64_t, unint64_t))v83;
  unint64_t v39 = v84;
  uint64_t v40 = (uint64_t)v70;
  v83[2](v70, v35, v84);
  uint64_t v41 = (uint64_t)v71;
  sub_100087210();
  if (qword_1000A8728 != -1) {
    swift_once();
  }
  *(void *)(v41 + v11[5]) = qword_1000ADA38;
  *(unsigned char *)(v41 + v11[6]) = 1;
  *(unsigned char *)(v41 + v11[7]) = 0;
  *(unsigned char *)(v41 + v11[8]) = 1;
  *(unsigned char *)(v41 + v11[9]) = 0;
  swift_bridgeObjectRetain();
  if (!sub_100007644())
  {
    uint64_t v43 = 0;
    goto LABEL_23;
  }
  unint64_t v42 = *(void *)(v36 + v11[5]);
  if (v42 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    uint64_t v43 = result;
    if (!result) {
      goto LABEL_11;
    }
    goto LABEL_8;
  }
  uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v43)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v52 = (uint64_t)v63;
    *uint64_t v63 = KeyPath;
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    v22[4](v52 + v20[5], v40, v39);
    sub_1000704E4(v41, v52 + v20[6], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    *(void *)(v52 + v20[7]) = v43;
    uint64_t v53 = v67;
    sub_100087490();
    uint64_t v54 = sub_100070488(&qword_1000AAD98, (void (*)(uint64_t))type metadata accessor for CPBackgroundView);
    uint64_t v55 = v64;
    sub_100087B60();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v69);
    sub_1000705B4(v52, (uint64_t (*)(void))type metadata accessor for CPBackgroundView);
    uint64_t v56 = v66;
    uint64_t v57 = v65;
    uint64_t v58 = v78;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v65, v55, v78);
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v80, v57, v58);
    swift_storeEnumTagMultiPayload();
    uint64_t v85 = v20;
    uint64_t v86 = v54;
    swift_getOpaqueTypeConformance2();
    sub_100070130();
    uint64_t v50 = (uint64_t)v76;
    sub_1000877E0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    goto LABEL_24;
  }
LABEL_8:
  if ((v42 & 0xC000000000000001) != 0)
  {
    uint64_t v43 = sub_100088340();
    goto LABEL_11;
  }
  if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v43 = *(void *)(v42 + 32);
    swift_retain();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006FE3C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_10007054C(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CPEntryView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_1000704E4((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(void))type metadata accessor for CPEntryView);
  *a2 = sub_1000700AC;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_10006FF44()
{
  uint64_t v1 = type metadata accessor for CPEntryView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v7 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000700AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CPEntryView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10006EEE4(a1, v6, a2);
}

unint64_t sub_100070130()
{
  unint64_t result = qword_1000AADA0;
  if (!qword_1000AADA0)
  {
    sub_100004FF8(&qword_1000AAD78);
    sub_100070488(&qword_1000AAD98, (void (*)(uint64_t))type metadata accessor for CPBackgroundView);
    sub_100070488(&qword_1000A8988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AADA0);
  }
  return result;
}

uint64_t sub_10007020C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100070294()
{
  return sub_10007020C(&qword_1000AADE8, &qword_1000AADF0, (void (*)(void))sub_1000702D0, (void (*)(void))sub_1000703AC);
}

unint64_t sub_1000702D0()
{
  unint64_t result = qword_1000AADF8;
  if (!qword_1000AADF8)
  {
    sub_100004FF8(&qword_1000AAE00);
    sub_100070488(&qword_1000AAE08, (void (*)(uint64_t))type metadata accessor for CPSmallContentView);
    sub_100070488(&qword_1000AAE10, (void (*)(uint64_t))type metadata accessor for CPMediumContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AADF8);
  }
  return result;
}

unint64_t sub_1000703AC()
{
  unint64_t result = qword_1000AAE18;
  if (!qword_1000AAE18)
  {
    sub_100004FF8(&qword_1000AAE20);
    sub_100070488(&qword_1000AAE28, (void (*)(uint64_t))type metadata accessor for CPLargeContentView);
    sub_100070488(&qword_1000AAE30, (void (*)(uint64_t))type metadata accessor for CPExtraLargeContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AAE18);
  }
  return result;
}

uint64_t sub_100070488(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000704E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007054C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000705B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100070614()
{
  return sub_100006A8C(&qword_1000AAE58, &qword_1000AAE60);
}

uint64_t sub_100070650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100070664);
}

uint64_t sub_100070664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100087430();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for AFTimelineEntry();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1000707B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000707C8);
}

uint64_t sub_1000707C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100087430();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for AFTimelineEntry();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for AFSmallContentView()
{
  uint64_t result = qword_1000AAEC0;
  if (!qword_1000AAEC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100070970()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007098C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v2 = sub_100004FB4(&qword_1000AAF00);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100004FB4(&qword_1000AAF08);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100004FB4(&qword_1000AAF10);
  __chkstk_darwin(v54);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004FB4(&qword_1000AAF18);
  __chkstk_darwin(v55);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100087EC0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1 + *(int *)(type metadata accessor for AFSmallContentView() + 20);
  sub_100016FB8((uint64_t)v15);
  sub_10000AC94(v16, (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *uint64_t v4 = sub_100087D90();
  v4[1] = v17;
  uint64_t v18 = sub_100004FB4(&qword_1000AAF20);
  sub_100070DEC(v1, (uint64_t)v4 + *(int *)(v18 + 44));
  LOBYTE(v12) = sub_1000878B0();
  unsigned __int8 v19 = sub_1000878D0();
  char v20 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v12) {
    char v20 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v19) {
    char v20 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_100006B3C((uint64_t)v4, (uint64_t)v7, &qword_1000AAF00);
  uint64_t v29 = &v7[*(int *)(v5 + 36)];
  *uint64_t v29 = v20;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_100006AE0((uint64_t)v4, &qword_1000AAF00);
  unsigned __int8 v30 = sub_1000878A0();
  char v31 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v30) {
    char v31 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_100006B3C((uint64_t)v7, (uint64_t)v9, &qword_1000AAF08);
  uint64_t v40 = &v9[*(int *)(v54 + 36)];
  *uint64_t v40 = v31;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_100006AE0((uint64_t)v7, &qword_1000AAF08);
  unsigned __int8 v41 = sub_100087890();
  char v42 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v41) {
    char v42 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  sub_100006B3C((uint64_t)v9, (uint64_t)v11, &qword_1000AAF10);
  uint64_t v51 = &v11[*(int *)(v55 + 36)];
  *uint64_t v51 = v42;
  *((void *)v51 + 1) = v44;
  *((void *)v51 + 2) = v46;
  *((void *)v51 + 3) = v48;
  *((void *)v51 + 4) = v50;
  v51[40] = 0;
  sub_100006AE0((uint64_t)v9, &qword_1000AAF10);
  return sub_100071408((uint64_t)v11, v56);
}

uint64_t sub_100070DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v3 - 8);
  uint64_t v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100004FB4(&qword_1000A9010);
  uint64_t v37 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004FB4(&qword_1000AAF28);
  uint64_t v39 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v35 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v38 = (char *)&v35 - v9;
  uint64_t v40 = sub_100004FB4(&qword_1000AAF30);
  __chkstk_darwin(v40);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100087EC0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100004FB4(&qword_1000A9000);
  uint64_t v16 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = a1 + *(int *)(type metadata accessor for AFSmallContentView() + 24);
  uint64_t v23 = *(void *)(v22 + *(int *)(type metadata accessor for AFTimelineEntry() + 36));
  if (*(void *)(v23 + 16))
  {
    id v24 = *(id *)(v23 + 32);
    swift_bridgeObjectRetain();
    sub_100016FB8((uint64_t)v15);
    uint64_t v25 = (uint64_t)v36;
    sub_1000872A0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_100006AE0(v25, &qword_1000A8BC8);
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v27 = v35;
    uint64_t v28 = v42;
    sub_100087AD0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v28);
    unsigned __int8 v30 = v38;
    uint64_t v29 = v39;
    uint64_t v31 = v43;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v27, v43);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v11, v30, v31);
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = v28;
    uint64_t v46 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000877E0();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  }
  else
  {
    sub_100016FB8((uint64_t)v15);
    sub_1000872B0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v33 = v41;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v18, v41);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v21, v33);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = swift_getOpaqueTypeConformance2();
    uint64_t v45 = v42;
    uint64_t v46 = v34;
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000877E0();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v33);
  }
}

uint64_t sub_100071408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000AAF18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100071470()
{
  return sub_1000714D4(&qword_1000AAF38, &qword_1000AAF18, (void (*)(void))sub_1000714AC);
}

uint64_t sub_1000714AC()
{
  return sub_1000714D4(&qword_1000AAF40, &qword_1000AAF10, (void (*)(void))sub_100071554);
}

uint64_t sub_1000714D4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100071554()
{
  return sub_1000714D4(&qword_1000AAF48, &qword_1000AAF08, (void (*)(void))sub_10007157C);
}

unint64_t sub_10007157C()
{
  unint64_t result = qword_1000AAF50;
  if (!qword_1000AAF50)
  {
    sub_100004FF8(&qword_1000AAF00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AAF50);
  }
  return result;
}

uint64_t *sub_1000715D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_100005554(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
  }
  return a1;
}

uint64_t sub_100071710(uint64_t a1, uint64_t a2)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);

  return sub_100005720(v6, v7);
}

void *sub_1000717B8(void *a1, void *a2, uint64_t a3)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100005554(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  return a1;
}

void *sub_1000718A0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100005554(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_100005720(v12, v13);
  return a1;
}

char *sub_1000719AC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087E60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  return a1;
}

char *sub_100071A90(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_100005720(v12, v13);
  return a1;
}

uint64_t sub_100071B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100071BAC);
}

uint64_t sub_100071BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100071C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100071C84);
}

uint64_t sub_100071C84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for AFBackgroundView(uint64_t a1)
{
  return sub_1000470CC(a1, qword_1000AAFB0);
}

void sub_100071D68()
{
  sub_100006754(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100071E18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100071E34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v55 = sub_100004FB4(&qword_1000AB1B8);
  __chkstk_darwin(v55);
  uint64_t v56 = (uint64_t *)((char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = sub_100004FB4(&qword_1000AB1C0);
  __chkstk_darwin(v67);
  uint64_t v57 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100004FB4(&qword_1000AB1C8);
  __chkstk_darwin(v72);
  uint64_t v73 = (uint64_t *)((char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_100004FB4(&qword_1000AB1D0);
  __chkstk_darwin(v64);
  uint64_t v66 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100004FB4(&qword_1000AB1D8);
  __chkstk_darwin(v58);
  uint64_t v59 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100004FB4(&qword_1000AB1E0);
  __chkstk_darwin(v65);
  uint64_t v60 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100004FB4(&qword_1000AB1E8);
  __chkstk_darwin(v71);
  uint64_t v68 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100087C50();
  uint64_t v8 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  unsigned int v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100004FB4(&qword_1000AA9F0);
  uint64_t v70 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000AB1F0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004FB4(&qword_1000AB1F8);
  __chkstk_darwin(v63);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v61 = (uint64_t)&v51 - v19;
  uint64_t v20 = sub_100087EC0();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016FB8((uint64_t)v23);
  uint64_t v54 = v21;
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v24 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_100087CC0();
    uint64_t v25 = v69;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.ResizingMode.stretch(_:), v69);
    uint64_t v26 = sub_100087CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
    uint64_t v75 = v26;
    sub_100087AD0();
    swift_release();
    uint64_t v27 = v70;
    uint64_t v28 = v62;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v15, v12, v62);
    *(void *)&v15[*(int *)(v13 + 36)] = 0x3FE999999999999ALL;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
    sub_100075ED8();
    sub_100087AF0();
    sub_100006AE0((uint64_t)v15, &qword_1000AB1F0);
    uint64_t v29 = v61;
    sub_100006C4C((uint64_t)v17, v61, &qword_1000AB1F8);
    sub_100006B3C(v29, v59, &qword_1000AB1F8);
    swift_storeEnumTagMultiPayload();
    sub_100075E2C();
    uint64_t v30 = (uint64_t)v60;
    sub_1000877E0();
    sub_100006B3C(v30, v66, &qword_1000AB1E0);
    swift_storeEnumTagMultiPayload();
    sub_100075DB8();
    sub_100075FC0(&qword_1000AB220, &qword_1000AB1C0, (void (*)(void))sub_100075E2C);
    uint64_t v31 = (uint64_t)v68;
    sub_1000877E0();
    sub_100006AE0(v30, &qword_1000AB1E0);
    sub_100006B3C(v31, (uint64_t)v73, &qword_1000AB1E8);
    swift_storeEnumTagMultiPayload();
    sub_100075D18();
    sub_1000877E0();
    uint64_t v32 = v31;
LABEL_13:
    sub_100006AE0(v32, &qword_1000AB1E8);
    return sub_100006AE0(v29, &qword_1000AB1F8);
  }
  int v33 = v24;
  uint64_t v34 = v69;
  uint64_t v52 = v13;
  uint64_t v53 = v17;
  if (v24 == enum case for WidgetFamily.systemMedium(_:))
  {
    sub_100087CC0();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.ResizingMode.stretch(_:), v34);
    uint64_t v35 = sub_100087CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v34);
    uint64_t v75 = v35;
    sub_100087AD0();
    swift_release();
    uint64_t v36 = v70;
    uint64_t v37 = v62;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v15, v12, v62);
    *(void *)&v15[*(int *)(v52 + 36)] = 0x3FE999999999999ALL;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
    sub_100075ED8();
    uint64_t v38 = (uint64_t)v53;
    sub_100087AF0();
    sub_100006AE0((uint64_t)v15, &qword_1000AB1F0);
    uint64_t v29 = v61;
    sub_100006C4C(v38, v61, &qword_1000AB1F8);
    sub_100006B3C(v29, v59, &qword_1000AB1F8);
    swift_storeEnumTagMultiPayload();
    sub_100075E2C();
    uint64_t v39 = (uint64_t)v60;
    sub_1000877E0();
    sub_100006B3C(v39, v66, &qword_1000AB1E0);
    swift_storeEnumTagMultiPayload();
    sub_100075DB8();
    sub_100075FC0(&qword_1000AB220, &qword_1000AB1C0, (void (*)(void))sub_100075E2C);
    uint64_t v40 = (uint64_t)v68;
    sub_1000877E0();
    sub_100006AE0(v39, &qword_1000AB1E0);
    sub_100006B3C(v40, (uint64_t)v73, &qword_1000AB1E8);
    swift_storeEnumTagMultiPayload();
    sub_100075D18();
LABEL_12:
    sub_1000877E0();
    uint64_t v32 = v40;
    goto LABEL_13;
  }
  uint64_t v41 = v70;
  if (v24 == enum case for WidgetFamily.systemLarge(_:) || v24 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    sub_100087CC0();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.ResizingMode.stretch(_:), v34);
    uint64_t v45 = sub_100087CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v34);
    uint64_t v75 = v45;
    sub_100087AD0();
    swift_release();
    uint64_t v46 = v62;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v15, v12, v62);
    *(void *)&v15[*(int *)(v52 + 36)] = 0x3FE999999999999ALL;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v46);
    sub_100075ED8();
    uint64_t v47 = (uint64_t)v53;
    sub_100087AF0();
    sub_100006AE0((uint64_t)v15, &qword_1000AB1F0);
    uint64_t v29 = v61;
    sub_100006C4C(v47, v61, &qword_1000AB1F8);
    sub_100006B3C(v29, (uint64_t)v56, &qword_1000AB1F8);
    swift_storeEnumTagMultiPayload();
    sub_100075E2C();
    uint64_t v48 = (uint64_t)v57;
    sub_1000877E0();
    sub_100006B3C(v48, v66, &qword_1000AB1C0);
    swift_storeEnumTagMultiPayload();
    sub_100075DB8();
    sub_100075FC0(&qword_1000AB220, &qword_1000AB1C0, (void (*)(void))sub_100075E2C);
    uint64_t v40 = (uint64_t)v68;
    sub_1000877E0();
    sub_100006AE0(v48, &qword_1000AB1C0);
    sub_100006B3C(v40, (uint64_t)v73, &qword_1000AB1E8);
    swift_storeEnumTagMultiPayload();
    sub_100075D18();
    goto LABEL_12;
  }
  int v42 = enum case for WidgetFamily.accessoryCircular(_:);
  uint64_t v43 = sub_100087CC0();
  if (v33 == v42
    || v33 == enum case for WidgetFamily.accessoryRectangular(_:)
    || v33 == enum case for WidgetFamily.accessoryInline(_:))
  {
    *uint64_t v56 = v43;
    swift_storeEnumTagMultiPayload();
    sub_100075E2C();
    swift_retain();
    uint64_t v49 = (uint64_t)v57;
    sub_1000877E0();
    sub_100006B3C(v49, v66, &qword_1000AB1C0);
    swift_storeEnumTagMultiPayload();
    sub_100075DB8();
    sub_100075FC0(&qword_1000AB220, &qword_1000AB1C0, (void (*)(void))sub_100075E2C);
    uint64_t v50 = (uint64_t)v68;
    sub_1000877E0();
    sub_100006AE0(v49, &qword_1000AB1C0);
    sub_100006B3C(v50, (uint64_t)v73, &qword_1000AB1E8);
    swift_storeEnumTagMultiPayload();
    sub_100075D18();
    sub_1000877E0();
    sub_100006AE0(v50, &qword_1000AB1E8);
    return swift_release();
  }
  else
  {
    *uint64_t v73 = v43;
    swift_storeEnumTagMultiPayload();
    sub_100075D18();
    sub_1000877E0();
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v23, v20);
  }
}

uint64_t sub_100072D10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_100004FB4(&qword_1000AB000);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FB4(&qword_1000AB008);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unsigned int v10 = (char *)&v23 - v9;
  uint64_t v11 = sub_100004FB4(&qword_1000AB010);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v23 - v15;
  sub_100073008((uint64_t)&v23 - v15);
  *(void *)uint64_t v3 = sub_100087720();
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  uint64_t v17 = sub_100004FB4(&qword_1000AB018);
  sub_100073658((uint64_t)&v3[*(int *)(v17 + 44)]);
  sub_100006A8C(&qword_1000AB020, &qword_1000AB000);
  sub_100087A80();
  sub_100006AE0((uint64_t)v3, &qword_1000AB000);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
  sub_100006B3C((uint64_t)v16, (uint64_t)v13, &qword_1000AB010);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  uint64_t v19 = v24;
  sub_100006B3C((uint64_t)v13, v24, &qword_1000AB010);
  uint64_t v20 = sub_100004FB4(&qword_1000AB028);
  v18((char *)(v19 + *(int *)(v20 + 48)), v7, v4);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v10, v4);
  sub_100006AE0((uint64_t)v16, &qword_1000AB010);
  v21(v7, v4);
  return sub_100006AE0((uint64_t)v13, &qword_1000AB010);
}

uint64_t sub_100073008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v53 = a1;
  uint64_t v3 = sub_100004FB4(&qword_1000AB010);
  __chkstk_darwin(v3 - 8);
  uint64_t v52 = (uint64_t *)((char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for AFBackgroundImage(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v48 - v9;
  uint64_t v10 = sub_100004FB4(&qword_1000AB100);
  __chkstk_darwin(v10 - 8);
  uint64_t v51 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v50 = (uint64_t *)((char *)&v48 - v13);
  uint64_t v14 = sub_100087E60();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = sub_100087280();
  uint64_t v22 = *(void *)(v21 - 8);
  __n128 v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v22 + 104))(v25, enum case for GKFeatureFlags.GameOverlayUI(_:), v21, v23);
  char v26 = sub_100087270();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  if (v26)
  {
    id v27 = [self currentDevice];
    id v28 = [v27 userInterfaceIdiom];

    if (!v28) {
      goto LABEL_5;
    }
  }
  uint64_t v29 = v2 + *(int *)(type metadata accessor for AFBackgroundView(0) + 20);
  uint64_t v30 = *(void *)v29;
  char v31 = *(unsigned char *)(v29 + 8);
  sub_100005554(*(void *)v29, v31);
  char v32 = sub_100016FF4(v30, v31);
  sub_100005720(v30, v31);
  if ((v32 & 1) == 0) {
    goto LABEL_5;
  }
  sub_1000171F8((uint64_t)v20);
  sub_100087E50();
  sub_100064EB0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v33 = sub_100087FE0();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v17, v14);
  v34(v20, v14);
  if ((v33 & 1) == 0)
  {
    if (qword_1000A86C8 != -1) {
      swift_once();
    }
    uint64_t v37 = qword_1000AD9B0;
    swift_retain();
    uint64_t v38 = sub_100087720();
    uint64_t v39 = (uint64_t)v50;
    *uint64_t v50 = v38;
    *(void *)(v39 + 8) = 0;
    *(unsigned char *)(v39 + 16) = 1;
    uint64_t v40 = v39 + *(int *)(sub_100004FB4(&qword_1000AB110) + 44);
    *uint64_t v7 = swift_getKeyPath();
    sub_100004FB4(&qword_1000A87B0);
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = v49;
    sub_1000754A4((uint64_t)v7, v49, type metadata accessor for AFBackgroundImage);
    sub_10007550C(v41, (uint64_t)v7, type metadata accessor for AFBackgroundImage);
    *(void *)uint64_t v40 = 0;
    *(unsigned char *)(v40 + 8) = 0;
    uint64_t v42 = sub_100004FB4(&qword_1000AB118);
    sub_10007550C((uint64_t)v7, v40 + *(int *)(v42 + 48), type metadata accessor for AFBackgroundImage);
    sub_100075574(v41, type metadata accessor for AFBackgroundImage);
    sub_100075574((uint64_t)v7, type metadata accessor for AFBackgroundImage);
    if (qword_1000A86D0 != -1) {
      swift_once();
    }
    uint64_t v43 = qword_1000AD9B8;
    uint64_t v44 = v51;
    sub_100006B3C(v39, v51, &qword_1000AB100);
    uint64_t v45 = (uint64_t)v52;
    *uint64_t v52 = v37;
    uint64_t v46 = sub_100004FB4(&qword_1000AB120);
    sub_100006B3C(v44, v45 + *(int *)(v46 + 48), &qword_1000AB100);
    *(void *)(v45 + *(int *)(v46 + 64)) = v43;
    swift_retain();
    swift_retain_n();
    sub_100006AE0(v39, &qword_1000AB100);
    swift_release();
    sub_100006AE0(v44, &qword_1000AB100);
    swift_release();
    uint64_t v47 = sub_100004FB4(&qword_1000AB108);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v45, 0, 1, v47);
    return sub_100006C4C(v45, v53, &qword_1000AB010);
  }
  else
  {
LABEL_5:
    uint64_t v35 = sub_100004FB4(&qword_1000AB108);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v53, 1, 1, v35);
  }
}

uint64_t sub_100073658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004FB4(&qword_1000AB030);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000AB038);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  *(void *)uint64_t v4 = sub_1000876B0();
  *((void *)v4 + 1) = 0x4020000000000000;
  v4[16] = 0;
  uint64_t v14 = sub_100004FB4(&qword_1000AB040);
  sub_1000738EC((uint64_t)&v4[*(int *)(v14 + 44)]);
  unsigned __int8 v15 = sub_100087890();
  unsigned __int8 v16 = sub_1000878D0();
  unsigned __int8 v17 = sub_1000878B0();
  char v18 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v15) {
    char v18 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v16) {
    char v18 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v17) {
    char v18 = sub_1000878C0();
  }
  sub_100006B3C((uint64_t)v4, (uint64_t)v10, &qword_1000AB030);
  uint64_t v19 = &v10[*(int *)(v5 + 36)];
  char *v19 = v18;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  v19[40] = 1;
  sub_100006AE0((uint64_t)v4, &qword_1000AB030);
  sub_100006C4C((uint64_t)v10, (uint64_t)v13, &qword_1000AB038);
  sub_100006B3C((uint64_t)v13, (uint64_t)v7, &qword_1000AB038);
  sub_100006B3C((uint64_t)v7, a1, &qword_1000AB038);
  uint64_t v20 = a1 + *(int *)(sub_100004FB4(&qword_1000AB048) + 48);
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 0;
  sub_100006AE0((uint64_t)v13, &qword_1000AB038);
  return sub_100006AE0((uint64_t)v7, &qword_1000AB038);
}

uint64_t sub_1000738EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = type metadata accessor for GameCenterLogo();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v40 = (uint64_t)&v36 - v5;
  uint64_t v6 = sub_100087820();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FB4(&qword_1000AB050);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000AB058);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  uint64_t v39 = v14;
  __chkstk_darwin(v13);
  unsigned __int8 v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004FB4(&qword_1000AB060);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v37 = (uint64_t)&v36 - v21;
  *(void *)uint64_t v12 = sub_1000876B0();
  *((void *)v12 + 1) = 0x4010000000000000;
  v12[16] = 0;
  uint64_t v22 = sub_100004FB4(&qword_1000AB068);
  sub_100073DC4(&v12[*(int *)(v22 + 44)]);
  sub_100087810();
  uint64_t v23 = sub_100006A8C(&qword_1000AB070, &qword_1000AB050);
  sub_100087B40();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100006AE0((uint64_t)v12, &qword_1000AB050);
  sub_1000876C0();
  uint64_t v24 = sub_100087A60();
  uint64_t v26 = v25;
  LOBYTE(v7) = v27 & 1;
  uint64_t v42 = v10;
  uint64_t v43 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v38;
  sub_100087B10();
  sub_100006AD0(v24, v26, v7);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v28);
  uint64_t v29 = v37;
  sub_100006C4C((uint64_t)v19, v37, &qword_1000AB060);
  *uint64_t v3 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = v40;
  sub_1000754A4((uint64_t)v3, v40, (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  sub_100006B3C(v29, (uint64_t)v19, &qword_1000AB060);
  uint64_t v31 = v30;
  sub_10007550C(v30, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  uint64_t v32 = v41;
  sub_100006B3C((uint64_t)v19, v41, &qword_1000AB060);
  uint64_t v33 = sub_100004FB4(&qword_1000AB078);
  uint64_t v34 = v32 + *(int *)(v33 + 48);
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 0;
  sub_10007550C((uint64_t)v3, v32 + *(int *)(v33 + 64), (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  sub_100075574(v31, (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  sub_100006AE0(v29, &qword_1000AB060);
  sub_100075574((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  return sub_100006AE0((uint64_t)v19, &qword_1000AB060);
}

uint64_t sub_100073DC4@<X0>(char *a1@<X8>)
{
  long long v126 = a1;
  uint64_t v94 = sub_100004FB4(&qword_1000AA4B8);
  __chkstk_darwin(v94);
  uint64_t v100 = (uint64_t *)((char *)&v93 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_100087C90();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v95 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100004FB4(&qword_1000AB080);
  __chkstk_darwin(v93);
  uint64_t v97 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100004FB4(&qword_1000AB088);
  __chkstk_darwin(v102);
  uint64_t v101 = (uint64_t)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100004FB4(&qword_1000AB090);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v104 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100004FB4(&qword_1000AB098);
  __chkstk_darwin(v105);
  uint64_t v103 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000AB0A0);
  uint64_t v124 = *(void *)(v7 - 8);
  uint64_t v125 = v7;
  __chkstk_darwin(v7);
  uint64_t v96 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087280();
  uint64_t v120 = *(void *)(v9 - 8);
  uint64_t v121 = v9;
  __chkstk_darwin(v9);
  uint64_t v119 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FB4(&qword_1000AB0A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v123 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v122 = (char *)&v93 - v14;
  uint64_t v118 = sub_100087860();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100004FB4(&qword_1000AB0B0);
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v110 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100004FB4(&qword_1000AB0B8);
  __chkstk_darwin(v113);
  uint64_t v111 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100004FB4(&qword_1000AB0C0);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v112 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v127 = (char *)&v93 - v20;
  sub_1000876C0();
  uint64_t v21 = sub_100087A60();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_100087960();
  uint64_t v26 = sub_100087A30();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  sub_100006AD0(v21, v23, v25);
  swift_bridgeObjectRelease();
  sub_1000878F0();
  uint64_t v31 = sub_100087A50();
  uint64_t v33 = v32;
  LOBYTE(v23) = v34;
  swift_release();
  LOBYTE(v21) = v23 & 1;
  sub_100006AD0(v26, v28, v30);
  uint64_t v35 = v108;
  swift_bridgeObjectRelease();
  sub_100087BE0();
  uint64_t v36 = sub_100087A40();
  uint64_t v38 = v37;
  LOBYTE(v26) = v39;
  uint64_t v41 = v40;
  swift_release();
  char v42 = v26 & 1;
  sub_100006AD0(v31, v33, v21);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = swift_getKeyPath();
  *(void *)&long long v128 = v36;
  *((void *)&v128 + 1) = v38;
  LOBYTE(v129) = v26 & 1;
  *((void *)&v129 + 1) = v41;
  *(void *)&long long v130 = KeyPath;
  *((void *)&v130 + 1) = 1;
  char v131 = 0;
  uint64_t v132 = v44;
  uint64_t v133 = 0x3F847AE147AE147BLL;
  sub_100004FB4(&qword_1000AB0C8);
  sub_100074F00();
  uint64_t v45 = v110;
  uint64_t v46 = v109;
  sub_100087AD0();
  sub_100006AD0(v36, v38, v42);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100087D90();
  sub_100087400();
  uint64_t v47 = v114;
  uint64_t v48 = (uint64_t)v111;
  uint64_t v49 = v115;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v111, v45, v115);
  uint64_t v50 = (_OWORD *)(v48 + *(int *)(v113 + 36));
  long long v51 = v129;
  *uint64_t v50 = v128;
  v50[1] = v51;
  void v50[2] = v130;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v49);
  uint64_t v52 = v116;
  sub_100087850();
  sub_100074FA0();
  uint64_t v53 = v112;
  sub_100087B50();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v52, v118);
  sub_100006AE0(v48, &qword_1000AB0B8);
  uint64_t v54 = v53;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v127, v53, v46);
  uint64_t v56 = v119;
  uint64_t v55 = v120;
  uint64_t v57 = v121;
  (*(void (**)(char *, void, uint64_t))(v120 + 104))(v119, enum case for GKFeatureFlags.GameOverlayUI(_:), v121);
  LOBYTE(v52) = sub_100087270();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  if ((v52 & 1) != 0
    && (id v58 = [self currentDevice],
        id v59 = [v58 userInterfaceIdiom],
        v58,
        !v59))
  {
    uint64_t v83 = 1;
    uint64_t v79 = v124;
    uint64_t v82 = v125;
    uint64_t v80 = (uint64_t)v122;
  }
  else
  {
    uint64_t v60 = sub_100087C40();
    uint64_t v61 = v98;
    uint64_t v62 = v95;
    uint64_t v63 = v99;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v95, enum case for Image.Scale.small(_:), v99);
    uint64_t v64 = swift_getKeyPath();
    uint64_t v65 = v100;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))((char *)v100 + *(int *)(v94 + 28), v62, v63);
    uint64_t *v65 = v64;
    uint64_t v66 = (uint64_t)v97;
    sub_100006B3C((uint64_t)v65, (uint64_t)&v97[*(int *)(v93 + 36)], &qword_1000AA4B8);
    *(void *)uint64_t v66 = v60;
    *(unsigned char *)(v66 + 8) = 1;
    swift_retain();
    sub_100006AE0((uint64_t)v65, &qword_1000AA4B8);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
    swift_release();
    uint64_t v67 = sub_100087BF0();
    uint64_t v68 = swift_getKeyPath();
    uint64_t v69 = v101;
    sub_100006B3C(v66, v101, &qword_1000AB080);
    uint64_t v70 = (uint64_t *)(v69 + *(int *)(v102 + 36));
    *uint64_t v70 = v68;
    v70[1] = v67;
    sub_100006AE0(v66, &qword_1000AB080);
    sub_100087960();
    sub_100075214();
    uint64_t v71 = v104;
    sub_100087AC0();
    sub_100006AE0(v69, &qword_1000AB088);
    uint64_t v72 = sub_1000878F0();
    uint64_t v73 = swift_getKeyPath();
    uint64_t v74 = v106;
    uint64_t v75 = (uint64_t)v103;
    uint64_t v76 = v107;
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v71, v107);
    uint64_t v77 = (uint64_t *)(v75 + *(int *)(v105 + 36));
    uint64_t *v77 = v73;
    v77[1] = v72;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v71, v76);
    sub_1000753AC();
    uint64_t v78 = v96;
    sub_100087AD0();
    sub_100006AE0(v75, &qword_1000AB098);
    uint64_t v79 = v124;
    uint64_t v80 = (uint64_t)v122;
    uint64_t v81 = v78;
    uint64_t v82 = v125;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v122, v81, v125);
    uint64_t v83 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v80, v83, 1, v82);
  uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  uint64_t v85 = v54;
  uint64_t v86 = v54;
  uint64_t v87 = v127;
  v84(v86, v127, v46);
  uint64_t v88 = v123;
  sub_100006B3C(v80, v123, &qword_1000AB0A8);
  uint64_t v89 = v126;
  v84(v126, v85, v46);
  uint64_t v90 = sub_100004FB4(&qword_1000AB0F8);
  sub_100006B3C(v88, (uint64_t)&v89[*(int *)(v90 + 48)], &qword_1000AB0A8);
  sub_100006AE0(v80, &qword_1000AB0A8);
  long long v91 = *(void (**)(char *, uint64_t))(v35 + 8);
  v91(v87, v46);
  sub_100006AE0(v88, &qword_1000AB0A8);
  return ((uint64_t (*)(char *, uint64_t))v91)(v85, v46);
}

uint64_t sub_100074B4C()
{
  uint64_t v0 = sub_100087840();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FB4(&qword_1000AAFE8);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = sub_100087D90();
  v6[1] = v7;
  uint64_t v8 = sub_100004FB4(&qword_1000AAFF0);
  sub_100072D10((uint64_t)v6 + *(int *)(v8 + 44));
  sub_100087830();
  sub_100087D90();
  sub_100006A8C(&qword_1000AAFF8, &qword_1000AAFE8);
  sub_100087B30();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_100006AE0((uint64_t)v6, &qword_1000AAFE8);
}

uint64_t sub_100074D38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100087550();
  *a1 = result;
  return result;
}

uint64_t sub_100074D64()
{
  return sub_100087560();
}

uint64_t sub_100074D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100087640();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100074DC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100087640();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100074DF8()
{
  return sub_100087650();
}

uint64_t sub_100074E28()
{
  return sub_100087650();
}

uint64_t sub_100074E58@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000875B0();
  *a1 = v3;
  return result;
}

uint64_t sub_100074E84@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000875B0();
  *a1 = v3;
  return result;
}

uint64_t sub_100074EB0()
{
  return sub_1000875C0();
}

uint64_t sub_100074ED8()
{
  return sub_1000875C0();
}

unint64_t sub_100074F00()
{
  unint64_t result = qword_1000AB0D0;
  if (!qword_1000AB0D0)
  {
    sub_100004FF8(&qword_1000AB0C8);
    sub_10005A760();
    sub_100006A8C(&qword_1000AA400, &qword_1000AA408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB0D0);
  }
  return result;
}

unint64_t sub_100074FA0()
{
  unint64_t result = qword_1000AB0D8;
  if (!qword_1000AB0D8)
  {
    sub_100004FF8(&qword_1000AB0B8);
    sub_100004FF8(&qword_1000AB0C8);
    sub_100074F00();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB0D8);
  }
  return result;
}

uint64_t sub_100075050@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000875F0();
  *a1 = result;
  return result;
}

uint64_t sub_10007507C()
{
  return sub_100087600();
}

uint64_t sub_1000750A8()
{
  return sub_1000874F0();
}

uint64_t sub_1000750CC()
{
  return sub_1000874F0();
}

uint64_t sub_1000750F0(uint64_t a1)
{
  uint64_t v2 = sub_100087C90();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_100087500();
}

uint64_t sub_1000751BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100087550();
  *a1 = result;
  return result;
}

uint64_t sub_1000751E8()
{
  return sub_100087560();
}

unint64_t sub_100075214()
{
  unint64_t result = qword_1000AB0E0;
  if (!qword_1000AB0E0)
  {
    sub_100004FF8(&qword_1000AB088);
    sub_1000752B4();
    sub_100006A8C(&qword_1000A93F0, &qword_1000A93F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB0E0);
  }
  return result;
}

unint64_t sub_1000752B4()
{
  unint64_t result = qword_1000AB0E8;
  if (!qword_1000AB0E8)
  {
    sub_100004FF8(&qword_1000AB080);
    sub_10005AFF0();
    sub_100006A8C(&qword_1000AA500, &qword_1000AA4B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB0E8);
  }
  return result;
}

uint64_t sub_100075354@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000875F0();
  *a1 = result;
  return result;
}

uint64_t sub_100075380()
{
  return sub_100087600();
}

unint64_t sub_1000753AC()
{
  unint64_t result = qword_1000AB0F0;
  if (!qword_1000AB0F0)
  {
    sub_100004FF8(&qword_1000AB098);
    sub_100004FF8(&qword_1000AB088);
    sub_100075214();
    swift_getOpaqueTypeConformance2();
    sub_100006A8C(&qword_1000A9B50, &qword_1000A9B58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB0F0);
  }
  return result;
}

uint64_t type metadata accessor for AFBackgroundImage(uint64_t a1)
{
  return sub_1000470CC(a1, qword_1000AB180);
}

uint64_t sub_1000754A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007550C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100075574(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1000755D4(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_100004FB4(&qword_1000A87B0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_100087EC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000756E0(uint64_t a1)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100087EC0();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100075784(void *a1, void *a2)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100075840(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100075914(void *a1, const void *a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_100087EC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_1000759D8(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    uint64_t v4 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_100087EC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100075AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100075AC8);
}

uint64_t sub_100075AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100075B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100075B4C);
}

uint64_t sub_100075B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_100075BC0()
{
  sub_100006754(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100075C68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100075CFC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100075D18()
{
  unint64_t result = qword_1000AB200;
  if (!qword_1000AB200)
  {
    sub_100004FF8(&qword_1000AB1E8);
    sub_100075DB8();
    sub_100075FC0(&qword_1000AB220, &qword_1000AB1C0, (void (*)(void))sub_100075E2C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB200);
  }
  return result;
}

unint64_t sub_100075DB8()
{
  unint64_t result = qword_1000AB208;
  if (!qword_1000AB208)
  {
    sub_100004FF8(&qword_1000AB1E0);
    sub_100075E2C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB208);
  }
  return result;
}

unint64_t sub_100075E2C()
{
  unint64_t result = qword_1000AB210;
  if (!qword_1000AB210)
  {
    sub_100004FF8(&qword_1000AB1F8);
    sub_100075ED8();
    sub_100064EB0(&qword_1000A8988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB210);
  }
  return result;
}

unint64_t sub_100075ED8()
{
  unint64_t result = qword_1000AB218;
  if (!qword_1000AB218)
  {
    sub_100004FF8(&qword_1000AB1F0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB218);
  }
  return result;
}

uint64_t sub_100075F84()
{
  return sub_100075FC0(&qword_1000AB228, &qword_1000AB230, (void (*)(void))sub_100075D18);
}

uint64_t sub_100075FC0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100076044(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_100087430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (void *)((char *)a1 + v21);
    char v24 = (void *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (void *)((char *)a1 + v22);
    uint64_t v27 = (void *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100076310(uint64_t a1, int *a2)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1000764E4(void *a1, void *a2, int *a3)
{
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087E60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100087380();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  char v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  *char v24 = *v25;
  v24[1] = v26;
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100076760(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087E60();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100006AE0((uint64_t)a1 + v7, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_100006AE0((uint64_t)a1 + v11, &qword_1000A88D0);
    sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_100087380();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  char v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

char *sub_100076A3C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087E60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_100087380();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *sub_100076CB4(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87A8);
    uint64_t v6 = sub_100004FB4(&qword_1000A87A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087E60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100006AE0((uint64_t)&a1[v8], &qword_1000A87B0);
    uint64_t v11 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_100006AE0((uint64_t)&a1[v13], &qword_1000A88D0);
    uint64_t v16 = sub_100004FB4(&qword_1000A88D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_100087380();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  char v24 = &a2[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = &a1[v27];
  char v29 = &a2[v27];
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t sub_100076F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100076F9C);
}

uint64_t sub_100076F9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100004FB4(&qword_1000A88C0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[8] + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_100077158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007716C);
}

uint64_t sub_10007716C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A87C0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100004FB4(&qword_1000A88C0);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_100087430();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[8] + 8) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for MessageView()
{
  uint64_t result = qword_1000AB290;
  if (!qword_1000AB290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100077370()
{
  sub_100051CB8(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_100051CB8(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_100051CB8(319, (unint64_t *)&unk_1000A92E0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
      if (v2 <= 0x3F)
      {
        sub_100087430();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_100077520()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10007753C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100077780(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A91B8, &qword_1000A91C0).n128_u64[0];
  return result;
}

__n128 sub_100077598@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000881C0();
    uint64_t v22 = (void *)sub_100087870();
    sub_100087320();
  }
  sub_1000874E0();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  __n128 result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

double sub_100077724@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100077780(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A8900, &qword_1000A99D8).n128_u64[0];
  return result;
}

__n128 sub_100077780@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000881C0();
    long long v28 = (void *)sub_100087870();
    sub_100087320();

    uint64_t v19 = a17;
  }
  sub_1000874E0();
  sub_100006B3C(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(sub_100004FB4(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *long long v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_100077950@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1000881C0();
    uint64_t v23 = (void *)sub_100087870();
    sub_100087320();
  }
  sub_1000874E0();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 168) = v33;
  *(_OWORD *)(a9 + 72) = v27;
  *(_OWORD *)(a9 + 88) = v28;
  *(unsigned char *)(a9 + 64) = *(unsigned char *)(v13 + 64);
  *(_OWORD *)(a9 + 104) = v29;

  return sub_10004F46C(v13);
}

double sub_100077B1C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100077780(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000A98E8, &qword_1000AABF0).n128_u64[0];
  return result;
}

double sub_100077B78@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100077780(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000AB498, &qword_1000AB4A0).n128_u64[0];
  return result;
}

uint64_t sub_100077BD4()
{
  return sub_100087530();
}

uint64_t sub_100077BF8(uint64_t a1)
{
  uint64_t v2 = sub_100087710();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_100087540();
}

uint64_t sub_100077CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v20 = a1;
  uint64_t v4 = sub_100087C50();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100087D90();
  sub_100087400();
  char v8 = v27;
  uint64_t v24 = v28;
  uint64_t v25 = v26;
  char v9 = v29;
  uint64_t v23 = v30;
  uint64_t v22 = v31;
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100087CC0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  uint64_t v11 = sub_100087CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100087D90();
  sub_100087400();
  uint64_t v12 = v32;
  char v13 = v33;
  uint64_t v14 = v34;
  char v44 = v8;
  char v42 = v9;
  char v40 = v33;
  char v38 = v35;
  *(_DWORD *)(a3 + 9) = *(_DWORD *)v43;
  *(_DWORD *)(a3 + 12) = *(_DWORD *)&v43[3];
  *(_DWORD *)(a3 + 25) = *(_DWORD *)v41;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)&v41[3];
  int v15 = *(_DWORD *)v39;
  *(_DWORD *)(a3 + 84) = *(_DWORD *)&v39[3];
  *(_DWORD *)(a3 + 81) = v15;
  LOBYTE(v15) = v38;
  int v16 = *(_DWORD *)v37;
  *(_DWORD *)(a3 + 100) = *(_DWORD *)&v37[3];
  *(_DWORD *)(a3 + 97) = v16;
  *(void *)a3 = v25;
  *(unsigned char *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = v24;
  *(unsigned char *)(a3 + 24) = v9;
  uint64_t v17 = v22;
  *(void *)(a3 + 32) = v23;
  *(void *)(a3 + 40) = v17;
  uint64_t v18 = v21;
  *(void *)(a3 + 48) = KeyPath;
  *(void *)(a3 + 56) = v18;
  *(void *)(a3 + 64) = v11;
  *(void *)(a3 + 72) = v12;
  *(unsigned char *)(a3 + 80) = v13;
  *(void *)(a3 + 88) = v14;
  *(unsigned char *)(a3 + 96) = v15;
  *(_OWORD *)(a3 + 104) = v36;
  *(_WORD *)(a3 + 120) = 256;
  swift_retain();
  return swift_release();
}

double sub_100077F84@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = sub_100087D90();
  uint64_t v7 = v6;
  sub_100077CC0(v3, v4, (uint64_t)v12);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  long long v8 = v16;
  *(_OWORD *)(a1 + 80) = v15;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v17[0];
  *(_OWORD *)(a1 + 122) = *(_OWORD *)((char *)v17 + 10);
  long long v9 = v12[1];
  *(_OWORD *)(a1 + 16) = v12[0];
  *(_OWORD *)(a1 + 32) = v9;
  double result = *(double *)&v13;
  long long v11 = v14;
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = v11;
  return result;
}

uint64_t sub_100078028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = sub_100087380();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v8 = (char *)&v26 - v7;
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v15 = (char *)&v26 - v14;
  uint64_t v26 = v1;
  sub_1000171F8((uint64_t)&v26 - v14);
  sub_100087E50();
  sub_10005B0C0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v16 = sub_100087FE0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  if (v16)
  {
    uint64_t v18 = enum case for BlendMode.normal(_:);
    uint64_t v19 = sub_100087DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v27, v18, v19);
  }
  else
  {
    uint64_t v21 = v27;
    type metadata accessor for MessageView();
    sub_1000174E8((uint64_t)v8);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v2);
    char v22 = sub_100087370();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
    v23(v5, v2);
    v23(v8, v2);
    uint64_t v24 = sub_100087DA0();
    if (v22) {
      uint64_t v25 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    }
    else {
      uint64_t v25 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v21, *v25, v24);
  }
}

uint64_t sub_10007834C()
{
  uint64_t v0 = sub_100087EC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v11 - v5;
  type metadata accessor for MessageView();
  sub_100016FB8((uint64_t)v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for WidgetFamily.systemExtraLarge(_:), v0);
  sub_10005B0C0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v8 = v11[0];
  uint64_t v7 = v11[1];
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  if (v7 == v8) {
    return sub_1000879C0();
  }
  else {
    return sub_100087A00();
  }
}

uint64_t sub_100078504()
{
  uint64_t v1 = sub_100087EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v16 = *(void *)(v0 + *(int *)(type metadata accessor for MessageView() + 36) + 8);
  sub_100016FB8((uint64_t)v7);
  long long v15 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  v15(v4, enum case for WidgetFamily.systemSmall(_:), v1);
  sub_10005B0C0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v9 = v17;
  uint64_t v8 = v18;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v4, v1);
  v10(v7, v1);
  if (v8 == v9)
  {
    if (v16) {
      return 4;
    }
    else {
      return 5;
    }
  }
  else
  {
    sub_100016FB8((uint64_t)v7);
    v15(v4, enum case for WidgetFamily.systemExtraLarge(_:), v1);
    sub_1000880F0();
    sub_1000880F0();
    uint64_t v13 = v17;
    uint64_t v12 = v18;
    v10(v4, v1);
    v10(v7, v1);
    if (v16) {
      uint64_t v14 = 3;
    }
    else {
      uint64_t v14 = 4;
    }
    if (v12 == v13) {
      return 3;
    }
    else {
      return v14;
    }
  }
}

double sub_100078780()
{
  uint64_t v0 = sub_100087EC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v11 - v5;
  type metadata accessor for MessageView();
  sub_100016FB8((uint64_t)v6);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for WidgetFamily.systemExtraLarge(_:), v0);
  sub_10005B0C0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v8 = v11[0];
  uint64_t v7 = v11[1];
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  sub_100087410();
  if (v7 == v8) {
    return result * 0.7;
  }
  return result;
}

uint64_t sub_100078948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004FB4(&qword_1000AB2E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v8 = sub_100087D90();
  v8[1] = v9;
  uint64_t v10 = sub_100004FB4(&qword_1000AB2E8);
  sub_100078A70(a2, a1, (uint64_t)v8 + *(int *)(v10 + 44));
  sub_100087410();
  sub_100087410();
  sub_100087D90();
  sub_100087400();
  sub_100006B3C((uint64_t)v8, a3, &qword_1000AB2E0);
  uint64_t v11 = (_OWORD *)(a3 + *(int *)(sub_100004FB4(&qword_1000AB2F0) + 36));
  long long v12 = v14[1];
  *uint64_t v11 = v14[0];
  v11[1] = v12;
  void v11[2] = v14[2];
  return sub_100006AE0((uint64_t)v8, &qword_1000AB2E0);
}

uint64_t sub_100078A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v163 = a2;
  uint64_t v184 = a3;
  uint64_t v4 = sub_100004FB4(&qword_1000AB2F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v169 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_100004FB4(&qword_1000AB300);
  __chkstk_darwin(v164);
  uint64_t v162 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_100004FB4(&qword_1000AB308);
  __chkstk_darwin(v165);
  uint64_t v167 = (char *)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_100004FB4(&qword_1000AB310);
  __chkstk_darwin(v182);
  unint64_t v166 = (char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v168 = (char *)&v154 - v10;
  uint64_t v181 = sub_100004FB4(&qword_1000AB318);
  __chkstk_darwin(v181);
  uint64_t v178 = (uint64_t)&v154 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004FB4(&qword_1000AB320);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004FB4(&qword_1000AB328);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v154 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004FB4(&qword_1000AB330);
  __chkstk_darwin(v18 - 8);
  uint64_t v173 = (uint64_t)&v154 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_100004FB4(&qword_1000AB338);
  __chkstk_darwin(v172);
  uint64_t v170 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_100004FB4(&qword_1000AB340);
  __chkstk_darwin(v180);
  uint64_t v174 = (uint64_t)&v154 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v175 = (uint64_t)&v154 - v23;
  uint64_t v24 = sub_100087EC0();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v171 = (uint64_t)&v154 - v29;
  __chkstk_darwin(v30);
  unsigned __int8 v177 = (char *)&v154 - v31;
  __chkstk_darwin(v32);
  uint64_t v176 = (uint64_t)&v154 - v33;
  uint64_t v34 = type metadata accessor for MessageView();
  __chkstk_darwin(v34);
  long long v36 = (char *)&v154 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  char v39 = (char *)&v154 - v38;
  __chkstk_darwin(v40);
  char v42 = (char *)&v154 - v41;
  uint64_t v44 = *(int *)(v43 + 40);
  uint64_t v45 = a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + v44);
  uint64_t v185 = v45;
  sub_10007D778(v45, (uint64_t)&v154 - v41, (uint64_t (*)(void))type metadata accessor for MessageView);
  uint64_t v183 = v14;
  uint64_t v179 = v25;
  if ((a1 & 1) == 0)
  {
    sub_10007D7E0((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for MessageView);
    sub_10007D778(v185, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MessageView);
    int v55 = enum case for WidgetFamily.systemSmall(_:);
    goto LABEL_5;
  }
  uint64_t v155 = v36;
  uint64_t v160 = v17;
  uint64_t v154 = v27;
  uint64_t v46 = v24;
  uint64_t v47 = v176;
  sub_100016FB8(v176);
  uint64_t v48 = *(void (**)(void))(v25 + 104);
  uint64_t v49 = v177;
  int v161 = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v159 = v25 + 104;
  os_log_type_t v158 = (void (*)(char *, void, uint64_t))v48;
  v48(v177);
  uint64_t v50 = sub_10005B0C0(&qword_1000A8BC0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000880F0();
  uint64_t v157 = v50;
  sub_1000880F0();
  uint64_t v52 = v186;
  uint64_t v51 = v187;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v25 + 8);
  v53(v49, v46);
  uint64_t v54 = v47;
  uint64_t v24 = v46;
  uint64_t v156 = (void (*)(uint64_t, uint64_t))v53;
  v53((char *)v54, v46);
  sub_10007D7E0((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for MessageView);
  sub_10007D778(v185, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MessageView);
  if (v51 == v52)
  {
    int v55 = v161;
    uint64_t v17 = v160;
LABEL_5:
    sub_10007D7E0((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MessageView);
    int v56 = enum case for WidgetFamily.systemMedium(_:);
    goto LABEL_6;
  }
  uint64_t v92 = v176;
  sub_100016FB8(v176);
  int v56 = enum case for WidgetFamily.systemMedium(_:);
  uint64_t v93 = v177;
  v158(v177, enum case for WidgetFamily.systemMedium(_:), v46);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v95 = v186;
  uint64_t v94 = v187;
  uint64_t v96 = v93;
  uint64_t v97 = v156;
  v156((uint64_t)v96, v46);
  uint64_t v98 = v92;
  uint64_t v24 = v46;
  v97(v98, v46);
  sub_10007D7E0((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MessageView);
  int v55 = v161;
  uint64_t v17 = v160;
  if (v94 == v95)
  {
LABEL_6:
    uint64_t v57 = sub_100087730();
    uint64_t v58 = v185;
    uint64_t v59 = v171;
    sub_100016FB8(v171);
    uint64_t v60 = v179;
    int v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v179 + 88))(v59, v24);
    if (v61 != v55
      && v61 != v56
      && v61 != enum case for WidgetFamily.systemLarge(_:)
      && v61 != enum case for WidgetFamily.systemExtraLarge(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v24);
    }
    *(void *)uint64_t v17 = v57;
    *((void *)v17 + 1) = 0x4018000000000000;
    v17[16] = 0;
    uint64_t v62 = sub_100004FB4(&qword_1000AB398);
    sub_100079DE0(v58, &v17[*(int *)(v62 + 44)]);
    uint64_t v63 = sub_100087D70();
    uint64_t v64 = v173;
    sub_100077780(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, v173, 0.0, 1, INFINITY, 0, v63, v65, &qword_1000AB328, &qword_1000AB330);
    sub_100006AE0((uint64_t)v17, &qword_1000AB328);
    unsigned __int8 v66 = sub_1000878B0();
    unsigned __int8 v67 = sub_100087890();
    unsigned __int8 v68 = sub_1000878D0();
    char v69 = sub_1000878C0();
    sub_1000878C0();
    if (sub_1000878C0() != v66) {
      char v69 = sub_1000878C0();
    }
    sub_1000878C0();
    if (sub_1000878C0() != v67) {
      char v69 = sub_1000878C0();
    }
    uint64_t v70 = v178;
    uint64_t v71 = (uint64_t)v170;
    sub_1000878C0();
    if (sub_1000878C0() != v68) {
      char v69 = sub_1000878C0();
    }
    sub_100006B3C(v64, v71, &qword_1000AB330);
    uint64_t v72 = v71 + *(int *)(v172 + 36);
    *(unsigned char *)uint64_t v72 = v69;
    *(_OWORD *)(v72 + 8) = 0u;
    *(_OWORD *)(v72 + 24) = 0u;
    *(unsigned char *)(v72 + 40) = 1;
    sub_100006AE0(v64, &qword_1000AB330);
    unsigned __int8 v73 = sub_1000878A0();
    char v74 = sub_1000878C0();
    sub_1000878C0();
    if (sub_1000878C0() != v73) {
      char v74 = sub_1000878C0();
    }
    sub_100087360();
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    uint64_t v83 = v174;
    sub_100006B3C(v71, v174, &qword_1000AB338);
    uint64_t v84 = v83 + *(int *)(v180 + 36);
    *(unsigned char *)uint64_t v84 = v74;
    *(void *)(v84 + 8) = v76;
    *(void *)(v84 + 16) = v78;
    *(void *)(v84 + 24) = v80;
    *(void *)(v84 + 32) = v82;
    *(unsigned char *)(v84 + 40) = 0;
    sub_100006AE0(v71, &qword_1000AB338);
    uint64_t v85 = &qword_1000AB340;
    uint64_t v86 = v83;
    uint64_t v87 = v175;
    sub_100006C4C(v86, v175, &qword_1000AB340);
    sub_100006B3C(v87, v70, &qword_1000AB340);
    swift_storeEnumTagMultiPayload();
    sub_10007DA84(&qword_1000AB358, &qword_1000AB340, (void (*)(void))sub_10007D5B0);
    sub_10007DA84(&qword_1000AB378, &qword_1000AB310, (void (*)(void))sub_10007D680);
    uint64_t v88 = (uint64_t)v183;
    sub_1000877E0();
    uint64_t v89 = v87;
LABEL_20:
    sub_100006AE0(v89, v85);
    uint64_t v90 = sub_100004FB4(&qword_1000AB348);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v88, 0, 1, v90);
    return sub_100006C4C(v88, v184, &qword_1000AB320);
  }
  uint64_t v99 = v185;
  uint64_t v100 = v176;
  uint64_t v175 = v185 + *(int *)(v34 + 20);
  sub_100016FB8(v176);
  int v101 = enum case for WidgetFamily.systemLarge(_:);
  uint64_t v102 = v177;
  v158(v177, enum case for WidgetFamily.systemLarge(_:), v46);
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v104 = v186;
  uint64_t v103 = v187;
  uint64_t v105 = v102;
  uint64_t v106 = v156;
  v156((uint64_t)v105, v46);
  uint64_t v107 = v100;
  uint64_t v108 = v46;
  v106(v107, v46);
  uint64_t v109 = v99;
  uint64_t v110 = (uint64_t)v155;
  sub_10007D778(v109, (uint64_t)v155, (uint64_t (*)(void))type metadata accessor for MessageView);
  if (v103 == v104)
  {
    sub_10007D7E0(v110, (uint64_t (*)(void))type metadata accessor for MessageView);
    int v111 = enum case for WidgetFamily.systemExtraLarge(_:);
    uint64_t v112 = (uint64_t)v169;
    goto LABEL_26;
  }
  uint64_t v113 = (void (*)(char *, uint64_t))v106;
  uint64_t v114 = v176;
  sub_100016FB8(v176);
  int v111 = enum case for WidgetFamily.systemExtraLarge(_:);
  uint64_t v115 = v177;
  v158(v177, enum case for WidgetFamily.systemExtraLarge(_:), v46);
  LODWORD(v174) = v101;
  sub_1000880F0();
  sub_1000880F0();
  uint64_t v116 = v186;
  uint64_t v117 = v187;
  v113(v115, v46);
  uint64_t v118 = v114;
  uint64_t v108 = v46;
  v113((char *)v118, v46);
  sub_10007D7E0((uint64_t)v155, (uint64_t (*)(void))type metadata accessor for MessageView);
  BOOL v119 = v117 == v116;
  int v101 = v174;
  uint64_t v112 = (uint64_t)v169;
  if (v119)
  {
LABEL_26:
    unsigned __int8 v177 = (char *)v34;
    uint64_t v120 = sub_100087720();
    uint64_t v121 = (uint64_t)v154;
    sub_100016FB8((uint64_t)v154);
    int v122 = (*(uint64_t (**)(uint64_t, uint64_t))(v179 + 88))(v121, v108);
    if (v122 != v161 && v122 != v56 && v122 != v101 && v122 != v111) {
      v156(v121, v108);
    }
    *(void *)uint64_t v112 = v120;
    *(void *)(v112 + 8) = 0x4018000000000000;
    *(unsigned char *)(v112 + 16) = 0;
    uint64_t v123 = sub_100004FB4(&qword_1000AB350);
    sub_10007AC04(v185, v112 + *(int *)(v123 + 44));
    char v124 = sub_1000878B0();
    char v125 = sub_1000878D0();
    unsigned __int8 v126 = sub_1000878A0();
    char v127 = sub_1000878C0();
    sub_1000878C0();
    char v128 = sub_1000878C0();
    uint64_t v129 = (uint64_t)v167;
    uint64_t v130 = (uint64_t)v166;
    if (v128 != v124) {
      char v127 = sub_1000878C0();
    }
    sub_1000878C0();
    char v131 = sub_1000878C0();
    uint64_t v132 = (uint64_t)v168;
    if (v131 != v125) {
      char v127 = sub_1000878C0();
    }
    uint64_t v133 = (uint64_t)v162;
    sub_1000878C0();
    if (sub_1000878C0() != v126) {
      char v127 = sub_1000878C0();
    }
    sub_100006B3C(v112, v133, &qword_1000AB2F8);
    uint64_t v134 = v133 + *(int *)(v164 + 36);
    *(unsigned char *)uint64_t v134 = v127;
    *(_OWORD *)(v134 + 8) = 0u;
    *(_OWORD *)(v134 + 24) = 0u;
    *(unsigned char *)(v134 + 40) = 1;
    sub_100006AE0(v112, &qword_1000AB2F8);
    unsigned __int8 v135 = sub_100087890();
    char v136 = sub_1000878C0();
    sub_1000878C0();
    if (sub_1000878C0() != v135) {
      char v136 = sub_1000878C0();
    }
    sub_100087410();
    sub_100087360();
    uint64_t v138 = v137;
    uint64_t v140 = v139;
    uint64_t v142 = v141;
    uint64_t v144 = v143;
    sub_100006B3C(v133, v129, &qword_1000AB300);
    uint64_t v145 = v129 + *(int *)(v165 + 36);
    *(unsigned char *)uint64_t v145 = v136;
    *(void *)(v145 + 8) = v138;
    *(void *)(v145 + 16) = v140;
    *(void *)(v145 + 24) = v142;
    *(void *)(v145 + 32) = v144;
    *(unsigned char *)(v145 + 40) = 0;
    sub_100006AE0(v133, &qword_1000AB300);
    double v146 = sub_100078780();
    double v147 = sub_100078780();
    sub_100087D90();
    if (v146 > v147)
    {
      sub_1000881C0();
      uint64_t v148 = (void *)sub_100087870();
      sub_100087320();
    }
    sub_1000874E0();
    sub_100006B3C(v129, v130, &qword_1000AB308);
    uint64_t v149 = (_OWORD *)(v130 + *(int *)(v182 + 36));
    long long v150 = v192;
    v149[4] = v191;
    v149[5] = v150;
    v149[6] = v193;
    long long v151 = v188;
    *uint64_t v149 = v187;
    v149[1] = v151;
    long long v152 = v190;
    v149[2] = v189;
    v149[3] = v152;
    sub_100006AE0(v129, &qword_1000AB308);
    uint64_t v85 = &qword_1000AB310;
    sub_100006C4C(v130, v132, &qword_1000AB310);
    sub_100006B3C(v132, v178, &qword_1000AB310);
    swift_storeEnumTagMultiPayload();
    sub_10007DA84(&qword_1000AB358, &qword_1000AB340, (void (*)(void))sub_10007D5B0);
    sub_10007DA84(&qword_1000AB378, &qword_1000AB310, (void (*)(void))sub_10007D680);
    uint64_t v88 = (uint64_t)v183;
    sub_1000877E0();
    uint64_t v89 = v132;
    goto LABEL_20;
  }
  uint64_t v153 = sub_100004FB4(&qword_1000AB348);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v184, 1, 1, v153);
}

uint64_t sub_100079DE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v132 = a2;
  uint64_t v93 = sub_100087EC0();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (uint64_t)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FB4(&qword_1000AB3A0);
  uint64_t v128 = *(void *)(v4 - 8);
  uint64_t v129 = v4;
  __chkstk_darwin(v4);
  uint64_t v95 = (uint64_t *)((char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v94 = (uint64_t)&v91 - v7;
  uint64_t v8 = sub_100004FB4(&qword_1000AB3A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v131 = (uint64_t)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v130 = (char *)&v91 - v11;
  uint64_t v121 = sub_100087DA0();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v119 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for DynamicTypeFont() - 8;
  __chkstk_darwin(v103);
  uint64_t v102 = (uint64_t *)((char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_100004FB4(&qword_1000A9370);
  __chkstk_darwin(v14 - 8);
  uint64_t v99 = (uint64_t)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v91 - v17;
  uint64_t v101 = sub_100004FB4(&qword_1000A9378) - 8;
  __chkstk_darwin(v101);
  uint64_t v100 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100004FB4(&qword_1000A9380) - 8;
  __chkstk_darwin(v108);
  uint64_t v104 = (uint64_t)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100004FB4(&qword_1000A9388) - 8;
  __chkstk_darwin(v107);
  uint64_t v105 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100004FB4(&qword_1000AA368) - 8;
  __chkstk_darwin(v114);
  uint64_t v111 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100004FB4(&qword_1000AA370);
  __chkstk_darwin(v113);
  uint64_t v109 = (uint64_t)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100004FB4(&qword_1000AB3B0);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v110 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100004FB4(&qword_1000AB3B8) - 8;
  __chkstk_darwin(v115);
  uint64_t v112 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100004FB4(&qword_1000AB3C0) - 8;
  __chkstk_darwin(v116);
  uint64_t v97 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v98 = (uint64_t)&v91 - v28;
  sub_100087D90();
  sub_100087400();
  uint64_t v127 = v133;
  int v126 = v134;
  uint64_t v125 = v135;
  int v124 = v136;
  uint64_t v122 = v138;
  uint64_t v123 = v137;
  uint64_t v106 = type metadata accessor for MessageView();
  uint64_t v96 = a1;
  swift_bridgeObjectRetain();
  sub_1000876D0();
  uint64_t v29 = sub_100087A60();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  uint64_t v36 = sub_10007834C();
  uint64_t v37 = enum case for ContentSizeCategory.extraLarge(_:);
  uint64_t v38 = sub_100087710();
  uint64_t v39 = *(void *)(v38 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 104))(v18, v37, v38);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v18, 0, 1, v38);
  sub_100087960();
  uint64_t v41 = v40;
  uint64_t v42 = v99;
  sub_100006B3C((uint64_t)v18, v99, &qword_1000A9370);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = (uint64_t)v102;
  *uint64_t v102 = KeyPath;
  sub_100004FB4(&qword_1000A8EA0);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = v103;
  *(void *)(v44 + *(int *)(v103 + 28)) = v36;
  uint64_t v46 = v45;
  sub_100006C4C(v42, v44 + *(int *)(v45 + 32), &qword_1000A9370);
  *(void *)(v44 + *(int *)(v46 + 36)) = v41;
  uint64_t v47 = (uint64_t)v100;
  sub_10007D778(v44, (uint64_t)&v100[*(int *)(v101 + 44)], (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  *(void *)uint64_t v47 = v29;
  *(void *)(v47 + 8) = v31;
  *(unsigned char *)(v47 + 16) = v35;
  *(void *)(v47 + 24) = v33;
  swift_bridgeObjectRetain();
  sub_100024B98(v29, v31, v35);
  sub_10007D7E0(v44, (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  sub_100006AE0((uint64_t)v18, &qword_1000A9370);
  sub_100006AD0(v29, v31, v35);
  swift_bridgeObjectRelease();
  sub_100087BE0();
  uint64_t v48 = sub_100087BD0();
  swift_release();
  uint64_t v49 = swift_getKeyPath();
  uint64_t v50 = v104;
  sub_100006B3C(v47, v104, &qword_1000A9378);
  uint64_t v51 = (uint64_t *)(v50 + *(int *)(v108 + 44));
  *uint64_t v51 = v49;
  v51[1] = v48;
  uint64_t v52 = v47;
  uint64_t v53 = (uint64_t)v97;
  sub_100006AE0(v52, &qword_1000A9378);
  uint64_t v54 = v119;
  uint64_t v55 = v96;
  sub_100078028(v119);
  uint64_t v56 = (uint64_t)v105;
  uint64_t v57 = v120;
  uint64_t v58 = v121;
  (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(&v105[*(int *)(v107 + 44)], v54, v121);
  sub_100006B3C(v50, v56, &qword_1000A9380);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v54, v58);
  sub_100006AE0(v50, &qword_1000A9380);
  uint64_t v59 = sub_100078504();
  uint64_t v60 = swift_getKeyPath();
  uint64_t v61 = v111;
  sub_100006B3C(v56, v111, &qword_1000A9388);
  uint64_t v62 = v61 + *(int *)(v114 + 44);
  *(void *)uint64_t v62 = v60;
  *(void *)(v62 + 8) = v59;
  *(unsigned char *)(v62 + 16) = 0;
  sub_100006AE0(v56, &qword_1000A9388);
  uint64_t v63 = v109;
  sub_100006B3C(v61, v109, &qword_1000AA368);
  *(_WORD *)(v63 + *(int *)(v113 + 36)) = 256;
  sub_100006AE0(v61, &qword_1000AA368);
  sub_10007DA84(&qword_1000AA438, &qword_1000AA370, (void (*)(void))sub_10005AB24);
  uint64_t v64 = v110;
  sub_100087AD0();
  sub_100006AE0(v63, &qword_1000AA370);
  uint64_t v65 = swift_getKeyPath();
  uint64_t v66 = v117;
  uint64_t v67 = (uint64_t)v112;
  uint64_t v68 = v118;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v112, v64, v118);
  uint64_t v69 = v67 + *(int *)(v115 + 44);
  *(void *)uint64_t v69 = v65;
  *(unsigned char *)(v69 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v68);
  uint64_t v70 = swift_getKeyPath();
  sub_100006B3C(v67, v53, &qword_1000AB3B8);
  uint64_t v71 = (uint64_t *)(v53 + *(int *)(v116 + 44));
  *uint64_t v71 = v70;
  v71[1] = 0x3FE3333333333333;
  sub_100006AE0(v67, &qword_1000AB3B8);
  uint64_t v72 = v98;
  sub_100006C4C(v53, v98, &qword_1000AB3C0);
  if (*(void *)(v55 + *(int *)(v106 + 36) + 8))
  {
    uint64_t v73 = v91;
    sub_100016FB8(v91);
    uint64_t v74 = v92;
    uint64_t v75 = v93;
    int v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 88))(v73, v93);
    uint64_t v77 = 0x4000000000000000;
    if (v76 == enum case for WidgetFamily.systemSmall(_:))
    {
      uint64_t v79 = (uint64_t)v130;
    }
    else
    {
      uint64_t v78 = v74;
      uint64_t v79 = (uint64_t)v130;
      if (v76 != enum case for WidgetFamily.systemMedium(_:) && v76 != enum case for WidgetFamily.systemLarge(_:))
      {
        if (v76 == enum case for WidgetFamily.systemExtraLarge(_:)) {
          uint64_t v77 = 0x4010000000000000;
        }
        else {
          (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v73, v75);
        }
      }
    }
    uint64_t v81 = sub_1000876B0();
    uint64_t v82 = (uint64_t)v95;
    *uint64_t v95 = v81;
    *(void *)(v82 + 8) = v77;
    *(unsigned char *)(v82 + 16) = 0;
    uint64_t v83 = sub_100004FB4(&qword_1000AB3D0);
    sub_10007C144(v55, v82 + *(int *)(v83 + 44));
    uint64_t v84 = v94;
    sub_100006C4C(v82, v94, &qword_1000AB3A0);
    sub_100006C4C(v84, v79, &qword_1000AB3A0);
    uint64_t v80 = 0;
  }
  else
  {
    uint64_t v80 = 1;
    uint64_t v79 = (uint64_t)v130;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56))(v79, v80, 1, v129);
  sub_100006B3C(v72, v53, &qword_1000AB3C0);
  uint64_t v85 = v131;
  sub_100006B3C(v79, v131, &qword_1000AB3A8);
  uint64_t v86 = v132;
  void *v132 = 0;
  *((unsigned char *)v86 + 8) = 1;
  v86[2] = v127;
  *((unsigned char *)v86 + 24) = v126;
  v86[4] = v125;
  *((unsigned char *)v86 + 40) = v124;
  uint64_t v87 = v122;
  v86[6] = v123;
  unsigned char v86[7] = v87;
  uint64_t v88 = (int *)sub_100004FB4(&qword_1000AB3C8);
  sub_100006B3C(v53, (uint64_t)v86 + v88[12], &qword_1000AB3C0);
  sub_100006B3C(v85, (uint64_t)v86 + v88[16], &qword_1000AB3A8);
  uint64_t v89 = (char *)v86 + v88[20];
  *(void *)uint64_t v89 = 0;
  v89[8] = 0;
  sub_100006AE0(v79, &qword_1000AB3A8);
  sub_100006AE0(v72, &qword_1000AB3C0);
  sub_100006AE0(v85, &qword_1000AB3A8);
  return sub_100006AE0(v53, &qword_1000AB3C0);
}

uint64_t sub_10007AC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v160 = a2;
  uint64_t v124 = sub_100087EC0();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v122 = (uint64_t)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004FB4(&qword_1000AB3A0);
  uint64_t v156 = *(void *)(v4 - 8);
  uint64_t v157 = v4;
  __chkstk_darwin(v4);
  int v126 = (uint64_t *)((char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v125 = (uint64_t)&v121 - v7;
  uint64_t v8 = sub_100004FB4(&qword_1000AB3A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v159 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  os_log_type_t v158 = (char *)&v121 - v11;
  uint64_t v12 = sub_100087DA0();
  uint64_t v150 = *(void *)(v12 - 8);
  uint64_t v151 = v12;
  __chkstk_darwin(v12);
  uint64_t v149 = (uint64_t)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for DynamicTypeFont();
  __chkstk_darwin(v133);
  uint64_t v135 = (uint64_t *)((char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_100004FB4(&qword_1000A9370);
  __chkstk_darwin(v15 - 8);
  uint64_t v129 = (uint64_t)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v121 - v18;
  uint64_t v128 = sub_100004FB4(&qword_1000A9378);
  __chkstk_darwin(v128);
  uint64_t v131 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100004FB4(&qword_1000AB3F8);
  __chkstk_darwin(v130);
  uint64_t v136 = (uint64_t)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100004FB4(&qword_1000AB400);
  __chkstk_darwin(v134);
  uint64_t v141 = (uint64_t)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100004FB4(&qword_1000AB408);
  __chkstk_darwin(v132);
  uint64_t v145 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100004FB4(&qword_1000AB410);
  __chkstk_darwin(v139);
  uint64_t v140 = (uint64_t)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100004FB4(&qword_1000AB418);
  __chkstk_darwin(v146);
  uint64_t v143 = (uint64_t)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004FB4(&qword_1000AB420);
  uint64_t v147 = *(void *)(v26 - 8);
  uint64_t v148 = v26;
  __chkstk_darwin(v26);
  uint64_t v142 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_100004FB4(&qword_1000AB428);
  __chkstk_darwin(v137);
  uint64_t v144 = (char *)&v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_100004FB4(&qword_1000AB430);
  __chkstk_darwin(v138);
  uint64_t v155 = (uint64_t)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v154 = (uint64_t)&v121 - v31;
  uint64_t v32 = sub_100004FB4(&qword_1000AB438);
  __chkstk_darwin(v32 - 8);
  char v34 = (char *)&v121 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004FB4(&qword_1000AB440);
  __chkstk_darwin(v35);
  uint64_t v153 = (uint64_t)&v121 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v121 - v38;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v121 - v41;
  *(void *)char v34 = sub_1000876B0();
  *((void *)v34 + 1) = 0x4024000000000000;
  v34[16] = 0;
  uint64_t v43 = sub_100004FB4(&qword_1000AB448);
  sub_10007BC04(&v34[*(int *)(v43 + 44)]);
  unsigned __int8 v44 = sub_1000878A0();
  char v45 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v44) {
    char v45 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  sub_100006B3C((uint64_t)v34, (uint64_t)v39, &qword_1000AB438);
  uint64_t v54 = &v39[*(int *)(v35 + 36)];
  *uint64_t v54 = v45;
  *((void *)v54 + 1) = v47;
  *((void *)v54 + 2) = v49;
  *((void *)v54 + 3) = v51;
  *((void *)v54 + 4) = v53;
  v54[40] = 0;
  sub_100006AE0((uint64_t)v34, &qword_1000AB438);
  long long v152 = v42;
  sub_100006C4C((uint64_t)v39, (uint64_t)v42, &qword_1000AB440);
  uint64_t v127 = type metadata accessor for MessageView();
  swift_bridgeObjectRetain();
  sub_1000876D0();
  uint64_t v55 = sub_100087A60();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  char v61 = v60 & 1;
  uint64_t v62 = sub_10007834C();
  uint64_t v63 = enum case for ContentSizeCategory.extraLarge(_:);
  uint64_t v64 = sub_100087710();
  uint64_t v65 = *(void *)(v64 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 104))(v19, v63, v64);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v19, 0, 1, v64);
  uint64_t v66 = a1;
  sub_100087960();
  uint64_t v68 = v67;
  uint64_t v69 = v129;
  sub_100006B3C((uint64_t)v19, v129, &qword_1000A9370);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v71 = (uint64_t)v135;
  uint64_t *v135 = KeyPath;
  sub_100004FB4(&qword_1000A8EA0);
  swift_storeEnumTagMultiPayload();
  uint64_t v72 = v133;
  *(void *)(v71 + *(int *)(v133 + 20)) = v62;
  uint64_t v73 = v69;
  uint64_t v74 = v66;
  sub_100006C4C(v73, v71 + *(int *)(v72 + 24), &qword_1000A9370);
  *(void *)(v71 + *(int *)(v72 + 28)) = v68;
  uint64_t v75 = (uint64_t)v131;
  sub_10007D778(v71, (uint64_t)&v131[*(int *)(v128 + 36)], (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  *(void *)uint64_t v75 = v55;
  *(void *)(v75 + 8) = v57;
  *(unsigned char *)(v75 + 16) = v61;
  *(void *)(v75 + 24) = v59;
  swift_bridgeObjectRetain();
  sub_100024B98(v55, v57, v61);
  sub_10007D7E0(v71, (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  sub_100006AE0((uint64_t)v19, &qword_1000A9370);
  char v76 = v61;
  uint64_t v77 = 1;
  sub_100006AD0(v55, v57, v76);
  swift_bridgeObjectRelease();
  uint64_t v78 = swift_getKeyPath();
  uint64_t v79 = v136;
  sub_100006B3C(v75, v136, &qword_1000A9378);
  uint64_t v80 = v79 + *(int *)(v130 + 36);
  *(void *)uint64_t v80 = v78;
  *(unsigned char *)(v80 + 8) = 1;
  sub_100006AE0(v75, &qword_1000A9378);
  sub_100087BE0();
  uint64_t v81 = sub_100087BD0();
  swift_release();
  uint64_t v82 = swift_getKeyPath();
  uint64_t v83 = v141;
  sub_100006B3C(v79, v141, &qword_1000AB3F8);
  uint64_t v84 = (uint64_t *)(v83 + *(int *)(v134 + 36));
  *uint64_t v84 = v82;
  v84[1] = v81;
  sub_100006AE0(v79, &qword_1000AB3F8);
  uint64_t v85 = v149;
  sub_100078028(v149);
  uint64_t v86 = (uint64_t)v145;
  uint64_t v88 = v150;
  uint64_t v87 = v151;
  (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(&v145[*(int *)(v132 + 36)], v85, v151);
  sub_100006B3C(v83, v86, &qword_1000AB400);
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v85, v87);
  sub_100006AE0(v83, &qword_1000AB400);
  uint64_t v89 = sub_100078504();
  uint64_t v90 = swift_getKeyPath();
  uint64_t v91 = v140;
  sub_100006B3C(v86, v140, &qword_1000AB408);
  uint64_t v92 = v91 + *(int *)(v139 + 36);
  *(void *)uint64_t v92 = v90;
  *(void *)(v92 + 8) = v89;
  *(unsigned char *)(v92 + 16) = 0;
  sub_100006AE0(v86, &qword_1000AB408);
  uint64_t v93 = v143;
  sub_100006B3C(v91, v143, &qword_1000AB410);
  *(_WORD *)(v93 + *(int *)(v146 + 36)) = 256;
  sub_100006AE0(v91, &qword_1000AB410);
  sub_10007DA84(&qword_1000AB450, &qword_1000AB418, (void (*)(void))sub_10007D9B8);
  uint64_t v94 = v142;
  sub_100087AD0();
  sub_100006AE0(v93, &qword_1000AB418);
  uint64_t v95 = swift_getKeyPath();
  uint64_t v97 = v147;
  uint64_t v96 = v148;
  uint64_t v98 = (uint64_t)v144;
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v144, v94, v148);
  uint64_t v99 = v98 + *(int *)(v137 + 36);
  *(void *)uint64_t v99 = v95;
  *(unsigned char *)(v99 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v96);
  uint64_t v100 = swift_getKeyPath();
  uint64_t v101 = v155;
  sub_100006B3C(v98, v155, &qword_1000AB428);
  uint64_t v102 = (uint64_t *)(v101 + *(int *)(v138 + 36));
  *uint64_t v102 = v100;
  v102[1] = 0x3FE3333333333333;
  sub_100006AE0(v98, &qword_1000AB428);
  uint64_t v103 = v154;
  sub_100006C4C(v101, v154, &qword_1000AB430);
  if (*(void *)(v74 + *(int *)(v127 + 36) + 8))
  {
    uint64_t v104 = v122;
    sub_100016FB8(v122);
    uint64_t v105 = v123;
    uint64_t v106 = v124;
    int v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 88))(v104, v124);
    uint64_t v108 = 0x4000000000000000;
    uint64_t v109 = (uint64_t)v158;
    if (v107 != enum case for WidgetFamily.systemSmall(_:)
      && v107 != enum case for WidgetFamily.systemMedium(_:)
      && v107 != enum case for WidgetFamily.systemLarge(_:))
    {
      if (v107 == enum case for WidgetFamily.systemExtraLarge(_:)) {
        uint64_t v108 = 0x4010000000000000;
      }
      else {
        (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v106);
      }
    }
    uint64_t v110 = sub_1000876B0();
    uint64_t v111 = (uint64_t)v126;
    *int v126 = v110;
    *(void *)(v111 + 8) = v108;
    *(unsigned char *)(v111 + 16) = 0;
    uint64_t v112 = sub_100004FB4(&qword_1000AB3D0);
    sub_10007C144(v74, v111 + *(int *)(v112 + 44));
    uint64_t v113 = v125;
    sub_100006C4C(v111, v125, &qword_1000AB3A0);
    sub_100006C4C(v113, v109, &qword_1000AB3A0);
    uint64_t v77 = 0;
  }
  else
  {
    uint64_t v109 = (uint64_t)v158;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v156 + 56))(v109, v77, 1, v157);
  uint64_t v115 = (uint64_t)v152;
  uint64_t v114 = v153;
  sub_100006B3C((uint64_t)v152, v153, &qword_1000AB440);
  sub_100006B3C(v103, v101, &qword_1000AB430);
  uint64_t v116 = v159;
  sub_100006B3C(v109, v159, &qword_1000AB3A8);
  uint64_t v117 = v160;
  sub_100006B3C(v114, v160, &qword_1000AB440);
  uint64_t v118 = (int *)sub_100004FB4(&qword_1000AB478);
  sub_100006B3C(v101, v117 + v118[12], &qword_1000AB430);
  sub_100006B3C(v116, v117 + v118[16], &qword_1000AB3A8);
  uint64_t v119 = v117 + v118[20];
  *(void *)uint64_t v119 = 0;
  *(unsigned char *)(v119 + 8) = 0;
  sub_100006AE0(v109, &qword_1000AB3A8);
  sub_100006AE0(v103, &qword_1000AB430);
  sub_100006AE0(v115, &qword_1000AB440);
  sub_100006AE0(v116, &qword_1000AB3A8);
  sub_100006AE0(v101, &qword_1000AB430);
  return sub_100006AE0(v114, &qword_1000AB440);
}

uint64_t sub_10007BC04@<X0>(char *a1@<X8>)
{
  unsigned __int8 v44 = a1;
  uint64_t v1 = sub_100087B90();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000AB480);
  uint64_t v45 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v42 = (char *)&v39 - v8;
  __chkstk_darwin(v9);
  uint64_t v41 = (char *)&v39 - v10;
  __chkstk_darwin(v11);
  uint64_t v40 = (char *)&v39 - v12;
  __chkstk_darwin(v13);
  uint64_t v46 = (char *)&v39 - v14;
  __chkstk_darwin(v15);
  uint64_t v39 = (char *)&v39 - v16;
  type metadata accessor for MessageView();
  sub_100087410();
  double v18 = v17 * 0.291746641;
  sub_100087410();
  double v20 = v19 * 0.199616123;
  uint64_t v21 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v22(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
  uint64_t v23 = sub_100087C00();
  double v47 = v20;
  strcpy((char *)v48, "Memoji-Left");
  v48[3] = -352321536;
  uint64_t v49 = v23;
  sub_10007DC40();
  sub_100087AD0();
  swift_release();
  v22(v4, v21, v1);
  uint64_t v24 = sub_100087C00();
  double v47 = v18;
  strcpy((char *)v48, "Memoji-Center");
  HIWORD(v48[3]) = -4864;
  uint64_t v49 = v24;
  uint64_t v25 = v46;
  sub_100087AD0();
  swift_release();
  v22(v4, v21, v1);
  uint64_t v26 = sub_100087C00();
  double v47 = v20;
  strcpy((char *)v48, "Memoji-Right");
  BYTE1(v48[3]) = 0;
  HIWORD(v48[3]) = -5120;
  uint64_t v49 = v26;
  uint64_t v27 = v40;
  sub_100087AD0();
  swift_release();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v29 = v41;
  uint64_t v30 = v39;
  v28(v41, v39, v5);
  uint64_t v31 = v42;
  v28(v42, v25, v5);
  uint64_t v32 = v43;
  uint64_t v33 = v27;
  v28(v43, v27, v5);
  char v34 = v44;
  uint64_t v35 = v29;
  v28(v44, v29, v5);
  uint64_t v36 = sub_100004FB4(&qword_1000AB490);
  v28(&v34[*(int *)(v36 + 48)], v31, v5);
  v28(&v34[*(int *)(v36 + 64)], v32, v5);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v45 + 8);
  v37(v33, v5);
  v37(v46, v5);
  v37(v30, v5);
  v37(v32, v5);
  v37(v31, v5);
  return ((uint64_t (*)(char *, uint64_t))v37)(v35, v5);
}

uint64_t sub_10007C144@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v115[1] = a1;
  uint64_t v155 = a2;
  uint64_t v2 = sub_100087C90();
  uint64_t v153 = *(void *)(v2 - 8);
  uint64_t v154 = v2;
  __chkstk_darwin(v2);
  long long v152 = (char *)v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100004FB4(&qword_1000AA460) - 8;
  __chkstk_darwin(v139);
  uint64_t v138 = (char *)v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_100004FB4(&qword_1000AA468) - 8;
  __chkstk_darwin(v143);
  uint64_t v140 = (uint64_t)v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100004FB4(&qword_1000AA470) - 8;
  __chkstk_darwin(v142);
  uint64_t v141 = (char *)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_100004FB4(&qword_1000AA478) - 8;
  __chkstk_darwin(v145);
  uint64_t v144 = (char *)v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100004FB4(&qword_1000AA480);
  __chkstk_darwin(v149);
  uint64_t v147 = (uint64_t)v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004FB4(&qword_1000AA488);
  uint64_t v150 = *(void *)(v9 - 8);
  uint64_t v151 = v9;
  __chkstk_darwin(v9);
  uint64_t v146 = (char *)v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v148 = (char *)v115 - v12;
  uint64_t v159 = sub_100087DA0();
  uint64_t v161 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v158 = (uint64_t)v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for DynamicTypeFont() - 8;
  __chkstk_darwin(v157);
  uint64_t v15 = (void *)((char *)v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100004FB4(&qword_1000A9370);
  __chkstk_darwin(v16 - 8);
  uint64_t v156 = (uint64_t)v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  double v20 = (char *)v115 - v19;
  uint64_t v21 = sub_100004FB4(&qword_1000A9378);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v117 = (char *)v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_100004FB4(&qword_1000A9380) - 8;
  __chkstk_darwin(v128);
  uint64_t v125 = (uint64_t)v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_100004FB4(&qword_1000A9388) - 8;
  __chkstk_darwin(v127);
  int v126 = (char *)v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100004FB4(&qword_1000AA368);
  __chkstk_darwin(v134);
  uint64_t v131 = (uint64_t)v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_100004FB4(&qword_1000AB3D8);
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v129 = (char *)v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100004FB4(&qword_1000AB3E0) - 8;
  __chkstk_darwin(v133);
  uint64_t v130 = (char *)v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100004FB4(&qword_1000AB3E8) - 8;
  __chkstk_darwin(v135);
  uint64_t v132 = (uint64_t)v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v160 = (uint64_t)v115 - v31;
  swift_bridgeObjectRetain();
  sub_1000876D0();
  uint64_t v32 = sub_100087A60();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  uint64_t v116 = (uint64_t (*)(void))sub_10007834C();
  uint64_t v39 = enum case for ContentSizeCategory.extraLarge(_:);
  unsigned int v123 = enum case for ContentSizeCategory.extraLarge(_:);
  uint64_t v40 = sub_100087710();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v122 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 104);
  uint64_t v124 = v41 + 104;
  uint64_t v118 = v40;
  v122(v20, v39, v40);
  uint64_t v42 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56);
  uint64_t v120 = v41 + 56;
  uint64_t v121 = v42;
  v42((uint64_t)v20, 0, 1, v40);
  sub_100087950();
  uint64_t v44 = v43;
  uint64_t v45 = (uint64_t)v20;
  uint64_t v46 = v156;
  sub_100006B3C((uint64_t)v20, v156, &qword_1000A9370);
  uint64_t *v15 = swift_getKeyPath();
  uint64_t v119 = sub_100004FB4(&qword_1000A8EA0);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = v157;
  *(uint64_t *)((char *)v15 + *(int *)(v157 + 28)) = (uint64_t)v116;
  uint64_t v48 = v47;
  sub_100006C4C(v46, (uint64_t)v15 + *(int *)(v47 + 32), &qword_1000A9370);
  *(uint64_t *)((char *)v15 + *(int *)(v48 + 36)) = v44;
  uint64_t v49 = *(int *)(v22 + 44);
  uint64_t v50 = (uint64_t)v117;
  uint64_t v116 = (uint64_t (*)(void))type metadata accessor for DynamicTypeFont;
  sub_10007D778((uint64_t)v15, (uint64_t)&v117[v49], (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  *(void *)uint64_t v50 = v32;
  *(void *)(v50 + 8) = v34;
  *(unsigned char *)(v50 + 16) = v38;
  *(void *)(v50 + 24) = v36;
  sub_100024B98(v32, v34, v38);
  swift_bridgeObjectRetain();
  sub_10007D7E0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DynamicTypeFont);
  sub_100006AE0((uint64_t)v20, &qword_1000A9370);
  sub_100006AD0(v32, v34, v38);
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_100087BF0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v53 = v125;
  sub_100006B3C(v50, v125, &qword_1000A9378);
  uint64_t v54 = (uint64_t *)(v53 + *(int *)(v128 + 44));
  *uint64_t v54 = KeyPath;
  v54[1] = v51;
  sub_100006AE0(v50, &qword_1000A9378);
  uint64_t v55 = v158;
  sub_100078028(v158);
  uint64_t v56 = (uint64_t)v126;
  uint64_t v57 = &v126[*(int *)(v127 + 44)];
  uint64_t v58 = v161;
  uint64_t v128 = *(void *)(v161 + 16);
  uint64_t v59 = v159;
  ((void (*)(char *, uint64_t, uint64_t))v128)(v57, v55, v159);
  sub_100006B3C(v53, v56, &qword_1000A9380);
  char v60 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  uint64_t v161 = v58 + 8;
  uint64_t v127 = (uint64_t)v60;
  v60(v55, v59);
  sub_100006AE0(v53, &qword_1000A9380);
  uint64_t v61 = swift_getKeyPath();
  uint64_t v62 = v131;
  sub_100006B3C(v56, v131, &qword_1000A9388);
  uint64_t v63 = v62 + *(int *)(v134 + 36);
  *(void *)uint64_t v63 = v61;
  *(void *)(v63 + 8) = 1;
  *(unsigned char *)(v63 + 16) = 0;
  sub_100006AE0(v56, &qword_1000A9388);
  sub_10005AB24();
  uint64_t v64 = v129;
  sub_100087AD0();
  sub_100006AE0(v62, &qword_1000AA368);
  uint64_t v65 = swift_getKeyPath();
  uint64_t v66 = v136;
  uint64_t v67 = (uint64_t)v130;
  uint64_t v68 = v64;
  uint64_t v69 = v64;
  uint64_t v70 = v137;
  (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v130, v68, v137);
  uint64_t v71 = v67 + *(int *)(v133 + 44);
  *(void *)uint64_t v71 = v65;
  *(unsigned char *)(v71 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v69, v70);
  uint64_t v72 = swift_getKeyPath();
  uint64_t v73 = v132;
  sub_100006B3C(v67, v132, &qword_1000AB3E0);
  uint64_t v74 = (uint64_t *)(v73 + *(int *)(v135 + 44));
  *uint64_t v74 = v72;
  v74[1] = 0x3FE8000000000000;
  sub_100006AE0(v67, &qword_1000AB3E0);
  sub_100006C4C(v73, v160, &qword_1000AB3E8);
  uint64_t v75 = sub_100087C40();
  uint64_t v76 = sub_10007834C();
  uint64_t v77 = v118;
  v122((char *)v45, v123, v118);
  v121(v45, 0, 1, v77);
  sub_100087960();
  uint64_t v79 = v78;
  uint64_t v80 = v156;
  sub_100006B3C(v45, v156, &qword_1000A9370);
  uint64_t *v15 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v81 = v157;
  *(uint64_t *)((char *)v15 + *(int *)(v157 + 28)) = v76;
  uint64_t v82 = v81;
  sub_100006C4C(v80, (uint64_t)v15 + *(int *)(v81 + 32), &qword_1000A9370);
  *(uint64_t *)((char *)v15 + *(int *)(v82 + 36)) = v79;
  uint64_t v83 = (uint64_t)v138;
  uint64_t v84 = v116;
  sub_10007D778((uint64_t)v15, (uint64_t)&v138[*(int *)(v139 + 44)], v116);
  *(void *)uint64_t v83 = v75;
  *(unsigned char *)(v83 + 8) = 1;
  swift_retain();
  sub_10007D7E0((uint64_t)v15, v84);
  sub_100006AE0(v45, &qword_1000A9370);
  swift_release();
  uint64_t v85 = sub_100087BF0();
  uint64_t v86 = swift_getKeyPath();
  uint64_t v87 = v140;
  sub_100006B3C(v83, v140, &qword_1000AA460);
  uint64_t v88 = (uint64_t *)(v87 + *(int *)(v143 + 44));
  *uint64_t v88 = v86;
  v88[1] = v85;
  sub_100006AE0(v83, &qword_1000AA460);
  uint64_t v89 = v158;
  sub_100078028(v158);
  uint64_t v90 = (uint64_t)v141;
  uint64_t v91 = v159;
  ((void (*)(char *, uint64_t, uint64_t))v128)(&v141[*(int *)(v142 + 44)], v89, v159);
  sub_100006B3C(v87, v90, &qword_1000AA468);
  ((void (*)(uint64_t, uint64_t))v127)(v89, v91);
  sub_100006AE0(v87, &qword_1000AA468);
  uint64_t v93 = v152;
  uint64_t v92 = v153;
  uint64_t v94 = v154;
  (*(void (**)(char *, void, uint64_t))(v153 + 104))(v152, enum case for Image.Scale.small(_:), v154);
  uint64_t v95 = swift_getKeyPath();
  uint64_t v96 = (uint64_t)v144;
  uint64_t v97 = (uint64_t *)&v144[*(int *)(v145 + 44)];
  uint64_t v98 = sub_100004FB4(&qword_1000AA4B8);
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))((char *)v97 + *(int *)(v98 + 28), v93, v94);
  uint64_t *v97 = v95;
  sub_100006B3C(v90, v96, &qword_1000AA470);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
  sub_100006AE0(v90, &qword_1000AA470);
  uint64_t v99 = swift_getKeyPath();
  uint64_t v100 = v147;
  sub_100006B3C(v96, v147, &qword_1000AA478);
  uint64_t v101 = (uint64_t *)(v100 + *(int *)(v149 + 36));
  *uint64_t v101 = v99;
  v101[1] = 0x3FE8000000000000;
  sub_100006AE0(v96, &qword_1000AA478);
  sub_10005AD38();
  uint64_t v102 = v146;
  sub_100087AD0();
  sub_100006AE0(v100, &qword_1000AA480);
  uint64_t v103 = v150;
  uint64_t v104 = v151;
  uint64_t v105 = v148;
  uint64_t v106 = v102;
  (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v148, v102, v151);
  uint64_t v107 = v160;
  sub_100006B3C(v160, v73, &qword_1000AB3E8);
  uint64_t v108 = v103;
  uint64_t v109 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  uint64_t v110 = v104;
  v109(v102, v105, v104);
  uint64_t v111 = v155;
  sub_100006B3C(v73, v155, &qword_1000AB3E8);
  uint64_t v112 = sub_100004FB4(&qword_1000AB3F0);
  v109((char *)(v111 + *(int *)(v112 + 48)), v102, v110);
  uint64_t v113 = *(void (**)(char *, uint64_t))(v108 + 8);
  v113(v105, v110);
  sub_100006AE0(v107, &qword_1000AB3E8);
  v113(v106, v110);
  return sub_100006AE0(v73, &qword_1000AB3E8);
}

uint64_t sub_10007D178@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_10007D778(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MessageView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_10007D4CC((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_10007D530;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_10007D278()
{
  uint64_t v1 = (int *)type metadata accessor for MessageView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_100004FB4(&qword_1000A87A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087E60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + v1[6];
  sub_100004FB4(&qword_1000A88D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100087380();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v2 | 7;
  uint64_t v12 = v3 + v4;
  uint64_t v13 = v5 + v1[7];
  uint64_t v14 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v12, v11);
}

uint64_t sub_10007D4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007D530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MessageView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100078948(a1, v6, a2);
}

uint64_t sub_10007D5B0()
{
  return sub_10007DA84(&qword_1000AB360, &qword_1000AB338, (void (*)(void))sub_10007D5E0);
}

unint64_t sub_10007D5E0()
{
  unint64_t result = qword_1000AB368;
  if (!qword_1000AB368)
  {
    sub_100004FF8(&qword_1000AB330);
    sub_100006A8C(&qword_1000AB370, &qword_1000AB328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB368);
  }
  return result;
}

uint64_t sub_10007D680()
{
  return sub_10007DA84(&qword_1000AB380, &qword_1000AB308, (void (*)(void))sub_10007D6B0);
}

unint64_t sub_10007D6B0()
{
  unint64_t result = qword_1000AB388;
  if (!qword_1000AB388)
  {
    sub_100004FF8(&qword_1000AB300);
    sub_100006A8C(&qword_1000AB390, &qword_1000AB2F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB388);
  }
  return result;
}

uint64_t sub_10007D750()
{
  return sub_100087530();
}

uint64_t sub_10007D778(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007D7E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007D848@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100087570();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10007D878()
{
  return sub_100087580();
}

uint64_t sub_10007D8A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000875D0();
  *a1 = result;
  return result;
}

uint64_t sub_10007D8CC()
{
  return sub_1000875E0();
}

uint64_t sub_10007D8FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100087570();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10007D92C()
{
  return sub_100087580();
}

uint64_t sub_10007D964@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000875D0();
  *a1 = result;
  return result;
}

uint64_t sub_10007D990()
{
  return sub_1000875E0();
}

unint64_t sub_10007D9B8()
{
  unint64_t result = qword_1000AB458;
  if (!qword_1000AB458)
  {
    sub_100004FF8(&qword_1000AB410);
    sub_10007DA84(&qword_1000AB460, &qword_1000AB408, (void (*)(void))sub_10007DB00);
    sub_100006A8C(&qword_1000A97A8, &qword_1000A97B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB458);
  }
  return result;
}

uint64_t sub_10007DA84(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007DB00()
{
  unint64_t result = qword_1000AB468;
  if (!qword_1000AB468)
  {
    sub_100004FF8(&qword_1000AB400);
    sub_10007DBA0();
    sub_100006A8C(&qword_1000A93F0, &qword_1000A93F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB468);
  }
  return result;
}

unint64_t sub_10007DBA0()
{
  unint64_t result = qword_1000AB470;
  if (!qword_1000AB470)
  {
    sub_100004FF8(&qword_1000AB3F8);
    sub_100024CD4();
    sub_100006A8C(&qword_1000A9420, &qword_1000A9428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB470);
  }
  return result;
}

unint64_t sub_10007DC40()
{
  unint64_t result = qword_1000AB488;
  if (!qword_1000AB488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB488);
  }
  return result;
}

uint64_t destroy for MessageViewMemoji()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for MessageViewMemoji(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MessageViewMemoji(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MessageViewMemoji(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageViewMemoji(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageViewMemoji(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageViewMemoji()
{
  return &type metadata for MessageViewMemoji;
}

uint64_t sub_10007DE68()
{
  return sub_100006A8C(&qword_1000AB4A8, &qword_1000AB4B0);
}

uint64_t sub_10007DEA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007DEC0()
{
  return sub_100006A8C(&qword_1000AB4B8, &qword_1000AB4C0);
}

uint64_t *sub_10007DEFC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087EC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100087430();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100087220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = (int *)type metadata accessor for CPTimelineEntry();
    *(void *)&v14[v17[5]] = *(void *)&v15[v17[5]];
    v14[v17[6]] = v15[v17[6]];
    v14[v17[7]] = v15[v17[7]];
    v14[v17[8]] = v15[v17[8]];
    v14[v17[9]] = v15[v17[9]];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10007E100(uint64_t a1, uint64_t a2)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100087EC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100087430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_100087220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for CPTimelineEntry();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_10007E23C(void *a1, void *a2, int *a3)
{
  sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100087EC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v12[v15[5]] = *(void *)&v13[v15[5]];
  v12[v15[6]] = v13[v15[6]];
  v12[v15[7]] = v13[v15[7]];
  v12[v15[8]] = v13[v15[8]];
  v12[v15[9]] = v13[v15[9]];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_10007E3F4(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100087EC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v12[v15[5]] = *(void *)&v13[v15[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[v15[6]] = v13[v15[6]];
  v12[v15[7]] = v13[v15[7]];
  v12[v15[8]] = v13[v15[8]];
  v12[v15[9]] = v13[v15[9]];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_10007E5E0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100087EC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v13[v16[5]] = *(void *)&v14[v16[5]];
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v13[v16[9]] = v14[v16[9]];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_10007E790(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100006AE0((uint64_t)a1, &qword_1000A87B0);
    uint64_t v6 = sub_100004FB4(&qword_1000A87B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100087EC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100087430();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100087220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for CPTimelineEntry();
  *(void *)&v13[v16[5]] = *(void *)&v14[v16[5]];
  swift_bridgeObjectRelease();
  v13[v16[6]] = v14[v16[6]];
  v13[v16[7]] = v14[v16[7]];
  v13[v16[8]] = v14[v16[8]];
  v13[v16[9]] = v14[v16[9]];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  return a1;
}

uint64_t sub_10007E96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007E980);
}

uint64_t sub_10007E980(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for CPTimelineEntry();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  int v17 = v16 - 1;
  if (v17 < 0) {
    int v17 = -1;
  }
  return (v17 + 1);
}

uint64_t sub_10007EAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007EB04);
}

uint64_t sub_10007EB04(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100087430();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = type metadata accessor for CPTimelineEntry();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = a2;
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CPBackgroundView()
{
  uint64_t result = qword_1000AB520;
  if (!qword_1000AB520) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007ECB0()
{
  sub_100013BE8();
  if (v0 <= 0x3F)
  {
    sub_100087430();
    if (v1 <= 0x3F)
    {
      type metadata accessor for CPTimelineEntry();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10007EDBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007EDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000AB578);
  __chkstk_darwin(v3 - 8);
  uint64_t v63 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v54 - v6;
  uint64_t v8 = type metadata accessor for CPBackgroundView();
  __chkstk_darwin(v8);
  uint64_t v56 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v54);
  uint64_t v55 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = sub_100004FB4(&qword_1000AB580);
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  __chkstk_darwin(v14);
  uint64_t v57 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100087EC0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = sub_100004FB4(&qword_1000AB588);
  __chkstk_darwin(v23 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  char v60 = (char *)&v54 - v26;
  sub_100016FB8((uint64_t)v22);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for WidgetFamily.systemSmall(_:), v16);
  sub_1000816C8(&qword_1000A93C0);
  char v27 = sub_100087FE0();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v17 + 8);
  v28(v19, v16);
  v28(v22, v16);
  if ((v27 & 1) == 0)
  {
    uint64_t v33 = a1 + *(int *)(v8 + 20);
    sub_100016FB8((uint64_t)v22);
    double v34 = sub_10002AD44(v33, (uint64_t)v22);
    v28(v22, v16);
    uint64_t v35 = a1 + *(int *)(v8 + 24);
    uint64_t v36 = (int *)v54;
    int v37 = *(unsigned __int8 *)(v35 + *(int *)(v54 + 24));
    sub_100081978(v35, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    if (v37 == 1)
    {
      char v38 = v13[v36[9]];
      sub_1000819E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
      uint64_t v39 = v55;
      sub_100081978(v35, v55, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
      uint64_t v40 = (uint64_t)v56;
      uint64_t v32 = (uint64_t)v60;
      if (v38)
      {
        unint64_t v41 = *(void *)(v39 + v36[5]);
        if (v41 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_1000883C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        sub_1000819E0(v39, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
        sub_100081978(a1, v40, (uint64_t (*)(void))type metadata accessor for CPBackgroundView);
        uint64_t v43 = (uint64_t)v57;
        if (v42)
        {
          sub_1000819E0(v40, (uint64_t (*)(void))type metadata accessor for CPBackgroundView);
          goto LABEL_12;
        }
LABEL_11:
        int v44 = *(unsigned __int8 *)(v40 + *(int *)(v8 + 24) + v36[8]);
        sub_1000819E0(v40, (uint64_t (*)(void))type metadata accessor for CPBackgroundView);
        if (v44 != 1)
        {
          uint64_t v47 = sub_100004FB4(&qword_1000AB598);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v43, 1, 1, v47);
          goto LABEL_14;
        }
LABEL_12:
        *(void *)uint64_t v43 = sub_100087690();
        *(void *)(v43 + 8) = 0;
        *(unsigned char *)(v43 + 16) = 0;
        uint64_t v45 = sub_100004FB4(&qword_1000AB590);
        sub_10007F544(a1, v43 + *(int *)(v45 + 44), v34);
        uint64_t v46 = sub_100004FB4(&qword_1000AB598);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v43, 0, 1, v46);
LABEL_14:
        uint64_t v31 = v58;
        uint64_t v30 = v59;
        sub_100006C4C(v43, v32, &qword_1000AB580);
        uint64_t v29 = 0;
        goto LABEL_15;
      }
    }
    else
    {
      sub_1000819E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
      uint64_t v39 = v55;
      sub_100081978(v35, v55, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
      uint64_t v40 = (uint64_t)v56;
      uint64_t v32 = (uint64_t)v60;
    }
    sub_1000819E0(v39, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
    sub_100081978(a1, v40, (uint64_t (*)(void))type metadata accessor for CPBackgroundView);
    uint64_t v43 = (uint64_t)v57;
    goto LABEL_11;
  }
  uint64_t v29 = 1;
  uint64_t v31 = v58;
  uint64_t v30 = v59;
  uint64_t v32 = (uint64_t)v60;
LABEL_15:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, v29, 1, v30);
  *(void *)uint64_t v7 = sub_100087720();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v48 = sub_100004FB4(&qword_1000AB5A0);
  sub_100080F6C(&v7[*(int *)(v48 + 44)]);
  uint64_t v49 = v61;
  sub_100006B3C(v32, v61, &qword_1000AB588);
  uint64_t v50 = v63;
  sub_100006B3C((uint64_t)v7, v63, &qword_1000AB578);
  uint64_t v51 = v62;
  sub_100006B3C(v49, v62, &qword_1000AB588);
  uint64_t v52 = sub_100004FB4(&qword_1000AB5A8);
  sub_100006B3C(v50, v51 + *(int *)(v52 + 48), &qword_1000AB578);
  sub_100006AE0((uint64_t)v7, &qword_1000AB578);
  sub_100006AE0(v32, &qword_1000AB588);
  sub_100006AE0(v50, &qword_1000AB578);
  return sub_100006AE0(v49, &qword_1000AB588);
}

uint64_t sub_10007F544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v38 = a2;
  uint64_t v5 = sub_100004FB4(&qword_1000AB5F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = sub_100004FB4(&qword_1000AB5F8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100004FB4(&qword_1000AB498);
  __chkstk_darwin(v37);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004FB4(&qword_1000AB4A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v37 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v37 - v23;
  *(void *)uint64_t v13 = sub_100087690();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v25 = (uint64_t)&v13[*(int *)(sub_100004FB4(&qword_1000AB600) + 44)];
  *(void *)uint64_t v10 = sub_100087730();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v26 = sub_100004FB4(&qword_1000AB608);
  sub_10007F970(a1, &v10[*(int *)(v26 + 44)]);
  sub_100006B3C((uint64_t)v10, (uint64_t)v7, &qword_1000AB5F0);
  sub_100006B3C((uint64_t)v7, v25, &qword_1000AB5F0);
  uint64_t v27 = v25 + *(int *)(sub_100004FB4(&qword_1000AB610) + 48);
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 0;
  sub_100006AE0((uint64_t)v10, &qword_1000AB5F0);
  sub_100006AE0((uint64_t)v7, &qword_1000AB5F0);
  LOBYTE(v10) = sub_1000878B0();
  unsigned __int8 v28 = sub_100087890();
  unsigned __int8 v29 = sub_1000878D0();
  char v30 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v10) {
    char v30 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v28) {
    char v30 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v29) {
    char v30 = sub_1000878C0();
  }
  sub_100006B3C((uint64_t)v13, (uint64_t)v15, &qword_1000AB5F8);
  uint64_t v31 = &v15[*(int *)(v37 + 36)];
  *uint64_t v31 = v30;
  *(_OWORD *)(v31 + 8) = 0u;
  *(_OWORD *)(v31 + 24) = 0u;
  v31[40] = 1;
  sub_100006AE0((uint64_t)v13, &qword_1000AB5F8);
  uint64_t v32 = sub_100087D90();
  sub_100077B78(a3, 0, a3, 0, a3, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, 0.0, 1, v32, v33);
  sub_100006AE0((uint64_t)v15, &qword_1000AB498);
  sub_100006C4C((uint64_t)v21, (uint64_t)v24, &qword_1000AB4A0);
  sub_100006B3C((uint64_t)v24, (uint64_t)v18, &qword_1000AB4A0);
  uint64_t v34 = v38;
  sub_100006B3C((uint64_t)v18, v38, &qword_1000AB4A0);
  uint64_t v35 = v34 + *(int *)(sub_100004FB4(&qword_1000AB618) + 48);
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 0;
  sub_100006AE0((uint64_t)v24, &qword_1000AB4A0);
  return sub_100006AE0((uint64_t)v18, &qword_1000AB4A0);
}

uint64_t sub_10007F970@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  unsigned __int8 v29 = a2;
  uint64_t v3 = sub_100087EC0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004FB4(&qword_1000AB620);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unsigned __int8 v28 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v27 = a1;
  sub_100016FB8((uint64_t)v6);
  sub_1000816C8(&qword_1000A8E50);
  sub_1000884E0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1000872D0();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_100087170();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v9, 1, v19);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    __chkstk_darwin(result);
    *(&v26 - 2) = v27;
    sub_100004FB4(&qword_1000AB628);
    sub_100006A8C(&qword_1000AB630, &qword_1000AB628);
    sub_100087A20();
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v15, v10);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v22 = v28;
    v21(v28, v18, v10);
    uint64_t v23 = v29;
    v21(v29, v22, v10);
    uint64_t v24 = &v23[*(int *)(sub_100004FB4(&qword_1000AB638) + 48)];
    *(void *)uint64_t v24 = 0;
    v24[8] = 0;
    uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
    v25(v18, v10);
    return ((uint64_t (*)(char *, uint64_t))v25)(v22, v10);
  }
  return result;
}

uint64_t sub_10007FD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_1000876B0();
  *(void *)(a2 + 8) = 0x4010000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_100004FB4(&qword_1000AB640);
  return sub_10007FD9C(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10007FD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v166 = a1;
  uint64_t v162 = a2;
  uint64_t v128 = sub_100004FB4(&qword_1000AA4B8);
  __chkstk_darwin(v128);
  uint64_t v133 = (uint64_t *)((char *)&v121 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v132 = sub_100087C90();
  uint64_t v130 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v129 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_100004FB4(&qword_1000AB080);
  __chkstk_darwin(v127);
  uint64_t v131 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100004FB4(&qword_1000AB088);
  __chkstk_darwin(v135);
  uint64_t v134 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100004FB4(&qword_1000AB090);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v139 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_100004FB4(&qword_1000AB098);
  __chkstk_darwin(v140);
  uint64_t v138 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FB4(&qword_1000AB0A0);
  uint64_t v160 = *(void *)(v8 - 8);
  uint64_t v161 = v8;
  __chkstk_darwin(v8);
  uint64_t v137 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v136 = (char *)&v121 - v11;
  uint64_t v156 = sub_100087280();
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v154 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000AB0A8);
  __chkstk_darwin(v13 - 8);
  uint64_t v159 = (uint64_t)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v158 = (char *)&v121 - v16;
  uint64_t v17 = type metadata accessor for ViewGeometryAnalyzer();
  __chkstk_darwin(v17 - 8);
  uint64_t v153 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1000879B0();
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v143 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100087EC0();
  uint64_t v164 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v126 = (uint64_t)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v121 - v23;
  uint64_t v151 = sub_100004FB4(&qword_1000AB648);
  uint64_t v149 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v148 = (char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100004FB4(&qword_1000AB650);
  __chkstk_darwin(v146);
  long long v152 = (char *)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_100004FB4(&qword_1000AB658);
  __chkstk_darwin(v147);
  uint64_t v157 = (uint64_t)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v150 = (char *)&v121 - v29;
  __chkstk_darwin(v30);
  uint64_t v165 = (uint64_t)&v121 - v31;
  sub_1000876C0();
  uint64_t v32 = sub_100087A60();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  sub_100087960();
  uint64_t v37 = sub_100087A30();
  uint64_t v39 = v38;
  char v41 = v40;
  sub_100006AD0(v32, v34, v36);
  swift_bridgeObjectRelease();
  sub_100016FB8((uint64_t)v24);
  uint64_t v43 = v164 + 88;
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t))(v164 + 88);
  uint64_t v163 = v20;
  int v44 = v42(v24, v20);
  uint64_t v125 = v43;
  uint64_t v124 = (uint64_t (*)(uint64_t, uint64_t))v42;
  int v122 = enum case for WidgetFamily.systemMedium(_:);
  int v123 = enum case for WidgetFamily.systemSmall(_:);
  if (v44 == enum case for WidgetFamily.systemSmall(_:)
    || (int v45 = v44, v44 == enum case for WidgetFamily.systemMedium(_:)))
  {
    sub_100087A00();
  }
  else if (v44 == enum case for WidgetFamily.systemLarge(_:) || v44 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    sub_1000879C0();
  }
  else
  {
    int v46 = enum case for WidgetFamily.accessoryCircular(_:);
    sub_100087A00();
    if (v45 != v46
      && v45 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v45 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(char *, uint64_t))(v164 + 8))(v24, v163);
    }
  }
  uint64_t v47 = v145;
  uint64_t v48 = v144;
  uint64_t v49 = v143;
  (*(void (**)(char *, void, uint64_t))(v144 + 104))(v143, enum case for Font.Leading.tight(_:), v145);
  sub_1000879E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
  char v50 = v41 & 1;
  uint64_t v51 = sub_100087A50();
  uint64_t v53 = v52;
  LOBYTE(v48) = v54;
  swift_release();
  sub_100006AD0(v37, v39, v50);
  swift_bridgeObjectRelease();
  uint64_t v145 = v166 + *(int *)(type metadata accessor for CPBackgroundView() + 24);
  sub_10004FFE0();
  uint64_t v55 = sub_100087A40();
  uint64_t v57 = v56;
  LOBYTE(v49) = v58;
  uint64_t v60 = v59;
  swift_release();
  LOBYTE(v49) = v49 & 1;
  sub_100006AD0(v51, v53, v48 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v62 = swift_getKeyPath();
  uint64_t v63 = swift_getKeyPath();
  uint64_t v167 = v55;
  uint64_t v168 = v57;
  char v169 = (char)v49;
  uint64_t v170 = v60;
  uint64_t v171 = KeyPath;
  uint64_t v172 = 1;
  char v173 = 0;
  uint64_t v174 = v62;
  char v175 = 1;
  uint64_t v176 = v63;
  uint64_t v177 = 0x3FE8000000000000;
  sub_100004FB4(&qword_1000AB660);
  sub_100081838();
  uint64_t v64 = v148;
  sub_100087AD0();
  sub_100006AD0(v55, v57, (char)v49);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100087BA0();
  uint64_t v65 = sub_100087BD0();
  swift_release();
  uint64_t v66 = v149;
  uint64_t v67 = (uint64_t)v152;
  uint64_t v68 = v151;
  (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v152, v64, v151);
  uint64_t v69 = v67 + *(int *)(v146 + 36);
  *(void *)uint64_t v69 = v65;
  *(_OWORD *)(v69 + 8) = xmmword_10008A120;
  *(void *)(v69 + 24) = 0x3FF0000000000000;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v68);
  uint64_t v70 = enum case for CoordinateSpace.global(_:);
  uint64_t v71 = sub_100087470();
  uint64_t v72 = (uint64_t)v153;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 104))(v153, v70, v71);
  uint64_t v73 = sub_100087D90();
  uint64_t v75 = v74;
  uint64_t v76 = (uint64_t)v150;
  uint64_t v77 = (uint64_t)&v150[*(int *)(v147 + 36)];
  sub_100081978(v72, v77, (uint64_t (*)(void))type metadata accessor for ViewGeometryAnalyzer);
  uint64_t v78 = (uint64_t *)(v77 + *(int *)(sub_100004FB4(&qword_1000A96D0) + 36));
  *uint64_t v78 = v73;
  v78[1] = v75;
  sub_100006B3C(v67, v76, &qword_1000AB650);
  sub_1000819E0(v72, (uint64_t (*)(void))type metadata accessor for ViewGeometryAnalyzer);
  sub_100006AE0(v67, &qword_1000AB650);
  sub_100006C4C(v76, v165, &qword_1000AB658);
  uint64_t v79 = v155;
  uint64_t v80 = v154;
  uint64_t v81 = v156;
  (*(void (**)(char *, void, uint64_t))(v155 + 104))(v154, enum case for GKFeatureFlags.GameOverlayUI(_:), v156);
  LOBYTE(v73) = sub_100087270();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
  if (v73)
  {
    id v82 = [self currentDevice];
    id v83 = [v82 userInterfaceIdiom];

    if (!v83)
    {
      uint64_t v113 = 1;
      uint64_t v98 = v160;
      uint64_t v102 = v161;
      uint64_t v112 = (uint64_t)v158;
      goto LABEL_26;
    }
  }
  uint64_t v84 = sub_100087C40();
  uint64_t v85 = v130;
  uint64_t v86 = v129;
  uint64_t v87 = v132;
  (*(void (**)(char *, void, uint64_t))(v130 + 104))(v129, enum case for Image.Scale.small(_:), v132);
  uint64_t v88 = swift_getKeyPath();
  uint64_t v89 = v133;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))((char *)v133 + *(int *)(v128 + 28), v86, v87);
  uint64_t *v89 = v88;
  uint64_t v90 = (uint64_t)v131;
  sub_100006B3C((uint64_t)v89, (uint64_t)&v131[*(int *)(v127 + 36)], &qword_1000AA4B8);
  *(void *)uint64_t v90 = v84;
  *(unsigned char *)(v90 + 8) = 1;
  swift_retain();
  sub_100006AE0((uint64_t)v89, &qword_1000AA4B8);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
  swift_release();
  uint64_t v91 = sub_10005017C();
  uint64_t v92 = swift_getKeyPath();
  uint64_t v93 = v134;
  sub_100006B3C(v90, v134, &qword_1000AB080);
  uint64_t v94 = (uint64_t *)(v93 + *(int *)(v135 + 36));
  *uint64_t v94 = v92;
  v94[1] = v91;
  sub_100006AE0(v90, &qword_1000AB080);
  sub_100087960();
  sub_100075214();
  uint64_t v95 = v139;
  sub_100087AC0();
  sub_100006AE0(v93, &qword_1000AB088);
  uint64_t v96 = v126;
  sub_100016FB8(v126);
  int v97 = v124(v96, v163);
  uint64_t v98 = v160;
  if (v97 == v123 || (int v99 = v97, v97 == v122))
  {
    uint64_t v103 = sub_100087A00();
LABEL_23:
    uint64_t v101 = v103;
    goto LABEL_24;
  }
  if (v97 == enum case for WidgetFamily.systemLarge(_:) || v97 == enum case for WidgetFamily.systemExtraLarge(_:))
  {
    uint64_t v103 = sub_1000879C0();
    goto LABEL_23;
  }
  int v100 = enum case for WidgetFamily.accessoryCircular(_:);
  uint64_t v101 = sub_100087A00();
  if (v99 != v100)
  {
    uint64_t v102 = v161;
    if (v99 != enum case for WidgetFamily.accessoryRectangular(_:)
      && v99 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v96, v163);
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v102 = v161;
LABEL_25:
  uint64_t v104 = swift_getKeyPath();
  uint64_t v105 = v141;
  uint64_t v106 = (uint64_t)v138;
  uint64_t v107 = v142;
  (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v138, v95, v142);
  uint64_t v108 = (uint64_t *)(v106 + *(int *)(v140 + 36));
  *uint64_t v108 = v104;
  v108[1] = v101;
  (*(void (**)(char *, uint64_t))(v105 + 8))(v95, v107);
  sub_1000753AC();
  uint64_t v109 = v137;
  sub_100087AD0();
  sub_100006AE0(v106, &qword_1000AB098);
  uint64_t v110 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
  uint64_t v111 = v136;
  v110(v136, v109, v102);
  uint64_t v112 = (uint64_t)v158;
  v110(v158, v111, v102);
  uint64_t v113 = 0;
LABEL_26:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v112, v113, 1, v102);
  uint64_t v114 = v165;
  uint64_t v115 = v157;
  sub_100006B3C(v165, v157, &qword_1000AB658);
  uint64_t v116 = v159;
  sub_100006B3C(v112, v159, &qword_1000AB0A8);
  uint64_t v117 = v162;
  sub_100006B3C(v115, v162, &qword_1000AB658);
  uint64_t v118 = sub_100004FB4(&qword_1000AB680);
  sub_100006B3C(v116, v117 + *(int *)(v118 + 48), &qword_1000AB0A8);
  uint64_t v119 = v117 + *(int *)(v118 + 64);
  *(void *)uint64_t v119 = 0;
  *(unsigned char *)(v119 + 8) = 0;
  sub_100006AE0(v112, &qword_1000AB0A8);
  sub_100006AE0(v114, &qword_1000AB658);
  sub_100006AE0(v116, &qword_1000AB0A8);
  return sub_100006AE0(v115, &qword_1000AB658);
}

uint64_t sub_100080F6C@<X0>(char *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_100087EC0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004FB4(&qword_1000AB5B0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v24 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v24 - v15;
  sub_100016FB8((uint64_t)v4);
  sub_1000816C8(&qword_1000A8E50);
  sub_1000884E0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1000872D0();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_100087170();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v7, 1, v17);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100004FB4(&qword_1000AB5B8);
    sub_10008170C();
    sub_100087A20();
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v13, v8);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v20 = v24;
    v19(v24, v16, v8);
    uint64_t v21 = v25;
    v19(v25, v20, v8);
    uint64_t v22 = &v21[*(int *)(sub_100004FB4(&qword_1000AB5D8) + 48)];
    *(void *)uint64_t v22 = 0;
    v22[8] = 0;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v16, v8);
    return ((uint64_t (*)(char *, uint64_t))v23)(v20, v8);
  }
  return result;
}

uint64_t sub_1000812F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for GameCenterLogo();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_100004FB4(&qword_1000AB5D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004FB4(&qword_1000AB5B8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_1000876B0();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v14 = &v10[*(int *)(sub_100004FB4(&qword_1000AB5E0) + 44)];
  *uint64_t v4 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_1000817B4((uint64_t)v4, (uint64_t)v7);
  sub_100081978((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  *(void *)uint64_t v14 = 0;
  v14[8] = 0;
  uint64_t v15 = sub_100004FB4(&qword_1000AB5E8);
  sub_100081978((uint64_t)v4, (uint64_t)&v14[*(int *)(v15 + 48)], (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  sub_1000819E0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  sub_1000819E0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GameCenterLogo);
  LOBYTE(v14) = sub_1000878B0();
  unsigned __int8 v16 = sub_100087890();
  unsigned __int8 v17 = sub_1000878D0();
  char v18 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v14) {
    char v18 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v16) {
    char v18 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v17) {
    char v18 = sub_1000878C0();
  }
  sub_100006B3C((uint64_t)v10, (uint64_t)v13, &qword_1000AB5D0);
  uint64_t v19 = &v13[*(int *)(v11 + 36)];
  char *v19 = v18;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  v19[40] = 1;
  sub_100006AE0((uint64_t)v10, &qword_1000AB5D0);
  return sub_100006C4C((uint64_t)v13, a1, &qword_1000AB5B8);
}

uint64_t sub_1000815D4()
{
  uint64_t v1 = sub_100004FB4(&qword_1000AB560);
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v3 = sub_100087D90();
  v3[1] = v4;
  uint64_t v5 = sub_100004FB4(&qword_1000AB568);
  sub_10007EDD8(v0, (uint64_t)v3 + *(int *)(v5 + 44));
  sub_100006A8C(&qword_1000AB570, &qword_1000AB560);
  sub_100087A80();
  return sub_100006AE0((uint64_t)v3, &qword_1000AB560);
}

uint64_t sub_1000816C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100087EC0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008170C()
{
  unint64_t result = qword_1000AB5C0;
  if (!qword_1000AB5C0)
  {
    sub_100004FF8(&qword_1000AB5B8);
    sub_100006A8C(&qword_1000AB5C8, &qword_1000AB5D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB5C0);
  }
  return result;
}

uint64_t sub_1000817B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GameCenterLogo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100081818@<X0>(uint64_t a1@<X8>)
{
  return sub_10007FD4C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100081838()
{
  unint64_t result = qword_1000AB668;
  if (!qword_1000AB668)
  {
    sub_100004FF8(&qword_1000AB660);
    sub_1000818D8();
    sub_100006A8C(&qword_1000AA400, &qword_1000AA408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB668);
  }
  return result;
}

unint64_t sub_1000818D8()
{
  unint64_t result = qword_1000AB670;
  if (!qword_1000AB670)
  {
    sub_100004FF8(&qword_1000AB678);
    sub_10005A760();
    sub_100006A8C(&qword_1000A9410, &qword_1000A9418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB670);
  }
  return result;
}

uint64_t sub_100081978(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000819E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100081A58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100081AD8()
{
  sub_100087310();
  uint64_t v0 = (void *)sub_1000872F0();
  char v1 = sub_100087300();

  uint64_t result = 0;
  if ((v1 & 1) == 0)
  {
    id v3 = [self authenticatedLocalPlayers];
    uint64_t v4 = sub_100088120();

    if (*(void *)(v4 + 16))
    {
      sub_1000180D4(v4 + 32, (uint64_t)&v6);
      swift_bridgeObjectRelease();
      if (*((void *)&v7 + 1))
      {
        sub_100081C38();
        if (swift_dynamicCast()) {
          return v5;
        }
        else {
          return 0;
        }
      }
    }
    else
    {
      long long v6 = 0u;
      long long v7 = 0u;
      swift_bridgeObjectRelease();
    }
    sub_100081BD8((uint64_t)&v6);
    return 0;
  }
  return result;
}

uint64_t sub_100081BD8(uint64_t a1)
{
  uint64_t v2 = sub_100004FB4(&qword_1000A9C70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100081C38()
{
  unint64_t result = qword_1000AB688;
  if (!qword_1000AB688)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000AB688);
  }
  return result;
}

uint64_t sub_100081C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100081C8C);
}

uint64_t sub_100081C8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004FB4(&qword_1000A87C0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100087430();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9] + 32);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  int v18 = v17 - 1;
  if (v18 < 0) {
    int v18 = -1;
  }
  return (v18 + 1);
}

uint64_t sub_100081E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100081E64);
}

uint64_t sub_100081E64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004FB4(&qword_1000A87B8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100004FB4(&qword_1000A87C0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_100087430();
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[7];
      }
      else
      {
        uint64_t result = type metadata accessor for CPTimelineEntry();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9] + 32) = a2;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[8];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CPMediumContentView()
{
  uint64_t result = qword_1000AB6E8;
  if (!qword_1000AB6E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100082064()
{
  sub_100006754(319, (unint64_t *)&qword_1000A8830, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_100006754(319, (unint64_t *)&qword_1000A8838, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      sub_100087430();
      if (v2 <= 0x3F)
      {
        type metadata accessor for CPTimelineEntry();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_1000821EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100082208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000AB758);
  __chkstk_darwin(v3 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_100087E60();
  uint64_t v36 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = sub_100004FB4(&qword_1000AB760);
  __chkstk_darwin(v14 - 8);
  uint64_t v37 = (uint64_t)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v18 = (char *)&v35 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = a1;
  uint64_t v23 = a1 + *(int *)(type metadata accessor for CPMediumContentView() + 24);
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_100005554(*(void *)v23, v25);
  LOBYTE(a1) = sub_100016FF4(v24, v25);
  sub_100005720(v24, v25);
  uint64_t v26 = 0;
  if (a1)
  {
    sub_1000171F8((uint64_t)v13);
    sub_100087E50();
    sub_100006CB0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    char v27 = sub_100087FE0();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v36 + 8);
    v28(v10, v8);
    v28(v13, v8);
    if (v27)
    {
      uint64_t v26 = 0;
    }
    else
    {
      if (qword_1000A86D8 != -1) {
        swift_once();
      }
      uint64_t v26 = qword_1000AD9C0;
      swift_retain();
    }
  }
  uint64_t v40 = v26;
  sub_100004FB4(&qword_1000AB768);
  sub_100086574();
  sub_100087B20();
  swift_release();
  sub_100006C4C((uint64_t)v18, (uint64_t)v21, &qword_1000AB760);
  *(void *)uint64_t v7 = sub_1000876B0();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v29 = sub_100004FB4(&qword_1000AB778);
  sub_10008261C(v22, (uint64_t)&v7[*(int *)(v29 + 44)]);
  uint64_t v30 = v37;
  sub_100006B3C((uint64_t)v21, v37, &qword_1000AB760);
  uint64_t v31 = v39;
  sub_100006B3C((uint64_t)v7, v39, &qword_1000AB758);
  uint64_t v32 = v38;
  sub_100006B3C(v30, v38, &qword_1000AB760);
  uint64_t v33 = sub_100004FB4(&qword_1000AB780);
  sub_100006B3C(v31, v32 + *(int *)(v33 + 48), &qword_1000AB758);
  sub_100006AE0((uint64_t)v7, &qword_1000AB758);
  sub_100006AE0((uint64_t)v21, &qword_1000AB760);
  sub_100006AE0(v31, &qword_1000AB758);
  return sub_100006AE0(v30, &qword_1000AB760);
}

uint64_t sub_10008261C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = sub_100004FB4(&qword_1000AB788);
  __chkstk_darwin(v3 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000AA2E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v59 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100004FB4(&qword_1000AB790) - 8;
  __chkstk_darwin(v60);
  char v58 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v62 = (uint64_t)&v54 - v9;
  uint64_t v57 = sub_100087EC0();
  uint64_t v10 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000AB798);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100004FB4(&qword_1000AB7A0);
  __chkstk_darwin(v56);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004FB4(&qword_1000AB7A8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004FB4(&qword_1000A98C0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004FB4(&qword_1000AB7B0);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  char v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v55 = (uint64_t)&v54 - v29;
  sub_100082C50((uint64_t)v23);
  sub_10008447C(a1, (uint64_t)v15);
  uint64_t v30 = *(int *)(type metadata accessor for CPMediumContentView() + 28);
  uint64_t v54 = a1;
  uint64_t v31 = a1 + v30;
  sub_100016FB8((uint64_t)v12);
  sub_10002AD44(v31, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v57);
  sub_100087D90();
  sub_100087400();
  sub_100006B3C((uint64_t)v15, (uint64_t)v17, &qword_1000AB798);
  uint64_t v32 = &v17[*(int *)(v56 + 36)];
  long long v33 = v65;
  *(_OWORD *)uint64_t v32 = v64;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v66;
  sub_100006AE0((uint64_t)v15, &qword_1000AB798);
  sub_1000865E0();
  sub_100087B20();
  sub_100006AE0((uint64_t)v17, &qword_1000AB7A0);
  uint64_t v34 = sub_100087D90();
  uint64_t v36 = v35;
  uint64_t v37 = (uint64_t)&v27[*(int *)(v25 + 44)];
  sub_100006B3C((uint64_t)v20, v37, &qword_1000AB7A8);
  uint64_t v38 = (uint64_t *)(v37 + *(int *)(sub_100004FB4(&qword_1000AB7F8) + 36));
  *uint64_t v38 = v34;
  v38[1] = v36;
  sub_100006B3C((uint64_t)v23, (uint64_t)v27, &qword_1000A98C0);
  sub_100006AE0((uint64_t)v20, &qword_1000AB7A8);
  sub_100006AE0((uint64_t)v23, &qword_1000A98C0);
  uint64_t v39 = v55;
  sub_100006C4C((uint64_t)v27, v55, &qword_1000AB7B0);
  uint64_t v40 = v59;
  sub_1000833B0(v59);
  uint64_t v41 = v61;
  sub_100083A6C(v61);
  uint64_t v42 = sub_100087D90();
  uint64_t v44 = v43;
  uint64_t v45 = (uint64_t)v58;
  uint64_t v46 = (uint64_t)&v58[*(int *)(v60 + 44)];
  sub_100006B3C(v41, v46, &qword_1000AB788);
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(sub_100004FB4(&qword_1000AB800) + 36));
  *uint64_t v47 = v42;
  v47[1] = v44;
  uint64_t v48 = v45;
  sub_100006B3C(v40, v45, &qword_1000AA2E8);
  sub_100006AE0(v41, &qword_1000AB788);
  sub_100006AE0(v40, &qword_1000AA2E8);
  uint64_t v49 = v45;
  uint64_t v50 = v62;
  sub_100006C4C(v49, v62, &qword_1000AB790);
  sub_100006B3C(v39, (uint64_t)v27, &qword_1000AB7B0);
  sub_100006B3C(v50, v48, &qword_1000AB790);
  uint64_t v51 = v63;
  sub_100006B3C((uint64_t)v27, v63, &qword_1000AB7B0);
  uint64_t v52 = sub_100004FB4(&qword_1000AB808);
  sub_100006B3C(v48, v51 + *(int *)(v52 + 48), &qword_1000AB790);
  sub_100006AE0(v50, &qword_1000AB790);
  sub_100006AE0(v39, &qword_1000AB7B0);
  sub_100006AE0(v48, &qword_1000AB790);
  return sub_100006AE0((uint64_t)v27, &qword_1000AB7B0);
}

uint64_t sub_100082C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100087820();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  __chkstk_darwin(v3);
  uint64_t v61 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100004FB4(&qword_1000A9A20);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v55 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100004FB4(&qword_1000A9A28);
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000A9A30);
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  __chkstk_darwin(v7);
  uint64_t v56 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087EC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004FB4(&qword_1000A8BC8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100087170();
  uint64_t v65 = *(void *)(v16 - 8);
  uint64_t v66 = v16;
  __chkstk_darwin(v16);
  uint64_t v54 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v64 = (char *)v51 - v19;
  uint64_t v20 = type metadata accessor for CPMediumContentView();
  uint64_t v21 = v1;
  uint64_t v22 = v1 + *(int *)(v20 + 32);
  unint64_t v23 = *(void *)(v22 + *(int *)(type metadata accessor for CPTimelineEntry() + 20));
  if (!(v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v31 = 1;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000883C0();
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v53 = a1;
  if ((v23 & 0xC000000000000001) != 0)
  {
    uint64_t v52 = sub_100088340();
    goto LABEL_6;
  }
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v52 = *(void *)(v23 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_100016FB8((uint64_t)v12);
    sub_100007910((uint64_t)v12, (uint64_t)v15);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v26 = v10 + 8;
    char v27 = v28;
    v28(v12, v9);
    uint64_t v30 = v65;
    uint64_t v29 = v66;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v15, 1, v66) != 1)
    {
      uint64_t v32 = *(void (**)(void))(v30 + 32);
      v51[1] = v26;
      uint64_t v33 = v9;
      uint64_t v34 = v64;
      v32();
      uint64_t v35 = *(int *)(v20 + 28);
      uint64_t v36 = v29;
      uint64_t v37 = v21 + v35;
      uint64_t v38 = v30;
      sub_100016FB8((uint64_t)v12);
      sub_10002AD44(v37, (uint64_t)v12);
      v27(v12, v33);
      uint64_t v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 16))(v54, v34, v36);
      __chkstk_darwin(v39);
      uint64_t v40 = v52;
      v51[-2] = v21;
      v51[-1] = v40;
      sub_100004FB4(&qword_1000A9A38);
      sub_100006A8C(&qword_1000A9A40, &qword_1000A9A38);
      uint64_t v41 = v55;
      sub_100087A20();
      sub_100087D90();
      sub_100087400();
      uint64_t v43 = v58;
      uint64_t v42 = (uint64_t)v59;
      uint64_t v44 = v60;
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v59, v41, v60);
      uint64_t v45 = (_OWORD *)(v42 + *(int *)(v57 + 36));
      long long v46 = v70;
      *uint64_t v45 = v69;
      v45[1] = v46;
      v45[2] = v71;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v44);
      uint64_t v47 = v61;
      sub_100087810();
      sub_100031FF8();
      uint64_t v48 = v56;
      sub_100087B40();
      swift_release();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v63);
      sub_100006AE0(v42, &qword_1000A9A28);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v64, v36);
      uint64_t v50 = v67;
      uint64_t v49 = v68;
      a1 = v53;
      (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v53, v48, v68);
      uint64_t v31 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a1, v31, 1, v49);
    }
    swift_release();
    sub_100006AE0((uint64_t)v15, &qword_1000A8BC8);
    uint64_t v31 = 1;
    a1 = v53;
LABEL_11:
    uint64_t v50 = v67;
    uint64_t v49 = v68;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a1, v31, 1, v49);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000833B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v2 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100087430();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CPAppGridView();
  uint64_t v16 = (int *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004FB4(&qword_1000AA2D8);
  __chkstk_darwin(v55);
  uint64_t v57 = (uint64_t)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100004FB4(&qword_1000AA2E0);
  __chkstk_darwin(v56);
  uint64_t v60 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100004FB4(&qword_1000AA2E8);
  __chkstk_darwin(v58);
  uint64_t v59 = (uint64_t)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CPMediumContentView();
  sub_100086908(v1 + *(int *)(v22 + 32), (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v1 + *(int *)(v22 + 28), v8);
  *uint64_t v7 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v4 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  sub_100032098((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v16[7]], v11, v8);
  *(void *)&v18[v16[8]] = 1;
  *(void *)&v18[v16[9]] = 2;
  v18[v16[10]] = 0;
  unint64_t v23 = (uint64_t *)&v18[v16[11]];
  *unint64_t v23 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (uint64_t *)&v18[v16[12]];
  *uint64_t v24 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v7, (uint64_t)&v18[v16[13]], &qword_1000A87C0);
  sub_100006C4C((uint64_t)v4, (uint64_t)&v18[v16[14]], &qword_1000A88C0);
  LOBYTE(v8) = sub_1000878D0();
  unsigned __int8 v25 = sub_1000878A0();
  char v26 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v8) {
    char v26 = sub_1000878C0();
  }
  sub_1000878C0();
  if (sub_1000878C0() != v25) {
    char v26 = sub_1000878C0();
  }
  uint64_t v27 = (uint64_t)v60;
  uint64_t v28 = v57;
  sub_100086908((uint64_t)v18, v57, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  uint64_t v29 = v28 + *(int *)(v55 + 36);
  *(unsigned char *)uint64_t v29 = v26;
  *(_OWORD *)(v29 + 8) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  *(unsigned char *)(v29 + 40) = 1;
  sub_100086970((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CPAppGridView);
  unsigned __int8 v30 = sub_1000878B0();
  char v31 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v30) {
    char v31 = sub_1000878C0();
  }
  sub_100087410();
  sub_100087360();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_100006B3C(v28, v27, &qword_1000AA2D8);
  uint64_t v40 = v27 + *(int *)(v56 + 36);
  *(unsigned char *)uint64_t v40 = v31;
  *(void *)(v40 + 8) = v33;
  *(void *)(v40 + 16) = v35;
  *(void *)(v40 + 24) = v37;
  *(void *)(v40 + 32) = v39;
  *(unsigned char *)(v40 + 40) = 0;
  sub_100006AE0(v28, &qword_1000AA2D8);
  unsigned __int8 v41 = sub_100087890();
  char v42 = sub_1000878C0();
  sub_1000878C0();
  if (sub_1000878C0() != v41) {
    char v42 = sub_1000878C0();
  }
  sub_100087360();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = v59;
  sub_100006B3C(v27, v59, &qword_1000AA2E0);
  uint64_t v52 = v51 + *(int *)(v58 + 36);
  *(unsigned char *)uint64_t v52 = v42;
  *(void *)(v52 + 8) = v44;
  *(void *)(v52 + 16) = v46;
  *(void *)(v52 + 24) = v48;
  *(void *)(v52 + 32) = v50;
  *(unsigned char *)(v52 + 40) = 0;
  sub_100006AE0(v27, &qword_1000AA2E0);
  return sub_100006C4C(v51, v61, &qword_1000AA2E8);
}

uint64_t sub_100083A6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v39 = sub_100004FB4(&qword_1000AB810);
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t *)((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = sub_100004FB4(&qword_1000AB818);
  uint64_t v4 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CPMediumContentView();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087E60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v36 - v14;
  sub_1000171F8((uint64_t)&v36 - v14);
  sub_100087E50();
  sub_100006CB0((unint64_t *)&qword_1000A8990, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v16 = sub_100087FE0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  if (v16) {
    goto LABEL_14;
  }
  uint64_t v18 = v2 + *(int *)(v6 + 32);
  uint64_t v19 = type metadata accessor for CPTimelineEntry();
  char v20 = *(unsigned char *)(v18 + *(int *)(v19 + 32));
  sub_100086908(v2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CPMediumContentView);
  if (v20)
  {
    uint64_t v21 = &v8[*(int *)(v6 + 24)];
    uint64_t v22 = *(void *)v21;
    char v23 = v21[8];
    sub_100005554(*(void *)v21, v23);
    char v24 = sub_100016FF4(v22, v23);
    sub_100005720(v22, v23);
    sub_100086970((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CPMediumContentView);
    if ((v24 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    sub_100086970((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CPMediumContentView);
  }
  unint64_t v25 = *(void *)(v18 + *(int *)(v19 + 20));
  if (!(v25 >> 62))
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v26) {
      goto LABEL_8;
    }
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v35 = 1;
    uint64_t v34 = v41;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v34, v35, 1, v40);
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000883C0();
  if (!result) {
    goto LABEL_13;
  }
LABEL_8:
  if ((v25 & 0xC000000000000001) != 0)
  {
    uint64_t v28 = sub_100088340();
    goto LABEL_11;
  }
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v28 = *(void *)(v25 + 32);
    swift_retain();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_100087D90();
    uint64_t v30 = (uint64_t)v38;
    *uint64_t v38 = v29;
    *(void *)(v30 + 8) = v31;
    uint64_t v32 = sub_100004FB4(&qword_1000AB820);
    sub_100085724(v28, v2, (void *)(v30 + *(int *)(v32 + 44)));
    sub_100006A8C(&qword_1000AB828, &qword_1000AB810);
    uint64_t v33 = (uint64_t)v37;
    sub_100087B20();
    swift_release();
    sub_100006AE0(v30, &qword_1000AB810);
    uint64_t v34 = v41;
    sub_100006C4C(v33, v41, &qword_1000AB818);
    uint64_t v35 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v34, v35, 1, v40);
  }
  __break(1u);
  return result;
}

uint64_t sub_100083F10()
{
  return swift_release();
}

uint64_t sub_100083F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_100087720();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v6 = sub_100004FB4(&qword_1000A9A58);
  return sub_100083FD4(a1, a2, (void *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_100083FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v4 = sub_100004FB4(&qword_1000A88C0);
  __chkstk_darwin(v4 - 8);
  char v42 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100004FB4(&qword_1000A87C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100087430();
  uint64_t v41 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CPTitleView();
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v39 - v21;
  char v23 = (int *)type metadata accessor for CPMediumContentView();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1 + v23[7], v12);
  sub_100086908(a1 + v23[8], (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  char v24 = (long long *)(a1 + v23[9]);
  uint64_t v25 = *((void *)v24 + 4);
  long long v26 = v24[1];
  long long v45 = *v24;
  long long v46 = v26;
  uint64_t v47 = v25;
  swift_retain();
  sub_100004FB4(&qword_1000A88C8);
  sub_100087CE0();
  uint64_t v27 = v48;
  uint64_t v40 = v49;
  long long v39 = v50;
  uint64_t v28 = v51;
  uint64_t v29 = v52;
  *uint64_t v8 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87B0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = (uint64_t)v42;
  *char v42 = KeyPath;
  sub_100004FB4(&qword_1000A88D0);
  swift_storeEnumTagMultiPayload();
  uint64_t *v19 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A88D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (uint64_t *)((char *)v19 + v17[7]);
  *uint64_t v32 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  sub_100006C4C((uint64_t)v8, (uint64_t)v19 + v17[8], &qword_1000A87C0);
  sub_100006C4C(v31, (uint64_t)v19 + v17[9], &qword_1000A88C0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v19 + v17[10], v15, v41);
  sub_100032098((uint64_t)v11, (uint64_t)v19 + v17[11], (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  *(uint64_t *)((char *)v19 + v17[12]) = v44;
  uint64_t v33 = (char *)v19 + v17[13];
  uint64_t v34 = v40;
  *(void *)uint64_t v33 = v27;
  *((void *)v33 + 1) = v34;
  *((_OWORD *)v33 + 1) = v39;
  *((void *)v33 + 4) = v28;
  *((void *)v33 + 5) = v29;
  sub_100032098((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  sub_100086908((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  uint64_t v35 = v43;
  *uint64_t v43 = 0;
  *((unsigned char *)v35 + 8) = 0;
  uint64_t v36 = v35;
  uint64_t v37 = sub_100004FB4(&qword_1000A9A60);
  sub_100086908((uint64_t)v19, (uint64_t)v36 + *(int *)(v37 + 48), (uint64_t (*)(void))type metadata accessor for CPTitleView);
  sub_100086970((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CPTitleView);
  return sub_100086970((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CPTitleView);
}

uint64_t sub_10008447C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004FB4(&qword_1000AB7D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004FB4(&qword_1000AB7F0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100087EC0();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  uint64_t v34 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100004FB4(&qword_1000AB868);
  __chkstk_darwin(v37);
  uint64_t v38 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CPMediumContentView();
  uint64_t v14 = a1 + *(int *)(v13 + 32);
  uint64_t v15 = type metadata accessor for CPTimelineEntry();
  if (*(unsigned char *)(v14 + *(int *)(v15 + 32)) == 1)
  {
    uint64_t v16 = a1 + *(int *)(v13 + 24);
    uint64_t v17 = *(void *)v16;
    uint64_t v33 = v13;
    uint64_t v18 = v6;
    uint64_t v19 = a2;
    char v20 = *(unsigned char *)(v16 + 8);
    sub_100005554(v17, v20);
    char v21 = sub_100016FF4(v17, v20);
    char v22 = v20;
    a2 = v19;
    uint64_t v6 = v18;
    sub_100005720(v17, v22);
    if ((v21 & 1) == 0)
    {
      swift_storeEnumTagMultiPayload();
      sub_100006A8C(&qword_1000AB7E8, &qword_1000AB7F0);
      sub_1000877E0();
      uint64_t v31 = sub_100004FB4(&qword_1000AB7E0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a2, 0, 1, v31);
    }
  }
  unint64_t v23 = *(void *)(v14 + *(int *)(v15 + 20));
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000883C0();
    if (result) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v24) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v23 & 0xC000000000000001) != 0)
  {
    sub_100088340();
  }
  else
  {
    if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v34;
  sub_100016FB8(v34);
  uint64_t v27 = sub_1000252C0(v26, 1);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v26, v36);
  if (v27)
  {
    *uint64_t v9 = sub_100087D90();
    v9[1] = v28;
    uint64_t v29 = sub_100004FB4(&qword_1000AB870);
    sub_100084994(v27, a1, (uint64_t)v9 + *(int *)(v29 + 44));
    sub_100006B3C((uint64_t)v9, v38, &qword_1000AB7F0);
    swift_storeEnumTagMultiPayload();
    sub_100006A8C(&qword_1000AB7E8, &qword_1000AB7F0);
    sub_1000877E0();

    swift_release();
    sub_100006AE0((uint64_t)v9, &qword_1000AB7F0);
    uint64_t v30 = sub_100004FB4(&qword_1000AB7E0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v6, 0, 1, v30);
    return sub_100006C4C((uint64_t)v6, a2, &qword_1000AB7D0);
  }
  swift_release();
LABEL_14:
  uint64_t v32 = sub_100004FB4(&qword_1000AB7E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 1, 1, v32);
}

uint64_t sub_100084994@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v90 = a3;
  uint64_t v4 = sub_100087E60();
  uint64_t v88 = *(void *)(v4 - 8);
  uint64_t v89 = v4;
  __chkstk_darwin(v4);
  uint64_t v84 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v80 = (uint64_t)&v68 - v7;
  uint64_t v8 = sub_100087DA0();
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v87 = v8;
  __chkstk_darwin(v8);
  uint64_t v85 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004FB4(&qword_1000A99C0);
  __chkstk_darwin(v76);
  uint64_t v73 = (uint64_t *)((char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v83 = sub_100004FB4(&qword_1000A99C8);
  uint64_t v79 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v74 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100004FB4(&qword_1000A99D0) - 8;
  __chkstk_darwin(v77);
  uint64_t v82 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v75 = (char *)&v68 - v14;
  __chkstk_darwin(v15);
  uint64_t v78 = (uint64_t)&v68 - v16;
  uint64_t v72 = sub_100087380();
  uint64_t v17 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  long long v71 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100087C50();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  char v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004FB4(&qword_1000A88F8);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (uint64_t *)((char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_100004FB4(&qword_1000A8900);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100004FB4(&qword_1000A8908);
  uint64_t v31 = v30 - 8;
  __chkstk_darwin(v30);
  long long v69 = (char *)&v68 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v70 = (uint64_t)&v68 - v34;
  id v35 = a1;
  sub_100087C30();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for Image.ResizingMode.stretch(_:), v19);
  sub_100087CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  *uint64_t v25 = sub_100087D90();
  v25[1] = v36;
  uint64_t v37 = sub_100004FB4(&qword_1000A8948);
  sub_100064EF8((char *)v25 + *(int *)(v37 + 44), 0.3);
  swift_release();
  sub_100006B3C((uint64_t)v25, (uint64_t)v29, &qword_1000A88F8);
  uint64_t v38 = &v29[*(int *)(v27 + 44)];
  *(void *)uint64_t v38 = 0;
  *((_WORD *)v38 + 4) = 1;
  sub_100006AE0((uint64_t)v25, &qword_1000A88F8);
  uint64_t v40 = v71;
  uint64_t v39 = v72;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v71, enum case for ColorScheme.light(_:), v72);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = (uint64_t)v69;
  uint64_t v43 = (uint64_t *)&v69[*(int *)(v31 + 44)];
  uint64_t v44 = sub_100004FB4(&qword_1000A8950);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))((char *)v43 + *(int *)(v44 + 28), v40, v39);
  *uint64_t v43 = KeyPath;
  sub_100006B3C((uint64_t)v29, v42, &qword_1000A8900);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v40, v39);
  sub_100006AE0((uint64_t)v29, &qword_1000A8900);
  uint64_t v45 = v70;
  sub_100006C4C(v42, v70, &qword_1000A8908);
  uint64_t v46 = sub_100087720();
  uint64_t v47 = (uint64_t)v73;
  *uint64_t v73 = v46;
  *(void *)(v47 + 8) = 0;
  *(unsigned char *)(v47 + 16) = 1;
  uint64_t v48 = sub_100004FB4(&qword_1000A9A00);
  sub_100085278(v81, v47 + *(int *)(v48 + 44));
  sub_100006A8C(&qword_1000A9A08, &qword_1000A99C0);
  uint64_t v49 = v74;
  sub_100087A80();
  sub_100006AE0(v47, &qword_1000A99C0);
  uint64_t v50 = v80;
  sub_1000171F8(v80);
  uint64_t v51 = v84;
  sub_100087E50();
  uint64_t v52 = v51;
  LOBYTE(v51) = sub_100087E40();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v88 + 8);
  uint64_t v54 = v52;
  uint64_t v55 = v89;
  v53(v54, v89);
  v53((char *)v50, v55);
  uint64_t v57 = v85;
  uint64_t v56 = v86;
  uint64_t v58 = (unsigned int *)&enum case for BlendMode.destinationOut(_:);
  if ((v51 & 1) == 0) {
    uint64_t v58 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v59 = v87;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, *v58, v87);
  uint64_t v60 = (uint64_t)v75;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(&v75[*(int *)(v77 + 44)], v57, v59);
  uint64_t v61 = v79;
  uint64_t v62 = v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v60, v49, v83);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v59);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v62);
  uint64_t v63 = v78;
  sub_100006C4C(v60, v78, &qword_1000A99D0);
  sub_100006B3C(v45, v42, &qword_1000A8908);
  uint64_t v64 = v82;
  sub_100006B3C(v63, v82, &qword_1000A99D0);
  uint64_t v65 = v90;
  sub_100006B3C(v42, v90, &qword_1000A8908);
  uint64_t v66 = sub_100004FB4(&qword_1000AB878);
  sub_100006B3C(v64, v65 + *(int *)(v66 + 48), &qword_1000A99D0);
  sub_100006AE0(v63, &qword_1000A99D0);
  sub_100006AE0(v45, &qword_1000A8908);
  sub_100006AE0(v64, &qword_1000A99D0);
  return sub_100006AE0(v42, &qword_1000A8908);
}

uint64_t sub_100085278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v47 = type metadata accessor for CPTitleGradientView() - 8;
  __chkstk_darwin(v47);
  uint64_t v4 = (uint64_t *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v48 = (uint64_t)&v40 - v6;
  uint64_t v7 = type metadata accessor for CPTimelineEntry();
  __chkstk_darwin(v7 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100087EC0();
  uint64_t v43 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CPHeaderGradientView();
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v45 = (uint64_t)&v40 - v18;
  uint64_t v19 = (int *)type metadata accessor for CPMediumContentView();
  uint64_t v20 = a1 + v19[7];
  uint64_t v44 = a1 + v19[5];
  sub_100016FB8((uint64_t)v12);
  double v21 = sub_10002AD44(v20, (uint64_t)v12);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v10 + 8);
  v42(v12, v9);
  sub_100087410();
  double v23 = v22 * 0.2867;
  uint64_t v24 = a1 + v19[8];
  uint64_t v40 = type metadata accessor for CPTimelineEntry;
  uint64_t v41 = v24;
  uint64_t v25 = v46;
  sub_100086908(v24, v46, (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  *uint64_t v16 = swift_getKeyPath();
  sub_100004FB4(&qword_1000A87A8);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (double *)((char *)v16 + *(int *)(v14 + 28));
  *uint64_t v26 = v21;
  v26[1] = v23;
  sub_100032098(v25, (uint64_t)v16 + *(int *)(v14 + 32), (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v27 = v45;
  sub_100032098((uint64_t)v16, v45, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  sub_100016FB8((uint64_t)v12);
  double v28 = sub_10002AD44(v20, (uint64_t)v12);
  v42(v12, v43);
  sub_100087410();
  double v30 = v29 * 0.5;
  sub_100086908(v41, v25, (uint64_t (*)(void))v40);
  *uint64_t v4 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = v47;
  uint64_t v32 = (double *)((char *)v4 + *(int *)(v47 + 28));
  *uint64_t v32 = v28;
  v32[1] = v30;
  sub_100032098(v25, (uint64_t)v4 + *(int *)(v31 + 32), (uint64_t (*)(void))type metadata accessor for CPTimelineEntry);
  uint64_t v33 = v48;
  sub_100032098((uint64_t)v4, v48, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  uint64_t v34 = v27;
  sub_100086908(v27, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  uint64_t v35 = v33;
  sub_100086908(v33, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  uint64_t v36 = v49;
  sub_100086908((uint64_t)v16, v49, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  uint64_t v37 = sub_100004FB4(&qword_1000A9A18);
  uint64_t v38 = v36 + *(int *)(v37 + 48);
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 0;
  sub_100086908((uint64_t)v4, v36 + *(int *)(v37 + 64), (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  sub_100086970(v35, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  sub_100086970(v34, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
  sub_100086970((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CPTitleGradientView);
  return sub_100086970((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CPHeaderGradientView);
}

uint64_t sub_100085724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v5 = sub_100004FB4(&qword_1000A9928);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100087380();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100004FB4(&qword_1000A9228);
  __chkstk_darwin(v82);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100087D60();
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v78 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004FB4(&qword_1000A9230);
  __chkstk_darwin(v14 - 8);
  uint64_t v83 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100004FB4(&qword_1000A9238);
  __chkstk_darwin(v79);
  uint64_t v85 = (uint64_t)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100004FB4(&qword_1000A9930);
  __chkstk_darwin(v84);
  uint64_t v88 = (uint64_t)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100004FB4(&qword_1000A9938);
  __chkstk_darwin(v97);
  uint64_t v86 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v89 = (uint64_t)&v75 - v20;
  uint64_t v21 = sub_100004FB4(&qword_1000A9940);
  __chkstk_darwin(v21 - 8);
  uint64_t v98 = (uint64_t)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v101 = (uint64_t)&v75 - v24;
  uint64_t v25 = sub_100087C50();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  double v28 = (char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v29 = (void *)sub_10005C1C4(0x6C616D726F6ELL, 0xE600000000000000);
  uint64_t v99 = v5;
  int v100 = v7;
  uint64_t v92 = v8;
  uint64_t v91 = v9;
  uint64_t v87 = a1;
  uint64_t v94 = a3;
  if (v29)
  {
    id v30 = v29;
    sub_100087C30();
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v28, enum case for Image.ResizingMode.stretch(_:), v25);
    uint64_t v31 = sub_100087CB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    sub_100087DF0();
    uint64_t v102 = v31;
    *(_OWORD *)uint64_t v103 = xmmword_10008B410;
    *(void *)&v103[16] = 0x3FF0000000000000;
    *(void *)&long long v104 = v32;
    *((void *)&v104 + 1) = v33;
    char v105 = 0;
    swift_retain();
    sub_100004FB4(&qword_1000AB830);
    sub_100004FB4(&qword_1000AB838);
    sub_1000867DC();
    sub_100086870(&qword_1000AB858, &qword_1000AB838);
    sub_1000877E0();
    swift_release();
  }
  else
  {
    uint64_t v34 = *(void **)(a1 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor);
    if (!v34)
    {
      uint64_t v35 = *(void **)(a1 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor);
      if (v35) {
        id v36 = v35;
      }
      else {
        [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.431372549 blue:0.62745098 alpha:1.0];
      }
    }
    id v37 = v34;
    uint64_t v102 = sub_100087B80();
    *(void *)uint64_t v103 = 0xBFC3333333333333;
    *(_OWORD *)&v103[8] = 0u;
    long long v104 = 0u;
    char v105 = 1;
    sub_100004FB4(&qword_1000AB830);
    sub_100004FB4(&qword_1000AB838);
    sub_1000867DC();
    sub_100086870(&qword_1000AB858, &qword_1000AB838);
    sub_1000877E0();
  }
  uint64_t v39 = v106;
  uint64_t v38 = v107;
  uint64_t v41 = v108;
  uint64_t v40 = v109;
  uint64_t v95 = v110;
  uint64_t v93 = v111;
  char v42 = v112;
  type metadata accessor for CPMediumContentView();
  BOOL v43 = sub_100007644();
  uint64_t v44 = v101;
  if (v43)
  {
    uint64_t v75 = v40;
    uint64_t v96 = v41;
    uint64_t v45 = v78;
    sub_100087D50();
    char v46 = sub_100087880();
    uint64_t v47 = v80;
    uint64_t v48 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v12, v45, v81);
    v12[*(int *)(v82 + 36)] = v46;
    uint64_t v49 = v83;
    sub_100006B3C((uint64_t)v12, v83, &qword_1000A9228);
    sub_100006AE0((uint64_t)v12, &qword_1000A9228);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
    sub_100087BA0();
    uint64_t v50 = sub_100087BD0();
    swift_release();
    char v51 = sub_100087880();
    uint64_t v52 = v85;
    sub_100006B3C(v49, v85, &qword_1000A9230);
    uint64_t v53 = v52 + *(int *)(v79 + 36);
    *(void *)uint64_t v53 = v50;
    *(unsigned char *)(v53 + 8) = v51;
    sub_100006AE0(v49, &qword_1000A9230);
    uint64_t v54 = *(void **)(v87 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_editorialBackgroundColor);
    uint64_t v77 = v39;
    uint64_t v76 = v38;
    if (!v54)
    {
      uint64_t v55 = *(void **)(v87 + OBJC_IVAR____TtC9GCWidgets14AppDisplayData_iconBackgroundColor);
      if (v55) {
        id v56 = v55;
      }
      else {
        [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.431372549 blue:0.62745098 alpha:1.0];
      }
    }
    id v57 = v54;
    sub_100087B80();
    uint64_t v58 = sub_100087BD0();
    swift_release();
    char v59 = sub_100087880();
    uint64_t v60 = v88;
    sub_100006B3C(v52, v88, &qword_1000A9238);
    uint64_t v61 = v60 + *(int *)(v84 + 36);
    *(void *)uint64_t v61 = v58;
    *(unsigned char *)(v61 + 8) = v59;
    sub_100006AE0(v52, &qword_1000A9238);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v63 = v91;
    uint64_t v64 = v90;
    uint64_t v65 = v92;
    (*(void (**)(char *, void, uint64_t))(v91 + 104))(v90, enum case for ColorScheme.light(_:), v92);
    uint64_t v66 = (uint64_t)v86;
    uint64_t v67 = (uint64_t *)&v86[*(int *)(v97 + 36)];
    uint64_t v68 = sub_100004FB4(&qword_1000A8950);
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))((char *)v67 + *(int *)(v68 + 28), v64, v65);
    *uint64_t v67 = KeyPath;
    sub_100006B3C(v60, v66, &qword_1000A9930);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    sub_100006AE0(v60, &qword_1000A9930);
    uint64_t v69 = v89;
    sub_100006C4C(v66, v89, &qword_1000A9938);
    sub_100006B3C(v69, (uint64_t)v100, &qword_1000A9938);
    swift_storeEnumTagMultiPayload();
    sub_10006B400();
    uint64_t v44 = v101;
    sub_1000877E0();
    sub_100006AE0(v69, &qword_1000A9938);
    uint64_t v39 = v77;
    uint64_t v38 = v76;
    uint64_t v41 = v96;
    uint64_t v40 = v75;
  }
  else
  {
    if (qword_1000A86E0 != -1) {
      swift_once();
    }
    *int v100 = qword_1000AD9C8;
    swift_storeEnumTagMultiPayload();
    sub_10006B400();
    swift_retain();
    sub_1000877E0();
  }
  uint64_t v70 = v98;
  sub_100006B3C(v44, v98, &qword_1000A9940);
  long long v71 = v94;
  *uint64_t v94 = v39;
  v71[1] = v38;
  v71[2] = v41;
  v71[3] = v40;
  uint64_t v72 = v93;
  v71[4] = v95;
  v71[5] = v72;
  *((unsigned char *)v71 + 48) = v42;
  uint64_t v73 = sub_100004FB4(&qword_1000AB860);
  sub_100006B3C(v70, (uint64_t)v71 + *(int *)(v73 + 48), &qword_1000A9940);
  j__swift_retain();
  sub_100006AE0(v101, &qword_1000A9940);
  sub_100006AE0(v70, &qword_1000A9940);
  return j__swift_release();
}

uint64_t sub_1000862D4()
{
  uint64_t v1 = sub_100087840();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004FB4(&qword_1000AB730);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = sub_100087D90();
  v7[1] = v8;
  uint64_t v9 = sub_100004FB4(&qword_1000AB738);
  sub_100082208(v0, (uint64_t)v7 + *(int *)(v9 + 44));
  sub_100087830();
  sub_100087D90();
  sub_100004FB4(&qword_1000AB740);
  sub_100006A8C(&qword_1000AB748, &qword_1000AB730);
  sub_1000864C8();
  sub_100087B30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100006AE0((uint64_t)v7, &qword_1000AB730);
}

unint64_t sub_1000864C8()
{
  unint64_t result = qword_1000AB750;
  if (!qword_1000AB750)
  {
    sub_100004FF8(&qword_1000AB740);
    sub_100006CB0(&qword_1000A8988, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB750);
  }
  return result;
}

unint64_t sub_100086574()
{
  unint64_t result = qword_1000AB770;
  if (!qword_1000AB770)
  {
    sub_100004FF8(&qword_1000AB768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB770);
  }
  return result;
}

unint64_t sub_1000865E0()
{
  unint64_t result = qword_1000AB7B8;
  if (!qword_1000AB7B8)
  {
    sub_100004FF8(&qword_1000AB7A0);
    sub_1000866D0(&qword_1000AB7C0, &qword_1000AB798, (void (*)(void))sub_100086694);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB7B8);
  }
  return result;
}

uint64_t sub_100086694()
{
  return sub_1000866D0(&qword_1000AB7C8, &qword_1000AB7D0, (void (*)(void))sub_10008673C);
}

uint64_t sub_1000866D0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008673C()
{
  unint64_t result = qword_1000AB7D8;
  if (!qword_1000AB7D8)
  {
    sub_100004FF8(&qword_1000AB7E0);
    sub_100006A8C(&qword_1000AB7E8, &qword_1000AB7F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB7D8);
  }
  return result;
}

unint64_t sub_1000867DC()
{
  unint64_t result = qword_1000AB840;
  if (!qword_1000AB840)
  {
    sub_100004FF8(&qword_1000AB830);
    sub_100086870(&qword_1000AB848, &qword_1000AB850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AB840);
  }
  return result;
}

uint64_t sub_100086870(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004FF8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100086900@<X0>(uint64_t a1@<X8>)
{
  return sub_100083F74(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100086908(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100086970(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000869D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

BOOL sub_100086A98(int a1, int a2, int a3)
{
  if (qword_1000AD998 == -1)
  {
    BOOL v6 = dword_1000AD988 < a1;
    if (dword_1000AD988 > a1) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_1000AD998, 0, (dispatch_function_t)sub_100086B8C);
    BOOL v6 = dword_1000AD988 < a1;
    if (dword_1000AD988 > a1) {
      return 1;
    }
  }
  if (v6) {
    return 0;
  }
  if (dword_1000AD98C > a2) {
    return 1;
  }
  return dword_1000AD98C >= a2 && dword_1000AD990 >= a3;
}

uint64_t sub_100086B8C()
{
  return sub_100086D38(1);
}

uint64_t sub_100086B94(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_1000AD9A0 == -1)
  {
    if (qword_1000AD9A8) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_1000AD9A0, 0, (dispatch_function_t)sub_100086D30);
    if (qword_1000AD9A8) {
      return _availability_version_check();
    }
  }
  if (qword_1000AD998 == -1)
  {
    BOOL v8 = dword_1000AD988 < a2;
    if (dword_1000AD988 > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_1000AD998, 0, (dispatch_function_t)sub_100086B8C);
    BOOL v8 = dword_1000AD988 < a2;
    if (dword_1000AD988 > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_1000AD98C > a3) {
    return 1;
  }
  return dword_1000AD98C >= a3 && dword_1000AD990 >= a4;
}

uint64_t sub_100086D30()
{
  return sub_100086D38(0);
}

uint64_t sub_100086D38(uint64_t result)
{
  uint64_t v1 = (uint64_t (**)(void))qword_1000AD9A8;
  if (qword_1000AD9A8) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (&__availability_version_check)
    {
      uint64_t v1 = &__availability_version_check;
      qword_1000AD9A8 = (uint64_t)&__availability_version_check;
    }
    if (!v1 || result != 0)
    {
      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        uint64_t v4 = *(unsigned __int8 **)result;
        uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          uint64_t v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            uint64_t v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  uint64_t v10 = (uint64_t (*)(uint64_t))result;
                  uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    uint64_t v11 = (uint64_t (*)(void))result;
                    uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    double v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        uint64_t v12 = (FILE *)result;
                        uint64_t result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          uint64_t v13 = (FILE *)result;
                          uint64_t v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            uint64_t v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            uint64_t v16 = malloc(v15);
                            if (v16)
                            {
                              uint64_t v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  uint64_t v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &dword_1000AD988, &dword_1000AD98C, &dword_1000AD990);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    uint64_t v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  uint64_t v19 = v13;
                                }
                                uint64_t v16 = v26;
                              }
                              else
                              {
                                uint64_t v16 = v26;
                                uint64_t v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          uint64_t v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100087070()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_100087080()
{
  return JSONDecoder.init()();
}

uint64_t sub_100087090()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_1000870A0()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_1000870B0()
{
  return JSONEncoder.init()();
}

uint64_t sub_1000870C0()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_1000870D0()
{
  return DateComponents.hour.getter();
}

uint64_t sub_1000870E0()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_1000870F0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_100087100()
{
  return URL.absoluteString.getter();
}

void sub_100087110(NSURL *retstr@<X8>)
{
}

uint64_t sub_100087120()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t sub_100087130()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_100087140()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100087150()
{
  return URL.path.getter();
}

uint64_t sub_100087160()
{
  return URL.init(string:)();
}

uint64_t sub_100087170()
{
  return type metadata accessor for URL();
}

uint64_t sub_100087180()
{
  return Data.init(contentsOf:options:)();
}

NSData sub_100087190()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1000871A0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000871B0()
{
  return Data.write(to:options:)();
}

uint64_t sub_1000871C0()
{
  return Date.timeIntervalSince(_:)();
}

NSDate sub_1000871D0()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1000871E0()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t sub_1000871F0()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_100087200()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100087210()
{
  return Date.init()();
}

uint64_t sub_100087220()
{
  return type metadata accessor for Date();
}

uint64_t sub_100087230()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t sub_100087240()
{
  return static Calendar.current.getter();
}

uint64_t sub_100087250()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_100087260()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_100087270()
{
  return GKFeatureFlags.isEnabled.getter();
}

uint64_t sub_100087280()
{
  return type metadata accessor for GKFeatureFlags();
}

uint64_t sub_100087290()
{
  return * infix(_:_:)();
}

uint64_t sub_1000872A0()
{
  return static ActivityFeedLockupVendor.makeWidgetLockup(with:index:widgetFamily:widgetID:cachedImages:)();
}

uint64_t sub_1000872B0()
{
  return static ActivityFeedLockupVendor.makeWidgetPlaceholderLockup(for:)();
}

uint64_t sub_1000872C0()
{
  return static ActivityFeedLockupVendor.makeRemoteDashboardURL()();
}

uint64_t sub_1000872D0()
{
  return static ActivityFeedLockupVendor.makeRemoteDashboardURL(widgetId:widgetFamily:)();
}

uint64_t sub_1000872E0()
{
  return static ActivityFeedLockupVendor.makeRemoteLaunchTrampolineURL(adamId:bundleId:widgetId:widgetSize:localizedName:topic:)();
}

uint64_t sub_1000872F0()
{
  return static LockdownModeManager.shared.getter();
}

uint64_t sub_100087300()
{
  return LockdownModeManager.enabled.getter();
}

uint64_t sub_100087310()
{
  return type metadata accessor for LockdownModeManager();
}

uint64_t sub_100087320()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100087330()
{
  return Logger.logObject.getter();
}

uint64_t sub_100087340()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100087350()
{
  return type metadata accessor for Logger();
}

uint64_t sub_100087360()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_100087370()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t sub_100087380()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_100087390()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_1000873A0()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_1000873B0()
{
  return TupleWidget.init(_:)();
}

uint64_t sub_1000873C0()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_1000873D0()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_1000873E0()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_1000873F0()
{
  return static WidgetBundle.main()();
}

uint64_t sub_100087400()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_100087410()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_100087420()
{
  return GeometryProxy.frame(in:)();
}

uint64_t sub_100087430()
{
  return type metadata accessor for GeometryProxy();
}

uint64_t sub_100087440()
{
  return static PreferenceKey._isReadableByHost.getter();
}

uint64_t sub_100087450()
{
  return static PreferenceKey._includesRemovedValues.getter();
}

uint64_t sub_100087460()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t sub_100087470()
{
  return type metadata accessor for CoordinateSpace();
}

uint64_t sub_100087480()
{
  return ModifiedContent<>.accessibility(addTraits:)();
}

uint64_t sub_100087490()
{
  return static RedactionReasons.placeholder.getter();
}

uint64_t sub_1000874A0()
{
  return type metadata accessor for RedactionReasons();
}

uint64_t sub_1000874B0()
{
  return type metadata accessor for RoundedRectangle._Inset();
}

uint64_t sub_1000874C0()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_1000874D0()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t sub_1000874E0()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_1000874F0()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_100087500()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_100087510()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100087520()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_100087530()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100087540()
{
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t sub_100087550()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_100087560()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_100087570()
{
  return EnvironmentValues.allowsTightening.getter();
}

uint64_t sub_100087580()
{
  return EnvironmentValues.allowsTightening.setter();
}

uint64_t sub_100087590()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1000875A0()
{
  return EnvironmentValues.redactionReasons.setter();
}

uint64_t sub_1000875B0()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_1000875C0()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_1000875D0()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_1000875E0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000875F0()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_100087600()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100087610()
{
  return type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey();
}

uint64_t sub_100087620()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_100087630()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100087640()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_100087650()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100087660()
{
  return EnvironmentValues.init()();
}

uint64_t sub_100087670()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_100087680()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100087690()
{
  return static VerticalAlignment.top.getter();
}

uint64_t sub_1000876A0()
{
  return static VerticalAlignment.bottom.getter();
}

uint64_t sub_1000876B0()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_1000876C0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_1000876D0()
{
  return LocalizedStringKey.init(_:)();
}

uint64_t sub_1000876E0()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_1000876F0()
{
  return static AccessibilityTraits.isButton.getter();
}

uint64_t sub_100087700()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t sub_100087710()
{
  return type metadata accessor for ContentSizeCategory();
}

uint64_t sub_100087720()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_100087730()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_100087740()
{
  return WidgetConfiguration.description(_:)();
}

uint64_t sub_100087750()
{
  return WidgetConfiguration.description(_:)();
}

uint64_t sub_100087760()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_100087770()
{
  return WidgetConfiguration.disfavoredLocations(_:for:)();
}

uint64_t sub_100087780()
{
  return WidgetConfiguration.eventMachServiceName(_:)();
}

uint64_t sub_100087790()
{
  return WidgetConfiguration.supportsAccentedContent()();
}

uint64_t sub_1000877A0()
{
  return WidgetConfiguration.configurationDisplayName(_:)();
}

uint64_t sub_1000877B0()
{
  return WidgetConfiguration.configurationDisplayName(_:)();
}

uint64_t sub_1000877C0()
{
  return WidgetConfiguration.preferredBackgroundStyle(_:)();
}

uint64_t sub_1000877D0()
{
  return WidgetConfiguration._containerBackgroundRemovable(_:)();
}

uint64_t sub_1000877E0()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1000877F0()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_100087800()
{
  return static AccessibilityChildBehavior.ignore.getter();
}

uint64_t sub_100087810()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_100087820()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_100087830()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_100087840()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

uint64_t sub_100087850()
{
  return static TypesettingLanguageAwareLineHeightRatio.legacy.getter();
}

uint64_t sub_100087860()
{
  return type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
}

uint64_t sub_100087870()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_100087880()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_100087890()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_1000878A0()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_1000878B0()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_1000878C0()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t sub_1000878D0()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_1000878E0()
{
  return static Font.largeTitle.getter();
}

uint64_t sub_1000878F0()
{
  return static Font.subheadline.getter();
}

uint64_t sub_100087900()
{
  return static Font.== infix(_:_:)();
}

uint64_t sub_100087910()
{
  return static Font.body.getter();
}

uint64_t sub_100087920()
{
  return static Font.title.getter();
}

uint64_t sub_100087930()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_100087940()
{
  return static Font.Weight.medium.getter();
}

uint64_t sub_100087950()
{
  return static Font.Weight.regular.getter();
}

uint64_t sub_100087960()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_100087970()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_100087980()
{
  return static Font.title2.getter();
}

uint64_t sub_100087990()
{
  return static Font.title3.getter();
}

uint64_t sub_1000879A0()
{
  return Font.weight(_:)();
}

uint64_t sub_1000879B0()
{
  return type metadata accessor for Font.Leading();
}

uint64_t sub_1000879C0()
{
  return static Font.callout.getter();
}

uint64_t sub_1000879D0()
{
  return static Font.caption.getter();
}

uint64_t sub_1000879E0()
{
  return Font.leading(_:)();
}

uint64_t sub_1000879F0()
{
  return static Font.caption2.getter();
}

uint64_t sub_100087A00()
{
  return static Font.footnote.getter();
}

uint64_t sub_100087A10()
{
  return static Font.headline.getter();
}

uint64_t sub_100087A20()
{
  return Link.init(destination:label:)();
}

uint64_t sub_100087A30()
{
  return Text.fontWeight(_:)();
}

uint64_t sub_100087A40()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_100087A50()
{
  return Text.font(_:)();
}

uint64_t sub_100087A60()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100087A70()
{
  return Text.init<A>(_:)();
}

uint64_t sub_100087A80()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_100087A90()
{
  return View.widgetURL(_:)();
}

uint64_t sub_100087AA0()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_100087AB0()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_100087AC0()
{
  return View.fontWeight(_:)();
}

uint64_t sub_100087AD0()
{
  return View.unredacted()();
}

uint64_t sub_100087AE0()
{
  return View.accessibility(label:)();
}

uint64_t sub_100087AF0()
{
  return View.accessibility(hidden:)();
}

uint64_t sub_100087B00()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100087B10()
{
  return View.accessibilityLabel(_:)();
}

uint64_t sub_100087B20()
{
  return View.accessibilityHidden(_:)();
}

uint64_t sub_100087B30()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_100087B40()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_100087B50()
{
  return View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
}

uint64_t sub_100087B60()
{
  return View.redacted(reason:)();
}

uint64_t sub_100087B70()
{
  return View.lineLimit(_:reservesSpace:)();
}

uint64_t sub_100087B80()
{
  return Color.init(uiColor:)();
}

uint64_t sub_100087B90()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t sub_100087BA0()
{
  return static Color.black.getter();
}

uint64_t sub_100087BB0()
{
  return static Color.clear.getter();
}

uint64_t sub_100087BC0()
{
  return static Color.white.getter();
}

uint64_t sub_100087BD0()
{
  return Color.opacity(_:)();
}

uint64_t sub_100087BE0()
{
  return static Color.primary.getter();
}

uint64_t sub_100087BF0()
{
  return static Color.secondary.getter();
}

uint64_t sub_100087C00()
{
  return Color.init(_:red:green:blue:opacity:)();
}

uint64_t sub_100087C10()
{
  return Color.init(_:bundle:)();
}

uint64_t sub_100087C20()
{
  return Color.init(_:)();
}

uint64_t sub_100087C30()
{
  return Image.init(uiImage:)();
}

uint64_t sub_100087C40()
{
  return Image.init(systemName:)();
}

uint64_t sub_100087C50()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_100087C60()
{
  return Image.renderingMode(_:)();
}

uint64_t sub_100087C70()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_100087C80()
{
  return type metadata accessor for Image.TemplateRenderingMode();
}

uint64_t sub_100087C90()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_100087CA0()
{
  return Image.widgetAccentedRenderingMode(_:)();
}

uint64_t sub_100087CB0()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_100087CC0()
{
  return Image.init(_:bundle:)();
}

uint64_t sub_100087CD0()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_100087CE0()
{
  return State.projectedValue.getter();
}

uint64_t sub_100087CF0()
{
  return AnyView.init<A>(_:)();
}

uint64_t sub_100087D00()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_100087D10()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100087D20()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100087D30()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100087D40()
{
  return Gradient.init(colors:)();
}

uint64_t sub_100087D50()
{
  return static Material.ultraThin.getter();
}

uint64_t sub_100087D60()
{
  return type metadata accessor for Material();
}

uint64_t sub_100087D70()
{
  return static Alignment.topLeading.getter();
}

uint64_t sub_100087D80()
{
  return static Alignment.top.getter();
}

uint64_t sub_100087D90()
{
  return static Alignment.center.getter();
}

uint64_t sub_100087DA0()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_100087DB0()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t sub_100087DC0()
{
  return static UnitPoint.bottomLeading.getter();
}

uint64_t sub_100087DD0()
{
  return static UnitPoint.top.getter();
}

uint64_t sub_100087DE0()
{
  return static UnitPoint.bottom.getter();
}

uint64_t sub_100087DF0()
{
  return static UnitPoint.center.getter();
}

uint64_t sub_100087E00()
{
  return static UnitPoint.leading.getter();
}

uint64_t sub_100087E10()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_100087E20()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_100087E30()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_100087E40()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_100087E50()
{
  return static WidgetRenderingMode.accented.getter();
}

uint64_t sub_100087E60()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_100087E70()
{
  return type metadata accessor for WidgetBackgroundStyle();
}

uint64_t sub_100087E80()
{
  return static WidgetAccentedRenderingMode.desaturated.getter();
}

uint64_t sub_100087E90()
{
  return static WidgetAccentedRenderingMode.accentedDesaturated.getter();
}

uint64_t sub_100087EA0()
{
  return type metadata accessor for WidgetAccentedRenderingMode();
}

uint64_t sub_100087EB0()
{
  return WidgetFamily.rawValue.getter();
}

uint64_t sub_100087EC0()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_100087ED0()
{
  return static WidgetLocation.lockScreen.getter();
}

uint64_t sub_100087EE0()
{
  return static WidgetLocation.iPhoneWidgetsOnMac.getter();
}

uint64_t sub_100087EF0()
{
  return static WidgetLocation.standBy.getter();
}

uint64_t sub_100087F00()
{
  return type metadata accessor for WidgetLocation();
}

uint64_t sub_100087F10()
{
  return TimelineEntry.relevance.getter();
}

uint64_t sub_100087F40()
{
  return StaticConfiguration.init<A>(kind:provider:content:)();
}

uint64_t sub_100087F50()
{
  return static TimelineReloadPolicy.after(_:)();
}

uint64_t sub_100087F60()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_100087F70()
{
  return TimelineProviderContext.family.getter();
}

uint64_t sub_100087F80()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_100087F90()
{
  return Timeline.init(entries:policy:)();
}

NSDictionary sub_100087FA0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100087FB0()
{
  return Dictionary.description.getter();
}

uint64_t sub_100087FC0()
{
  return Dictionary.Keys.description.getter();
}

uint64_t sub_100087FD0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_100087FE0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_100087FF0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100088000()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100088010()
{
  return String.init<A>(describing:)();
}

uint64_t sub_100088020()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100088030()
{
  return String.hash(into:)();
}

void sub_100088040(Swift::String a1)
{
}

Swift::Int sub_100088050()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_100088060()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_100088070()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_100088090()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_1000880A0()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_1000880B0()
{
  return String.hashValue.getter();
}

uint64_t sub_1000880C0()
{
  return String.init<A>(_:)();
}

uint64_t sub_1000880D0()
{
  return String.subscript.getter();
}

uint64_t sub_1000880E0()
{
  return Sequence<>.joined(separator:)();
}

uint64_t sub_1000880F0()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_100088100()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_100088110()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_100088120()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100088130()
{
  return Array.description.getter();
}

uint64_t sub_100088140()
{
  return specialized Array._endMutation()();
}

uint64_t sub_100088150()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_100088160()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_100088170()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100088180()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

NSNumber sub_100088190()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_1000881A0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1000881B0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1000881C0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1000881D0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_1000881E0()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t sub_1000881F0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_100088200()
{
  return GKPlayerActivityItemInternal.id.getter();
}

uint64_t sub_100088210()
{
  return GKPlayerActivityRelationshipGame.imageURL(size:)();
}

uint64_t sub_100088220()
{
  return GKPlayerActivityRelationshipPlayer.imageURL(size:)();
}

NSNumber sub_100088230(Swift::Int integerLiteral)
{
  return NSNumber.init(integerLiteral:)(integerLiteral);
}

uint64_t sub_100088240()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100088250()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_100088260()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_100088270()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_100088280()
{
  return dispatch thunk of SetAlgebra.init()();
}

uint64_t sub_100088290()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1000882A0()
{
  return _HashTable.previousHole(before:)();
}

Swift::Int sub_1000882B0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_1000882C0()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_1000882D0()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_1000882E0()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_1000882F0()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_100088300()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_100088310(Swift::Int a1)
{
}

uint64_t sub_100088320()
{
  return _StringGuts.copyUTF8(into:)();
}

void sub_100088330(Swift::Int a1)
{
}

uint64_t sub_100088340()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_100088360()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_100088370()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_100088380()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_100088390()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_1000883A0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1000883B0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000883C0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1000883D0()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t sub_1000883E0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1000883F0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_100088400()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_100088410()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_100088420(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_100088430()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100088440()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_100088450()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100088460()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100088470()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100088480()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100088490()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1000884A0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1000884B0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1000884C0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1000884D0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1000884E0()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1000884F0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100088500()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_100088510()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100088520()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100088530()
{
  return Hasher.init(_seed:)();
}

void sub_100088540(Swift::UInt a1)
{
}

Swift::Int sub_100088550()
{
  return Hasher._finalize()();
}

uint64_t sub_100088560()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_100088570()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return _CGImageCreateWithImageInRect(image, rect);
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _availability_version_check()
{
  return __availability_version_check();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

double drand48(void)
{
  return _drand48();
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fread(__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return _fseek(a1, a2, a3);
}

uint64_t ftell(FILE *a1)
{
  return _ftell(a1);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void rewind(FILE *a1)
{
}

void srand48(uint64_t a1)
{
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}